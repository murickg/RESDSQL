[
  {
    "db_id": "college_2",
    "input": "Find out the average salary of professors? | select avg ( salary ) from instructor | Find the average salary of the professors of each department?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) , dept_name from instructor group by dept_name"
  },
  {
    "db_id": "college_2",
    "input": "Which department has the highest average salary of professors? | select dept_name from instructor group by dept_name order by avg ( salary ) desc limit 1 | Which department has the lowest average salary of professors?",
    "label": "CONFIRM_SQL",
    "output": "select dept_name from instructor group by dept_name order by avg ( salary ) asc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "In which department Mr. Mird work for? | select dept_name from instructor where name = 'Mird' | How much is the salary Mr. Mird earns currently?",
    "label": "CONFIRM_SQL",
    "output": "select salary from instructor where name = 'Mird'"
  },
  {
    "db_id": "train_station",
    "input": "What is the station ID for London Waterloo | select station_id from station where name = 'London Waterloo' | What trains go to station ID 1? ",
    "label": "CONFIRM_SQL",
    "output": "select train.* from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train_station.station_id = 1"
  },
  {
    "db_id": "train_station",
    "input": "Can you give me the names of those trains and tell me when they have service | select train.name , train.time from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train_station.station_id = 1 | Do those trains go to London Bridge? ",
    "label": "CONFIRM_SQL",
    "output": "select train.name , train.time from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train_station.station_id = 1 intersect select train.name , train.time from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train_station.station_id = 3"
  },
  {
    "db_id": "train_station",
    "input": "How many platforms does London Waterloo station have ?  | select number_of_platforms from station where name = 'London Waterloo' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "performance_attendance",
    "input": "When did the violin players perform? | select performance.date from member_attendance join member on member_attendance.member_id = member.member_id join performance on member_attendance.performance_id = performance.performance_id where member.role = 'Violin' | How many violin players were at those performances on average?",
    "label": "CLARIFY",
    "output": "Do you mean the attendance of those performances?"
  },
  {
    "db_id": "performance_attendance",
    "input": "No, how many violin players were present during the performances? | Each performance is only associated with one violin player from the table. | Which violin player attended the most?",
    "label": "CLARIFY",
    "output": "Do you mean the name of the violin player that attended the most number of performances?"
  },
  {
    "db_id": "performance_attendance",
    "input": "Yes, what is the name of the violin player who attended the most number of performances?\n | select member.name from member join member_attendance on member.member_id = member_attendance.member_id group by member_attendance.member_id order by count ( * ) desc limit 1 | What about the violin player who attended the least performances?\n",
    "label": "CONFIRM_SQL",
    "output": "select member.name from member join member_attendance on member.member_id = member_attendance.member_id group by member_attendance.member_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "what is the films title that direct by Bill Schreiner? | select title from film where directed_by = 'Bill Schreiner' | show director with the largest number of show times in total",
    "label": "CONFIRM_SQL",
    "output": "select film.directed_by from schedule join film on schedule.film_id = film.film_id group by film.directed_by order by sum ( schedule.show_times_per_day ) desc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "show me a list of original air date? | select original_air_date from film | thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "ship_1",
    "input": "Show me the captain ranks | select rank from captain | Show me Third-rate ship of the line class",
    "label": "CONFIRM_SQL",
    "output": "select * from captain where class = 'Third-rate ship of the line'"
  },
  {
    "db_id": "ship_1",
    "input": "Show me the captain rank that has no captain in these class | Sorry I don't understand | Show me the captain rank that has no captain in Third-rate ship of the line class",
    "label": "CONFIRM_SQL",
    "output": "select rank from captain where class != 'Third-rate ship of the line'"
  },
  {
    "db_id": "machine_repair",
    "input": "Who are the technicians from team \"CLE\" and \"CWS\"? | select name from technician where team = 'CLE' or team = 'CWS' | Please show me the starting years for them",
    "label": "CONFIRM_SQL",
    "output": "select starting_year from technician where team = 'CLE' or team = 'CWS'"
  },
  {
    "db_id": "machine_repair",
    "input": "What years are shared? | select starting_year from technician where team = 'CLE' intersect select starting_year from technician where team = 'CWS' | Can you also give me the minimum and maximum starting years?",
    "label": "CONFIRM_SQL",
    "output": "select max ( starting_year ) , min ( starting_year ) from technician"
  },
  {
    "db_id": "student_1",
    "input": "Can you list the class room associated with the name Loria Ondersma in the teachers table? | select classroom from teachers where lastname = 'ONDERSMA' | Can you show me all first and last names from the list table that have a classroom id of 108?",
    "label": "CONFIRM_SQL",
    "output": "select firstname , lastname from teachers where classroom = 108"
  },
  {
    "db_id": "student_1",
    "input": "Can you tell me how many unique names are currently in the table? | select count ( distinct firstname ) from teachers | How many unique names in the list table have a classroom id of 108?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct firstname ) from teachers where classroom = 108"
  },
  {
    "db_id": "chinook_1",
    "input": "What are the duration's of the longest and shortest track in milliseconds. | select max ( milliseconds ) , min ( milliseconds ) from track | What is the name of the longest track?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from track where milliseconds = ( select max ( milliseconds ) from track )"
  },
  {
    "db_id": "chinook_1",
    "input": "Who was the longest track written by?\n | select composer from track where milliseconds = ( select max ( milliseconds ) from track ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "music_1",
    "input": "Provide all the details of the song Tumi robe nirobe? | select * from song where song_name = 'Tumi robe nirobe' | What are the maximum and minimum resolution of songs whose duration in 3 minutes?",
    "label": "CONFIRM_SQL",
    "output": "select max ( song.resolution ) , min ( song.resolution ) from files join song on files.f_id = song.f_id where files.duration like '3:%'"
  },
  {
    "db_id": "music_1",
    "input": "List the songs with size more than 4MB ? | select song.* from files join song on files.f_id = song.f_id where file_size > 4 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "college_2",
    "input": "What is the maximum capacity in Lambert? | Did you mean Lamberton? | yes. my apologies.",
    "label": "CONFIRM_SQL",
    "output": "select max ( capacity ) from classroom where building = 'Lamberton'"
  },
  {
    "db_id": "college_2",
    "input": "What is the maximum capacity of all of the rooms? | select max ( capacity ) from classroom | How many rooms are there?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( room_number ) from classroom"
  },
  {
    "db_id": "college_2",
    "input": "What is the average capacity of the rooms? | select avg ( capacity ) from classroom | Which classroom is the smallest?",
    "label": "CONFIRM_SQL",
    "output": "select * from classroom order by capacity asc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "What room seats 120 people? | select * from classroom where capacity = 120 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome! GoodBye."
  },
  {
    "db_id": "apartment_rentals",
    "input": "Please list each gender code with its corresponding amount of guests and sort it in descending order by that count? | select gender_code , count ( * ) from guests group by gender_code order by count ( * ) desc | What are the full names of all the people with unknown genders?",
    "label": "CONFIRM_SQL",
    "output": "select guest_first_name , guest_last_name from guests where gender_code = 'Unknown'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What were their birth dates? | select date_of_birth from guests where gender_code = 'Unknown' | What are the birth dates of all guests with the letter M in their first or last name?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_birth from guests where guest_first_name like '%M%' or guest_last_name like '%M%'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What is the total grant amount of the organizations described as research? | select sum ( grant_amount ) from grants join organisations on grants.organisation_id = organisations.organisation_id join organisation_types on organisations.organisation_type = organisation_types.organisation_type where organisation_types.organisation_type_description = 'Research' | What is the grant start date of the organizations described as research?",
    "label": "CONFIRM_SQL",
    "output": "select grant_start_date from grants join organisations on grants.organisation_id = organisations.organisation_id join organisation_types on organisations.organisation_type = organisation_types.organisation_type where organisation_types.organisation_type_description = 'Research'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Show me organization ids for organizations described as research | select grants.organisation_id from grants join organisations on grants.organisation_id = organisations.organisation_id join organisation_types on organisations.organisation_type = organisation_types.organisation_type where organisation_types.organisation_type_description = 'Research' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "race_track",
    "input": "Can you show me all tracks which were opened after 2000? | Do you mean the names of all the tracks which were opened after 2000? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select name from track where year_opened > 2000"
  },
  {
    "db_id": "race_track",
    "input": "Hmm, I want to know the seatings for all the tracks opened after 2000. | select seating from track where year_opened > 2000 | Please list the names and seatings for all the tracks opened after 2000, ordered by seating.",
    "label": "CONFIRM_SQL",
    "output": "select name , seating from track where year_opened > 2000 order by seating asc"
  },
  {
    "db_id": "film_rank",
    "input": "Hey there!  How're you!  Can you provide me with a list of all of the different movie studios? | select distinct studio from film | Could you filter this list to show just the movie studio which has the largest number of movies?",
    "label": "CONFIRM_SQL",
    "output": "select studio from film group by studio order by count ( * ) desc limit 1"
  },
  {
    "db_id": "film_rank",
    "input": "Great!  Can you please provide me with the total number of films by 20th Century Fox? | select count ( * ) from film where studio = '20th Century Fox' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "department_store",
    "input": "how many order items there | select count ( * ) from order_items | how many order id from product id 7",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from order_items where product_id = 7"
  },
  {
    "db_id": "department_store",
    "input": "how many order id from order item id 2 | select count ( * ) from order_items where order_item_id = 2 | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "club_1",
    "input": "Did you mean the first and last names of the student with id 1008? | Yes | Hello, what is the name of the student with student id 1008?",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where stuid = 1008"
  },
  {
    "db_id": "club_1",
    "input": "What is her major? | select major from student where stuid = 1008 | Apologies, I meant to ask his/her major; what is the student's sex?",
    "label": "CONFIRM_SQL",
    "output": "select sex from student where stuid = 1008"
  },
  {
    "db_id": "club_1",
    "input": "How old is the student with student id 1008? | select age from student where stuid = 1008 | Does she have an advisor?",
    "label": "CONFIRM_SQL",
    "output": "select advisor from student where stuid = 1008"
  },
  {
    "db_id": "film_rank",
    "input": "What is the average gross amount of money made in dollars? | select avg ( gross_in_dollar ) from film | What films did Nicholas Meyer direct?\n",
    "label": "CONFIRM_SQL",
    "output": "select title from film where director = 'Nicholas Meyer'"
  },
  {
    "db_id": "film_rank",
    "input": "Did Star Trek II: The Wrath of Khan make more money than the average film? | select gross_in_dollar from film where title = 'Star Trek II: The Wrath of Khan' | Did any movies directed by Walter Hill make more money than Star Trek II: The Wrath of Khan?",
    "label": "CONFIRM_SQL",
    "output": "select gross_in_dollar from film where director = 'Walter Hill' and gross_in_dollar - ( select gross_in_dollar from film where title = 'Star Trek II: The Wrath of Khan' ) > 0"
  },
  {
    "db_id": "film_rank",
    "input": "What were those movies directed by Walter Hill? | select title from film where director = 'Walter Hill' | What studio produced that movie with name 48 Hrs?",
    "label": "CONFIRM_SQL",
    "output": "select studio from film where title = '48 Hrs'"
  },
  {
    "db_id": "film_rank",
    "input": "What studio produced Star Trek II: The Wrath of Khan?\n | select studio from film where title = 'Star Trek II: The Wrath of Khan' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "flight_1",
    "input": "Can you show me the origins, the destinations and the flight numbers? | select origin , destination , flno from flight group by destination | Hmm, I want to know just the destinations and the flight numbers please.",
    "label": "CONFIRM_SQL",
    "output": "select destination , flno from flight group by destination"
  },
  {
    "db_id": "flight_1",
    "input": "Please show me the destinations and the number of flights they have. | select destination , count ( * ) from flight group by destination | Which destination has the least number of flights?",
    "label": "CONFIRM_SQL",
    "output": "select destination , count ( * ) from flight group by destination order by count ( * ) asc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "Can you provide me with the names of the dorms that have both TV Lounge and Study Room as amenities? | select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' intersect select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'Study Room' | What is the Dorm ID of Dorm-plex 2000?",
    "label": "CONFIRM_SQL",
    "output": "select dormid from dorm where dorm_name = 'Dorm-plex 2000'"
  },
  {
    "db_id": "dorm_1",
    "input": "What is the student capacity of Dorm-plex 2000? | select student_capacity from dorm where dorm_name = 'Dorm-plex 2000' | What genders can be residents of Dorm-plex 2000?",
    "label": "CONFIRM_SQL",
    "output": "select gender from dorm where dorm_name = 'Dorm-plex 2000'"
  },
  {
    "db_id": "tracking_orders",
    "input": "Which customers have ordered \"food\"?\n | ok, did you want to just return their names? | Yes. I just want to know the names of which customers have placed orders under the category \"food\"",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id where products.product_name = 'food'"
  },
  {
    "db_id": "tracking_orders",
    "input": "Of the names listed in the table, which of them have an item status listed as \"cancel\"?\n | select customers.customer_name from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id where order_items.order_item_status = 'Cancel' and products.product_name = 'food' group by customers.customer_id having count ( * ) >= 1 | How many customers have cancelled orders?\n",
    "label": "CLARIFY",
    "output": "Do you mean the customers in the previous result?"
  },
  {
    "db_id": "tracking_orders",
    "input": "yes\n | select count ( customers.customer_name ) from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id where order_items.order_item_status = 'Cancel' and products.product_name = 'food' | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome and bye."
  },
  {
    "db_id": "department_store",
    "input": "What are id and name of the products whose price is lower than 600? | select product_id , product_name from products where product_price < 600 | What are id and name of the products whose price is higher than 900?",
    "label": "CONFIRM_SQL",
    "output": "select product_id , product_name from products where product_price > 900"
  },
  {
    "db_id": "department_store",
    "input": "How many products have price lower than 600 or higher than 900? | select count ( * ) from products where product_price < 600 or product_price > 900 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "chinook_1",
    "input": "Top selling artist? | There is no info about the amount sold. Could you please give me another question? | how many artists do you have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct artistid ) from artist"
  },
  {
    "db_id": "chinook_1",
    "input": "What are their names? | select name from artist | how many albums does AC/DC have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from album join artist on album.artistid = artist.artistid where artist.name = 'AC/DC'"
  },
  {
    "db_id": "chinook_1",
    "input": "And for Metallica? | select count ( * ) from album join artist on album.artistid = artist.artistid where artist.name = 'Metallica' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "game_injury",
    "input": "what are all games are presented on the table | What kind of infromation for the games do you want ?  | i want to how many teams on the game",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct home_team ) from game"
  },
  {
    "db_id": "game_injury",
    "input": "which player are played in highest number of matches | select player from injury_accident order by number_of_matches desc limit 1 | thanks",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "document_management",
    "input": "Can you give me a list of documents that don't have any images? | Do you want document code? | I'd like both the document code and document name, please.",
    "label": "CONFIRM_SQL",
    "output": "select document_name , document_code from documents except select documents.document_name , documents.document_code from documents join document_sections on documents.document_code = document_sections.document_code join document_sections_images on document_sections.section_id = document_sections_images.section_id"
  },
  {
    "db_id": "document_management",
    "input": "That's great. Can you tell me the total number of documents that do have images? | select count ( * ) from documents join document_sections on documents.document_code = document_sections.document_code join document_sections_images on document_sections.section_id = document_sections_images.section_id | What types of documents are these?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code from documents join document_sections on documents.document_code = document_sections.document_code join document_sections_images on document_sections.section_id = document_sections_images.section_id"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the First names of students living in smith hall? | select student.fname from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid where dorm.dorm_name = 'Smith Hall' | Last name of Tracy",
    "label": "CLARIFY",
    "output": "Did you want the last name of the student with first name Tracy?"
  },
  {
    "db_id": "dorm_1",
    "input": "Yes | select lname from student where fname = 'Tracy' | What is the city code of student Tracy kim?",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student where fname = 'Tracy' and lname = 'Kim'"
  },
  {
    "db_id": "dorm_1",
    "input": "Are there any other Students with city code HKG? | select lname , fname from student where city_code = 'HKG' | What is the Student capacity of Smith Hall?",
    "label": "CONFIRM_SQL",
    "output": "select student_capacity from dorm where dorm_name = 'Smith Hall'"
  },
  {
    "db_id": "movie_1",
    "input": "What is the lowest and highest rating star? | select max ( stars ) , min ( stars ) from rating | What is the movie id and rating date of the movie with 5 stars?",
    "label": "CONFIRM_SQL",
    "output": "select mid , ratingdate from rating where stars = 5"
  },
  {
    "db_id": "movie_1",
    "input": "Now show me the movie id and rating dates of the movie with 2 stars? | select mid , ratingdate from rating where stars = 2 | What is the earliest rating date? ",
    "label": "CONFIRM_SQL",
    "output": "select ratingdate from rating where ratingdate != 'NULL' order by ratingdate asc limit 1"
  },
  {
    "db_id": "movie_1",
    "input": "What is the most recent rating date? | select ratingdate from rating order by ratingdate desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "wrestler",
    "input": "what are the elimination time of wrestlers | select time from elimination | What are the names of the wrestlers and their elimination times?",
    "label": "CONFIRM_SQL",
    "output": "select elimination.time , wrestler.name from elimination join wrestler on elimination.wrestler_id = wrestler.wrestler_id"
  },
  {
    "db_id": "wrestler",
    "input": "What are the names of wresters and their elimination times whose days held is greater than 50? | select wrestler.name , elimination.time from elimination join wrestler on elimination.wrestler_id = wrestler.wrestler_id where wrestler.days_held > 50 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "department_store",
    "input": "what is the name of the customer of customer id 401? | select customer_name from customers where customer_id = 401 | what is the name of the customer of customer code 401",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers where customer_code = 401"
  },
  {
    "db_id": "department_store",
    "input": "what is address of the customer Ahmed? | select customer_address from customers where customer_name = 'Ahmed' | what is the address of the customer lukas?",
    "label": "CONFIRM_SQL",
    "output": "select customer_address from customers where customer_name = 'Lukas'"
  },
  {
    "db_id": "department_store",
    "input": "what is customer code of lukas? | select customer_code from customers where customer_name = 'Lukas' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "soccer_2",
    "input": "List the state and enrollment of all the colleges where any students got accepted in the tryout decision. | select distinct college.state , college.enr from college join tryout on college.cname = tryout.cname where tryout.decision = 'yes' | What are the states and names of the colleges that all the goalies tried out for?",
    "label": "CONFIRM_SQL",
    "output": "select distinct college.state , college.enr from college join tryout on college.cname = tryout.cname where tryout.ppos = 'goalie'"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the states and names of all colleges that didn't accept students in the tryout decision? | select state , enr from college where cname not in ( select distinct college.cname from college join tryout on college.cname = tryout.cname where tryout.decision = 'yes' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! bye"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "How many distinct characteristic names does the product \"cumin\" have? | select count ( distinct characteristics.characteristic_name ) from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'cumin' | How many distinct characteristic names does the product \"basil\" have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct characteristics.characteristic_name ) from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'basil'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What product has the most distinct characteristic names? | Sorry I cannot answer this question. Can you break down the question or ask something else? | Sure thing! Whats the typical selling price of cumin? ",
    "label": "CONFIRM_SQL",
    "output": "select typical_selling_price from products where product_name = 'cumin'"
  },
  {
    "db_id": "club_1",
    "input": "what is the location of Bootup Baltimore | select clublocation from club where clubname = 'Bootup Baltimore' | how many female students are presented on the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( stuid ) from student where sex = 'F'"
  },
  {
    "db_id": "club_1",
    "input": "what is the major of Tracy | select major from student where fname = 'Tracy' | thanks",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "network_2",
    "input": "How long is the longest relationship?\n | select max ( year ) from personfriend | What is the name of that person?",
    "label": "CONFIRM_SQL",
    "output": "select name from personfriend where year = ( select max ( year ) from personfriend )"
  },
  {
    "db_id": "network_2",
    "input": "Who is his friend?\n | Do you want the names of all his friends or the friend that has the longest friendship with him? | The friend with the longest friendship.",
    "label": "CONFIRM_SQL",
    "output": "select friend from personfriend where name = 'Zach' and year = 12"
  },
  {
    "db_id": "network_2",
    "input": "Does Dan have any other friendships? | select * from personfriend where name = 'Dan' | Does Zach have any other friendships?\n",
    "label": "CONFIRM_SQL",
    "output": "select * from personfriend where name = 'Zach' and friend != 'Dan'"
  },
  {
    "db_id": "department_management",
    "input": "Which head's name has the substring 'Ha'? List the id and name | select head_id , name from head where name like '%Ha%' | Who is head id 1?",
    "label": "CONFIRM_SQL",
    "output": "select name from head where head_id = 1"
  },
  {
    "db_id": "department_management",
    "input": "What is Tiger woods's born state | select born_state from head where name = 'Tiger Woods' | what is Tiger woods's age",
    "label": "CONFIRM_SQL",
    "output": "select age from head where name = 'Tiger Woods'"
  },
  {
    "db_id": "department_management",
    "input": "who is the oldest head | select * from head order by age desc limit 1 | how many heads from Alabama? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from head where born_state = 'Alabama'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Hello!  Can you tell me which role code has the largest number of employees associated with it? | select role_code from employees group by role_code order by count ( * ) desc limit 1 | Great!  Can you tell me how many employees have ED as their Role_code?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees where role_code = 'ED'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Excellent!  Would you be able to provide me with a list of the names and genders of those 7 employees? | select employee_name , gender_mfu from employees where role_code = 'ED' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the savings balance for Wang? | select sum ( savings.balance ) from accounts join savings on accounts.custid = savings.custid where accounts.name = 'Wang' | Is that balance more or less than for Brown?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( savings.balance ) from accounts join savings on accounts.custid = savings.custid where accounts.name = 'Brown'"
  },
  {
    "db_id": "small_bank_1",
    "input": "Is there another balance available? | I am sorry but I do not understand your question, please be more specific. | Is there another account name available?",
    "label": "CONFIRM_SQL",
    "output": "select name from accounts"
  },
  {
    "db_id": "small_bank_1",
    "input": "Is O'mahony's account balance closer in amount to Wang or Brown? | select sum ( savings.balance ) , accounts.name from accounts join savings on accounts.custid = savings.custid where accounts.name = 'O' mahony ' union SELECT sum(T2.balance), T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  = T2.custid  where T1.name = ' wang ' union SELECT sum(T2.balance), T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  = T2.custid  where T1.name = ' brown ' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "party_host",
    "input": "Which nations have hosts older than 45? | select distinct nationality from host where age > 45 | Which nations have hosts younger than 35?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct nationality from host where age < 35"
  },
  {
    "db_id": "party_host",
    "input": "Which nation has hosts both older than 45 and younger than 35? | select nationality from host where age > 45 intersect select nationality from host where age < 35 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "hr_1",
    "input": "Which departments get a commission percentage? | select * from employees where commission_pct != 'null' | How many employees in these departments get a commission percentage?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees where commission_pct != 'null'"
  },
  {
    "db_id": "hr_1",
    "input": "By department, display average salary of employees who get a commission percentage | select department_id , avg ( salary ) from employees where commission_pct != 'null' group by department_id | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "driving_school",
    "input": "What is the total number of staff members? | select count ( * ) from staff | How many of them are females?",
    "label": "SORRY",
    "output": "Sorry, I can't answer that how many of the staff members are female given the table information. "
  },
  {
    "db_id": "driving_school",
    "input": "Is there a staff member with the first name \"Janessa\"? | select * from staff where first_name = 'Janessa' | What is the last name of the staff member with the first name \"Janessa\"?",
    "label": "CONFIRM_SQL",
    "output": "select last_name from staff where first_name = 'Janessa'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the birthday of the staff member with the first and last name as Janessa and Sawayn? | select date_of_birth from staff where first_name = 'Janessa' and last_name = 'Sawayn' | Thanks.",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "workshop_paper",
    "input": "list the authors have submissions | select author from submission | show me the list of authors who have submissions to workshop.",
    "label": "CONFIRM_SQL",
    "output": "select distinct submission.author from acceptance join submission on acceptance.submission_id = submission.submission_id"
  },
  {
    "db_id": "workshop_paper",
    "input": "list the authors who have submissions to more than one workshop. | select submission.author from acceptance join submission on acceptance.submission_id = submission.submission_id group by submission.author having count ( distinct acceptance.workshop_id ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "How many characteristics does the product named \"sesame\" have? | select count ( * ) from products join product_characteristics on products.product_id = product_characteristics.product_id where products.product_name = 'sesame' | What are the names of those?",
    "label": "REJECT",
    "output": "Sorry, we don't have names for characteristics. Please ask something else."
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the characteristic ids of those? Sorry! | select characteristic_id from products join product_characteristics on products.product_id = product_characteristics.product_id where products.product_name = 'sesame' | What is sesame's typical selling price?",
    "label": "CONFIRM_SQL",
    "output": "select typical_selling_price from products where product_name = 'sesame'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What the most common characteristic id? | select characteristic_id from product_characteristics group by characteristic_id order by count ( * ) desc limit 1 | What is the least common product category code?",
    "label": "CONFIRM_SQL",
    "output": "select product_category_code from products group by product_category_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "wine_1",
    "input": "Show the country of appelations Alexander Valley? | select county from appellations where appelation = 'Alexander Valley' | Show the maximum price of wins from the appelations in central Coast area and produced before thebyear of 2005?",
    "label": "CONFIRM_SQL",
    "output": "select max ( wine.price ) from appellations join wine on appellations.appelation = wine.appelation where appellations.area = 'Central Coast' and wine.year < 2005"
  },
  {
    "db_id": "wine_1",
    "input": "Show the country of appelations Amador County? | select county from appellations where appelation = 'Amador County' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "roller_coaster",
    "input": "How many length of park Kemah Boardwalk? | Did you mean to ask for the length of the park with name Kemah Boardwalk? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select length from roller_coaster where park = 'Kemah Boardwalk'"
  },
  {
    "db_id": "roller_coaster",
    "input": "Find the status of Happy Valley. | select status from roller_coaster where park = 'Happy Valley' | What are the country id of Hades 360?",
    "label": "CONFIRM_SQL",
    "output": "select country_id from roller_coaster where name = 'Hades 360'"
  },
  {
    "db_id": "roller_coaster",
    "input": "What are the speeds of the longest roller coaster? | select speed from roller_coaster order by length desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "gas_company",
    "input": "Please show me the headquarters with at least two companies in the banking industry? | select headquarters from company where main_industry = 'Banking' group by headquarters having count ( * ) >= 2 | What companies are in the banking industry?",
    "label": "CONFIRM_SQL",
    "output": "select company from company where main_industry = 'Banking'"
  },
  {
    "db_id": "gas_company",
    "input": "Where are those companies' headquarters located? | select company , headquarters from company where main_industry = 'Banking' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "tracking_orders",
    "input": "How many orders are there? | select count ( * ) from orders | How many different customers are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers"
  },
  {
    "db_id": "tracking_orders",
    "input": "What is the name of the customer who has the largest number of orders? | select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id group by customers.customer_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "googbye. but please ask inner-related questions next time. otherwise, you won't be paid."
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the name of the customer who has made the minimum amount of payment in one claim? | select customers.customer_details from claim_headers join policies on claim_headers.policy_id = policies.policy_id join customers on policies.customer_id = customers.customer_id where claim_headers.amount_piad = ( select min ( amount_piad ) from claim_headers ) | What is the amount claimed for this customer?",
    "label": "CONFIRM_SQL",
    "output": "select claim_headers.amount_claimed from claim_headers join policies on claim_headers.policy_id = policies.policy_id join customers on policies.customer_id = customers.customer_id where claim_headers.amount_piad = ( select min ( amount_piad ) from claim_headers )"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Can you also give me  the name of the customer who has made the maximum amount of payment in one claim? | select customers.customer_details from claim_headers join policies on claim_headers.policy_id = policies.policy_id join customers on policies.customer_id = customers.customer_id where claim_headers.amount_piad = ( select max ( amount_piad ) from claim_headers ) | Hmmm. Can you please give me the claimed amount for this customer",
    "label": "CONFIRM_SQL",
    "output": "select claim_headers.amount_claimed from claim_headers join policies on claim_headers.policy_id = policies.policy_id join customers on policies.customer_id = customers.customer_id where claim_headers.amount_piad = ( select max ( amount_piad ) from claim_headers )"
  },
  {
    "db_id": "cinema",
    "input": "How many cinemas are there in total? | select count ( * ) from cinema | What is the average capacity?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( capacity ) from cinema"
  },
  {
    "db_id": "cinema",
    "input": "How many cinemas have above average capacity? | select count ( * ) from cinema where capacity > ( select avg ( capacity ) from cinema ) | What is the name and location of the 2 cinemas with above average capacity?",
    "label": "CONFIRM_SQL",
    "output": "select name , location from cinema where capacity > ( select avg ( capacity ) from cinema )"
  },
  {
    "db_id": "cinema",
    "input": "Thanks! | Thanks you, would you like to ask a few more questions? | No thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "local_govt_mdm",
    "input": "How many master customer ID numbers are there? | select count ( master_customer_id ) from customer_master_index | What are the master index IDs for all except whose detail includes Schmidt, Kertzmann and Lubowitz?",
    "label": "CONFIRM_SQL",
    "output": "select master_customer_id from customer_master_index where cmi_details != ( 'Schmidt, Kertzmann and Lubowitz' )"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "What are their cmi cross reference IDs? | select customer_master_index.master_customer_id , cmi_cross_ref_id from customer_master_index join cmi_cross_references on customer_master_index.master_customer_id = cmi_cross_references.master_customer_id where customer_master_index.cmi_details not in ( 'Schmidt, Kertzmann and Lubowitz' ) | What are their respective source system codes?",
    "label": "CONFIRM_SQL",
    "output": "select customer_master_index.master_customer_id , cmi_cross_ref_id , source_system_code from customer_master_index join cmi_cross_references on customer_master_index.master_customer_id = cmi_cross_references.master_customer_id where customer_master_index.cmi_details != ( 'Schmidt, Kertzmann and Lubowitz' )"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "What are the renters arrears tax IDs associated with them? | select rent_arrears.council_tax_id from rent_arrears join cmi_cross_references on rent_arrears.cmi_cross_ref_id = cmi_cross_references.cmi_cross_ref_id join customer_master_index on customer_master_index.master_customer_id = cmi_cross_references.master_customer_id where customer_master_index.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz' | Thanks!",
    "label": "WELCOME",
    "output": "welcome，goodbye"
  },
  {
    "db_id": "store_product",
    "input": "Could you please find the products with the max page size as \"A4\"? | select product from product where max_page_size = 'A4' | Could you please find the products with the pages per minute color smaller than 5?",
    "label": "CONFIRM_SQL",
    "output": "select product from product where pages_per_minute_color < 5"
  },
  {
    "db_id": "store_product",
    "input": "Could you please find the products with the max page size as \"A4\" and with the pages per minute color smaller than 5? | select product from product where max_page_size = 'A4' and pages_per_minute_color < 5 | What are the interfaces of those products?",
    "label": "CONFIRM_SQL",
    "output": "select product , interface from product where max_page_size = 'A4' and pages_per_minute_color < 5"
  },
  {
    "db_id": "store_product",
    "input": "What are the dimensions of those products? | select product , dimensions from product where max_page_size = 'A4' and pages_per_minute_color < 5 | Could you please find the products with the pages per minute color larger than 5?",
    "label": "CONFIRM_SQL",
    "output": "select product from product where pages_per_minute_color > 5"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are all of the lots? | select * from lots | Which lots are not used in any transactions?",
    "label": "CLARIFY",
    "output": "do you mean the id of lots or the details of lot"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "The id of the lots please. | select lot_id from lots except select lots.lot_id from lots join transactions_lots on lots.lot_id = transactions_lots.lot_id | What are the details of the lots which aren't used in any transactions?",
    "label": "CONFIRM_SQL",
    "output": "select lot_details from lots except select lots.lot_details from lots join transactions_lots on lots.lot_id = transactions_lots.lot_id"
  },
  {
    "db_id": "election",
    "input": "Who are the delegates on the Appropriations committee? | select delegate from election where committee = 'Appropriations' | What counties are they from?",
    "label": "CONFIRM_SQL",
    "output": "select county.county_name from county join election where county.county_id = district and election.committee = 'Appropriations'"
  },
  {
    "db_id": "election",
    "input": "What districts are they from? | select district from election where committee = 'Appropriations' | What are the populations of the counties they come from, please?",
    "label": "CONFIRM_SQL",
    "output": "select county.population from county join election where county.county_id = district and election.committee = 'Appropriations'"
  },
  {
    "db_id": "driving_school",
    "input": "Which city has most number of customers? | select addresses.city from customers join addresses on customers.customer_address_id = addresses.address_id group by addresses.city order by count ( * ) desc limit 1 | How many customers does it have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers join addresses on customers.customer_address_id = addresses.address_id group by addresses.city order by count ( * ) desc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "Give me the names of those customers | select customers.first_name , customers.last_name from customers join addresses on addresses.address_id = customers.customer_address_id where addresses.city = ( select addresses.city from customers join addresses on customers.customer_address_id = addresses.address_id group by addresses.city order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "flight_1",
    "input": "What are the names and distances of aircraft that have more than 5000 distance? | select aircraft.name from certificate join aircraft on aircraft.aid = certificate.aid where aircraft.distance > 5000 | What are the names and distances of aircraft that have more than 5000 distance and there are at least 5 people who have its certificate?",
    "label": "CONFIRM_SQL",
    "output": "select aircraft.name from certificate join aircraft on aircraft.aid = certificate.aid where aircraft.distance > 5000 group by certificate.aid order by count ( * ) >= 5 asc"
  },
  {
    "db_id": "flight_1",
    "input": "What is the employee ID of the employee who flew the longest distance? | select certificate.eid from certificate join aircraft on aircraft.aid = certificate.aid order by aircraft.distance desc limit 1 | Thanks! Have a good night!",
    "label": "WELCOME",
    "output": "you are welcome"
  },
  {
    "db_id": "soccer_2",
    "input": "Which colleges students played in the try out in striker position? | select cname from tryout where ppos = 'striker' | And in which state is it located? ",
    "label": "CONFIRM_SQL",
    "output": "select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'striker'"
  },
  {
    "db_id": "soccer_2",
    "input": "How about it's enrollment number?  | select college.enr from college join tryout on college.cname = tryout.cname where tryout.ppos = 'striker' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "phone_market",
    "input": "How many different markets are there? | select count ( distinct market_id ) from phone_market | How many different phones are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct name ) from phone"
  },
  {
    "db_id": "phone_market",
    "input": "Which phone is sold in the most different markets? | select phone.name from phone join phone_market on phone.phone_id = phone_market.phone_id group by phone.phone_id order by count ( * ) desc limit 1 | How many phones are not available in any markets?",
    "label": "CONFIRM_SQL",
    "output": "select count ( name ) from phone where phone_id not in ( select phone_id from phone_market )"
  },
  {
    "db_id": "phone_market",
    "input": "What is the name of that phone? | select name from phone where phone_id not in ( select phone_id from phone_market ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "manufactory_1",
    "input": "How many companies are there?  | select count ( * ) from manufacturers | What are their founder names? ",
    "label": "CONFIRM_SQL",
    "output": "select name from manufacturers"
  },
  {
    "db_id": "manufactory_1",
    "input": "Show founder names that begin with letter \"S\" | Did you mean founder‘s name that begin with letter 'S'? | yes",
    "label": "CONFIRM_SQL",
    "output": "select founder from manufacturers where founder like 'S%'"
  },
  {
    "db_id": "school_finance",
    "input": "Hello, can you provide me with the names of the donors?\n | select donator_name from endowment | Are all the donors from the same country?\n",
    "label": "REJECT",
    "output": "Sorry we don't have the information about the nationality of the donators. Please ask other related questions."
  },
  {
    "db_id": "school_finance",
    "input": "Was there a minimum or maximum donation limit?\n | select min ( amount ) , max ( amount ) from endowment | How many donors were there total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct donator_name ) from endowment"
  },
  {
    "db_id": "school_finance",
    "input": "Was there any single donation that was bigger than all the others combined? | Sorry I can't answer this question using SQL.   | Was there a set goal for the donation amount?",
    "label": "REJECT",
    "output": "Sorry I don't think this question is related to this table."
  },
  {
    "db_id": "small_bank_1",
    "input": "what is the savings balance of  id 1? | Did you mean the saving balance of the customer with id 1? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select balance from savings where custid = 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "what is the total checking and saving balance of all accounts? | select checking.balance + savings.balance from checking join savings on checking.custid = savings.custid | what is the sorted list of total checking and savings balance by ascending order?",
    "label": "CONFIRM_SQL",
    "output": "select checking.balance + savings.balance from checking join savings on checking.custid = savings.custid order by checking.balance + savings.balance asc"
  },
  {
    "db_id": "city_record",
    "input": "What is the venue of the competition \"1994 FIFA World cup qualification\" hosted by \"Hangzou\"? | select match.venue from city join hosting_city on city.city_id = hosting_city.host_city join match on hosting_city.match_id = match.match_id where city.city = 'Hangzhou ( Zhejiang )' and match.competition = '1994 FIFA World Cup qualification' | ok. What is the venue of the competition \"1994 FIFA World Cup qualification\" hosted by \"Nanjing\" ( Jiangsu )\"?",
    "label": "CONFIRM_SQL",
    "output": "select match.venue from city join hosting_city on city.city_id = hosting_city.host_city join match on hosting_city.match_id = match.match_id where city.city = 'Nanjing ( Jiangsu )' and match.competition = '1994 FIFA World Cup qualification'"
  },
  {
    "db_id": "city_record",
    "input": "What is the GDP of the city Shanghai in the table? | select gdp from city where city = 'Shanghai' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "protein_institute",
    "input": "Hello!  Can you provide me with a list of all building names? | select name from building | Great!  Can you update the list to show the number of different institutions in each building?",
    "label": "CONFIRM_SQL",
    "output": "select building.name , count ( * ) from building join institution on building.building_id = institution.building_id group by building.building_id"
  },
  {
    "db_id": "protein_institute",
    "input": "Can you filter this list to show me only the tallest building? | Do you mean you want the number of different institutions of the tallest building? | Thanks! I would be fine just know which is the tallest building.",
    "label": "CLARIFY",
    "output": "Do you mean you want to know the name of the tallest building? Or anything else?"
  },
  {
    "db_id": "protein_institute",
    "input": "Yes!  I want to know the name of the tallest building please. | select name from building order by height_feet desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome! Goodbye!"
  },
  {
    "db_id": "college_1",
    "input": "Hello, what courses are currently being taught? | select * from course | Can you please show which instructors are teaching those courses?",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname from class join employee on class.prof_num = employee.emp_num join course on class.crs_code = course.crs_code"
  },
  {
    "db_id": "college_1",
    "input": "Can you please show me the current courses being taught with the last name of the instructor teaching them? | select employee.emp_lname , course.crs_description from class join employee on class.prof_num = employee.emp_num join course on class.crs_code = course.crs_code | Thanks!",
    "label": "WELCOME",
    "output": "Sure. Bye!"
  },
  {
    "db_id": "department_store",
    "input": "List the name of all suppliers in alphabetical order of their addresses. | select suppliers.supplier_name from suppliers join supplier_addresses on suppliers.supplier_id = supplier_addresses.supplier_id join addresses on supplier_addresses.address_id = addresses.address_id order by addresses.address_details asc | And their phone numbers?",
    "label": "CONFIRM_SQL",
    "output": "select suppliers.supplier_phone from suppliers join supplier_addresses on suppliers.supplier_id = supplier_addresses.supplier_id join addresses on supplier_addresses.address_id = addresses.address_id order by addresses.address_details asc"
  },
  {
    "db_id": "department_store",
    "input": "What states is Tesco located in? | do you mean the address id or the address details? | The address details.",
    "label": "CONFIRM_SQL",
    "output": "select addresses.address_details from suppliers join supplier_addresses on suppliers.supplier_id = supplier_addresses.supplier_id join addresses on supplier_addresses.address_id = addresses.address_id where suppliers.supplier_name = 'Tesco'"
  },
  {
    "db_id": "department_store",
    "input": "How about Lidl? | select addresses.address_details from suppliers join supplier_addresses on suppliers.supplier_id = supplier_addresses.supplier_id join addresses on supplier_addresses.address_id = addresses.address_id where suppliers.supplier_name = 'Lidl' | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "can you show me a list of active from date? | select active_from_date from customer_contact_channels | can you show me a list of  active to date?",
    "label": "CONFIRM_SQL",
    "output": "select active_to_date from customer_contact_channels"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "which one the first active to date? | select * from customer_contact_channels order by active_to_date asc limit 1 | thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "bike_1",
    "input": "What are the dock count of San Jose Diridon Caltrain Station? | select dock_count from station where name = 'San Jose Diridon Caltrain Station' | What are the bike id of zip code 94041?",
    "label": "CONFIRM_SQL",
    "output": "select bike_id from trip where zip_code = 94041"
  },
  {
    "db_id": "bike_1",
    "input": "How many dock stations are there in San Jose? | Do you mean the total dock counts of all stations in city San Jose? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select sum ( dock_count ) from station where city = 'San Jose'"
  },
  {
    "db_id": "bike_1",
    "input": "For each station, return its longitude and the average duration of trips that started from the station. | select station.name , station.long , avg ( trip.duration ) from station join trip on station.id = trip.start_station_id group by station.name | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem! Bye!"
  },
  {
    "db_id": "culture_company",
    "input": "Hello!  Can you show a list of all publishers who did not publish any books in 1989? | select publisher from book_club except select publisher from book_club where year = 1989 | Thank you!  Can you show me a list of all of the book titles published by Alyson?",
    "label": "CONFIRM_SQL",
    "output": "select book_title from book_club where publisher = 'Alyson'"
  },
  {
    "db_id": "culture_company",
    "input": "Thanks!  Can you update that list to show the years that those 3 books were published and  what category they fall under? | select book_title , year , category from book_club where publisher = 'Alyson' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome!"
  },
  {
    "db_id": "club_1",
    "input": "How many clubs do you have? | select count ( * ) from club | How many members does each club have?",
    "label": "CONFIRM_SQL",
    "output": "select clubid , count ( stuid ) from member_of_club group by clubid"
  },
  {
    "db_id": "club_1",
    "input": "Finally, can you list the clubs that have \"Davis Steven\" as a member? | select member_of_club.clubid from member_of_club join student on member_of_club.stuid = student.stuid where student.lname = 'Davis' and student.fname = 'Steven' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "store_product",
    "input": "what is the dimenson of Plustek MobileOffice D28 Corporate? | select dimensions from product where product = 'Plustek MobileOffice D28 Corporate' | how many pages per  minute colored in Xerox Travel Scanner 100?",
    "label": "CONFIRM_SQL",
    "output": "select pages_per_minute_color from product where product = 'Xerox Travel Scanner 100'"
  },
  {
    "db_id": "store_product",
    "input": "what is the max page size can be used in Plustek MobileOffice D28 Corporate?\n | select max_page_size from product where product = 'Plustek MobileOffice D28 Corporate' | what is the dpi of Fujitsu fi-6130 A4 Series Scanner?\n",
    "label": "CONFIRM_SQL",
    "output": "select dpi from product where product = 'Fujitsu fi-6130 A4 Series Scanner'"
  },
  {
    "db_id": "store_product",
    "input": "which product coloured the highest pages in a minute? | select product , pages_per_minute_color from product order by pages_per_minute_color desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "What are the ids and names of the medicine that can interact with two or more enzymes?  | select medicine.id , medicine.name from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id group by medicine.id having count ( * ) >= 2 | How many enzymes can Aripiprazole interact with?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct medicine_enzyme_interaction.enzyme_id ) from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id where name = 'Aripiprazole'"
  },
  {
    "db_id": "twitter_1",
    "input": "hi. I would like to know how many users are followed by Mary? | select count ( follows.f1 ) from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Mary' | and how many are followed by Susan?",
    "label": "CONFIRM_SQL",
    "output": "select count ( follows.f1 ) from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Susan'"
  },
  {
    "db_id": "twitter_1",
    "input": "can you tell me the Id of these users? | select follows.f1 from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Susan' | and the user id followed by Mary?",
    "label": "CONFIRM_SQL",
    "output": "select follows.f1 from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Susan' or user_profiles.name = 'Mary'"
  },
  {
    "db_id": "twitter_1",
    "input": "Thanks! | Sure! Anything else? | no. That's all. Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the name of the nurse who has the most appointments? | select nurse.name from nurse join appointment on nurse.employeeid = appointment.prepnurse group by nurse.employeeid order by count ( * ) desc limit 1 | What is her employee ID?",
    "label": "CONFIRM_SQL",
    "output": "select employeeid from nurse join appointment on nurse.employeeid = appointment.prepnurse group by nurse.employeeid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "List all nurses names in alphabetical order | select name from nurse order by name asc | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "hi,List out the all color description | select color_description from ref_colors | list out the color code for all the product name",
    "label": "CONFIRM_SQL",
    "output": "select color_code , product_name from products"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "list out the typical selling price for all product name | select typical_selling_price , product_name from products | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome, bye"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Can you list all the unique fault log entry ids? | select distinct fault_log_entry_id from fault_log | Can you count the number of unique part fault ids that belong to each unique fault log entry id, and then add those values to the table?",
    "label": "CONFIRM_SQL",
    "output": "select fault_log_entry_id , count ( * ) from fault_log_parts group by fault_log_entry_id"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Amazing, can you display only the entry with a fault log id of 1 as well as the description and record time for that entry with a fault log id of 1? | select count ( * ) , fault_log_parts.* , fault_log.fault_description , fault_log.fault_log_entry_datetime from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id where fault_log.fault_log_entry_id = 1 group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the first names of all guest with apartment booking status \"Confirmed\" ? | select guests.guest_first_name from apartment_bookings join guests on apartment_bookings.guest_id = guests.guest_id where apartment_bookings.booking_status_code = 'Confirmed' | And how about their last names?",
    "label": "CONFIRM_SQL",
    "output": "select guests.guest_last_name from apartment_bookings join guests on apartment_bookings.guest_id = guests.guest_id where apartment_bookings.booking_status_code = 'Confirmed'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "And what about guests with \"Provisional\" status? | select guests.guest_last_name from apartment_bookings join guests on apartment_bookings.guest_id = guests.guest_id where apartment_bookings.booking_status_code = 'Provisional' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "store_1",
    "input": "How many trucks are in both movies and musical playlists. | Did you mean to ask for the number of tracks in both movies and music playlists? | yes",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlist_tracks.playlist_id = playlists.id where playlists.name = 'Movies' intersect select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlist_tracks.playlist_id = playlists.id where playlists.name = 'Music' )"
  },
  {
    "db_id": "store_1",
    "input": "who composed For Those About To Rock (We Salute You)? | select composer from tracks where name = 'For Those About To Rock (We Salute You)' | How long is it?",
    "label": "CONFIRM_SQL",
    "output": "select milliseconds from tracks where name = 'For Those About To Rock (We Salute You)'"
  },
  {
    "db_id": "store_1",
    "input": "Who wrote Fast As a Shark | select composer from tracks where name = 'Fast As a Shark' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "baseball_1",
    "input": "HOW MANY ON THE TABLE | did you mean HOW MANY player  ON THE TABLE ? | YES EXACTLY",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct player_id ) from player"
  },
  {
    "db_id": "baseball_1",
    "input": "WHAT IS BIRTH YEAR of aardsda01 | select birth_year from player where player_id = 'aardsda01' | WHAT ARE THE MANAGER'S FIRST NAME LAST NAME AND ID WHO WON THE MOST MANAGER AWARD",
    "label": "CONFIRM_SQL",
    "output": "select player.name_first , player.name_last , manager_award.player_id from player join manager_award on player.player_id = manager_award.player_id group by manager_award.player_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "Can you list the customer names and ids who have credit cards? | select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards join customers on customers_cards.customer_id = customers.customer_id where customers_cards.card_type_code = 'Credit' | I want to know the customer names and how many credit cards they have?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_first_name , customers.customer_last_name , count ( * ) from customers_cards join customers on customers_cards.customer_id = customers.customer_id where customers_cards.card_type_code = 'Credit' group by customers_cards.customer_id"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "How many credit cards does Blanche Huels have? | select count ( * ) from customers_cards join customers on customers_cards.customer_id = customers.customer_id where customers.customer_first_name = 'Blanche' and customers.customer_last_name = 'Huels' and customers_cards.card_type_code = 'Credit' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "baseball_1",
    "input": "Show the team_id with highest rank? | select team_id from team order by rank asc limit 1 | Show the maximum scores of the team Boston Red Stockings when the team won in postseason?",
    "label": "CONFIRM_SQL",
    "output": "select max ( postseason.wins ) from postseason join team on postseason.team_id_winner = team.team_id_br where team.name = 'Boston Red Stockings'"
  },
  {
    "db_id": "baseball_1",
    "input": "Show the year of postseason with equal wins and loses? | select year from postseason where wins = losses | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "game_1",
    "input": "Tell me the Gtype of the GameID 1 ? | select gtype from video_games where gameid = 1 | What is the GameID of the GName RNG Stone ?",
    "label": "CONFIRM_SQL",
    "output": "select gtype from video_games where gameid = 1"
  },
  {
    "db_id": "game_1",
    "input": "SELECT gameid FROM video_games where gname = \"RNG Stone\" | Tell me the GName of the GType Role-playing game ? | select gname from video_games where gtype = 'Role-playing game'",
    "label": "INFORM_SQL",
    "output": "Which game type has most number of games ?"
  },
  {
    "db_id": "phone_1",
    "input": "how many screen mode there | select count ( * ) from screen_mode | how many phone there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from phone"
  },
  {
    "db_id": "phone_1",
    "input": "what is the  company name of XPERIA T, XPERIA J | select company_name from phone where hardware_model_name = 'XPERIA T, XPERIA J' | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome. Goodbye!."
  },
  {
    "db_id": "aircraft",
    "input": "Which aircraft did not win any match? | What information do you want about the aircrafts? Their names, their ids, or all their information?  | Their names.",
    "label": "CONFIRM_SQL",
    "output": "select aircraft from aircraft where aircraft_id not in ( select winning_aircraft from match )"
  },
  {
    "db_id": "aircraft",
    "input": "Which pilot won the most matches? | select winning_pilot from match group by winning_pilot order by count ( * ) desc limit 1 | Which aircraft won the most matches?",
    "label": "CONFIRM_SQL",
    "output": "select winning_aircraft from match group by winning_aircraft order by count ( * ) desc limit 1"
  },
  {
    "db_id": "student_assessment",
    "input": "Could you please list each course's name and the number of its registered students? | select courses.course_name , count ( * ) from students join student_course_registrations on students.student_id = student_course_registrations.student_id join courses on student_course_registrations.course_id = courses.course_id group by student_course_registrations.course_id | What are the student ids of all students who registered for statistics?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_registrations.student_id from students join student_course_registrations on students.student_id = student_course_registrations.student_id join courses on student_course_registrations.course_id = courses.course_id where courses.course_name = 'statistics'"
  },
  {
    "db_id": "student_assessment",
    "input": "What are their student details, please? | select students.student_details from students join student_course_registrations on students.student_id = student_course_registrations.student_id join courses on student_course_registrations.course_id = courses.course_id where courses.course_name = 'statistics' | Thanks! Have a great night!",
    "label": "GOOD_BYE",
    "output": "Thank you! Good night."
  },
  {
    "db_id": "ship_1",
    "input": "What are the ship id of HM Cutter Avenger? | select ship_id from ship where name = 'HM Cutter Avenger' | what type of Flag is used by HMS Manxman?",
    "label": "CONFIRM_SQL",
    "output": "select flag from ship where name = 'HMS Manxman'"
  },
  {
    "db_id": "ship_1",
    "input": "what are the Built Year of HMS Gorgon? | select built_year from ship where name = 'HMS Gorgon' | Find the ship type that are used by both ships with Panama and Malta flags?",
    "label": "CONFIRM_SQL",
    "output": "select type from ship where flag = 'Panama' intersect select type from ship where flag = 'Malta'"
  },
  {
    "db_id": "election",
    "input": "How many parties in this table? | select count ( distinct party ) from party | Peter Vallone\tin which party?",
    "label": "CONFIRM_SQL",
    "output": "select party from party where governor = 'Peter Vallone'"
  },
  {
    "db_id": "election",
    "input": "How many elections in this table? | select count ( * ) from election | Carl McCall in which party?",
    "label": "CONFIRM_SQL",
    "output": "select party from party where governor = 'Carl McCall'"
  },
  {
    "db_id": "music_1",
    "input": "What are the names of the artists from Bangladesh? | select artist_name from artist where country = 'Bangladesh' | Which artists from Bangladesh have never received a rating higher that 7?",
    "label": "CONFIRM_SQL",
    "output": "select distinct artist_name from artist where country = 'Bangladesh' except select distinct artist_name from song where rating > 7"
  },
  {
    "db_id": "music_1",
    "input": "Can you add their genders into the table please? | select artist_name , gender from artist where artist_name in ( select distinct artist_name from artist where country = 'Bangladesh' except select distinct artist_name from song where rating > 7 ) | What are their preferred genres?",
    "label": "CONFIRM_SQL",
    "output": "select preferred_genre from artist where artist_name in ( select distinct artist_name from artist where country = 'Bangladesh' except select distinct artist_name from song where rating > 7 )"
  },
  {
    "db_id": "music_1",
    "input": "What are the names of the songs they have sung? | select song_name from song where artist_name in ( select distinct artist_name from artist where country = 'Bangladesh' except select distinct artist_name from song where rating > 7 ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "icfp_1",
    "input": "how many authorship there | select count ( * ) from authors | what is the country of University of Oxford",
    "label": "CONFIRM_SQL",
    "output": "select country from inst where name = 'University of Oxford'"
  },
  {
    "db_id": "icfp_1",
    "input": "what is the title of paper ID 200 | select title from papers where paperid = 200 | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "formula_1",
    "input": "Hello, how many circuits belong to France? | select count ( * ) from circuits where country = 'France' | Can you please provide their circuit IDs?",
    "label": "CONFIRM_SQL",
    "output": "select circuitid from circuits where country = 'France'"
  },
  {
    "db_id": "formula_1",
    "input": "Can you also include the location of these circuits?  | select circuitid , location from circuits where country = 'France' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye"
  },
  {
    "db_id": "station_weather",
    "input": "Hi, can you please tell me what is the ID of the station whose maximum precipitation is higher than 50? | select station.id from weekly_weather join station on weekly_weather.station_id = station.id group by weekly_weather.station_id having max ( weekly_weather.precipitation ) > 50 | thank you, could you please also let me know their names and local authorities?",
    "label": "CONFIRM_SQL",
    "output": "select station.id , station.network_name , station.local_authority from weekly_weather join station on weekly_weather.station_id = station.id group by weekly_weather.station_id having max ( weekly_weather.precipitation ) > 50"
  },
  {
    "db_id": "station_weather",
    "input": "that was quick, thank you again. then could you please let me know if there is any station which has less than 10 maximum precipitation? | select station.id from weekly_weather join station on weekly_weather.station_id = station.id group by weekly_weather.station_id having max ( weekly_weather.precipitation ) < 10 | seems like everybody will have some rain here.. then could you please let me know what is the lowest precipitation we have on the table?",
    "label": "CONFIRM_SQL",
    "output": "select min ( precipitation ) from weekly_weather"
  },
  {
    "db_id": "station_weather",
    "input": "could you please let me know the ID of the stations with 10 precipitation? | select station.id from weekly_weather join station on weekly_weather.station_id = station.id where weekly_weather.precipitation = 10 | what would be the name of the station?",
    "label": "CONFIRM_SQL",
    "output": "select station.id , station.network_name from weekly_weather join station on weekly_weather.station_id = station.id where weekly_weather.precipitation = 10"
  },
  {
    "db_id": "station_weather",
    "input": "Then my last inquiry, could you please let me know Amersham's high temperature and wind speed on Friday? | select weekly_weather.high_temperature , weekly_weather.wind_speed_mph from weekly_weather join station on weekly_weather.station_id = station.id where weekly_weather.day_of_week = 'Friday' and station.network_name = 'Amersham' | Thanks! hope you have a wonderful day :)",
    "label": "WELCOME",
    "output": "You too! Bye!"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you list all of the apartments with more than 4 bedrooms? | do you mean the apartment ids of apartments with more than 4 bedrooms? | Yes, please!  I believe that's the only discrete identifier of the apartments (at least that I can see)...",
    "label": "CONFIRM_SQL",
    "output": "select apt_id from apartments where bedroom_count > 4"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Thank you!  Can you list the facility codes for each of those apartment IDs (3 4 6 11 12 13 15)? | select apartment_facilities.facility_code from apartments join apartment_facilities on apartments.apt_id = apartment_facilities.apt_id where apartments.bedroom_count > 4 | How many people live in the apartments with gym facilities?",
    "label": "SORRY",
    "output": "I cannot answer this question, please give another question"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you please list the 'building id', 'apartment type code' and 'apartment number' for all apartment IDs with more than 4 bedrooms? | select building_id , apt_type_code , apt_number from apartments where bedroom_count > 4 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "formula_1",
    "input": "Can you provide me with a list of all of the names of the races? | select name from races | Which of these races are held after 12:00:00?",
    "label": "CONFIRM_SQL",
    "output": "select name from races where time > '12:00:00'"
  },
  {
    "db_id": "formula_1",
    "input": "Can you list the races that are held before 09:00:00? | select name from races where time < '09:00:00' | If I were to ask what the names of the races are that are held after 12:00:00 or before 09:00:00, would that capture every single race?",
    "label": "CONFIRM_SQL",
    "output": "select count ( name ) from races where time > '12:00:00' or time < '09:00:00'"
  },
  {
    "db_id": "college_2",
    "input": "Can you list the names and ids of courses? | select course_id , title from course | I want to know the course names and the prerequisite ids.",
    "label": "CONFIRM_SQL",
    "output": "select course.title , prereq.prereq_id from course join prereq where course.course_id = prereq.course_id"
  },
  {
    "db_id": "college_2",
    "input": "Hmm, please tell me the course ids that do not have any prerequisite. | select course_id from course except select course_id from prereq | Thanks!",
    "label": "WELCOME",
    "output": "Sure! You are so welcome!"
  },
  {
    "db_id": "department_management",
    "input": "How many heads are temporary acting? | select count ( * ) from management where temporary_acting = 'Yes' | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select head.name from management join head on head.head_id = management.head_id where management.temporary_acting = 'Yes'"
  },
  {
    "db_id": "department_management",
    "input": "What are their distinct ages? | select distinct head.age from management join head on head.head_id = management.head_id where management.temporary_acting = 'Yes' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "How many customers have accounts?\n | select count ( * ) from accounts join customers on accounts.customer_id = customers.customer_id | What is the customer first, last name and id with the most number of accounts?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_first_name , customers.customer_last_name , accounts.customer_id from accounts join customers on accounts.customer_id = customers.customer_id group by accounts.customer_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "What is the customer first, last name and id with the least number of accounts? | select customers.customer_first_name , customers.customer_last_name , accounts.customer_id from accounts join customers on accounts.customer_id = customers.customer_id group by accounts.customer_id order by count ( * ) asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "cinema",
    "input": "what is the capacity of county wicklow | select capacity from cinema where location = 'County Wicklow' | what is the average capacity",
    "label": "CONFIRM_SQL",
    "output": "select avg ( capacity ) from cinema"
  },
  {
    "db_id": "cinema",
    "input": "find the locations that have more than one movie theater with capacity above 300 | select location from cinema where capacity > 300 group by location having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "icfp_1",
    "input": "how many papers are presented on the table | select count ( * ) from papers | please list out the paper id",
    "label": "CONFIRM_SQL",
    "output": "select paperid from papers"
  },
  {
    "db_id": "icfp_1",
    "input": "how many title are presented on the table | select count ( title ) from papers | please list out the titles on the table",
    "label": "CONFIRM_SQL",
    "output": "select title from papers"
  },
  {
    "db_id": "icfp_1",
    "input": "thanks | great, is there anything else you would like to know?  | nothing",
    "label": "GOOD_BYE",
    "output": "thank you, good bye!"
  },
  {
    "db_id": "soccer_2",
    "input": "can you show me a list of player position? | select ppos from tryout | can you show me a list of college name?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college"
  },
  {
    "db_id": "soccer_2",
    "input": "what is the average of enrollments? | select avg ( enr ) from college | thanks!",
    "label": "REQUEST_MORE",
    "output": "Anything more you'd like to ask?"
  },
  {
    "db_id": "soccer_2",
    "input": "what is the colleges' states? | select state from college | find the names of states that have some collage plating in goalie and mid positions.",
    "label": "CONFIRM_SQL",
    "output": "select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'goalie' intersect select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'mid'"
  },
  {
    "db_id": "university_basketball",
    "input": "Hello!  Can you please show me a list of all of the school names for all schools that are not of the Public affiliation? | select school from university where affiliation != 'Public' | Great!  Can you update that list to include the year that the school was founded?",
    "label": "CONFIRM_SQL",
    "output": "select school , founded from university where affiliation != 'Public'"
  },
  {
    "db_id": "university_basketball",
    "input": "Nice!  Can you show me a list of the names of all of the schools? | select school from university | Wonderful!  Finally, can you update this list to show the affiliation type of each of these schools?",
    "label": "CONFIRM_SQL",
    "output": "select school , affiliation from university"
  },
  {
    "db_id": "election_representative",
    "input": "please show me the names of all of the representatives  | select name from representative | Now show narrow down the list to just those who have not been involved in an election",
    "label": "CONFIRM_SQL",
    "output": "select name from representative where representative_id not in ( select representative_id from election )"
  },
  {
    "db_id": "election_representative",
    "input": "now show those representatives and what party they are a member of | select name , party from representative where representative_id not in ( select representative_id from election ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Do you want the types of the documents? | Yes | Which of the document is described with the prefix initial?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code from document_types where document_description like 'Initial%'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Whats is APP document description? | select document_description from document_types where document_type_code = 'APP' | Is there any other document type on the table?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code from document_types where document_type_code != 'APP'"
  },
  {
    "db_id": "driving_school",
    "input": "How many people are in the staff? | select count ( * ) from staff | How many of these people cancelled their lesson?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct staff.staff_id ) from lessons join staff on lessons.staff_id = staff.staff_id where lessons.lesson_status_code = 'Cancelled'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the first name of these people? | select staff.first_name from lessons join staff on lessons.staff_id = staff.staff_id where lessons.lesson_status_code = 'Cancelled' group by staff.first_name | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "railway",
    "input": "Hi, can you please tell me which country has a manager of age above 50? | select country from manager where age > 50 | what about the countries with manager of age below 46?",
    "label": "CONFIRM_SQL",
    "output": "select country from manager where age < 46"
  },
  {
    "db_id": "railway",
    "input": "what are the countries that are on the table but you didn't mention yet? | select country from manager where country not in ( select country from manager where age > 50 or age < 46 ) | can you please tell me how many managers Scotland has?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from manager where country = 'Scotland'"
  },
  {
    "db_id": "railway",
    "input": "what about other countries? | select count ( * ) , country from manager where country != 'Scotland' group by country | how many level 5 managers does United States have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from manager where country = 'United States' and level = 5"
  },
  {
    "db_id": "railway",
    "input": "and can you please tell me their names? | select name from manager where country = 'United States' and level = 5 | thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "what form of payment method did customer ID 1 Use? | select payment_method from customers where customer_id = 1 | what is customer Wendell address?",
    "label": "CLARIFY",
    "output": "Do  you  mean  the customer address of  Wendell"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "what is  the customer address of Wendell? | select customer_address from customers where customer_name = 'Wendell' | thanks",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "college_1",
    "input": "What is the average GPA of all students? | select avg ( student.stu_gpa ) from enroll join student on enroll.stu_num = student.stu_num join class on enroll.class_code = class.class_code | What is the average GPA of all students enrolled in the course that has the code ACCT-211?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( student.stu_gpa ) from enroll join student on enroll.stu_num = student.stu_num join class on enroll.class_code = class.class_code where class.crs_code = 'ACCT-211'"
  },
  {
    "db_id": "college_1",
    "input": "What are the grades of all the students in that course? | select enroll.enroll_grade from enroll join student on enroll.stu_num = student.stu_num join class on enroll.class_code = class.class_code where class.crs_code = 'ACCT-211' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "company_1",
    "input": "Yes. Can you tell me the number of employees? | select count ( * ) from employee | Thank you. Can you tell me how many of them are males?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employee where sex = 'M'"
  },
  {
    "db_id": "company_1",
    "input": "Can you also tell me how many employees have a salary lower than 50000? | select count ( * ) from employee where salary < 50000 | Ok.How many male employees have a salary lower than 50000?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employee where salary < 50000 and sex = 'M'"
  },
  {
    "db_id": "csu_1",
    "input": "What campuses were opened between 1935 and 1939? | select campus from campuses where year >= 1935 and year <= 1939 | What campuses were opened after that?",
    "label": "CLARIFY",
    "output": "Do you mean opened after 1939?"
  },
  {
    "db_id": "csu_1",
    "input": "Yes, please | select campus from campuses where year > 1939 | How many total campuses were opened?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from campuses"
  },
  {
    "db_id": "bike_1",
    "input": "what is the zip code of the highest number of trips taken\n | What do you mean by \"highest number of trips taken\"? | i would like to know the zip code of trips taken above 200 with humidity below 70\n",
    "label": "CONFIRM_SQL",
    "output": "select zip_code from weather group by zip_code having avg ( mean_humidity ) < 70 intersect select zip_code from trip group by zip_code having count ( * ) >= 200"
  },
  {
    "db_id": "bike_1",
    "input": "what end station name has the least amount of trips taken but still above 100 trips\n | select end_station_name from trip group by zip_code having count ( * ) >= 100 order by count ( * ) asc limit 1 | the zip code 94107 what is the humidity?",
    "label": "CONFIRM_SQL",
    "output": "select ( mean_humidity ) from weather where zip_code = 94107"
  },
  {
    "db_id": "bike_1",
    "input": "what was the humidity at the starting station for zip code 94107 | Sorry the question cannot be answered by information in this table. | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_company",
    "input": "list out the airport names | select name from airport | how many airports on this table",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct name ) from airport"
  },
  {
    "db_id": "flight_company",
    "input": "what is the country of Akureyri Airport | select country from airport where name = 'Akureyri Airport' | what is the city of Schiphol Airport",
    "label": "CONFIRM_SQL",
    "output": "select city from airport where name = 'Schiphol Airport'"
  },
  {
    "db_id": "flight_company",
    "input": "thanks | Do you have any more questions? | no",
    "label": "GOOD_BYE",
    "output": "Good bye then!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the highest average monthly rental of all the students? | select monthly_rental from student_addresses join students on student_addresses.student_id = students.student_id group by student_addresses.student_id order by avg ( monthly_rental ) desc limit 1 | Hmm, can you tell me the addresses that have the highest average monthly rental?",
    "label": "CONFIRM_SQL",
    "output": "select students.address_id from student_addresses join students on student_addresses.student_id = students.student_id group by student_addresses.student_id order by avg ( monthly_rental ) desc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the id and first name of the student whose addresses have the highest average monthly rental? | select student_addresses.student_id , students.first_name from student_addresses join students on student_addresses.student_id = students.student_id group by student_addresses.student_id order by avg ( monthly_rental ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "browser_web",
    "input": "Which browsers are compatible with firefox? | select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'Firefox' | WHat about with Fasterfox?",
    "label": "CONFIRM_SQL",
    "output": "select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'Fasterfox'"
  },
  {
    "db_id": "browser_web",
    "input": "Which browsers are compatible with CACHebox? | select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'CACHEbox' | Which browsers are compatible with both?",
    "label": "CONFIRM_SQL",
    "output": "select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'CACHEbox' intersect select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'Fasterfox'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Do you want the id, first name and last name of that engineer? | Yes | which engineer made the least number of visits?",
    "label": "CONFIRM_SQL",
    "output": "select maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id group by maintenance_engineers.engineer_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "how many visits did each engineer have? | select count ( * ) , maintenance_engineers.engineer_id from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id group by maintenance_engineers.engineer_id | can you list the engineer id, first name, and last name of the engineer who had the least number of visits?",
    "label": "CONFIRM_SQL",
    "output": "select maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name , count ( * ) from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id group by maintenance_engineers.engineer_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "sports_competition",
    "input": "Show me the names of all clubs? | select name from club | Show me the name of the club that has the id number 3 ?",
    "label": "CONFIRM_SQL",
    "output": "select name from club where club_id = '3'"
  },
  {
    "db_id": "sports_competition",
    "input": "Show me the region of the club BK Slide? | select region from club where name = 'BK Slide' | Show me the names of the clubs that do not have any players?",
    "label": "CONFIRM_SQL",
    "output": "select name from club where club_id not in ( select club_id from player )"
  },
  {
    "db_id": "news_report",
    "input": "What is the total number of journalists? | select count ( * ) from journalist | How many journalists have worked for more than 5 years?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from journalist where years_working > 5"
  },
  {
    "db_id": "news_report",
    "input": "What is the name of the journalist who has worked longest? | select name from journalist order by years_working desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many apartments are there? | select count ( * ) from apartments | How many different facilities are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartment_facilities"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you list the different facilities? | select * from apartment_facilities | How many apartments have facilities?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartments where apt_id in ( select apt_id from apartment_facilities )"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many apartments have no facilities? | select count ( * ) from apartments where apt_id not in ( select apt_id from apartment_facilities ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "device",
    "input": "how many locations have shops that opened before 2008? | select count ( location ) from shop where open_year = '2008' | how many shops opened later than 2012?",
    "label": "CONFIRM_SQL",
    "output": "select count ( location ) from shop where open_year > '2012'"
  },
  {
    "db_id": "device",
    "input": "can you show the locations for those stores? | select location from shop where open_year > '2012' | are there locations with shops that opened before 2008?",
    "label": "CONFIRM_SQL",
    "output": "select location from shop where open_year < '2008'"
  },
  {
    "db_id": "university_basketball",
    "input": "Can you show me a list of colleges that have an enrollment of 15,000 or higher? | Do you want the names of the schools that have an enrollment of 15000 or higher? | Can you provide the name and the location of the schools that have an enrollment of 15,000 or higher?",
    "label": "CONFIRM_SQL",
    "output": "select school , location from university where enrollment > 15000"
  },
  {
    "db_id": "university_basketball",
    "input": "What conference are these schools in? | select primary_conference from university where school in ( select school from university where enrollment > 15000 ) | Can you show the school names, location and conferences together?",
    "label": "CONFIRM_SQL",
    "output": "select school , location , primary_conference from university where enrollment > 15000"
  },
  {
    "db_id": "university_basketball",
    "input": "Are there any colleges in PA that have an enrollment count greater than 15000 that can be added to this table? | select school , location , primary_conference from university where enrollment > 15000 | Can you add the enrollment count to the table?",
    "label": "CONFIRM_SQL",
    "output": "select school , location , primary_conference , enrollment from university where enrollment > 15000"
  },
  {
    "db_id": "university_basketball",
    "input": "Can you add the minimum enrollment count to the table? | No, I cannot. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "sports_competition",
    "input": "WHich country had the most competitions? | select country from competition group by country order by count ( * ) desc limit 1 | What year did most competitions occur?",
    "label": "CONFIRM_SQL",
    "output": "select year from competition group by year order by count ( * ) desc limit 1"
  },
  {
    "db_id": "sports_competition",
    "input": "What about the most common type? | select competition_type from competition group by competition_type order by count ( * ) desc limit 1 | THanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye!"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "find out the send dates of the documents with the grant amount of more 5000 were granted by organisation type described | select documents.sent_date from documents join grants on documents.grant_id = grants.grant_id join organisations on grants.organisation_id = organisations.organisation_id join organisation_types on organisations.organisation_type = organisation_types.organisation_type where grants.grant_amount > 5000 and organisation_types.organisation_type_description = 'Research' | list the \norganisation type",
    "label": "CONFIRM_SQL",
    "output": "select organisation_type from organisation_types"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "how much grant amount in organisation id 10 | select count ( grant_id ) from grants where organisation_id = 10 | thanks",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "e_learning",
    "input": "What are the enrollment dates of all the tests that have result \"Pass\"? | select student_course_enrolment.date_of_enrolment from student_course_enrolment join student_tests_taken on student_course_enrolment.registration_id = student_tests_taken.registration_id where student_tests_taken.test_result = 'Pass' | What are the student IDs of students who passed the test?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_enrolment.student_id from student_course_enrolment join student_tests_taken on student_course_enrolment.registration_id = student_tests_taken.registration_id where student_tests_taken.test_result = 'Pass'"
  },
  {
    "db_id": "e_learning",
    "input": "How many students passed the test? | select count ( student_course_enrolment.student_id ) from student_course_enrolment join student_tests_taken on student_course_enrolment.registration_id = student_tests_taken.registration_id where student_tests_taken.test_result = 'Pass' | Thanks!",
    "label": "WELCOME",
    "output": "welcome，goodbye"
  },
  {
    "db_id": "county_public_safety",
    "input": "Did you mean the top 5 cities with most white population? | Yes | how many cities are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from city"
  },
  {
    "db_id": "county_public_safety",
    "input": "which city has most hispanic population? | select name from city order by hispanic desc limit 1 | what about black?",
    "label": "CONFIRM_SQL",
    "output": "select name from city order by black desc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "what about white? | select name from city order by white desc limit 1 | what about top 5?",
    "label": "CONFIRM_SQL",
    "output": "select name from city order by white desc limit 5"
  },
  {
    "db_id": "musical",
    "input": "Give me the list of nominees that has been nominated multiple times for musicals | select nominee from musical group by nominee having count ( * ) > 1 | And what musicals were they nominated for?",
    "label": "CONFIRM_SQL",
    "output": "select name from musical group by nominee having count ( * ) > 1"
  },
  {
    "db_id": "musical",
    "input": "What year(s) were they nominated in?  | select year from musical group by nominee having count ( * ) > 1 | Who else was also nominated in 1986?",
    "label": "CONFIRM_SQL",
    "output": "select distinct nominee from musical where year = 1986 and nominee != 'Bob Fosse'"
  },
  {
    "db_id": "musical",
    "input": "What musicals were they nominated for? | select name from musical where year = 1986 and nominee = 'Cleavant Derricks' | And in what categories were those nominations?",
    "label": "CONFIRM_SQL",
    "output": "select name , category from musical where year = 1986 and nominee = 'Cleavant Derricks'"
  },
  {
    "db_id": "movie_1",
    "input": "Hello, how many ratings have the same reviewer and director name? | select count ( * ) from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where movie.director = reviewer.name | What is the reviewer name associated with that rating?",
    "label": "CONFIRM_SQL",
    "output": "select distinct reviewer.name from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where movie.director = reviewer.name"
  },
  {
    "db_id": "movie_1",
    "input": "How about the movie title? | select distinct movie.title from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where movie.director = reviewer.name | What about the number of stars it received?",
    "label": "CONFIRM_SQL",
    "output": "select distinct rating.stars from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where movie.director = reviewer.name"
  },
  {
    "db_id": "coffee_shop",
    "input": "what is the average level of membership? | select avg ( level_of_membership ) from member | How many membership cards are black?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from member where membership_card = 'Black'"
  },
  {
    "db_id": "coffee_shop",
    "input": "what's the average time of purchase for white membership card? | select avg ( time_of_purchase ) from member where membership_card = 'White' | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select name from member where membership_card = 'White'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Which part has the least faults? | select parts.part_name from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_name order by count ( * ) asc limit 1 | How many faults does the middle have?",
    "label": "CONFIRM_SQL",
    "output": "select parts.part_name , count ( * ) from parts join part_faults on parts.part_id = part_faults.part_id where parts.part_name = 'middle'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the average number of faults for all products? | select avg ( cnt ) from ( select count ( * ) as cnt from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_name order by count ( * ) asc ) | What faults does the middle have?",
    "label": "CONFIRM_SQL",
    "output": "select fault_short_name from part_faults where part_id in ( select part_faults.part_id from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_name order by count ( * ) asc limit 1 )"
  },
  {
    "db_id": "flight_company",
    "input": "How many airports are there? | select count ( * ) from airport | How many total companies are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from operate_company"
  },
  {
    "db_id": "flight_company",
    "input": "How many companies operate airlines in each airport? | Do you want the result by airport id, or airport name or all airport information?  | I would like the results by airport id, please.",
    "label": "CONFIRM_SQL",
    "output": "select airport.id , count ( * ) from operate_company join flight on operate_company.id = flight.company_id join airport on flight.airport_id = airport.id group by airport.id"
  },
  {
    "db_id": "flight_company",
    "input": "How many airports are in the United States? | select count ( * ) from airport where country = 'United States' | How many companies operate in airports in the United States?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct operate_company.id ) from operate_company join flight on operate_company.id = flight.company_id join airport on flight.airport_id = airport.id where airport.country = 'United States'"
  },
  {
    "db_id": "insurance_policies",
    "input": "Did you mean customers chose policies with type code \"Car\"? | Yes | how many policy types are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct policy_type_code ) from customer_policies"
  },
  {
    "db_id": "insurance_policies",
    "input": "what are those types? | select policy_type_code from customer_policies group by policy_type_code | how many times has a customer chosen car",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customer_policies where policy_type_code = 'Car'"
  },
  {
    "db_id": "insurance_policies",
    "input": "how about life? | select count ( * ) from customer_policies where policy_type_code = 'Life' | what about for each of the last two policies?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) , policy_type_code from customer_policies group by policy_type_code having policy_type_code = 'Life' or policy_type_code = 'Car' ;"
  },
  {
    "db_id": "insurance_policies",
    "input": "Which of those has the highest count of customers? | select policy_type_code from customer_policies group by policy_type_code order by count ( * ) desc limit 1 | And which has least?\n",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from customer_policies group by policy_type_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "insurance_policies",
    "input": "Which policy had the most, again? | select policy_type_code from customer_policies group by policy_type_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "driving_school",
    "input": "How many people are named Janessa?\n | Do you mean the number of people whose first name is Janessa? | Yes\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Janessa'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the Zip Code where Janessa Lived? | Do you mean the zip postcode in the address where Janessa lived? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select addresses.zip_postcode from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Janessa'"
  },
  {
    "db_id": "driving_school",
    "input": "and Camylle?\n | Do you mean the zip postcode in the area where the person with first name Camylle lived? | Yes\n",
    "label": "CONFIRM_SQL",
    "output": "select addresses.zip_postcode from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Camylle'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the zip postcode where Kaitlin lived?\n | Do you mean the zip postcode in the ares where the staff with first name Kaitlin lived? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select addresses.zip_postcode from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Kaitlin'"
  },
  {
    "db_id": "driving_school",
    "input": "What is Kaitlin's last name? | Do you mean the last name of the staff whose first name is Kaitlin? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select last_name from staff where first_name = 'Kaitlin'"
  },
  {
    "db_id": "driving_school",
    "input": "and Janessa? | Do you mean the last name of the staff whose first name is Janessa? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select last_name from staff where first_name = 'Janessa'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the zip postcode where staff named Janessa Sawayn lived? | Do you mean the zip code of staff with first name Janessa and last name Sawayn lived? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select addresses.zip_postcode from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "what are the actual delivery dates of orders with quantity 1? | select customer_orders.actual_delivery_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id where order_items.order_quantity = 1 | what is the order date of order id 1?",
    "label": "CONFIRM_SQL",
    "output": "select order_date from customer_orders where order_id = 1"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Customer id of order id 1 | select customer_id from customer_orders where order_id = 1 | what is Planned Delivery Date of customer id 516 ",
    "label": "CONFIRM_SQL",
    "output": "select planned_delivery_date from customer_orders where customer_id = 516"
  },
  {
    "db_id": "shop_membership",
    "input": "Did you mean the names of branches with registered members? | Yes. |  list the branch for registered  members?",
    "label": "CLARIFY",
    "output": "did you mean the ids of branches with registered members?"
  },
  {
    "db_id": "shop_membership",
    "input": "yes | select branch_id from membership_register_branch | Find the membership amount of the popert?",
    "label": "CLARIFY",
    "output": "did you mean the membership amount of the branch with the name \"Popert\"?"
  },
  {
    "db_id": "shop_membership",
    "input": "yes | select membership_amount from branch where name = 'Popert' | List the name with registered members?",
    "label": "CONFIRM_SQL",
    "output": "select name from branch join membership_register_branch on branch.branch_id = membership_register_branch.branch_id"
  },
  {
    "db_id": "shop_membership",
    "input": "which city of Alexandra? | select city from branch where name = 'Alexandre' | Thanks and bye!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "store_1",
    "input": "What kinds of playlists are available? | what  do  you  mean by available | What are the names of the playlists? Available is defined as able to be used or obtained; at someone's disposal",
    "label": "CONFIRM_SQL",
    "output": "select name from playlists"
  },
  {
    "db_id": "store_1",
    "input": "How many tracks are in the playlist \"movies\"? | select count ( * ) from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlists.id = playlist_tracks.playlist_id where playlists.name = 'Movies' | Please list the name(s) of the tracks in the playlist \"Movies\".",
    "label": "CONFIRM_SQL",
    "output": "select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlists.id = playlist_tracks.playlist_id where playlists.name = 'Movies'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "what is the teacher id of detention id 1 | select teacher_id from detention where detention_id = 1 | when does the datetime detention end\t",
    "label": "CLARIFY",
    "output": "What did you mean by the datetime detention end? Do you want a list of all the datetime detention end or a specific one?"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "for detention id 1 | select datetime_detention_end from detention where detention_id = 1 | what is the middle name of teacher id 1?",
    "label": "CONFIRM_SQL",
    "output": "select teachers.middle_name from teachers where teachers.teacher_id = 1"
  },
  {
    "db_id": "swimming",
    "input": "Can you list all events that happened in 2018? | select name from event where year = 2018 | Can you list all the events that happened within the last 5 years?",
    "label": "CONFIRM_SQL",
    "output": "select name from event where year >= 2014"
  },
  {
    "db_id": "swimming",
    "input": "Can you sort the list to only include the most recent event? | select name from event order by year desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye."
  },
  {
    "db_id": "formula_1",
    "input": "Hi, What are the unique names of races that are held in Spain? | select distinct races.name from races join circuits on races.circuitid = circuits.circuitid where circuits.country = 'Spain' | Were those races held after the year 2000?",
    "label": "CONFIRM_SQL",
    "output": "select distinct races.name from races join circuits on races.circuitid = circuits.circuitid where circuits.country = 'Spain' and races.year > 2000"
  },
  {
    "db_id": "formula_1",
    "input": "Where is the European Grand Prix held? | Do you want to return the location, country or latitude and longitude? | Country please.",
    "label": "CONFIRM_SQL",
    "output": "select distinct circuits.country from races join circuits on races.circuitid = circuits.circuitid where races.name = 'European Grand Prix'"
  },
  {
    "db_id": "formula_1",
    "input": "What year was the last European Grand Prix held in Spain? | select races.year from races join circuits on races.circuitid = circuits.circuitid where circuits.country = 'Spain' order by races.year desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Great, bye!"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can you tell me which customers placed orders between 2009-01-01 and 2010-0101? | do you want the id or the name of the customer? | The names",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id where orders.date_order_placed >= '2009-01-01' and orders.date_order_placed <= '2010-01-01'"
  },
  {
    "db_id": "tracking_orders",
    "input": "How many customers placed orders before George? | select count ( customers.customer_name ) from customers join orders on customers.customer_id = orders.customer_id where orders.date_order_placed < ( select orders.date_order_placed from customers join orders on customers.customer_id = orders.customer_id where customers.customer_name = 'George' order by orders.date_order_placed asc limit 1 ) | What is the status of George's order?",
    "label": "CONFIRM_SQL",
    "output": "select orders.order_status from customers join orders on customers.customer_id = orders.customer_id where customers.customer_name = 'George'"
  },
  {
    "db_id": "insurance_policies",
    "input": "Hi there! From this database, what is the most popular payment method? | select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit 1 | Can you tell me how many total MasterCard payments there are in this database?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from payments where payment_method_code = 'MasterCard'"
  },
  {
    "db_id": "insurance_policies",
    "input": "Great!  What is the second most popular payment method, and how many payments are there with that method? | select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit 1 , 1 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome. If there are no more questions, good bye!"
  },
  {
    "db_id": "department_store",
    "input": "What are the average amount purchased and value purchased for the supplier who supplies the most products | select avg ( total_amount_purchased ) , avg ( total_value_purchased ) from product_suppliers where supplier_id = ( select supplier_id from product_suppliers group by supplier_id order by count ( * ) desc limit 1 ) | How about for the supplier who supplies the least products?",
    "label": "CLARIFY",
    "output": "Did  you  want to get the supplier id  who supplies the least products?"
  },
  {
    "db_id": "department_store",
    "input": "I want the average amount purchased and value purchased for the supplier who supplies the least products | select avg ( total_amount_purchased ) , avg ( total_value_purchased ) from product_suppliers where supplier_id = ( select supplier_id from product_suppliers group by supplier_id order by count ( * ) asc limit 1 ) | What is the supplier id who supplies the least products?",
    "label": "CONFIRM_SQL",
    "output": "select distinct supplier_id from product_suppliers where supplier_id = ( select supplier_id from product_suppliers group by supplier_id order by count ( * ) asc limit 1 )"
  },
  {
    "db_id": "department_store",
    "input": "What is the total value purchased for supplier id 3 | select sum ( total_value_purchased ) from product_suppliers where supplier_id = 3 | What is the \"date supplied to\" of supplier id 3?",
    "label": "CONFIRM_SQL",
    "output": "select date_supplied_to from product_suppliers where supplier_id = 3"
  },
  {
    "db_id": "entrepreneur",
    "input": "What are the investor name of Leonardo Binchi? | select entrepreneur.investor from entrepreneur join people on entrepreneur.people_id = people.people_id where people.name = 'Leonardo Binchi' | What is the total amount of money requested for three persons?",
    "label": "CLARIFY",
    "output": "Sorry, which three persons do you want?"
  },
  {
    "db_id": "entrepreneur",
    "input": "The three persons are Francesco Postiglione, Leonardo Binchi and Fabrizio Buonocore | select sum ( entrepreneur.money_requested ) from entrepreneur join people on entrepreneur.people_id = people.people_id where people.name = 'Francesco Postiglione' or people.name = 'Leonardo Binchi' or people.name = 'Fabrizio Buonocore' | What is the company name of Fabrizio Buonocore?",
    "label": "CONFIRM_SQL",
    "output": "select entrepreneur.company from entrepreneur join people on entrepreneur.people_id = people.people_id where people.name = 'Fabrizio Buonocore'"
  },
  {
    "db_id": "entrepreneur",
    "input": "What are the name of entrepreneurs whose investor is not \"Rachel Elnaugh\"? | select people.name from entrepreneur join people on entrepreneur.people_id = people.people_id where entrepreneur.investor != 'Rachel Elnaugh' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "department_store",
    "input": "Find the id of suppliers whose average amount purchased for each product is above 50000 or below 30000 | select supplier_id from product_suppliers group by supplier_id having avg ( total_amount_purchased ) > 50000 or avg ( total_amount_purchased ) < 30000 | Which of those suppliers purchased less than 30000?",
    "label": "CONFIRM_SQL",
    "output": "select supplier_id from product_suppliers group by supplier_id having avg ( total_amount_purchased ) < 30000"
  },
  {
    "db_id": "department_store",
    "input": "And how much was their average amount purchased for each product? | select product_id , avg ( total_amount_purchased ) from product_suppliers group by product_id | What was their most recent date_supplied_to?",
    "label": "CONFIRM_SQL",
    "output": "select date_supplied_to from product_suppliers order by date_supplied_to desc limit 1"
  },
  {
    "db_id": "city_record",
    "input": "Could you list all the cities in ascending alphabetical order? | select city from city order by city asc | Which cities were once host cities?",
    "label": "CONFIRM_SQL",
    "output": "select city.city from city join hosting_city on city.city_id = hosting_city.host_city"
  },
  {
    "db_id": "city_record",
    "input": "Which cities had a higher temperature in Feb than in Jun or were a host city? | select city.city from city join temperature on city.city_id = temperature.city_id where temperature.feb > temperature.jun union select city.city from city join hosting_city on city.city_id = hosting_city.host_city | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "news_report",
    "input": "Could you please tell me all the names of the journalists? | select name from journalist | What are the names of the events they reported?",
    "label": "CONFIRM_SQL",
    "output": "select journalist.name , event.name from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id"
  },
  {
    "db_id": "news_report",
    "input": "Could you please organize those in ascending order? | select journalist.name , event.name from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id order by event.event_attendance asc | What work type do those journalists do?",
    "label": "CONFIRM_SQL",
    "output": "select journalist.name , news_report.work_type from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id"
  },
  {
    "db_id": "news_report",
    "input": "How many years have they each been working, please? | select name , years_working from journalist | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "culture_company",
    "input": "how manty editors are there? | select count ( author_or_editor ) from book_club | how about the total number of companies?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from culture_company"
  },
  {
    "db_id": "culture_company",
    "input": "is there a company that has a book published by Michael Nava? | select culture_company.company_name from culture_company join book_club on culture_company.book_club_id = book_club.book_club_id where book_club.publisher = 'Michael Nava' | which company did Alyson published a book for?",
    "label": "CONFIRM_SQL",
    "output": "select culture_company.company_name from culture_company join book_club on culture_company.book_club_id = book_club.book_club_id where book_club.publisher = 'Alyson'"
  },
  {
    "db_id": "culture_company",
    "input": "does that company have another editor? | select book_club.author_or_editor from culture_company join book_club on culture_company.book_club_id = book_club.book_club_id where culture_company.company_name = 'Culture China' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "baseball_1",
    "input": "Which cities have 2 to 4 parks? | select city from park group by city having count ( * ) between 2 and 4 | How many parks are in Atlanta?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from park where city = 'Atlanta'"
  },
  {
    "db_id": "baseball_1",
    "input": "Which cities have exactly 4 parks? | select city from park group by city having count ( * ) = 4 | Which cities have exactly 3 parks?",
    "label": "CONFIRM_SQL",
    "output": "select city from park group by city having count ( * ) = 3"
  },
  {
    "db_id": "baseball_1",
    "input": "Which cities have exactly 2 parks? | select city from park group by city having count ( * ) = 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "how many employees there | select count ( * ) from employee | what is the employee DOB of  employee no 101",
    "label": "CONFIRM_SQL",
    "output": "select emp_dob from employee where emp_num = 101"
  },
  {
    "db_id": "college_1",
    "input": "how many class is there | select count ( * ) from class | thanks",
    "label": "WELCOME",
    "output": "Welcome! Bye."
  },
  {
    "db_id": "college_1",
    "input": "what is the school code of emp num 114 | select school_code from department where emp_num = 114 | what is the school code of fine arts",
    "label": "CONFIRM_SQL",
    "output": "select school_code from department where dept_name = 'Fine Arts'"
  },
  {
    "db_id": "college_1",
    "input": "what is the dept address of accounting | select dept_address from department where dept_name = 'Accounting' | what is the prof extension of hist",
    "label": "CONFIRM_SQL",
    "output": "select prof_extension from professor where dept_code = 'HIST'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what are the characteristic names of \"Cumin\"?\n | select characteristics.characteristic_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'cumin' | \"Cumin\" data types",
    "label": "CONFIRM_SQL",
    "output": "select characteristics.characteristic_data_type from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'cumin'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the product id of \"cumin\"?\n | select product_id from products where product_name = 'cumin' | what is the product_category_code for product id 1?",
    "label": "CONFIRM_SQL",
    "output": "select product_category_code from products where product_id = '1'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the typical_selling_price of product id 1? | select typical_selling_price from products where product_id = '1' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_1",
    "input": "show the info of students whose GPA is below 3? | select * from student where stu_gpa < 3 | how about those whose GPA is greater than 3?",
    "label": "CONFIRM_SQL",
    "output": "select * from student where stu_gpa > 3"
  },
  {
    "db_id": "college_1",
    "input": "Who is the youngest? | Did you mean the youngest students whose GPA is higher than 3? | Yes, please.",
    "label": "CONFIRM_SQL",
    "output": "select * from student where stu_gpa > 3 order by stu_dob desc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "please just show the first, last name, and gpa. | select stu_fname , stu_lname , stu_gpa from student where stu_gpa > 3 order by stu_dob desc limit 1 | Ok, thanks! bye.",
    "label": "WELCOME",
    "output": "You're welcome, goodbye."
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are the result descriptions of the project whose detail is \"sint\"? | select research_outcomes.outcome_description from research_outcomes join project_outcomes on research_outcomes.outcome_code = project_outcomes.outcome_code join projects on project_outcomes.project_id = projects.project_id where projects.project_details = 'sint' | What are the project ids of all outcome code \"Patent\"?",
    "label": "CONFIRM_SQL",
    "output": "select project_outcomes.project_id from research_outcomes join project_outcomes on research_outcomes.outcome_code = project_outcomes.outcome_code join projects on project_outcomes.project_id = projects.project_id where project_outcomes.outcome_code = 'Patent'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are the project details of all of those project ids? | select project_outcomes.project_id , projects.project_details from research_outcomes join project_outcomes on research_outcomes.outcome_code = project_outcomes.outcome_code join projects on project_outcomes.project_id = projects.project_id where project_outcomes.outcome_code = 'Patent' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "club_1",
    "input": "What are the average age of all the members of the tennis club | select avg ( student.age ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Tennis Club' | Give me the first names and last names of all the members of the tennis club",
    "label": "CONFIRM_SQL",
    "output": "select student.fname , student.lname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Tennis Club'"
  },
  {
    "db_id": "club_1",
    "input": "Can i have the city code of all members of the tennis club | select student.city_code from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Tennis Club' | Give me the position of the member in the tennis club",
    "label": "CONFIRM_SQL",
    "output": "select member_of_club.position from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Tennis Club'"
  },
  {
    "db_id": "soccer_2",
    "input": "Hi there! Can you provide me with a list of all of the player names? | select pname from player | Thank you for that! Can you filter the list to show the names of only the players whose decision is \"yes\"?",
    "label": "CONFIRM_SQL",
    "output": "select player.pname from player join tryout on player.pid = tryout.pid where tryout.decision = 'yes'"
  },
  {
    "db_id": "soccer_2",
    "input": "Perfect!  Can you update this list to show the college names associated with each of these 2 players? | select player.pname , tryout.cname from player join tryout on player.pid = tryout.pid where tryout.decision = 'yes' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "entertainment_awards",
    "input": "State the location of flower awards held? | select location from festival_detail where festival_name = 'Flower Awards' | Which festival has the least number of audience?",
    "label": "CONFIRM_SQL",
    "output": "select festival_name from festival_detail order by num_of_audience asc limit 1"
  },
  {
    "db_id": "entertainment_awards",
    "input": "What is the name of artwork id 2? | select name from artwork where artwork_id = 2 | Show distinct types of artworks that are nominated in festivals in 2007?",
    "label": "CONFIRM_SQL",
    "output": "select distinct artwork.type from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id where festival_detail.year = 2007"
  },
  {
    "db_id": "icfp_1",
    "input": "What are the paper id of Gibbons? | select distinct paperid from authors join authorship on authors.authid = authorship.authid where authors.lname = 'Gibbons' | Who studied at Norterstein University?",
    "label": "CLARIFY",
    "output": "did You mean list the name of authors who belong to the institution \"Northeastern University\""
  },
  {
    "db_id": "icfp_1",
    "input": "Yes | select distinct authors.fname , authors.lname from authors join authorship on authors.authid = authorship.authid join inst on authorship.instid = inst.instid where inst.name = 'Northeastern University' | What are the auth id of Ralf?",
    "label": "CONFIRM_SQL",
    "output": "select authid from authors where fname = 'Ralf'"
  },
  {
    "db_id": "icfp_1",
    "input": "Which authors belong to the institution \"Google\"? Show the first names and last names? | select distinct authors.fname , authors.lname from authors join authorship on authors.authid = authorship.authid join inst on authorship.instid = inst.instid where inst.name = 'Google' | Thanks!",
    "label": "WELCOME",
    "output": "welcome，goodbye"
  },
  {
    "db_id": "hospital_1",
    "input": "What are all the names of the departments? | select name from department | How many employees are in the General Medicine department?",
    "label": "CONFIRM_SQL",
    "output": "select head from department where name = 'General Medicine'"
  },
  {
    "db_id": "hospital_1",
    "input": "Please show which departments have greater than 4 employees\n | select name from department where head > 4 | Which of these has the largest number of employees?",
    "label": "CONFIRM_SQL",
    "output": "select name from department order by head desc limit 1"
  },
  {
    "db_id": "chinook_1",
    "input": "thanks! | goodbye! | Tell me the artist id and album id for title Balls to the Wall ?",
    "label": "CONFIRM_SQL",
    "output": "select albumid , artistid from album where title = 'Balls to the Wall'"
  },
  {
    "db_id": "chinook_1",
    "input": "k. Who is the composer for For Those About To Rock (We Salute You) ? | select distinct track.composer from album join track on album.albumid = track.albumid where album.title = 'For Those About To Rock We Salute You' | Which track id's do not have their composer name in the table...",
    "label": "REJECT",
    "output": "Sorry, could you rephrase your question?"
  },
  {
    "db_id": "chinook_1",
    "input": "k. Who is the composer for Balls to the Wall ? | select distinct track.composer from album join track on album.albumid = track.albumid where album.title = 'Balls to the Wall' | Show the album names , ids and the number of tracks for each album.",
    "label": "CONFIRM_SQL",
    "output": "select album.title , track.albumid , count ( * ) from album join track on album.albumid = track.albumid group by track.albumid"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "show me the customer name of the order that have the status \"cancelled\" | select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id where order_status = 'Cancelled' | name the customer which have  15 as customer id?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers where customer_id = 15"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "find the customer name of the order that have status \"delivered\" | select customers.customer_name , customer_orders.order_date from customers join customer_orders on customers.customer_id = customer_orders.customer_id where order_status = 'Delivered' | find the customer date of the orders that have the status\" delivered\"",
    "label": "CLARIFY",
    "output": "did you mean the order date?"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "yes | select customer_orders.order_date from customers join customer_orders on customers.customer_id = customer_orders.customer_id where order_status = 'Delivered' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "flight_4",
    "input": "What are the names of airport which is the source for the most number of flight routes? | select airports.name from airports join routes on airports.apid = routes.src_apid group by routes.src_apid order by count ( * ) desc limit 1 | What are the names of city of airport which is the source for the most number of flight routes",
    "label": "CLARIFY",
    "output": "Do you mean the name of city which is the source for the most number of flight routes?"
  },
  {
    "db_id": "flight_4",
    "input": "Yes | select airports.city from airports join routes on airports.apid = routes.src_apid group by routes.src_apid order by count ( * ) desc limit 1 | Whats the elevation of hartsfueld jacksin atlanta?",
    "label": "CLARIFY",
    "output": "Do you mean the elevation of the airport named Hartsfield Jackson Atlanta International Airport?"
  },
  {
    "db_id": "phone_1",
    "input": "Find the average ram mib size of the chip models that are never used by any phone | select avg ( ram_mib ) from chip_model where model_name not in ( select chip_model from phone ) | How many chips is that which are never used by any phone?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from chip_model where model_name not in ( select chip_model from phone )"
  },
  {
    "db_id": "phone_1",
    "input": "Give me all their model names and ram mib | select model_name , ram_mib from chip_model where model_name not in ( select chip_model from phone ) | What is the highest ram mib from those 8, and tell me how many chips which are used by phones have ram mib equal to or greater than that number",
    "label": "SORRY",
    "output": "Sorry, I can only answer one question at a time."
  },
  {
    "db_id": "phone_1",
    "input": "How many chips used by phones have a ram mib higher or equal to 64 | select count ( * ) from chip_model where model_name in ( select chip_model from phone ) and ram_mib >= 64 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome."
  },
  {
    "db_id": "customers_card_transactions",
    "input": "how many customers are presented on the table | select count ( * ) from customers | how many accounts on the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from accounts"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "list out the customers first name | select customer_first_name from customers | what is the address of Aniyah",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the address of the customer with first name Aniyah?"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "exactly | select customer_address from customers where customer_first_name = 'Aniyah' | thanks",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "gymnast",
    "input": "Hello there! Can you list all of the hometowns listed in this database? | select distinct hometown from people | Thank you for that information!  Can you filter that list to show just the hometowns for gymnasts whose total points are more than 57.5?",
    "label": "CONFIRM_SQL",
    "output": "select distinct people.hometown from gymnast join people on gymnast.gymnast_id = people.people_id where gymnast.total_points > 57.5"
  },
  {
    "db_id": "activity_1",
    "input": "Show me all the buildings | select building from faculty | Show me the details of all professors",
    "label": "CLARIFY",
    "output": "do you mean all information about them?"
  },
  {
    "db_id": "activity_1",
    "input": "Yes | select * from faculty | Show me all the buildings that have at least 10 professors",
    "label": "CONFIRM_SQL",
    "output": "select building from faculty where rank = 'Professor' group by building having count ( * ) >= 10"
  },
  {
    "db_id": "manufactory_1",
    "input": "Hello!  Can you please provide me with the name of the founder for Sony? | select founder from manufacturers where name = 'Sony' | Thanks!  What city is the headquarters of Sony located in?",
    "label": "CONFIRM_SQL",
    "output": "select headquarter from manufacturers where name = 'Sony'"
  },
  {
    "db_id": "manufactory_1",
    "input": "Are there any other companies with a headquarters in Tokyo? | select name from manufacturers where headquarter = 'Tokyo' | What was Sony's revenue?",
    "label": "CONFIRM_SQL",
    "output": "select revenue from manufacturers where name = 'Sony'"
  },
  {
    "db_id": "chinook_1",
    "input": "List album titles for albums containing Reggae genre tracks. | Did  you  mean   both contain  'Reggae' and 'Rock' genre tracks? | yes",
    "label": "CONFIRM_SQL",
    "output": "select album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Reggae' intersect select album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Rock'"
  },
  {
    "db_id": "chinook_1",
    "input": "What is the composer of Greatest Hits? | I can  not  find the info  about  Greatest Hits | How many albums contain both 'Reggae' and 'Rock' genre tracks?",
    "label": "CONFIRM_SQL",
    "output": "select album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Reggae' intersect select album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Rock'"
  },
  {
    "db_id": "chinook_1",
    "input": "List album titles for albums containing Rock genre tracks  | select album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Reggae' intersect select album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Rock' | List album titles for albums containing Metal genre tracks",
    "label": "CONFIRM_SQL",
    "output": "select distinct album.title from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Metal'"
  },
  {
    "db_id": "chinook_1",
    "input": "How many albums contain 'Metal' genre tracks? | select count ( distinct album.title ) from album join track on album.albumid = track.albumid join genre on track.genreid = genre.genreid where genre.name = 'Metal' | Thanks",
    "label": "WELCOME",
    "output": "you are welcome  and  bye "
  },
  {
    "db_id": "csu_1",
    "input": "Which universities are in Los Angeles county and opened after 1950? | select campus from campuses where county = 'Los Angeles' and year > 1950 | What about before 1950?",
    "label": "CONFIRM_SQL",
    "output": "select campus from campuses where county = 'Los Angeles' and year < 1950"
  },
  {
    "db_id": "csu_1",
    "input": "What are the years they opened? | select year from campuses where county = 'Los Angeles' and year < 1950 | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "formula_1",
    "input": "race circuits in spain | Could you ask that in a more concrete way? | what are  race circuits in Spain",
    "label": "CONFIRM_SQL",
    "output": "select name from circuits where country = 'Spain'"
  },
  {
    "db_id": "formula_1",
    "input": "races held after 2017 | select races.name from races join circuits on races.circuitid = circuits.circuitid where races.year > 2017 | races held after 2017 in spain circuits",
    "label": "CONFIRM_SQL",
    "output": "select races.name from races join circuits on races.circuitid = circuits.circuitid where circuits.country = 'Spain' and races.year > 2017"
  },
  {
    "db_id": "department_store",
    "input": "who is the department manager? | Do you want the ids of staffs who are department managers? | yes",
    "label": "CONFIRM_SQL",
    "output": "select staff_id from staff_department_assignments where job_title_code = 'Department Manager'"
  },
  {
    "db_id": "department_store",
    "input": "which department id has the least amount of staff? | select department_id from staff_department_assignments group by department_id order by count ( * ) asc limit 1 | why does id 1 have the least amount of staff?",
    "label": "CONFIRM_SQL",
    "output": "select department_id , count ( * ) from staff_department_assignments group by department_id order by count ( * ) asc"
  },
  {
    "db_id": "music_4",
    "input": "Can you list the artist ids and their volume issues? | select artist.artist_id , volume.volume_issue from artist join volume on artist.artist_id = volume.artist_id | Which volumes have more than 2 weeks on top?",
    "label": "CONFIRM_SQL",
    "output": "select volume.* from artist join volume on artist.artist_id = volume.artist_id where volume.weeks_on_top > 2"
  },
  {
    "db_id": "music_4",
    "input": "Hmm, I want to know the famous titles of the artists associated with volumes with more than 2 weeks on top. | select artist.famous_title from artist join volume on artist.artist_id = volume.artist_id where volume.weeks_on_top > 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "journal_committee",
    "input": "Show the names of editors on the list with at least two journal committees.\n | select editor.name from editor join journal_committee on editor.editor_id = journal_committee.editor_id group by editor.name having count ( * ) >= 2 | What are the ages of the editors that are at least two journal committees.",
    "label": "CONFIRM_SQL",
    "output": "select editor.age from editor join journal_committee on editor.editor_id = journal_committee.editor_id group by editor.name having count ( * ) >= 2"
  },
  {
    "db_id": "journal_committee",
    "input": "What type of work does  Kamila Porczyk do? | select journal_committee.work_type from editor join journal_committee on editor.editor_id = journal_committee.editor_id where editor.name = 'Kamila Porczyk' | Who is the youngest journal committee member?",
    "label": "CLARIFY",
    "output": "Do you want the name of  the youngest journal committee member?"
  },
  {
    "db_id": "journal_committee",
    "input": "Yes please | select editor.name from editor join journal_committee on editor.editor_id = journal_committee.editor_id order by editor.age asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye."
  },
  {
    "db_id": "decoration_competition",
    "input": "How many countries have professional golfers? | we don't have that information. | Which countries have members?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( country ) from member"
  },
  {
    "db_id": "decoration_competition",
    "input": "Which country has the most members? | select country from member group by country order by count ( * ) desc limit 1 | Which country has more than 2 members?",
    "label": "CONFIRM_SQL",
    "output": "select country from member group by country having count ( * ) > 2"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the monthly rentals of student?\n | select student_addresses.monthly_rental from addresses join student_addresses on addresses.address_id = student_addresses.address_id | what are the total number of student addresses in Texas state? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( student_addresses.student_id ) from addresses join student_addresses on addresses.address_id = student_addresses.address_id where addresses.state_province_county = 'Texas'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "what are the monthly rentals of student addresses in Texas state? | select student_addresses.monthly_rental from addresses join student_addresses on addresses.address_id = student_addresses.address_id where addresses.state_province_county = 'Texas' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "hr_1",
    "input": "Hello!  Can you provide me with a list of all employee IDs and their corresponding salaries? | select employee_id , salary from employees | Awesome!  That's great! Can you filter this list to show only the employee IDs and correpsonding salaries that are above the average salary?",
    "label": "CONFIRM_SQL",
    "output": "select employee_id , salary from employees where salary > ( select avg ( salary ) from employees )"
  },
  {
    "db_id": "hr_1",
    "input": "Great!  Now can you display this list to include both the first and last name corresponding to each employee ID? | select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) | Thank you so much for that! Can you filter this list to show only the rows in which the employee works in a department which has an employee with the letter J in their name?",
    "label": "CONFIRM_SQL",
    "output": "select employee_id , first_name , last_name , salary from employees where salary > ( select avg ( salary ) from employees ) and department_id in ( select department_id from employees where first_name like '%J%' )"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "show the customer ids and first names without a credit card | select customer_id , customer_first_name from customers except select customers_cards.customer_id , customers.customer_first_name from customers_cards join customers on customers_cards.customer_id = customers.customer_id where card_type_code = 'Credit' | show the customer ids, first name and last name without a Debit card",
    "label": "CONFIRM_SQL",
    "output": "select customer_id , customer_first_name , customer_last_name from customers except select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards join customers on customers_cards.customer_id = customers.customer_id where card_type_code = 'Debit'"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "show the customer ids, first name and last name with card type and number | Do  you  mean card  type code? | show the customer ids and card number",
    "label": "CONFIRM_SQL",
    "output": "select customer_id , card_number from customers_cards"
  },
  {
    "db_id": "film_rank",
    "input": "Who is the director of \"walter hill\"? | do you mean which film is directed by the director of \"walter hill\"? | yes.\n",
    "label": "CONFIRM_SQL",
    "output": "select title from film where director = 'Walter Hill'"
  },
  {
    "db_id": "film_rank",
    "input": "Which studios have produced films with the director \"Walter Hill\"? | select studio from film where director = 'Walter Hill' | What about the ones that haven't?",
    "label": "CONFIRM_SQL",
    "output": "select studio from film where director != 'Walter Hill'"
  },
  {
    "db_id": "inn_1",
    "input": "which rooms have a king bed? | select * from rooms where bedtype = 'King' | what are the decor of those rooms?",
    "label": "CONFIRM_SQL",
    "output": "select distinct decor from rooms where bedtype = 'King'"
  },
  {
    "db_id": "inn_1",
    "input": "show me the names and the decor of the rooms that have a king bed | select roomname , decor from rooms where bedtype = 'King' | show me the price of the rooms also",
    "label": "CONFIRM_SQL",
    "output": "select roomname , decor , baseprice from rooms where bedtype = 'King'"
  },
  {
    "db_id": "inn_1",
    "input": "now sort the list by price | select roomname , decor , baseprice from rooms where bedtype = 'King' order by baseprice asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "flight_company",
    "input": "where is the location of the conference? | What conference? | Do you know any name of the pilot that provides cargo?",
    "label": "CONFIRM_SQL",
    "output": "select flight.pilot from operate_company join flight on operate_company.id = flight.company_id where operate_company.principal_activities = 'Cargo'"
  },
  {
    "db_id": "flight_company",
    "input": "Fine, that's nice to hear.  if any other? | select flight.pilot from operate_company join flight on operate_company.id = flight.company_id where operate_company.principal_activities = 'Cargo' | Ok.  Do you know any name of the pilot that provides a company \"catering services\" activities?",
    "label": "CONFIRM_SQL",
    "output": "select flight.pilot from operate_company join flight on operate_company.id = flight.company_id where operate_company.principal_activities = 'Catering services'"
  },
  {
    "db_id": "flight_company",
    "input": "If any other? | select flight.pilot from operate_company join flight on operate_company.id = flight.company_id where operate_company.principal_activities = 'Catering services' | Ohhh, fine.  Thank you so much for your response.  It was good enough.",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "activity_1",
    "input": "how many students are there? | select count ( * ) from student | how many don't participate in activities?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select stuid from student except select stuid from participates_in )"
  },
  {
    "db_id": "activity_1",
    "input": "What are their Ids? | select stuid from student except select stuid from participates_in | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to ask any more questions? "
  },
  {
    "db_id": "sakila_1",
    "input": "Hello!  Can you provide me with a list of the first names of all customers who rented films before '2005-08-23 02:06:01'? | select first_name from customer where customer_id in ( select customer_id from rental where rental_date < '2005-08-23 02:06:01' ) | Thank you!  That's a lot of people! Can you filter the list to show me only the active customers?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from customer where customer_id in ( select customer_id from rental where rental_date < '2005-08-23 02:06:01' ) and active = 1"
  },
  {
    "db_id": "protein_institute",
    "input": "Can you list all the institution types with the number of institutions of each type? | select type , count ( * ) from institution group by type | Could you also show me the total enrollment for each type of institution?",
    "label": "CONFIRM_SQL",
    "output": "select type , count ( * ) , sum ( enrollment ) from institution group by type"
  },
  {
    "db_id": "protein_institute",
    "input": "How many private institutions are there and what are their names? | select institution from institution where type = 'Private' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "flight_1",
    "input": "What is average and maximum salary of all employees. | select avg ( salary ) , max ( salary ) from employee | What name has the highest salary?",
    "label": "CONFIRM_SQL",
    "output": "select name from employee order by salary desc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "What is the employee id and salary of George Wright? | select eid , salary from employee where name = 'George Wright' | What is the name and employee id of the person with the lowest salary ",
    "label": "CONFIRM_SQL",
    "output": "select name , eid from employee order by salary asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "Give me the names of the English Artist | select distinct artist_name from song where languages = 'english' | What are the names of the most popular English Artist",
    "label": "CLARIFY",
    "output": "That information cannot be found in the database."
  },
  {
    "db_id": "music_1",
    "input": "List the names of the English Artist whose song's rating is not 10 | select distinct artist_name from song where languages = 'english' except select distinct artist_name from song where rating = 10 | Thanks",
    "label": "WELCOME",
    "output": "You are welcome. "
  },
  {
    "db_id": "mountain_photos",
    "input": "How many different lens are there? | Did  you  mean  the  different  brand of lens are there | No, I meant the total number of lenses",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from camera_lens"
  },
  {
    "db_id": "mountain_photos",
    "input": "Can you please list the ones that contain substring \"Digital\" in their names? | select name from camera_lens where name like '%Digital%' | Can you please also include their id?",
    "label": "CONFIRM_SQL",
    "output": "select name , id from camera_lens where name like '%Digital%'"
  },
  {
    "db_id": "network_2",
    "input": "Can you list the person names and their friends? | select name , friend from personfriend | Hmm, I want to know which friends are above 40 years old or below 30 years old. ",
    "label": "CLARIFY",
    "output": "do you mean the name of the person who has friends with age above 40 and under age 30?"
  },
  {
    "db_id": "network_2",
    "input": "I want to know the ages of the friends first, please. | select personfriend.friend , person.age from person join personfriend on person.name = personfriend.friend | Please tell me the names of the person who has friends with age above 40 and under age 30.",
    "label": "CONFIRM_SQL",
    "output": "select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend in ( select name from person where age > 40 ) intersect select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend in ( select name from person where age < 30 )"
  },
  {
    "db_id": "network_2",
    "input": "How about the names of different persons who have friends with age above 40 and under age 30? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend in ( select name from person where age > 40 ) union select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend in ( select name from person where age < 30 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "architecture",
    "input": "What is the location of the bridge named 'Kolob Arch' or 'Rainbow Bridge'? | select location from bridge where name = 'Kolob Arch' or name = 'Rainbow Bridge' | What is the length of the Kolob Arch",
    "label": "CONFIRM_SQL",
    "output": "select length_meters from bridge where name = 'Kolob Arch'"
  },
  {
    "db_id": "architecture",
    "input": "What bridge is the longest bridge measured in feet? | Do you want the name of the longest bridge measured in feet? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select name from bridge where length_feet = ( select max ( length_feet ) from bridge )"
  },
  {
    "db_id": "architecture",
    "input": "Where is the Xian ren Qiao (fairy bridge) located?  | select location from bridge where name = 'Xian Ren Qiao (Fairy Bridge)' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you very much. bye."
  },
  {
    "db_id": "csu_1",
    "input": "Which year did any college confer the most amount of degrees? | select degrees.year from campuses join faculty on campuses.id = faculty.campus join degrees on campuses.id = degrees.campus and faculty.year = degrees.year order by degrees.degrees desc limit 1 | How about the year before that? ",
    "label": "CLARIFY",
    "output": "Did you mean which college conferred the most number of degrees in 2003?"
  },
  {
    "db_id": "csu_1",
    "input": "Yes | select campuses.campus from campuses join faculty on campuses.id = faculty.campus join degrees on campuses.id = degrees.campus and faculty.year = degrees.year where degrees.year = 2003 order by degrees.degrees desc limit 1 | How much of the faculty are males for California State University-Channel Islands, in the year of 2002?",
    "label": "SORRY",
    "output": "Sorry, we do not have information on the gender of the faculty."
  },
  {
    "db_id": "csu_1",
    "input": "How many faculty were at California State University-Channel Islands, in the year of 2002? | select faculty.faculty from campuses join faculty on campuses.id = faculty.campus join degrees on campuses.id = degrees.campus and faculty.year = degrees.year where faculty.year = 2002 and campuses.campus = 'California State University-Channel Islands' | How about for California State University-chico?",
    "label": "CLARIFY",
    "output": "Do you mean in the year 2002?"
  },
  {
    "db_id": "csu_1",
    "input": "Yes | select faculty.faculty from campuses join faculty on campuses.id = faculty.campus join degrees on campuses.id = degrees.campus and faculty.year = degrees.year where faculty.year = 2002 and campuses.campus = 'California State University-Chico' | What is the location for California State University-Bakersfield today?",
    "label": "CONFIRM_SQL",
    "output": "SELECT T1.location FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2019 AND t1.campus = \"California State University-Bakersfield\""
  },
  {
    "db_id": "csu_1",
    "input": "Sorry, we do not have location information for the current year. | How about for the year 1965? | select distinct campuses.location from campuses join faculty on campuses.id = faculty.campus join degrees on campuses.id = degrees.campus and faculty.year = degrees.year where campuses.year = 1965 and campuses.campus = 'California State University-Bakersfield'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "cinema",
    "input": "Is there a film with the word \"Dummy\" in the title? | select * from film where title like '%Dummy%' | Do any of the other films have the word \"Dummy\" in the title?",
    "label": "CONFIRM_SQL",
    "output": "select * from film where title like '%Dummy%'"
  },
  {
    "db_id": "cinema",
    "input": "What are the names of each of the films? | select title from film | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "e_learning",
    "input": "find the student id and personal name of the student whose course id is 2 | select student_course_enrolment.student_id , students.personal_name from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id where student_course_enrolment.course_id = '2' | show the date of registration for the student id 1",
    "label": "CONFIRM_SQL",
    "output": "select date_of_registration from students where student_id = '1'"
  },
  {
    "db_id": "e_learning",
    "input": "show the login name and password for registration id  2 | select students.login_name , students.password from students join student_course_enrolment on student_course_enrolment.student_id = students.student_id where registration_id = 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "game_1",
    "input": "How many students are playing multiple sports? | select count ( * ) from ( select * from sportsinfo group by stuid having count ( * ) > 1 ) | What are the names of the two students who are playing multiple sports?",
    "label": "CONFIRM_SQL",
    "output": "select student.fname , student.lname from sportsinfo join student on sportsinfo.stuid = student.stuid group by sportsinfo.stuid having count ( * ) > 1"
  },
  {
    "db_id": "game_1",
    "input": "Is Arthur Pang playing more sports than David Schieber? | select student.lname , count ( * ) from sportsinfo join student on sportsinfo.stuid = student.stuid group by sportsinfo.stuid having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome! Bye"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the names of the tourist attractions that can be accessed by bus or walk? | select name from tourist_attractions where how_to_get_there = 'bus' or how_to_get_there = 'walk' | What are their opening hours, please?",
    "label": "CONFIRM_SQL",
    "output": "select name , opening_hours from tourist_attractions where how_to_get_there = 'bus' or how_to_get_there = 'walk'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the names of the tourist attractions that can be accessed by shuttle? | select name from tourist_attractions where how_to_get_there = 'shuttle' | What are their opening hours?",
    "label": "CONFIRM_SQL",
    "output": "select name , opening_hours from tourist_attractions where how_to_get_there = 'shuttle'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the location ids of those? | select name , location_id from tourist_attractions where how_to_get_there = 'shuttle' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "college_3",
    "input": "Do you mean the first and last names? | Yes | Show me the name of instructors?",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from faculty"
  },
  {
    "db_id": "college_3",
    "input": "How many instructors are teaching top 3 number of courses? | select count ( * ) from ( select faculty.* from course join faculty on course.instructor = faculty.facid group by course.instructor order by count ( * ) desc limit 3 ) | Show the first and last names of them",
    "label": "CONFIRM_SQL",
    "output": "select faculty.fname , faculty.lname from course join faculty on course.instructor = faculty.facid group by course.instructor order by count ( * ) desc limit 3"
  },
  {
    "db_id": "voter_2",
    "input": "how many Student there | select count ( * ) from student | what is the fname of Tracy",
    "label": "CLARIFY",
    "output": "Do you mean LName of Tracy? Tracy is the first name?"
  },
  {
    "db_id": "voter_2",
    "input": "Fname | I cannot understand that yet. Could you ask your question in another way? | what is the city code of student id 1001",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student where stuid = 1001"
  },
  {
    "db_id": "activity_1",
    "input": "Hello!  Can you provide me with a list of first name, last name, and faculty ID of all faculty? | select fname , lname , facid from faculty | Great!  Can you update this list to include the activity name associated with each individual faculty member?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.fname , faculty.lname , faculty.facid , activity.activity_name from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = activity.actid"
  },
  {
    "db_id": "activity_1",
    "input": "Excellent!  Can you filter this list to remove all professors who are associated with either Canoeing or Kayaking? | select faculty.fname , faculty.lname , faculty.facid , activity.activity_name from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = activity.actid where activity.activity_name != 'Canoeing' or activity.activity_name != 'Kayaking' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks bye"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Show the role description of the project staff involved in the most number of project outcomes? | select staff_roles.role_description from staff_roles join project_staff on staff_roles.role_code = project_staff.role_code join project_outcomes on project_staff.project_id = project_outcomes.project_id group by project_staff.staff_id order by count ( * ) desc limit 1 | Show the staff ids of the project staff involved in the most number of project outcomes?",
    "label": "CONFIRM_SQL",
    "output": "select project_staff.staff_id from staff_roles join project_staff on staff_roles.role_code = project_staff.role_code join project_outcomes on project_staff.project_id = project_outcomes.project_id group by project_staff.staff_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are the project ids that staff member worked on? | select project_id from project_staff where staff_id = '5137097.0' | What are the date from and date to of that project?",
    "label": "CONFIRM_SQL",
    "output": "select date_from , date_to from project_staff where project_id = '7'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What is the outcome code for that project? | select outcome_code from project_outcomes where project_id = '7' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "body_builder",
    "input": "Hi there!  Can you show me a list of all body builder names and their associated birth dates? | select people.name , people.birth_date from body_builder join people on body_builder.people_id = people.people_id | Could you filter this list to show only the rows which are associated with body builders whose birthday value contains the work \"January\"?",
    "label": "CONFIRM_SQL",
    "output": "select people.name , people.birth_date from body_builder join people on body_builder.people_id = people.people_id where people.birth_date like '%January%' ;"
  },
  {
    "db_id": "body_builder",
    "input": "Great! Can you tell me where Jack Campbells birthplace was? | select birth_place from people where name = 'Jack Campbell' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "wedding",
    "input": "what is the minimum age of all people | select min ( age ) from people | what is the maximum age for all people",
    "label": "CONFIRM_SQL",
    "output": "select max ( age ) from people"
  },
  {
    "db_id": "wedding",
    "input": "what is the average age for all people | select avg ( age ) from people | now, list the minimum, maximum and average age for all people",
    "label": "CONFIRM_SQL",
    "output": "select min ( age ) , max ( age ) , avg ( age ) from people"
  },
  {
    "db_id": "flight_4",
    "input": "Name the airport in Madang city? | select name from airports where city = 'Madang' | How many airports are in Papua New Guinea country?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from airports where country = 'Papua New Guinea'"
  },
  {
    "db_id": "flight_4",
    "input": "Find the number of routes with destination airports in Italy? | select count ( * ) from routes join airports on routes.dst_apid = airports.apid where airports.country = 'Italy' | What is the elevation of Mount Hagen Kagamuga Airport?",
    "label": "CONFIRM_SQL",
    "output": "select elevation from airports where name = 'Mount Hagen Kagamuga Airport'"
  },
  {
    "db_id": "baseball_1",
    "input": "hi, can you tell me the first and last name for the player with player ID: gomezle01? | select name_first , name_last from player where player_id = 'gomezle01' | and who is the player represented by player ID: ferreri01?",
    "label": "CLARIFY",
    "output": "Do you mean the first and last name of the player?"
  },
  {
    "db_id": "baseball_1",
    "input": " yes. What is the player's first and last name for player ID: ferreri01? | select name_first , name_last from player where player_id = 'ferreri01' | in addition to Rick Ferrell, Lefty Gomez, and player ID gehrilo01, can you tell me the first and last names of the other players participating in 1998 all star game?",
    "label": "CONFIRM_SQL",
    "output": "select name_first , name_last from player join all_star on player.player_id = all_star.player_id where year = 1998 and name_first != 'Rick' or name_last != 'Ferrell' intersect select name_first , name_last from player join all_star on player.player_id = all_star.player_id where year = 1998 and name_first != 'Lefty' or name_last != 'Gomez' intersect select name_first , name_last from player join all_star on player.player_id = all_star.player_id where year = 1998 and player.player_id != 'gehrilo01'"
  },
  {
    "db_id": "baseball_1",
    "input": "great. what is the player with player ID gehrilo01 first and last name? | select name_first , name_last from player where player_id = 'gehrilo01' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "chinook_1",
    "input": "Hi, could you please let me know the genre ID for Latin and Pop? | select genreid from genre where name = 'Latin' or name = 'Pop' | That was very quick, thank you very much :) Then, could you please let me know the average duration (milliseconds) of Latin and Pop?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( milliseconds ) from genre join track on genre.genreid = track.genreid where genre.name = 'Latin' or genre.name = 'Pop'"
  },
  {
    "db_id": "network_2",
    "input": "how many persons are presented on the table | select count ( * ) from person | how many female persons are in the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person where gender = 'female'"
  },
  {
    "db_id": "network_2",
    "input": "please tell me alice friend name | select personfriend.friend from person join personfriend on person.name = personfriend.name where person.name = 'Alice' | what is the age of bob",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "thanks | Do you have any more questions? | what is the zach job name",
    "label": "CONFIRM_SQL",
    "output": "select job from person where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "ok thanks | Do you have any more questions? | no",
    "label": "GOOD_BYE",
    "output": "Good bye!"
  },
  {
    "db_id": "college_2",
    "input": "What is the average salary for the physics department? | select avg ( salary ) from instructor where dept_name = 'Physics' | How many instructors in the physics department make less than that?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from instructor where dept_name = 'Physics' and salary < ( select avg ( salary ) from instructor where dept_name = 'Physics' )"
  },
  {
    "db_id": "college_2",
    "input": "What is the name and salary of that instructor? | select name , salary from instructor where dept_name = 'Physics' and salary < ( select avg ( salary ) from instructor where dept_name = 'Physics' ) | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye!"
  },
  {
    "db_id": "e_learning",
    "input": "How many different student logins are there? | select count ( distinct login_name ) from students | how many different author logins are there?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct login_name ) from course_authors_and_tutors"
  },
  {
    "db_id": "e_learning",
    "input": "How many login names are in both authors and students? | select login_name from course_authors_and_tutors intersect select login_name from students | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "soccer_1",
    "input": "what players have a overall rating greater than 80?\n | select * from player_attributes where overall_rating > 80 | of those players how many are right-footed?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player_attributes where overall_rating > 80 and preferred_foot = 'right'"
  },
  {
    "db_id": "soccer_1",
    "input": "of the players with an overall rating greater than 80 how many are left-footed? | select count ( * ) from player_attributes where overall_rating > 80 and preferred_foot = 'left' | of the players with an overall rating greater than 80 how many are right-footed?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player_attributes where overall_rating > 80 and preferred_foot = 'right'"
  },
  {
    "db_id": "soccer_1",
    "input": "could add the right-footed and left-footed players that have an overall rating greater than 80 together? | select preferred_foot , count ( * ) from player_attributes where overall_rating > 80 group by preferred_foot | thanks!\n",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "station_weather",
    "input": "how many origin in the train table | select count ( distinct origin ) from train | what highest time in the train table",
    "label": "CONFIRM_SQL",
    "output": "select time from train order by time desc limit 1"
  },
  {
    "db_id": "station_weather",
    "input": "how many train number in the train table | select count ( train_number ) from train | how many interval in the trail table",
    "label": "CONFIRM_SQL",
    "output": "select count ( interval ) from train"
  },
  {
    "db_id": "hospital_1",
    "input": "Find the name of Physicians who are affiliate with surgery or Psychiatry department. | select physician.name from physician join affiliated_with on physician.employeeid = affiliated_with.physician join department on affiliated_with.department = department.departmentid where department.name = 'Surgery' or department.name = 'Psychiatry' | What is the Physician name of the following Employee ID?  tell me the SSN.",
    "label": "CLARIFY",
    "output": "Sorry what employee IDs are you talking about?"
  },
  {
    "db_id": "hospital_1",
    "input": "Sorry for my mistake. \nWhat is the Physician name of the following Employee ID 2? tell me the SSN. | select name , ssn from physician where employeeid = 2 | What is the Physician name of the following Position Staff Internist ? tell me the SSN, and Employee ID,",
    "label": "CLARIFY",
    "output": "Do you want the name, SSN, and employee ID?"
  },
  {
    "db_id": "hospital_1",
    "input": "yes | select name , ssn , employeeid from physician where position = 'Staff Internist' | which department has most number of head? tell me department ID,",
    "label": "CONFIRM_SQL",
    "output": "select departmentid from department order by head desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "which department has least number of head? tell me department ID,And department name? | select departmentid , name from department order by head asc limit 1 | good, thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "flight_4",
    "input": "Which countries have the most number of airlines whose active status is Y? | select country from airlines where active = 'Y' group by country order by count ( * ) desc limit 1 | What are the names of those airlines?",
    "label": "CONFIRM_SQL",
    "output": "select name from airlines where active = 'Y'"
  },
  {
    "db_id": "flight_4",
    "input": "What is the airline id of Aloha Airlines? | select alid from airlines where name = 'Aloha Airlines' | What about the call sign?",
    "label": "CONFIRM_SQL",
    "output": "select callsign from airlines where name = 'Aloha Airlines'"
  },
  {
    "db_id": "flight_4",
    "input": "What about the icao? | select icao from airlines where name = 'Aloha Airlines' | What's the call sign of airline id 5?",
    "label": "CONFIRM_SQL",
    "output": "select callsign from airlines where alid = 5"
  },
  {
    "db_id": "election",
    "input": "Which delegates are from countries with population smaller than 100000?\n | select election.delegate from county join election on county.county_id = election.district where county.population < 100000 | Can you give the name of the countries with population smaller than 100000?",
    "label": "CONFIRM_SQL",
    "output": "select county_name from county where population < 100000"
  },
  {
    "db_id": "election",
    "input": "What is the number of counties with population greater than 100000? | select count ( county_name ) from county where population > 100000 | Can you give me the name of the counties with population between 50000 and 100000?",
    "label": "CONFIRM_SQL",
    "output": "select county_name from county where population < 100000 and population > 50000"
  },
  {
    "db_id": "election",
    "input": "What are the committee names for the counties with population smaller than 100000?\n | select election.committee from county join election on county.county_id = election.district where county.population < 100000 | What are the committee names for the counties with population between 50000-100000?",
    "label": "CONFIRM_SQL",
    "output": "select election.committee from county join election on county.county_id = election.district where county.population < 100000 and county.population > 50000"
  },
  {
    "db_id": "music_1",
    "input": "Can you show the artist name of f id 2? | select artist_name from files where f_id = '2' | Can you show the ids of songs that are available in either mp4 format or have resolution above 720?",
    "label": "CONFIRM_SQL",
    "output": "select f_id from files where formats = 'mp4' union select f_id from song where resolution > 720"
  },
  {
    "db_id": "music_1",
    "input": "Can you the artist name of Song Tum robe nirobe? | select artist_name from song where song_name = 'Tumi robe nirobe' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome！"
  },
  {
    "db_id": "flight_4",
    "input": "Find the cities which have exactly two airports | select city from airports group by city having count ( * ) = 2 | What location airports is near by me has two airports?",
    "label": "CLARIFY",
    "output": "What do you mean by near by you? Sorry, We cannot answer this."
  },
  {
    "db_id": "flight_4",
    "input": "what is the name of airport in the country Papua New Guinea | select name from airports where country = 'Papua New Guinea' | what is the elevation of Madang Airport?",
    "label": "CONFIRM_SQL",
    "output": "select elevation from airports where name = 'Madang Airport'"
  },
  {
    "db_id": "flight_4",
    "input": "What is the elevation of Goroka Airport | select elevation from airports where name = 'Goroka Airport' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "baseball_1",
    "input": "How many home games did the team  Boston Red Stockings play from 1990 to 2000 in total?  | select sum ( home_game.games ) from home_game join team on home_game.team_id = team.team_id_br where team.name = 'Boston Red Stockings' and home_game.year between 1990 and 2000 | What is the one of the best team?",
    "label": "CLARIFY",
    "output": "Do you mean the team with the most number of wins?"
  },
  {
    "db_id": "baseball_1",
    "input": "yes | select team.name from home_game join team on home_game.team_id = team.team_id_br group by home_game.team_id order by sum ( team.w ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_2",
    "input": "Find the year that offers the largest number of courses? | select year from section group by semester , year order by count ( * ) desc limit 1 | What semester in that year offers the largest number of courses?",
    "label": "CONFIRM_SQL",
    "output": "select semester from section where year = 2002 group by semester order by count ( * ) desc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "Are there any courses at that time offered in the Chandler building? | select * from section where semester = 'Fall' and year = 2002 and building = 'Chandler' | What about the Gates building?",
    "label": "CONFIRM_SQL",
    "output": "select * from section where semester = 'Fall' and year = 2002 and building = 'Gates'"
  },
  {
    "db_id": "college_2",
    "input": "What about in the Whitman building? | select * from section where semester = 'Fall' and year = 2002 and building = 'Whitman' | What buildings have course sections offered then?",
    "label": "CONFIRM_SQL",
    "output": "select building from section where semester = 'Fall' and year = 2002"
  },
  {
    "db_id": "ship_1",
    "input": "what ship is steered by a captain with lieutenant rank?  | do you want to return the names of these ships? | yes",
    "label": "CONFIRM_SQL",
    "output": "select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Lieutenant'"
  },
  {
    "db_id": "ship_1",
    "input": "give me the ship id | select ship.ship_id from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Lieutenant' | what is the captain's age?",
    "label": "CONFIRM_SQL",
    "output": "select captain.age from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Lieutenant'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "how many colors are in list in the description? | select count ( * ) from ref_colors | Find the product list of the product name?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Find the color of the product id 2? | select ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where product_id = '2' | how many herbs in the product category code?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products where product_category_code = 'Herbs'"
  },
  {
    "db_id": "coffee_shop",
    "input": "Do you mean how many different types of membership cards are there? | Yes | how many membership cards?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct membership_card ) from member"
  },
  {
    "db_id": "coffee_shop",
    "input": "what is age of Ashby Lazale | select age from member where name = 'Ashby, Lazale' | how many time of purchase in ashby lazale",
    "label": "CONFIRM_SQL",
    "output": "select time_of_purchase from member where name = 'Ashby, Lazale'"
  },
  {
    "db_id": "coffee_shop",
    "input": "Level of membership Breton, Robert | select level_of_membership from member where name = 'Breton, Robert' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "game_1",
    "input": "can you please show me all the advisors? | select advisor from student | show me all advisors who does not have at least two students?",
    "label": "CONFIRM_SQL",
    "output": "select advisor from student group by advisor having count ( * ) < 2"
  },
  {
    "db_id": "game_1",
    "input": "which advisors have at least two students? | select advisor from student group by advisor having count ( * ) >= 2 | thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Which year had the most festivals? | select year from festival_detail group by year order by count ( * ) desc limit 1 | How many festivals were there in 2008?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from festival_detail group by year having year = 2008"
  },
  {
    "db_id": "entertainment_awards",
    "input": "What was the number of the audience for it? | select num_of_audience from festival_detail where year = 2008 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Good bye!"
  },
  {
    "db_id": "network_2",
    "input": "How many friends does Zach have? | select count ( friend ) from personfriend where name = 'Zach' | How long has zach been friends with each of them?",
    "label": "CONFIRM_SQL",
    "output": "select name , friend , year from personfriend where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "What are the ages of Zach's friends? | select personfriend.name , friend , year , age from personfriend join person on personfriend.friend = person.name where personfriend.name = 'Zach' | Which person has zach been friends with the longest?",
    "label": "CONFIRM_SQL",
    "output": "select person.age from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Zach' and personfriend.year = ( select max ( year ) from personfriend where name = 'Zach' )"
  },
  {
    "db_id": "network_2",
    "input": "What does dan do for work? | select job from person where name = 'Dan' | How old is dan?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Dan'"
  },
  {
    "db_id": "soccer_2",
    "input": "What is the name of the college whos size is bigger than 10000?\n | select cname from college where enr > 10000 | Which of those colleges are located in LA?",
    "label": "CONFIRM_SQL",
    "output": "select * from college where enr > 10000 and state = 'LA'"
  },
  {
    "db_id": "soccer_2",
    "input": "What is the enrollment of that college? | select enr from college where enr > 10000 and state = 'LA' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye!"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Can you show the product name and total order quantity of each product please? | select products.product_name , sum ( order_items.order_quantity ) from products join order_items on products.product_id = order_items.product_id group by products.product_id | Could you add the product type codes to the table please?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_name , sum ( order_items.order_quantity ) , products.product_type_code from products join order_items on products.product_id = order_items.product_id group by products.product_id"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "What is the average product price of all the products? | select avg ( product_price ) from products | Can you list the product names of all products with prices below the average product price?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products where product_price < ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "The product ids of all products whose prices are above the average product price are listed. | select product_name from products where product_price > ( select avg ( product_price ) from products ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "Find the routes operated by all airlines? | Do you mean return all the routes? | yes.",
    "label": "CONFIRM_SQL",
    "output": "select * from routes"
  },
  {
    "db_id": "flight_4",
    "input": "Which of these is operated by American Airlines? | select * from airlines join routes on airlines.alid = routes.alid where airlines.name = 'American Airlines' | How many are they?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from airlines join routes on airlines.alid = routes.alid where airlines.name = 'American Airlines'"
  },
  {
    "db_id": "flight_4",
    "input": "What of those not operated by American Airlines? | select * from airlines join routes on airlines.alid = routes.alid where airlines.name != 'American Airlines' | How many routes are not operated by American Airlines?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from airlines join routes on airlines.alid = routes.alid where airlines.name != 'American Airlines'"
  },
  {
    "db_id": "tracking_orders",
    "input": "which customers placed an order | select * from customers where customer_id in ( select customer_id from orders ) | who has the most orders?",
    "label": "CLARIFY",
    "output": "Do you want just the customer name?"
  },
  {
    "db_id": "tracking_orders",
    "input": "yes | select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id group by customers.customer_id order by count ( * ) desc limit 1 | thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "company_office",
    "input": "Which company has the most buildings? | Do you want to the name of the company? | Yes and the company ID.",
    "label": "CONFIRM_SQL",
    "output": "select name , id from companies where id = ( select company_id from office_locations group by company_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "company_office",
    "input": "What is the building ID that has the most company offices? | select buildings.id from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id group by office_locations.building_id order by count ( * ) desc limit 1 | What is the name of building with ID 3?",
    "label": "CONFIRM_SQL",
    "output": "select name from buildings where id = '3'"
  },
  {
    "db_id": "musical",
    "input": "What is the duration of the oldest actor? | select duration from actor order by age desc limit 1 | What is the character of Tom Oliver?",
    "label": "CONFIRM_SQL",
    "output": "select character from actor where name = 'Tom Oliver'"
  },
  {
    "db_id": "musical",
    "input": "Please List out the Actors name? | select name from actor | Thanks",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "county_public_safety",
    "input": "show the names of cities | select name from city | list out the names",
    "label": "CONFIRM_SQL",
    "output": "select name from city"
  },
  {
    "db_id": "county_public_safety",
    "input": "what is the population of Abbotsford | select population from county_public_safety where name = 'Abbotsford' | what is the crime rate of Campbell River",
    "label": "CONFIRM_SQL",
    "output": "select crime_rate from county_public_safety where name = 'Campbell River'"
  },
  {
    "db_id": "debate",
    "input": "can you show me a list of people names? | select name from people | can you show me the oldest one?",
    "label": "CONFIRM_SQL",
    "output": "select name from people order by age desc limit 1"
  },
  {
    "db_id": "debate",
    "input": "can you show me average of ages? | select avg ( age ) from people | Show the party that has the most people",
    "label": "CONFIRM_SQL",
    "output": "select party from people group by party order by count ( * ) desc limit 1"
  },
  {
    "db_id": "riding_club",
    "input": "Hello. Can you list the top three vote getters? | select player_name from player order by votes desc limit 3 | Excellent! Which had the greatest number of votes?\n",
    "label": "CONFIRM_SQL",
    "output": "select player_name from player order by votes desc limit 1"
  },
  {
    "db_id": "riding_club",
    "input": "And who were the top three, in order from most to least? | select player_name from player order by votes desc limit 3 | How many votes did Jim receive?",
    "label": "CONFIRM_SQL",
    "output": "select votes from player where player_name like 'Jim%'"
  },
  {
    "db_id": "riding_club",
    "input": "And what is his occupation? | select occupation from player where player_name like 'Jim%' | Who got more than 10,000 votes?",
    "label": "CONFIRM_SQL",
    "output": "select player_name from player where votes > 10000"
  },
  {
    "db_id": "formula_1",
    "input": "What are the drivers' last names who had 11 pit stops and participated in more than 5 race results? | select drivers.surname , drivers.driverid from drivers join pitstops on drivers.driverid = results.driverid group by drivers.driverid having count ( * ) = 11 intersect select drivers.surname , drivers.driverid from drivers join results on drivers.driverid = results.driverid group by drivers.driverid having count ( * ) > 5 | What are the drivers' last names who had 11 pit stops?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.surname , drivers.driverid from drivers join pitstops on drivers.driverid = pitstops.driverid group by drivers.driverid having count ( * ) = 11"
  },
  {
    "db_id": "formula_1",
    "input": "Did any drivers have more than 10 pit stops? | select drivers.surname , drivers.driverid from drivers join pitstops on drivers.driverid = pitstops.driverid group by drivers.driverid having count ( * ) = 10 | Did any drivers participate in more than 5 races?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.surname , drivers.driverid from drivers join results on drivers.driverid = results.driverid group by drivers.driverid having count ( * ) > 5"
  },
  {
    "db_id": "formula_1",
    "input": "What is the average amount of pit stops those drivers had? I have an internal server error on that table, so I don't know if that's the right name for it. | Sorry, I cannot answer this. | What are the race ids that the driver with the surname Nakajima was in?",
    "label": "CONFIRM_SQL",
    "output": "select results.raceid from drivers join results on drivers.driverid = results.driverid where drivers.surname = 'Nakajima'"
  },
  {
    "db_id": "formula_1",
    "input": "How many wins does that driver have? | select count ( * ) from drivers join results on drivers.driverid = results.driverid where drivers.surname = 'Nakajima' and results.rank = 1 | Thanks!",
    "label": "WELCOME",
    "output": "Of course!"
  },
  {
    "db_id": "store_1",
    "input": "Did you mean the customers that Steve Johnson supports? | Yes. | What are the names of all the employees?",
    "label": "CLARIFY",
    "output": "Do you want first name or last name?"
  },
  {
    "db_id": "store_1",
    "input": "First name please. | select first_name from employees | How about their last names?",
    "label": "CONFIRM_SQL",
    "output": "select last_name from employees"
  },
  {
    "db_id": "store_1",
    "input": "How many last names start with the letter J? | select count ( * ) from employees where last_name like 'J%' | What is that person's first name?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from employees where last_name like 'J%'"
  },
  {
    "db_id": "store_1",
    "input": "Who are the customers that Steve supports? | select employees.* from employees join customers on customers.support_rep_id = employees.id where employees.first_name = 'Steve' and employees.last_name = 'Johnson' | How many customers does he support?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees join customers on customers.support_rep_id = employees.id where employees.first_name = 'Steve' and employees.last_name = 'Johnson'"
  },
  {
    "db_id": "store_1",
    "input": "Thanks! | Sure! Anything else? | Nope, That's all.",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the address of address id 3? | select * from addresses where address_id = 3 | How much does the rental cost for address id 3?\n",
    "label": "CONFIRM_SQL",
    "output": "select monthly_rental from student_addresses where address_id = 3"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the cost for address id 1?\n | select monthly_rental from student_addresses where address_id = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "store_1",
    "input": "How many tracks in this table? | select count ( * ) from tracks | How many playlists in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( id ) from playlists"
  },
  {
    "db_id": "store_1",
    "input": "Find average unit price? | select avg ( unit_price ) from tracks | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "hospital_1",
    "input": "Which procedure has the highest cost? | Do you mean the name of the procedure that has the highest cost? | Yes. What is the name of the procedure that has the highest cost?",
    "label": "CONFIRM_SQL",
    "output": "select name from procedures order by cost desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the name of the procedure that has the lowest cost? | select name from procedures order by cost asc limit 1 | And what is the name of the procedure that has the most average cost?",
    "label": "SORRY",
    "output": "I cannot understand what is \"most average cost\". Please rephrase."
  },
  {
    "db_id": "hospital_1",
    "input": "What are the highest cost, lowest cost and average cost of procedures? | select max ( cost ) , min ( cost ) , avg ( cost ) from procedures | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "e_government",
    "input": "Did you mean the last name of the latest contact individual? | Yes | What are the names of contact individuals of the \"Labour Party\"? ",
    "label": "CLARIFY",
    "output": "Do you want to know the first name, middle name, last name?"
  },
  {
    "db_id": "e_government",
    "input": "Just the last names. | select individuals.individual_last_name from organizations join organization_contact_individuals on organizations.organization_id = organization_contact_individuals.organization_id join individuals on organization_contact_individuals.individual_id = individuals.individual_id where organizations.organization_name = 'Labour Party' order by organization_contact_individuals.date_contact_to desc limit 1 | Who is the latest contact individual? ",
    "label": "CONFIRM_SQL",
    "output": "select individuals.individual_last_name from organizations join organization_contact_individuals on organizations.organization_id = organization_contact_individuals.organization_id join individuals on organization_contact_individuals.individual_id = individuals.individual_id where organizations.organization_name = 'Labour Party' order by organization_contact_individuals.date_contact_to desc limit 1"
  },
  {
    "db_id": "e_government",
    "input": "And what is the date of contact?  | select organization_contact_individuals.date_contact_from , organization_contact_individuals.date_contact_to from organizations join organization_contact_individuals on organizations.organization_id = organization_contact_individuals.organization_id join individuals on organization_contact_individuals.individual_id = individuals.individual_id where organizations.organization_name = 'Labour Party' order by organization_contact_individuals.date_contact_to desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "twitter_1",
    "input": "Which users had some tweets? | select name from user_profiles where uid in ( select uid from tweets ) | Can you find me the average number of followers for these users?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( followers ) from user_profiles where uid in ( select uid from tweets )"
  },
  {
    "db_id": "twitter_1",
    "input": "How about the minimum and maximum number of tweets for these users?\n | select count ( * ) from tweets group by uid | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "flight_4",
    "input": "How many airlines are there? | select count ( * ) from airlines | What's the least number of routes that an airline runs?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from airlines join routes on airlines.alid = routes.alid group by airlines.name order by count ( * ) asc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "how about the most number of routes that an airline runs? | select count ( * ) from airlines join routes on airlines.alid = routes.alid group by airlines.name order by count ( * ) desc limit 1 | What is the name of that airline?",
    "label": "CONFIRM_SQL",
    "output": "select airlines.name from airlines join routes on airlines.alid = routes.alid group by airlines.name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "What country does Ryanair belong to? | select country from airlines where name = 'Ryanair' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What is the name of photo ID 280 | select name from photos where photo_id = 280 | What is the description of game2?",
    "label": "CONFIRM_SQL",
    "output": "select description from photos where name = 'game2'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What is the tourist attraction id of game2 | select tourist_attraction_id from photos where name = 'game2' | What is game2 tourist attraction name?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name from photos join tourist_attractions on photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id where photos.name = 'game2'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Thanks! | Sure! Do you want to know more? | No thanks",
    "label": "WELCOME",
    "output": "Thanks. Bye!"
  },
  {
    "db_id": "browser_web",
    "input": "how many accelerators on the table | select count ( * ) from web_client_accelerator | what is the connection of CACHEbox",
    "label": "CONFIRM_SQL",
    "output": "select connection from web_client_accelerator where name = 'CACHEbox'"
  },
  {
    "db_id": "browser_web",
    "input": "please list out the operating system | Can you please clarify which operating system do you need? | list out the all operating system on client accelerator",
    "label": "CONFIRM_SQL",
    "output": "select operating_system from web_client_accelerator"
  },
  {
    "db_id": "browser_web",
    "input": "what are all the client accelerators on the table | select name from web_client_accelerator | thanks",
    "label": "GOOD_BYE",
    "output": "No problem. goodbye"
  },
  {
    "db_id": "product_catalog",
    "input": "LIST THE  NAME OF CATALOGS | select catalog_name from catalogs | WHICH PUBLISHER HAS PUBLISHED MORE CATALOGS",
    "label": "CONFIRM_SQL",
    "output": "select catalog_publisher , count ( * ) from catalogs group by catalog_publisher order by count ( * ) desc"
  },
  {
    "db_id": "company_office",
    "input": "Which company has its headquarter in the US? | Did you mean to ask for the companies with headquarters in USA? | yes.\n",
    "label": "CONFIRM_SQL",
    "output": "select name from companies where headquarters = 'USA'"
  },
  {
    "db_id": "company_office",
    "input": "What is the industry of the company named General Electric? | select industry from companies where name = 'General Electric' | How much profit did it make ?",
    "label": "CONFIRM_SQL",
    "output": "select profits_billion from companies where name = 'General Electric'"
  },
  {
    "db_id": "company_office",
    "input": "Which company has the highest amount of assets? | select name from companies order by assets_billion desc limit 1 | how much is it worth?",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the market value in billions for BNP Paribas?"
  },
  {
    "db_id": "company_office",
    "input": "yes | select market_value_billion from companies where name = 'BNP Paribas' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "debate",
    "input": "What are the names of the people who have been on the affirmative side of debates? | select people.name from debate_people join people on debate_people.affirmative = people.people_id group by people.name | What are their party affiliations?",
    "label": "CONFIRM_SQL",
    "output": "select people.party from debate_people join people on debate_people.affirmative = people.people_id group by people.name"
  },
  {
    "db_id": "debate",
    "input": "How many debates did they win total? | select count ( * ) from debate_people where if_affirmative_win = 'T' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Goodbye!"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "tell me the staff details of staff id 1 ? | select staff_details from research_staff where staff_id = 1 | Tell me the organization type of organisation_id 1?",
    "label": "CONFIRM_SQL",
    "output": "select organisation_type from organisations where organisation_id = 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Which organisation type hires most research staff ? | select organisations.organisation_type from organisations join research_staff on organisations.organisation_id = research_staff.employer_organisation_id group by organisations.organisation_type order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "flight_company",
    "input": "What are all the names of the pilots who flew a flight in the United States? | select distinct flight.pilot from airport join flight on airport.id = flight.airport_id where airport.country = 'United States' | What are the names of all the pilots who flew a flight in the Billund Airport?",
    "label": "CONFIRM_SQL",
    "output": "select distinct flight.pilot from airport join flight on airport.id = flight.airport_id where airport.name = 'Billund Airport'"
  },
  {
    "db_id": "flight_company",
    "input": "Can you list the names and velocities of all pilots who flew out of Ted Stevens Airport? | select flight.pilot , flight.velocity from airport join flight on airport.id = flight.airport_id where airport.name = 'Ted Stevens Airport' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "candidate_poll",
    "input": "I want to know the lowest oppose rate among the candidates. | select oppose_rate from candidate order by oppose_rate asc limit 1 | Which candidate got this lowest oppose rate?",
    "label": "CONFIRM_SQL",
    "output": "select candidate_id from candidate order by oppose_rate asc limit 1"
  },
  {
    "db_id": "candidate_poll",
    "input": "Hmm, which poll source did this candidate belong to? | select poll_source from candidate order by oppose_rate asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "icfp_1",
    "input": "Hi! What is the name of the institution that \"Mathias Blume\" is associated with? | select distinct inst.name from authors join authorship on authors.authid = authorship.authid join inst on authorship.instid = inst.instid where authors.fname = 'Matthias' and authors.lname = 'Blume' | How many papers does Mathias Blume have authorship of?",
    "label": "CONFIRM_SQL",
    "output": "select count ( authorship.authid ) from authorship join authors on authorship.authid = authors.authid where authors.fname = 'Matthias' and authors.lname = 'Blume'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Show me all the claims that are documents. | select claim_headers.claim_header_id from claim_headers join claims_documents on claim_headers.claim_header_id = claims_documents.claim_id where claims_documents.document_type_code = 'Document' | Which of these claims is most recently created?",
    "label": "CONFIRM_SQL",
    "output": "select claim_headers.claim_header_id from claim_headers join claims_documents on claim_headers.claim_header_id = claims_documents.claim_id where claims_documents.document_type_code = 'Document' order by created_date asc limit 1"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the amount claimed for this claim? | select claim_headers.amount_claimed from claim_headers join claims_documents on claim_headers.claim_header_id = claims_documents.claim_id where claims_documents.created_date = ( select created_date from claims_documents order by created_date asc limit 1 ) | Please give me the sum of these amounts.",
    "label": "CONFIRM_SQL",
    "output": "select sum ( claim_headers.amount_claimed ) from claim_headers join claims_documents on claim_headers.claim_header_id = claims_documents.claim_id where claims_documents.created_date = ( select created_date from claims_documents order by created_date asc limit 1 )"
  },
  {
    "db_id": "manufactory_1",
    "input": "What are the names of all companies whose revenue is smaller than the revenue of all companies based in Austin? | select name from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = 'Austin' ) | What are the companies' revenues whose revenue is smaller than the revenue of all companies based in Austin?",
    "label": "CONFIRM_SQL",
    "output": "select revenue from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = 'Austin' )"
  },
  {
    "db_id": "manufactory_1",
    "input": "What are the revenues of the companies whose revenue is smaller than the revenue of all companies based in Austin? | select revenue from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = 'Austin' ) | What is the numerical value of those two companies' revenues?",
    "label": "CONFIRM_SQL",
    "output": "select name , revenue from manufacturers where revenue < ( select min ( revenue ) from manufacturers where headquarter = 'Austin' )"
  },
  {
    "db_id": "manufactory_1",
    "input": "What are the names of all companies whose revenue is larger than the revenue of all companies based in Austin? | select name from manufacturers where revenue > ( select min ( revenue ) from manufacturers where headquarter = 'Austin' ) | What are the numerical values of their revenues, please?",
    "label": "CONFIRM_SQL",
    "output": "select name , revenue from manufacturers where revenue > ( select min ( revenue ) from manufacturers where headquarter = 'Austin' )"
  },
  {
    "db_id": "musical",
    "input": "Which nominees have nominated musicals for \"Tony Award\"? | select distinct nominee from musical where award = 'Tony Award' | Which nominees have nominated musicals for \"Drama Desk Award\"?",
    "label": "CONFIRM_SQL",
    "output": "select distinct nominee from musical where award = 'Drama Desk Award'"
  },
  {
    "db_id": "musical",
    "input": "Which of these have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\"? | select nominee from musical where award = 'Tony Award' intersect select nominee from musical where award = 'Drama Desk Award' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye!"
  },
  {
    "db_id": "activity_1",
    "input": "How many professors are there? | select count ( * ) from faculty where rank = 'Professor' | How many different buildings do you have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct building ) from faculty"
  },
  {
    "db_id": "activity_1",
    "input": "Can you tell me the number of Professors in the building NEB? | select count ( * ) from faculty where rank = 'Professor' and building = 'NEB' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "sakila_1",
    "input": "Which film actors and actresses played a role in more than 30 films? List their first and last names. | select actor.first_name , actor.last_name from film_actor join actor on film_actor.actor_id = actor.actor_id group by actor.actor_id having count ( * ) > 30 | What about just actors?",
    "label": "SORRY",
    "output": "I'm sorry. Here is no info about gender."
  },
  {
    "db_id": "sakila_1",
    "input": "Who had the most films? | SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id limit 1 | How many films were all people with names that start with N in?",
    "label": "CANNOT_ANSWER",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "sakila_1",
    "input": "I'm sorry. But here is no info about film names. | How many films was actor id 9 in? | select count ( * ) from film_actor where actor_id = '9'",
    "label": "INFORM_SQL",
    "output": "What's that person's name?"
  },
  {
    "db_id": "sakila_1",
    "input": "select first_name , last_name from actor where actor_id = '9' | Is there anyone else with the first name Joe? | select first_name , last_name from actor where first_name = 'JOE' and last_name != 'SWANK'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "ship_mission",
    "input": "Show the names  of all ships from United States? | select name from ship where nationality = 'United States' | Show the names of all ships from United Kingdom?",
    "label": "CONFIRM_SQL",
    "output": "select name from ship where nationality = 'United Kingdom'"
  },
  {
    "db_id": "ship_mission",
    "input": "What type of ship is the Corbridge ?  | select type from ship where name = 'Corbridge' | What is the tonnage of the Corbridge ?",
    "label": "CONFIRM_SQL",
    "output": "select tonnage from ship where name = 'Corbridge'"
  },
  {
    "db_id": "ship_mission",
    "input": "What is the name of the ship with 3146 tonnage ? | select name from ship where tonnage = '3146' | What is the name of the ship with the most tonnage ?",
    "label": "CONFIRM_SQL",
    "output": "select name from ship order by tonnage desc limit 1"
  },
  {
    "db_id": "ship_mission",
    "input": "How many different types of ships are there ? | select count ( distinct type ) from ship | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the skill code for skill id 1, 2 and 3 ? | select skill_id , skill_code from skills where skill_id = 1 or skill_id = 2 or skill_id = 3 | How many ids are in part_fault_id...Tell me total number",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct part_fault_id ) from skills_required_to_fix"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the skill description for skill id 3 ? | select skill_description from skills where skill_id = 3 | Which skill is used in fixing the most number of faults ? List the skill id and description",
    "label": "CONFIRM_SQL",
    "output": "select skills.skill_id , skills.skill_description from skills join skills_required_to_fix on skills.skill_id = skills_required_to_fix.skill_id group by skills.skill_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "school_player",
    "input": "how many player are presented on the table | Did you mean to ask for the number of entries in the table player? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player"
  },
  {
    "db_id": "school_player",
    "input": "list out the player | select player from player | what is the age of Timothy Beckham",
    "label": "CONFIRM_SQL",
    "output": "select age from player where player = 'Timothy Beckham'"
  },
  {
    "db_id": "school_player",
    "input": "what is the position of Pedro Álvarez | select position from player where player = 'Pedro Álvarez' | thanks",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "epinions_1",
    "input": "What is the name of the good with the highest average rank?\n | select item.title from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rank ) desc limit 1 | What is the ID of cup?",
    "label": "CONFIRM_SQL",
    "output": "select i_id from item where title = 'cup'"
  },
  {
    "db_id": "epinions_1",
    "input": "Now, can you please tell me the name and id of the good with the highest average rank? | select item.title , item.i_id from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rank ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "Who is the instructor of the statistics department? | select name from instructor where dept_name = 'Statistics' | What is their average salary?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from instructor where dept_name = 'Statistics'"
  },
  {
    "db_id": "college_2",
    "input": "Who in the statistics department has the highest salary? | select name from instructor where dept_name = 'Statistics' order by salary desc limit 1 | How much is his salary?",
    "label": "CONFIRM_SQL",
    "output": "select salary from instructor where dept_name = 'Statistics' order by salary desc limit 1"
  },
  {
    "db_id": "candidate_poll",
    "input": "Hello, how many candidates total are there? | select count ( * ) from candidate | Perfect, and who has the highest support percentage?",
    "label": "CLARIFY",
    "output": "Do you want the people id?"
  },
  {
    "db_id": "candidate_poll",
    "input": "Actually, just the percentage please. | select max ( support_rate ) from candidate | Perfect, what about the lowest consider rate?",
    "label": "CONFIRM_SQL",
    "output": "select min ( consider_rate ) from candidate"
  },
  {
    "db_id": "candidate_poll",
    "input": "And what about the lowest oppose rate? | select min ( oppose_rate ) from candidate | And finally, can you tell me the average unsure rate?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( unsure_rate ) from candidate"
  },
  {
    "db_id": "dorm_1",
    "input": "Which dorm has the largest capacity? | dorm id , please. | select dormid from dorm order by student_capacity desc limit 1",
    "label": "INFORM_SQL",
    "output": "How many students live there?"
  },
  {
    "db_id": "dorm_1",
    "input": "select count ( lives_in.stuid ) from lives_in join dorm on lives_in.dormid = dorm.dormid where dorm.student_capacity = ( select max ( student_capacity ) from dorm ) | What is their average age? | select avg ( student.age ) from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid where dorm.student_capacity = ( select max ( student_capacity ) from dorm )",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "baseball_1",
    "input": "Can you tell me the id of the player that got the highest salary from Boston Red Stockings in 2010? | What is the team id for Boston Red Stockings? | select distinct ( team_id ) from team where name = 'Boston Red Stockings'",
    "label": "AMBIGUOUS",
    "output": "Hmm, I want to know which players does Boston Red Stockings have."
  },
  {
    "db_id": "baseball_1",
    "input": "do you want the id of those players? | Yes please. | select salary.player_id from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings'",
    "label": "INFORM_SQL",
    "output": "Can you calculate the total salary paid by team Boston Red Stockings in 2010?"
  },
  {
    "db_id": "baseball_1",
    "input": "select sum ( salary.salary ) from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings' and salary.year = 2010 | select player_id from salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2010 and salary = (SELECT max(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2010) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "architecture",
    "input": "Can you please show me the names of all male architects by their names lexicographically? | select name from architect where gender = 'male' order by name asc | Can you please show me all female architects by their names lexicographically?",
    "label": "CONFIRM_SQL",
    "output": "select name from architect where gender = 'male' order by name asc"
  },
  {
    "db_id": "architecture",
    "input": "can you please show me all the female architects? | select name from architect where gender = 'male' | List the name, nationality and id of all male architects ordered by their names lexicographically?",
    "label": "CONFIRM_SQL",
    "output": "select name , nationality , id from architect where gender = 'male' order by name asc"
  },
  {
    "db_id": "hr_1",
    "input": "Display the first name of all employees.  | select first_name from employees | Show the first name of all employees and their salary. ",
    "label": "CONFIRM_SQL",
    "output": "select first_name , salary from employees"
  },
  {
    "db_id": "hr_1",
    "input": "Show the first name of all employees and their salary for employees whose first name does not contain the letter M.  | select first_name , salary from employees where first_name not like '%M%' | Show the first name of all employees and list their salary in descending order for employees whose first name does not contain the letter M. ",
    "label": "CONFIRM_SQL",
    "output": "select first_name , salary from employees where first_name not like '%M%' order by salary desc"
  },
  {
    "db_id": "hr_1",
    "input": "Out of these employees what is the phone number for the employee with the highest salary. | select phone_number from employees where first_name not like '%M%' order by salary desc limit 1 | What is the email for the employee whose first name does not contain the letter M with the highest salary. ",
    "label": "CONFIRM_SQL",
    "output": "select email from employees where first_name not like '%M%' order by salary desc limit 1"
  },
  {
    "db_id": "browser_web",
    "input": "what are the ids and names of the web accelerators that are compatible with two or more browsers? | select web_client_accelerator.id , web_client_accelerator.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id group by web_client_accelerator.id having count ( * ) >= 2 | what is the survery?",
    "label": "REJECT",
    "output": "Please ask questions related to the tables. Thanks"
  },
  {
    "db_id": "browser_web",
    "input": "how many browser id? | select count ( distinct browser_id ) from accelerator_compatible_browser | what is browser id 2 name?",
    "label": "REJECT",
    "output": "Sorry we don't have the information about the names of the browsers. "
  },
  {
    "db_id": "browser_web",
    "input": "what are using CProxy in Operating system? | select operating_system from web_client_accelerator where name = 'CProxy' | who is using Appliance (Linux) Operating system?",
    "label": "CLARIFY",
    "output": "Do you want the name of the accelerator?"
  },
  {
    "db_id": "browser_web",
    "input": "yes | select name from web_client_accelerator where operating_system = 'Appliance (Linux)' | thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Hi, can I see the list of customers? | select * from customers | What customers have a policy?",
    "label": "CONFIRM_SQL",
    "output": "select customers.* from policies join customers on policies.customer_id = customers.customer_id"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What customers don't have a policy? | select * from customers except select customers.* from policies join customers on policies.customer_id = customers.customer_id | When did they get a policy?",
    "label": "CLARIFY",
    "output": "Who are they?"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "When did the policy holders get their policy? | select start_date from policies | Did any policy holder cancel a policy?",
    "label": "REJECT",
    "output": "Sorry, we don't have that information."
  },
  {
    "db_id": "city_record",
    "input": "What is the largest population among the cities? | select regional_population from city order by regional_population desc limit 1 | Hmm, I want to know the name of the city with this population.",
    "label": "CONFIRM_SQL",
    "output": "select city from city order by regional_population desc limit 1"
  },
  {
    "db_id": "city_record",
    "input": "What is the GDP of Shanghai? | select gdp from city where city = 'Shanghai' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye. "
  },
  {
    "db_id": "riding_club",
    "input": "can you show me  a list of starting year? | select starting_year from player_coach | can you show me which gender is much?",
    "label": "CLARIFY",
    "output": "Could you clarify what you mean?"
  },
  {
    "db_id": "riding_club",
    "input": "yes | What information do you want to know about each gender? | which coach gender is much?",
    "label": "CONFIRM_SQL",
    "output": "select coach_name from coach where gender = 'M'"
  },
  {
    "db_id": "riding_club",
    "input": "can you show me a list of player's residence? | select residence from player | Show the names and genders of players with a coach starting after 2011",
    "label": "CONFIRM_SQL",
    "output": "select player.player_name , player.gender from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id where player_coach.starting_year > 2011"
  },
  {
    "db_id": "department_store",
    "input": "Show me id of all departments. | select distinct department_id from staff_department_assignments | show me the number of staff of all departments.",
    "label": "CONFIRM_SQL",
    "output": "select department_id , count ( staff_id ) from staff_department_assignments group by department_id order by count ( * ) asc"
  },
  {
    "db_id": "department_store",
    "input": "show me the department with lowest staff | select department_id from staff_department_assignments group by department_id order by count ( * ) asc limit 1 | Thanks.",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "ship_1",
    "input": "Which flag is least widely used among all ships? | select flag from ship group by flag order by count ( * ) asc limit 1 | How many flags in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( flag ) from ship"
  },
  {
    "db_id": "ship_1",
    "input": "How many built year same in this table? | did you mean 'How many built year saved this table'? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct built_year ) from ship"
  },
  {
    "db_id": "ship_1",
    "input": "How many names in this table? | select count ( distinct name ) from ship | How many types in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct type ) from ship"
  },
  {
    "db_id": "loan_1",
    "input": "List names of customers with more than 1 loan\n | select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having count ( * ) > 1 | How about those with only 1 loan?",
    "label": "CONFIRM_SQL",
    "output": "select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having count ( * ) = 1"
  },
  {
    "db_id": "loan_1",
    "input": "How about those with no loans? | select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having count ( * ) = 0 | List the customers who have mortgages",
    "label": "CONFIRM_SQL",
    "output": "select loan_id from loan where loan_type = 'Mortgages'"
  },
  {
    "db_id": "loan_1",
    "input": "What is their name? | select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id where loan_type = 'Mortgages' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Show me the addresses of the buildings. | select building_address from apartment_buildings | Any of those have apartments with more than 1 bedrooms?",
    "label": "CLARIFY",
    "output": "Sorry, do you want me to list apartments with more than 1 bedrooms?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Yes | select apartment_buildings.building_address from apartment_buildings join apartments on apartment_buildings.building_id = apartments.building_id where apartments.bedroom_count > 1 | How about more than 2 bathrooms?",
    "label": "CONFIRM_SQL",
    "output": "select apartment_buildings.building_address from apartment_buildings join apartments on apartment_buildings.building_id = apartments.building_id where apartments.bathroom_count > 2"
  },
  {
    "db_id": "baseball_1",
    "input": "Who won the most manager award? | Do you mean the first name of the person who won the most manager award? | Yes, and tell me the last name and the id of that person as well.",
    "label": "CONFIRM_SQL",
    "output": "select player.name_first , player.name_last , manager_award.player_id from player join manager_award on player.player_id = manager_award.player_id group by manager_award.player_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "bike_1",
    "input": "What are the names of station with lowest lattitude? | select name from station order by lat asc limit 1 | What is the latitude of the station with the lowest latitude?",
    "label": "CONFIRM_SQL",
    "output": "select lat from station order by lat asc limit 1"
  },
  {
    "db_id": "bike_1",
    "input": "Which city is san jose diridon caltrain station located? | select city from station where name = 'San Jose Diridon Caltrain Station' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem. Bye bye!"
  },
  {
    "db_id": "perpetrator",
    "input": "tell me the total number of injured in both china and japan\n | select sum ( injured ) from perpetrator where country = 'China' or country = 'Japan' | what is the rate of kill in south korea",
    "label": "CONFIRM_SQL",
    "output": "select killed from perpetrator where country = 'South Korea'"
  },
  {
    "db_id": "perpetrator",
    "input": "how many survied  entirely | Sorry, we don't have this information. | what is the location of ID 3",
    "label": "CLARIFY",
    "output": "Do you mean the perpetrator ID?"
  },
  {
    "db_id": "perpetrator",
    "input": "yes the prepetrator ID | select location from perpetrator where perpetrator_id = '3' | how many country in the prepetrator table and what are they",
    "label": "CONFIRM_SQL",
    "output": "select distinct country from perpetrator"
  },
  {
    "db_id": "manufactory_1",
    "input": "how many names or products in the table | Do  you  mean  the  names of products in the products table  | how many headquarter in the Manufacturers table",
    "label": "CONFIRM_SQL",
    "output": "select count ( headquarter ) from manufacturers"
  },
  {
    "db_id": "manufactory_1",
    "input": "how many revenue in the Manufacturers table | Do you  mean  the  sum of  revenue in the Manufacturers table  | what highest price in the Products table",
    "label": "CONFIRM_SQL",
    "output": "select max ( price ) from products"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can I receive a list of all orders? | Did  you mean the  order ID？\n | Yes, from that list can I have it sorted by order ID?",
    "label": "CLARIFY",
    "output": "Did  you  mean  in the Order  table  order  by \norder id ? desc  or asc?"
  },
  {
    "db_id": "tracking_orders",
    "input": "My apologies, I meant can I have list of orders which includes the product ids from the orders placed? | select orders.order_id , order_items.product_id from orders join order_items on orders.order_id = order_items.order_id | Can I also have the dates of the order included in the table?",
    "label": "CONFIRM_SQL",
    "output": "select orders.order_id , order_items.product_id , orders.date_order_placed from orders join order_items on orders.order_id = order_items.order_id"
  },
  {
    "db_id": "tracking_orders",
    "input": "Is it possible to narrow the results? | how  to  narrow? could  give  more infor? | Yes, can I narrow the table based on the date order was placed?",
    "label": "CLARIFY",
    "output": "Did  you  mean  you just  want only \tdate order placed?"
  },
  {
    "db_id": "tracking_orders",
    "input": "No. Is it possible to only receive results from orders placed from 1975-01-01 to 1976-01-01? | select orders.order_id , order_items.product_id , orders.date_order_placed from orders join order_items on orders.order_id = order_items.order_id where orders.date_order_placed >= '1975-01-01' and orders.date_order_placed <= '1976-01-01' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  bye "
  },
  {
    "db_id": "hospital_1",
    "input": "Which department has the least number of employees? | select * from department join physician on department.head = physician.employeeid group by departmentid order by count ( departmentid ) asc limit 1 | What is the name of the department head of General Medicine?",
    "label": "CONFIRM_SQL",
    "output": "select physician.name from department join physician on department.head = physician.employeeid where department.name = 'General Medicine'"
  },
  {
    "db_id": "hospital_1",
    "input": "Thank you!  What is Percival Cox's position? | select position from physician where name = 'Percival Cox' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "How many orders have more than two invoices? | select count ( * ) from ( select * from invoices join orders on invoices.order_id = orders.order_id group by orders.order_id having count ( * ) > 2 ) | What are the order IDs and details?",
    "label": "CONFIRM_SQL",
    "output": "select orders.order_id , orders.order_details from invoices join orders on invoices.order_id = orders.order_id group by orders.order_id having count ( * ) > 2"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "What are the customer ID's for these orders? | select orders.customer_id from invoices join orders on invoices.order_id = orders.order_id group by orders.order_id having count ( * ) > 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "how many participants on the table | select count ( * ) from participants | what is participant type code of karlee batz",
    "label": "CONFIRM_SQL",
    "output": "select participant_type_code from participants where participant_details = 'Karlee Batz'"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "what is most common participant type | select participant_type_code from participants group by participant_type_code order by count ( * ) desc limit 1 | what is the participant id in lupe deckow",
    "label": "CONFIRM_SQL",
    "output": "select participant_id from participants where participant_details = 'Lupe Deckow'"
  },
  {
    "db_id": "college_2",
    "input": "Find the names of top 3 departments? | What do you mean by top? | Top three departments that provide the largest amount of courses?",
    "label": "CONFIRM_SQL",
    "output": "select dept_name from course group by dept_name order by count ( * ) desc limit 3"
  },
  {
    "db_id": "college_2",
    "input": "Find the names of top 3 departments that provide the lowest amount of courses? | select dept_name from course group by dept_name order by count ( * ) asc limit 3 | What is the average amount of courses that provided by top three departments?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( amount ) from ( select count ( * ) as amount from course group by dept_name order by count ( * ) desc limit 3 )"
  },
  {
    "db_id": "dorm_1",
    "input": "Please show me how many female students have the major 600 | select count ( * ) from student where sex = 'F' and major = 600 | How many female students are there total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where sex = 'F'"
  },
  {
    "db_id": "dorm_1",
    "input": "How many of these women are under 25 years old? | select count ( * ) from student where sex = 'F' and age < 25 | Show me the ages of the 9 female students with ages under 25 years.",
    "label": "CONFIRM_SQL",
    "output": "select age from student where sex = 'F' and age < 25"
  },
  {
    "db_id": "dorm_1",
    "input": "Of all the students under 25, how many are female? | select count ( * ) from student where sex = 'F' and age < 25 | What are the names of the female students that are under 25?",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where sex = 'F' and age < 25"
  },
  {
    "db_id": "twitter_1",
    "input": "List the names of 5 users followed by the largest number of other users. | select name from user_profiles order by followers desc limit 5 | What is the email and followers of Iron Man?",
    "label": "CONFIRM_SQL",
    "output": "select email , followers from user_profiles where name = 'Iron Man'"
  },
  {
    "db_id": "twitter_1",
    "input": "What name has the highest followers? | select name from user_profiles order by followers desc limit 1 | How many followers does Tyler Swift have?",
    "label": "CONFIRM_SQL",
    "output": "select followers from user_profiles where name = 'Tyler Swift'"
  },
  {
    "db_id": "twitter_1",
    "input": "What is the email and partition id of Tyler Swift?  | select email , partitionid from user_profiles where name = 'Tyler Swift' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "How many claim stage ids in this table? | select count ( claim_stage_id ) from claims_processing_stages | How many different staff ids in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct staff_id ) from claims_processing"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "How many claim processing stages in this table? | select count ( distinct claim_status_name ) from claims_processing_stages | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "party_host",
    "input": "What are the names of the hosts that held parties with more than 20 hosts? | select host.name from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id where party.number_of_hosts > 20 | What are the names of the hosts that held parties with the least number of hosts?",
    "label": "CONFIRM_SQL",
    "output": "select host.name from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id order by party.number_of_hosts asc limit 1"
  },
  {
    "db_id": "party_host",
    "input": "What is the location of the party with the oldest host? | select party.location from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id order by host.age desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "entrepreneur",
    "input": "Hi, could you please let me know the date of birth of the investors Simon Woodroffe and Peter Jones? | select people.date_of_birth from entrepreneur join people on entrepreneur.people_id = people.people_id where entrepreneur.investor = 'Simon Woodroffe' or entrepreneur.investor = 'Peter Jones' | That was really quick, thank you. Then can you please tell me how much money they requested, respectively?",
    "label": "CONFIRM_SQL",
    "output": "select money_requested from entrepreneur where investor = 'Simon Woodroffe' or investor = 'Peter Jones'"
  },
  {
    "db_id": "entrepreneur",
    "input": "haha I am sorry, Thanks again for your answer! :) Then could you please let me know which entrepreneur requested for the biggest amount of money? | select entrepreneur_id from entrepreneur order by money_requested desc limit 1 | Glad that I didn't trouble you again :) Thank you, then could you please let me know the investor's name and company for the ID?",
    "label": "CONFIRM_SQL",
    "output": "select entrepreneur_id , investor , company from entrepreneur order by money_requested desc limit 1"
  },
  {
    "db_id": "entrepreneur",
    "input": "That's great! Then this will be my last question, could you please let me know the height and weight of Duncan Bannatyne? | Sorry the table doesn't tell us the  height and weight of Duncan Bannatyne. | Oops, I didn't expect that. It's fine, Thanks! I appreciate your help, hope you have a great day ahead :)",
    "label": "GOOD_BYE",
    "output": "You are very very very nice! Have a good day~ Bye!"
  },
  {
    "db_id": "college_3",
    "input": "Do you mean the average of all grade points? | Yes | List grade points by letter grade?",
    "label": "CONFIRM_SQL",
    "output": "select gradepoint , lettergrade from gradeconversion"
  },
  {
    "db_id": "college_3",
    "input": "List max of each grade for all letter grades? | select max ( gradepoint ) from gradeconversion | The max for each letter grade?",
    "label": "CONFIRM_SQL",
    "output": "select lettergrade , max ( gradepoint ) from gradeconversion group by lettergrade"
  },
  {
    "db_id": "college_3",
    "input": "List the min grade point for each letter grade? | select min ( gradepoint ) , lettergrade from gradeconversion group by lettergrade | Find the min grade point for all letter grade?",
    "label": "CONFIRM_SQL",
    "output": "select min ( gradepoint ) from gradeconversion"
  },
  {
    "db_id": "college_3",
    "input": "Find the max and min grade point for all letter grade? | select max ( gradepoint ) , min ( gradepoint ) from gradeconversion | What of the median?",
    "label": "REJECT",
    "output": "I cannot find the median."
  },
  {
    "db_id": "college_3",
    "input": "What of the mean? | select avg ( gradepoint ) from gradeconversion | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "What is the first name of each student entrolled in class ACCT-211? | select student.stu_fname from class join enroll on class.class_code = enroll.class_code join student on enroll.stu_num = student.stu_num where class.crs_code = 'ACCT-211' | How many class sections?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct class_section ) from class"
  },
  {
    "db_id": "college_1",
    "input": "What is the class time of ACCT-211? | There are multiple class times for ACCT-211, would you like all of them? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select class_time from class where crs_code = 'ACCT-211'"
  },
  {
    "db_id": "manufactory_1",
    "input": "Can you list all companies based in Austin and their revenues? | select name , revenue from manufacturers where headquarter = 'Austin' | Can you list all companies whose revenue is less than 100?",
    "label": "CONFIRM_SQL",
    "output": "select name from manufacturers where revenue < 100"
  },
  {
    "db_id": "manufactory_1",
    "input": "Thanks! What is the respective revenues of Hewlett-Packard and Winchester? | select name , revenue from manufacturers where revenue < 100 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "game_1",
    "input": "How many hours per week did David Shieber play? | Do you mean the total hours per week did David Shieber play? (He can play different sports) | Yes, total hours",
    "label": "CONFIRM_SQL",
    "output": "select sum ( hoursperweek ) from sportsinfo join student on sportsinfo.stuid = student.stuid where student.fname = 'David' and student.lname = 'Shieber'"
  },
  {
    "db_id": "game_1",
    "input": "What are the total number of games he played? | select sum ( gamesplayed ) from sportsinfo join student on sportsinfo.stuid = student.stuid where student.fname = 'David' and student.lname = 'Shieber' | What are the first and last names of the student who played the most total hours per week?",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where stuid = ( select stuid from sportsinfo group by stuid order by sum ( hoursperweek ) desc limit 1 )"
  },
  {
    "db_id": "game_1",
    "input": "How many total games did she play? | select sum ( gamesplayed ) from sportsinfo group by stuid order by sum ( hoursperweek ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "thank you! Bye"
  },
  {
    "db_id": "university_basketball",
    "input": "Hi, when was the University of Delaware founded? | select founded from university where school = 'University of Delaware' | and Lebanon Valley College?",
    "label": "CONFIRM_SQL",
    "output": "select founded from university where school = 'Lebanon Valley College'"
  },
  {
    "db_id": "university_basketball",
    "input": "What is University of Rhode Island's affiliation? | select affiliation from university where school = 'University of Rhode Island' | How many female students attend Lebanon Valley College?",
    "label": "REJECT",
    "output": "Sorry, I cannot answer this."
  },
  {
    "db_id": "match_season",
    "input": "Tell me the Draft Class for the season 1996.0 ? | select draft_class from match_season where season = 1996.0 | Tell me the Draft Pick Number for the country 6 ?",
    "label": "CLARIFY",
    "output": "For which season do you want?"
  },
  {
    "db_id": "match_season",
    "input": "for 1998.0 | select draft_pick_number from match_season where season = '1998.0' and country = '6' | Tell me the player for team 1 in the season 1996 ?",
    "label": "CONFIRM_SQL",
    "output": "select player from match_season where season = '1996.0' and team = '1'"
  },
  {
    "db_id": "match_season",
    "input": "Which college have both players with position midfielder and players with position defender ? | select college from match_season where position = 'Midfielder' intersect select college from match_season where position = 'Defender' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "riding_club",
    "input": "What are the residences of the players? | select residence from player | Which of those residences have both male and female players?",
    "label": "CONFIRM_SQL",
    "output": "select residence from player where gender = 'M' intersect select residence from player where gender = 'F'"
  },
  {
    "db_id": "riding_club",
    "input": "How many male players does Winnipeg have? | select count ( * ) from player where gender = 'M' and residence = 'Winnipeg' | How many female players does Winnipeg have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player where gender = 'F' and residence = 'Winnipeg'"
  },
  {
    "db_id": "riding_club",
    "input": "How many residences are there in total? | select count ( distinct residence ) from player | And how many of those six distinct residences have More than one player?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from player group by residence having count ( * ) > 1 )"
  },
  {
    "db_id": "riding_club",
    "input": "Which residence is the one with more than one player? | select residence from player group by residence having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "candidate_poll",
    "input": "Can you show me the top three highest support rates for the candidates? | select support_rate from candidate order by support_rate desc limit 3 | What polls are those from?",
    "label": "CLARIFY",
    "output": "Did you want the poll source for these polls?"
  },
  {
    "db_id": "candidate_poll",
    "input": "Yes, please | select poll_source , support_rate from candidate order by support_rate desc limit 3 | What is the name of the poll source with the earliest date?",
    "label": "CONFIRM_SQL",
    "output": "select poll_source from candidate order by date desc limit 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "How many countries have roller coaster? | select count ( distinct country.name ) from country join roller_coaster on country.country_id = roller_coaster.country_id | How many countries have more than one roller coaster?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select country.name from country join roller_coaster on country.country_id = roller_coaster.country_id group by country.name having count ( * ) > 1 )"
  },
  {
    "db_id": "roller_coaster",
    "input": "Show the names of the countries that have more than one roller coaster. | select country.name from country join roller_coaster on country.country_id = roller_coaster.country_id group by country.name having count ( * ) > 1 | Show the number of roller coasters of Australia and Finland.",
    "label": "CONFIRM_SQL",
    "output": "select country.name , count ( * ) from country join roller_coaster on country.country_id = roller_coaster.country_id group by country.name having count ( * ) > 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "Show the names of roller coasters of Australia and Finland in separate table | select roller_coaster.name from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' or country.name = 'Finland' | Thanks!",
    "label": "WELCOME",
    "output": "welcome, goodbye!"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the attendance of the team_id CH1? | select attendance from home_game where team_id = 'CH1' | Show me the id of the team that has the largest average number of attendance in 2014?",
    "label": "CONFIRM_SQL",
    "output": "select team.team_id from home_game join team on home_game.team_id = team.team_id where home_game.year = 2014 group by home_game.team_id order by avg ( home_game.attendance ) desc limit 1"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the team_id with attendance 3000? | select team_id from home_game where attendance = 3000 | Show me the rank of the team that has the largest average number of attendance?",
    "label": "CONFIRM_SQL",
    "output": "select team.rank from home_game join team on home_game.team_id = team.team_id group by home_game.team_id order by avg ( home_game.attendance ) desc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the highest average monthly rental? | what do you mean by \"highest average monthly rental\" | sorry, highest monthly rental",
    "label": "CONFIRM_SQL",
    "output": "select max ( monthly_rental ) from student_addresses"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the address ID of that rental? | select address_id from student_addresses order by monthly_rental desc limit 1 | What is the city of that address?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.city from addresses join student_addresses on addresses.address_id = student_addresses.address_id order by monthly_rental desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "What is the name of the airport in Mount Hagen city? | select name from airports where city = 'Mount Hagen' | Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from routes join airports on routes.dst_apid = airports.apid join airlines on routes.alid = airlines.alid where airports.country = 'Italy' and airlines.name = 'American Airlines'"
  },
  {
    "db_id": "flight_4",
    "input": "How many active airlines are on the list? | select count ( * ) from airlines where active = 'Y' | What is the elevation of Madang Airport airport?",
    "label": "CONFIRM_SQL",
    "output": "select elevation from airports where name = 'Madang Airport'"
  },
  {
    "db_id": "dorm_1",
    "input": "Oh, sorry. I meant to ask what dorm does the student with the last name of Smith live in? | select dorm.dorm_name from dorm join lives_in on lives_in.dormid = dorm.dormid join student on student.stuid = lives_in.stuid where student.lname = 'Smith' | What are the amenities of those dorms?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid join lives_in on lives_in.dormid = dorm.dormid join student on student.stuid = lives_in.stuid where student.lname = 'Smith'"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the amenities of the dorm that the student with the last name of Jones lives in? | select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid join lives_in on lives_in.dormid = dorm.dormid join student on student.stuid = lives_in.stuid where student.lname = 'Jones' | What are the amenities of the dorm that the oldest student lives in?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid join lives_in on lives_in.dormid = dorm.dormid join student on student.stuid = lives_in.stuid where student.age = ( select max ( age ) from student )"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the amenities of the dorm that has the most female students living in it? | select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid join lives_in on lives_in.dormid = dorm.dormid join student on student.stuid = lives_in.stuid where dorm.dormid = ( select dorm.dormid from dorm join lives_in on dorm.dormid = lives_in.dormid join student on lives_in.stuid = student.stuid where student.sex = 'F' group by dorm.dormid order by count ( * ) desc limit 1 ) | What are the amenities of the dorm that has the smallest student capacity?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm.student_capacity = ( select min ( student_capacity ) from dorm )"
  },
  {
    "db_id": "student_assessment",
    "input": "Please list all IDs of students who have registered courses | select student_id from student_course_registrations | are these current registrations?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_registrations.student_id , student_course_registrations.registration_date , student_course_attendance.date_of_attendance from student_course_registrations join student_course_attendance on student_course_registrations.student_id = student_course_attendance.student_id and student_course_registrations.course_id = student_course_attendance.course_id"
  },
  {
    "db_id": "student_assessment",
    "input": "how many total students is that? | select count ( distinct student_id ) from ( select student_id from student_course_registrations union select student_id from student_course_attendance ) | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome, goodbye"
  },
  {
    "db_id": "manufactory_1",
    "input": "Who the founder of Sony? | Did you mean the founder of the manufacturer named Sony? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select founder from manufacturers where name = 'Sony'"
  },
  {
    "db_id": "manufactory_1",
    "input": "Which company is headed by Austin city? | Did you mean the name of manufacturers whose headquarters are Austin? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select name from manufacturers where headquarter = 'Austin'"
  },
  {
    "db_id": "manufactory_1",
    "input": "What are the revenue of manufacture name Hewlett-Packard? | select revenue from manufacturers where name = 'Hewlett-Packard' | Find the number of manufactures that are based in Tokyo or Beijing.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from manufacturers where headquarter = 'Tokyo' or headquarter = 'Beijing'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Did you mean the names of the parts? | Yes | Are there parts that have faults?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( parts.part_id ) from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_id having count ( * ) > 0"
  },
  {
    "db_id": "assets_maintenance",
    "input": "How many parts have more than 2 faults?\n | select count ( * ) from ( select parts.part_name , parts.part_id from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_id having count ( * ) > 2 ) | What are the parts with more than 2 faults?\n",
    "label": "CONFIRM_SQL",
    "output": "select parts.part_name from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_id having count ( * ) > 2"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What are the name's and id's of the parts with more than 2 faults? | select parts.part_name , parts.part_id from parts join part_faults on parts.part_id = part_faults.part_id group by parts.part_id having count ( * ) > 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "How many courses are offered? | select count ( course_id ) from course | How many courses have more than one prerequisite?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select course.title from course join prereq on course.course_id = prereq.course_id group by prereq.course_id having count ( * ) > 1 )"
  },
  {
    "db_id": "college_2",
    "input": "Can you tell me the titles of those courses? | select course.title from course join prereq on course.course_id = prereq.course_id group by prereq.course_id having count ( * ) > 1 | What departments are those courses in?",
    "label": "CONFIRM_SQL",
    "output": "select course.dept_name , course.course_id from course join prereq on course.course_id = prereq.course_id group by prereq.course_id having count ( * ) > 1"
  },
  {
    "db_id": "college_2",
    "input": "Can you also provide the number of credits for each of those courses? | select course.credits , course.course_id from course join prereq on course.course_id = prereq.course_id group by prereq.course_id having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "how many customers are presented on the table | select count ( * ) from customers | show all the customers name",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "what is the customer number of Kayley | select customer_number from customers where customer_name = 'Kayley' | what is the order status code of Sterling",
    "label": "CONFIRM_SQL",
    "output": "select customer_orders.order_status_code from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customers.customer_name = 'Sterling'"
  },
  {
    "db_id": "hospital_1",
    "input": "Could you please find all the procedures that cost more than 1000? | select * from procedures where cost > 1000 | Could you please find all the procedure that Jon Wen was trained in?",
    "label": "CONFIRM_SQL",
    "output": "select * from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where physician.name = 'John Wen'"
  },
  {
    "db_id": "hospital_1",
    "input": "What are the names of the procedures that cost more than 1000 and are procedures John Wen was trained in? | select name from procedures where cost > 1000 intersect select procedures.name from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where physician.name = 'John Wen' | When do all of John Wen's certifications expire?",
    "label": "CONFIRM_SQL",
    "output": "select trained_in.certificationexpires from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where physician.name = 'John Wen'"
  },
  {
    "db_id": "game_injury",
    "input": "How many stadiums are there? | select count ( * ) from stadium | How many games has each stadium held?",
    "label": "CONFIRM_SQL",
    "output": "select stadium.id , count ( * ) from stadium join game on stadium.id = game.stadium_id group by stadium.id"
  },
  {
    "db_id": "game_injury",
    "input": "How many teams have winning records? | I'm sorry. I cannot answer you with sql. Could you please give me another question? | What is the total attendance of each stadium?",
    "label": "CONFIRM_SQL",
    "output": "select stadium.id , sum ( total_attendance ) from stadium join game on stadium.id = game.stadium_id group by stadium.id"
  },
  {
    "db_id": "assets_maintenance",
    "input": "what is the fault status of engineer visit id 1? | select fault_status from engineer_visits where engineer_visit_id = 1 | what is fault status of engineer id 8?",
    "label": "CONFIRM_SQL",
    "output": "select fault_status from engineer_visits where engineer_id = 8"
  },
  {
    "db_id": "assets_maintenance",
    "input": "what about the other visit details of engineer id 8? | select other_visit_details from engineer_visits where engineer_id = 8 | thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "sakila_1",
    "input": "Do you mean the customer with first name Mary? | Yes. | Do you mean the customer with first name Patricia?",
    "label": "AFFIRM",
    "output": "Yes."
  },
  {
    "db_id": "sakila_1",
    "input": "how many customers are presented on the table | Did you mean to ask how many entries there are in the table customer? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customer"
  },
  {
    "db_id": "sakila_1",
    "input": "list out the customers first name | select first_name from customer | what is the city id of mary",
    "label": "CONFIRM_SQL",
    "output": "select address.city_id from customer join address on address.address_id = customer.address_id where customer.first_name = 'MARY'"
  },
  {
    "db_id": "sakila_1",
    "input": "what is the district of PATRICIA | select address.district from customer join address on address.address_id = customer.address_id where customer.first_name = 'PATRICIA' | thanks",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "store_1",
    "input": "Display the 10 least expensive invoices | Would you like a list of the id's of these invoices? | No.",
    "label": "CLARIFY",
    "output": "Sorry, would you like a list of the dates of these invoices then?"
  },
  {
    "db_id": "store_1",
    "input": "Yes. | select invoices.invoice_date from customers join invoices on invoices.customer_id = customers.id order by total asc limit 10 | Does any customer appear more than once on these 10 invoices?\n",
    "label": "CONFIRM_SQL",
    "output": "select invoices.customer_id from customers join invoices on invoices.customer_id = customers.id order by total asc limit 10"
  },
  {
    "db_id": "store_1",
    "input": "Please list the first and last names of each customer on this list. | select customers.first_name , customers.last_name from customers join invoices on invoices.customer_id = customers.id order by total asc limit 10 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Bye!"
  },
  {
    "db_id": "city_record",
    "input": "How many cities have a regional population over 8000000? | select count ( city ) from city where regional_population > 8000000 | How many cities have a population under 5000000?",
    "label": "CONFIRM_SQL",
    "output": "select count ( city ) from city where regional_population < 5000000"
  },
  {
    "db_id": "city_record",
    "input": "What are the names of those cities? | select city from city where regional_population < 5000000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What is the apartment code of the apartment with the most number of rooms? | select apt_type_code from apartments order by room_count desc limit 1 | What about the code with the least rooms?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code from apartments order by room_count asc limit 1"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What is the building ID  with  apartment Suite 645? | select building_id from apartments where apt_number = 'Suite 645' | Thank you!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "allergy_1",
    "input": "can you show me a list of allergies? | select allergy from allergy_type | can you show me a list of allergy name?",
    "label": "CONFIRM_SQL",
    "output": "select allergy from allergy_type"
  },
  {
    "db_id": "allergy_1",
    "input": "what is their allergy types? | select distinct allergytype from allergy_type | how many students have a food allergy?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'food'"
  },
  {
    "db_id": "company_office",
    "input": "hello\n | hello! what can i help for you? | Which building is the highest?",
    "label": "CONFIRM_SQL",
    "output": "select name from buildings order by height desc limit 1"
  },
  {
    "db_id": "company_office",
    "input": "How tall is the Torre Reforma?\n | select stories from buildings where name = 'Torre Reforma' | How many stories does the highest building have?\n",
    "label": "CONFIRM_SQL",
    "output": "select stories from buildings order by height desc limit 1"
  },
  {
    "db_id": "company_office",
    "input": "Thanks! | you are welcome! do you need any other help? | nope.\n",
    "label": "GOOD_BYE",
    "output": "okay! see you."
  },
  {
    "db_id": "voter_2",
    "input": "Find the number of students whose city code is NYC, please? | select count ( * ) from student join voting_record on student.stuid = class_senator_vote where student.city_code = 'NYC' | What is the number of students who have class senator votes in the spring election cycle?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student join voting_record on student.stuid = class_senator_vote where voting_record.election_cycle = 'Spring'"
  },
  {
    "db_id": "voter_2",
    "input": "What are the first names and last names of those students? | select distinct student.fname , student.lname from student join voting_record on student.stuid = class_senator_vote where voting_record.election_cycle = 'Spring' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "club_1",
    "input": "How many students are majoring in \"600\"?\n | select count ( stuid ) from student where major = 600 | Can you show me only those students?",
    "label": "CONFIRM_SQL",
    "output": "select stuid from student where major = 600"
  },
  {
    "db_id": "club_1",
    "input": "Can you also show me what clubs they are in?\n | select club.clubname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where student.major = '600' group by club.clubname | How many students who are majoring in 600 are in each of those clubs?",
    "label": "CONFIRM_SQL",
    "output": "select club.clubname , count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where student.major = '600' group by club.clubname order by count ( * ) asc"
  },
  {
    "db_id": "apartment_rentals",
    "input": "what is the building id for the apt number suite 645 | select building_id from apartments where apt_number = 'Suite 645' | what is the bathroom count and bedroom count of the apartment number suite 645?",
    "label": "CONFIRM_SQL",
    "output": "select bathroom_count , bedroom_count from apartments where apt_number = 'Suite 645'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "what is the room count in the building 624? | select room_count from apartments where building_id = 624 | what is minimum and maximum number of bathrooms and bedrooms of all the apartments?",
    "label": "CONFIRM_SQL",
    "output": "select min ( bathroom_count ) , max ( bathroom_count ) , min ( bedroom_count ) , max ( bedroom_count ) from apartments"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Thanks! | You are welcome! | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "apartment_rentals",
    "input": "what is the building_id of the apartment apt.908?\n | select building_id from apartments where apt_number = 'Apt. 908' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "hospital_1",
    "input": "What are the names and positions of all physicians who prescribed brand X medications? | select distinct physician.name , physician.position from physician join prescribes on physician.employeeid = prescribes.physician join medication on medication.code = prescribes.medication where medication.brand = 'X' | What were the dates he prescribed those medications?",
    "label": "CONFIRM_SQL",
    "output": "select distinct prescribes.date from physician join prescribes on physician.employeeid = prescribes.physician join medication on medication.code = prescribes.medication where medication.brand = 'X'"
  },
  {
    "db_id": "hospital_1",
    "input": "What was the dose of that medication? | select dose from physician join prescribes on physician.employeeid = prescribes.physician join medication on medication.code = prescribes.medication where medication.brand = 'X' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "machine_repair",
    "input": "Who are the technicians? | select name from technician | What are the machines they are assigned to repair?",
    "label": "CLARIFY",
    "output": "do you want to return the machine ids?"
  },
  {
    "db_id": "machine_repair",
    "input": "I want the names of the machines they are assigned to repair | There is no information about the names of machines. | Show me which team of machine each technician is assigned.",
    "label": "CONFIRM_SQL",
    "output": "select technician.name , machine.team from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id"
  },
  {
    "db_id": "flight_company",
    "input": "Which flight has the least velocity in the list? | What info do you want about that flight? id? date? number? or something else? | I want the number",
    "label": "CONFIRM_SQL",
    "output": "select vehicle_flight_number from flight order by velocity asc limit 1"
  },
  {
    "db_id": "flight_company",
    "input": "State the principal activities of Air Hong Kong? | select distinct principal_activities from operate_company where name = 'Air Hong Kong' | What are the distinct types of the companies that have operated any flights with velocity less than 200?",
    "label": "CONFIRM_SQL",
    "output": "select distinct operate_company.type from operate_company join flight on operate_company.id = flight.company_id where flight.velocity < 200"
  },
  {
    "db_id": "flight_company",
    "input": "State the type of air china in the list? | select type from operate_company where name = 'Air China' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "baseball_1",
    "input": "Did you mean the full names and ids for those players? | Yes | What are the ids of 3 players that won the most awards?",
    "label": "CONFIRM_SQL",
    "output": "select player.player_id from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3"
  },
  {
    "db_id": "baseball_1",
    "input": "Can you show me the names and ids for this list? | select player.name_first , player.name_last , player.player_id from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3 | What are the city, state and country for these players?",
    "label": "CONFIRM_SQL",
    "output": "select player.birth_city , player.birth_state , player.birth_country from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3"
  },
  {
    "db_id": "baseball_1",
    "input": "Can you also show me the birth dates? | select player.birth_year , player.birth_month , player.birth_day from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Can you list the color code that has a color description of 'white'? | select color_code from ref_colors where color_description = 'white' | Can you list all product ids and their associated product category codes that have a color code value of 2?",
    "label": "CONFIRM_SQL",
    "output": "select product_id , product_category_code from products where color_code = '2'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Sure, can you add to the table the unit of measure values for the product category codes of Spices and Herbs? | select unit_of_measure from ref_product_categories where product_category_code = 'Herbs' or product_category_code = 'Spices' | Please delete that information and only show the product name for the product with a product id of 2.",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products where product_id = '2'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "how many apartments have bookings with status code \"confirmed\"? | select count ( * ) from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed' | show me the apartment type for the 7 apartments",
    "label": "CONFIRM_SQL",
    "output": "select apartments.apt_type_code from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "what are the apartment numbers for those 7? | select distinct apartments.apt_number from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "dorm_1",
    "input": "how many names or student in the table | Do  you  mean  the  LName  or  Fname ? | how many count in male or female in the student table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) , sex from student group by sex"
  },
  {
    "db_id": "csu_1",
    "input": "What are the degrees conferred in \"San Francisco State University\"? | select degrees from campuses join degrees on campuses.id = degrees.campus where campuses.campus = 'San Francisco State University' | What are the degrees conferred in \"San Francisco State University\" in 2001?",
    "label": "CONFIRM_SQL",
    "output": "select degrees from campuses join degrees on campuses.id = degrees.campus where campuses.campus = 'San Francisco State University' and degrees.year = 2001"
  },
  {
    "db_id": "college_1",
    "input": "list all department code and department name\n  | select dept_code , dept_name from department | show me all the course codes where department name is \"CIS\"\n",
    "label": "CLARIFY",
    "output": "Do you mean where department name is Computer Info. Systems?"
  },
  {
    "db_id": "college_1",
    "input": "Sorry, I meant to show me all the course codes where department code is \"CIS\" | select course.crs_code from department join course on department.dept_code = course.dept_code where department.dept_code = 'CIS' | can I get a count of these courses where department code is \"CIS\"?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from department join course on department.dept_code = course.dept_code where department.dept_code = 'CIS'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What is the student Id of Linda Smith? | select stuid from student where fname = 'Linda' and lname = 'Smith' | What is her age?",
    "label": "CONFIRM_SQL",
    "output": "select age from student where fname = 'Linda' and lname = 'Smith'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What city is she in? | select city_code from student where fname = 'Linda' and lname = 'Smith' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "What is the name of airport in the city Goroka? | select name from airports where city = 'Goroka' | Which airport situate in the elevation 5282?",
    "label": "CONFIRM_SQL",
    "output": "select name from airports where elevation = 5282"
  },
  {
    "db_id": "flight_4",
    "input": "What is the iata of Madang airport? | select iata from airports where name = 'Madang Airport' | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome, bye"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How many employees are there? | select count ( * ) from employees | Which of the role codes has the most employees?",
    "label": "CONFIRM_SQL",
    "output": "select role_code from employees group by role_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How many employees does role code ED have? | select count ( * ) from employees where role_code = 'ED' | thanks!",
    "label": "WELCOME",
    "output": "You're welcome! If you don't have any more questions, good bye!"
  },
  {
    "db_id": "body_builder",
    "input": "how many body builders are there? | what are the names and birth dates? | How about the rest of people?",
    "label": "CONFIRM_SQL",
    "output": "select name , birth_date from people except select people.name , people.birth_date from people join body_builder on people.people_id = body_builder.people_id"
  },
  {
    "db_id": "body_builder",
    "input": "oh, sorry, please show their names and birth places. | select name , birth_place from people except select people.name , people.birth_place from people join body_builder on people.people_id = body_builder.people_id | great! thanks!",
    "label": "WELCOME",
    "output": "No problem, goodbye!"
  },
  {
    "db_id": "workshop_paper",
    "input": "May I have a list of authors? | select author from submission | How many of them are from Miami?",
    "label": "CLARIFY",
    "output": "Do you mean the number of authors who are from Miami?"
  },
  {
    "db_id": "workshop_paper",
    "input": "Yes | Sorry, I can't answer this question from the information in the table. | Can you give me a list of all authors from Florida, or Temple?",
    "label": "CLARIFY",
    "output": "Do you mean the authors whose college is Florida or Temple?"
  },
  {
    "db_id": "workshop_paper",
    "input": "Yes I did. | select author from submission where college = 'Florida' or college = 'Temple' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "driving_school",
    "input": "What state or province has the most staff living in it? | select addresses.state_province_county from addresses join staff on addresses.address_id = staff.staff_address_id group by addresses.state_province_county order by count ( * ) desc limit 1 | What is the number of staff living in Georgia?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from addresses join staff on addresses.address_id = staff.staff_address_id group by addresses.state_province_county order by count ( * ) desc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "What city in Georgia has the most staff living in it? | select addresses.city from addresses join staff on addresses.address_id = staff.staff_address_id where addresses.state_province_county = 'Georgia' group by addresses.city order by count ( * ) desc limit 1 | What is the number of staff living in Port Melyssa and what are their names?",
    "label": "CLARIFY",
    "output": "first name or last name?"
  },
  {
    "db_id": "driving_school",
    "input": "both please\n | select staff.first_name , staff.last_name from addresses join staff on addresses.address_id = staff.staff_address_id where addresses.city = 'Port Melyssa' | What are all their birthdays?",
    "label": "CONFIRM_SQL",
    "output": "select staff.date_of_birth from addresses join staff on addresses.address_id = staff.staff_address_id where addresses.city = 'Port Melyssa'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the average salary for all the staff living in Port Melyssa? | We don't have that information. | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "dorm_1",
    "input": "Show me the name of the cities | sorry ,I  have  no  answer  to  this  question | Show me the number of students of all cities",
    "label": "CLARIFY",
    "output": "Do you  mean  the  total  count of  students"
  },
  {
    "db_id": "dorm_1",
    "input": "Yes | select count ( * ) from student | Show me the count of students for each city",
    "label": "CONFIRM_SQL",
    "output": "select city_code , count ( * ) from student group  by city_code"
  },
  {
    "db_id": "dorm_1",
    "input": "Show me the count of students for the cities where have more than one student | select city_code , count ( * ) from student group  by city_code having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "college_2",
    "input": "can you show me the name and salary of all instructors? | select name , salary from instructor | How much does the biology professor make?\n",
    "label": "CONFIRM_SQL",
    "output": "select name , salary from instructor where dept_name = 'Biology'"
  },
  {
    "db_id": "college_2",
    "input": "How many professors make more than Valtchev? | select count ( * ) from instructor where salary > ( select salary from instructor where name = 'Valtchev' ) | Can you tell me the names of the professors that make more than Valtchev?",
    "label": "CONFIRM_SQL",
    "output": "select name from instructor where salary > ( select salary from instructor where name = 'Valtchev' )"
  },
  {
    "db_id": "city_record",
    "input": "Which cities have served as host cities? | Do you want the names of the cities who served as host cities? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select distinct city.city from city join hosting_city on city.city_id = hosting_city.host_city"
  },
  {
    "db_id": "city_record",
    "input": "Which of these host cities has a lower temperature in March than July. | select city.city from city join temperature on city.city_id = temperature.city_id where temperature.mar < temperature.jul intersect select city.city from city join hosting_city on city.city_id = hosting_city.host_city | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye"
  },
  {
    "db_id": "network_2",
    "input": "which friend of zachs has the longest year relationship?  | select person.name from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Zach' and personfriend.year = ( select max ( year ) from personfriend where name = 'Zach' ) | how old is dan?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Dan'"
  },
  {
    "db_id": "network_2",
    "input": "what city does Zach live? | select city from person where name = 'Zach' | what age is zach?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "what is zach's job? | select job from person where name = 'Zach' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "driving_school",
    "input": "How long is the total lesson time took by customer with first name Rylan and last name Goodwin? | select sum ( lessons.lesson_time ) from lessons join customers on lessons.customer_id = customers.customer_id where customers.first_name = 'Rylan' and customers.last_name = 'Goodwin' | What's the status of the lesson by the customer with first name Rylan and last name Goodwin",
    "label": "CONFIRM_SQL",
    "output": "select lessons.lesson_status_code from lessons join customers on lessons.customer_id = customers.customer_id where customers.first_name = 'Rylan' and customers.last_name = 'Goodwin'"
  },
  {
    "db_id": "driving_school",
    "input": "What's the customer id of the customer with first name Rylan and last name Goodwin? | select customer_id from customers where first_name = 'Rylan' and last_name = 'Goodwin' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "apartment_rentals",
    "input": "how many different types of apartments are there? | select count ( distinct apt_type_code ) from apartments | what are they?",
    "label": "CONFIRM_SQL",
    "output": "select distinct apt_type_code from apartments"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Great! how many apartments does each of them have? | select count ( * ) , apt_type_code from apartments group by apt_type_code | could you please show their names as well?",
    "label": "CLARIFY",
    "output": "Do you mean the apartment type code?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "yes! | select apt_type_code , count ( * ) from apartments group by apt_type_code | ok, which of them is the most common one?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code from apartments group by apt_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "how many Services there | select count ( * ) from services | what is the Check of service_id",
    "label": "CLARIFY",
    "output": "Do you mean the service_id of all services with service_type_code \"Check\"?"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "ok | select service_id from services where service_type_code = 'Check' | how many Organizations there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from organizations"
  },
  {
    "db_id": "soccer_2",
    "input": "Can you list all the colleges and their enrollments? | select cname , enr from college | Which college has the largest enrollment?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college where enr = ( select max ( enr ) from college )"
  },
  {
    "db_id": "soccer_2",
    "input": "Hmm, I also want to know which colleges have enrollments that are less than the largest size. | select cname from college where enr < ( select max ( enr ) from college ) | Can you list the states of those colleges?",
    "label": "CONFIRM_SQL",
    "output": "select cname , state from college where enr < ( select max ( enr ) from college )"
  },
  {
    "db_id": "store_1",
    "input": "May I know the album names and ids, and the number of tracks they have? | select albums.title , albums.id , count ( albums.id ) from albums join tracks on albums.id = tracks.album_id group by albums.id | Hmm, can you list the album names and the artist ids?",
    "label": "CONFIRM_SQL",
    "output": "select title , artist_id from albums"
  },
  {
    "db_id": "store_1",
    "input": "Can you also list the title of albums that have the number of tracks greater than 10?   | select albums.title from albums join tracks on albums.id = tracks.album_id group by albums.id having count ( albums.id ) > 10 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "flight_4",
    "input": "what are the busiest airport in china? | busiest source airport or destination airport? | busiest source airport",
    "label": "CONFIRM_SQL",
    "output": "select airports.name from airports join routes on airports.apid = routes.src_apid where airports.country = 'China' group by airports.name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "what is the source airport id? | select airports.apid from airports join routes on airports.apid = routes.src_apid where airports.country = 'China' group by airports.name order by count ( * ) desc limit 1 | what is the airline for source airport?",
    "label": "CONFIRM_SQL",
    "output": "select distinct airline from routes where src_apid = ( select airports.apid from airports join routes on airports.apid = routes.src_apid where airports.country = 'China' group by airports.name order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "music_1",
    "input": "How many songs are there? | select count ( * ) from files | Are they equal in length?",
    "label": "CONFIRM_SQL",
    "output": "select duration from files"
  },
  {
    "db_id": "music_1",
    "input": "Who sings the song with a length of 5minutes and 23 seconds? | select artist_name from files where duration = '5:23' | what's the id of that song?",
    "label": "CONFIRM_SQL",
    "output": "select f_id from files where duration = '5:23'"
  },
  {
    "db_id": "document_management",
    "input": "Show the Document code for document type code Book? | select document_code from documents where document_type_code = 'Book' | Show the name of the document that has been accessed the greatest number of times?",
    "label": "CONFIRM_SQL",
    "output": "select document_name from documents order by access_count desc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "Show the name of the documents and the count of how many times each has been accessed? | select document_name , access_count from documents order by access_count desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "shop_membership",
    "input": "Show me all branch names with the number of members in each branch registered after 2015 | select branch.name , count ( * ) from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id where membership_register_branch.register_year > 2015 group by branch.branch_id | When were those branches opened?",
    "label": "CONFIRM_SQL",
    "output": "select branch.name , branch.open_year from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id where membership_register_branch.register_year > 2015 group by branch.branch_id"
  },
  {
    "db_id": "shop_membership",
    "input": "How many branches have the number of members in each branch registered after 2015? | Did you mean the number of branches which have some members registered after 2015? | Thanks!",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select branch.name from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id where membership_register_branch.register_year > 2015 group by branch.branch_id )"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the names of the states that have some college students playing in the mid position but not the goalie position? | select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'mid' except select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'goalie' | What about states that have some college students playing in the goalie position?",
    "label": "CONFIRM_SQL",
    "output": "select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'goalie'"
  },
  {
    "db_id": "soccer_2",
    "input": "What about in the striker position? | select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'striker' | What is the college name for that one?",
    "label": "CONFIRM_SQL",
    "output": "select college.cname from college join tryout on college.cname = tryout.cname where tryout.ppos = 'striker'"
  },
  {
    "db_id": "soccer_2",
    "input": "Was there a decision on that position? | select decision from tryout where ppos = 'striker' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the average savings account balance? | select avg ( balance ) from savings | Which accounts with checking accounts have savings account balances higher than the average savings balance? ",
    "label": "CONFIRM_SQL",
    "output": "select accounts.name from accounts join checking on accounts.custid = savings.custid where accounts.name in ( select accounts.name from accounts join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings ) )"
  },
  {
    "db_id": "small_bank_1",
    "input": "What is its checking account balance?  | select savings.balance from accounts join checking on accounts.custid = savings.custid where accounts.name in ( select accounts.name from accounts join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings ) ) | thanks",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "store_1",
    "input": "How many countries are our customers located in?\n | select count ( distinct country ) from customers | How many customers do we have with the last name Almeida?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers where last_name = 'Almeida'"
  },
  {
    "db_id": "store_1",
    "input": "Show me the country where Roberto Almeida is located | select country from customers where first_name = 'Roberto' and last_name = 'Almeida' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "allergy_1",
    "input": "How many students are there? | select count ( distinct stuid ) from has_allergy | How many allergies are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct allergy ) from has_allergy"
  },
  {
    "db_id": "allergy_1",
    "input": "Can you display all student IDs with at least two allergies? | select stuid from has_allergy group by stuid having count ( * ) >= 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "coffee_shop",
    "input": "What is the membership card of Breton,Robert? | select membership_card from member where name = 'Breton, Robert' | What is the time of purchase of Ashby,Lazale?",
    "label": "CONFIRM_SQL",
    "output": "select time_of_purchase from member where name = 'Ashby, Lazale'"
  },
  {
    "db_id": "coffee_shop",
    "input": "What is the level of membership of Campbell,Jessie? | select level_of_membership from member where name = 'Campbell, Jessie' | What is the address of Id number 2?",
    "label": "CONFIRM_SQL",
    "output": "select address from member where member_id = 2"
  },
  {
    "db_id": "coffee_shop",
    "input": "What is the age of Breton,Robert? | select age from member where name = 'Breton, Robert' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "flight_1",
    "input": "Can you display the salary and name of the employees? | select salary , name from employee | What is the name of the employee who has the most number of aircraft certificates?",
    "label": "CONFIRM_SQL",
    "output": "select employee.name from employee join certificate on employee.eid = certificate.eid group by employee.eid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "Hmm, can you just list his salary? | select employee.salary from employee join certificate on employee.eid = certificate.eid group by employee.eid order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye"
  },
  {
    "db_id": "college_2",
    "input": "Whsts the name of the student thst took prerequisite course  title internatoinal finance? | select student.name from student join takes on student.id = takes.id where takes.course_id in ( select prereq.prereq_id from course join prereq on course.course_id = prereq.course_id where course.title = 'International Finance' ) | What is the  title of course id 787?",
    "label": "CONFIRM_SQL",
    "output": "select title from course where course_id = 787"
  },
  {
    "db_id": "college_2",
    "input": "What is the department name of course id 787? | select dept_name from course where course_id = 787 | Thsnks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to know anything else? "
  },
  {
    "db_id": "college_3",
    "input": "What is the grade of CID 550.681? | Did you mean the grades of students who enrolled in the course with CID 550.681? | YES",
    "label": "CONFIRM_SQL",
    "output": "select grade from enrolled_in where cid = '550.681'"
  },
  {
    "db_id": "college_3",
    "input": "How many hours computer literacy course in a week? | select hours from course where cname = 'COMPUTER LITERACY' | In which day of a week the course introduction to computer science is taught?",
    "label": "CONFIRM_SQL",
    "output": "select days from course where cname = 'INTRODUCTION TO COMPUTER SCIENCE'"
  },
  {
    "db_id": "soccer_2",
    "input": "How many female players are there? | I cannot answer that question as no such information is in the table. | How many male players are there?\n",
    "label": "REJECT",
    "output": "That information is also not in the table."
  },
  {
    "db_id": "soccer_2",
    "input": "How many players have a yCard? | select count ( * ) from player where ycard = 'yes' | What is the average HS score of all players?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( hs ) from player"
  },
  {
    "db_id": "soccer_2",
    "input": "Which player has the lowest HS score? | select pname from player order by hs asc limit 1 | What is the pID for Andrew?",
    "label": "CONFIRM_SQL",
    "output": "select pid from player where pname = 'Andrew'"
  },
  {
    "db_id": "soccer_2",
    "input": "And for Blake? | select pid from player where pname = 'Blake' | How many players are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player"
  },
  {
    "db_id": "college_2",
    "input": "Can you tell me which room number has a capacity higher than the average capacity? | select room_number from classroom where capacity > ( select avg ( capacity ) from classroom ) | What is the range of capacity among rooms in each building?",
    "label": "CONFIRM_SQL",
    "output": "select max ( capacity ) , min ( capacity ) , building from classroom group by building"
  },
  {
    "db_id": "college_2",
    "input": "Which building houses the room that has the maximum capacity? | select building from classroom order by capacity desc limit 1 | Which building houses the room that has the minimum capacity?",
    "label": "CONFIRM_SQL",
    "output": "select building from classroom order by capacity asc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "What is the difference between the maximum and average capacity among rooms in each building? | select max ( capacity ) - avg ( capacity ) , building from classroom group by building | Thanks!",
    "label": "WELCOME",
    "output": "You are very welcome. Goodbye."
  },
  {
    "db_id": "shop_membership",
    "input": "Show me the cities | Do you mean you want the cities where there are branches there? | yes",
    "label": "CONFIRM_SQL",
    "output": "select distinct city from branch"
  },
  {
    "db_id": "shop_membership",
    "input": "show me the number of branches of cities | select city , count ( * ) from branch group by city | Count the branches opened before 2010?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from branch where open_year < 2010"
  },
  {
    "db_id": "shop_membership",
    "input": "Count  branches opened before 2010 for each city | select city , count ( * ) from branch where open_year < 2010 group by city | Thanks!",
    "label": "GOOD_BYE",
    "output": "Good bye!"
  },
  {
    "db_id": "hr_1",
    "input": "How much is the salary for employee id 163? | select salary from employees where employee_id = 163 | What is employee id 163 full name?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name from employees where employee_id = 163"
  },
  {
    "db_id": "hr_1",
    "input": "Show me the full name for the employees that get more salary then employee 163? | select first_name , last_name from employees where salary > ( select salary from employees where employee_id = 163 ) | What department does employee 163 work under?\n",
    "label": "CONFIRM_SQL",
    "output": "select department_id from employees where employee_id = 163"
  },
  {
    "db_id": "hr_1",
    "input": "How many employee's work for employee's 163 department? | select count ( * ) from employees where department_id = ( select department_id from employees where employee_id = 163 ) | Who is the head of this department?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct manager_id from employees where department_id = ( select department_id from employees where employee_id = 163 )"
  },
  {
    "db_id": "wedding",
    "input": "what is the Open Date of Pure Church of Christ? | Did you mean the open date of the church named Pure Church of Christ? | yes",
    "label": "CONFIRM_SQL",
    "output": "select open_date from church where name = 'Pure Church of Christ'"
  },
  {
    "db_id": "wedding",
    "input": "who organized the Pure Church of Christ? | select organized_by from church where name = 'Pure Church of Christ' | what is the ID of the Church of Christ?",
    "label": "CONFIRM_SQL",
    "output": "select church_id from church where name = 'Pure Church of Christ'"
  },
  {
    "db_id": "wedding",
    "input": "I asked you that the ID of the Church of Christ, but you replied for  Pure Church of Christ. | select church_id from church where name = 'Church of Christ' | which church was organized by Ezra Booth?",
    "label": "CLARIFY",
    "output": "Did you want the name of the church organized by Ezra Booth."
  },
  {
    "db_id": "wedding",
    "input": "yes | select name from church where organized_by = 'Ezra Booth' | Show the opening year in which at least two churches opened",
    "label": "CONFIRM_SQL",
    "output": "select open_date from church group by open_date having count ( * ) >= 2"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is the ID of the project with the least number of documents? | select project_id from documents group by project_id order by count ( * ) asc limit 1 | What is the ID of the project with the most number of documents?",
    "label": "CONFIRM_SQL",
    "output": "select project_id from documents group by project_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is the document date of project ID 105? | Do  you mean Document ID 105 | yes",
    "label": "CONFIRM_SQL",
    "output": "select document_date from documents where document_id = 105"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Can you show me all the product names, codes and ids? | Do you mean the product names, color codes and ids? | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select product_name , color_code , product_id from products"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "I want to know the the product names and their color descriptions. | select products.product_name , ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code | Hmm, can you tell me the color description of the product with the name “catnip”?",
    "label": "CONFIRM_SQL",
    "output": "select ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where products.product_name = 'catnip'"
  },
  {
    "db_id": "school_bus",
    "input": "What are the school names of the schools without school buses? | select school from school where school_id not in ( select school_id from school_bus ) | Can you please get me the types of those schools?",
    "label": "CONFIRM_SQL",
    "output": "select type from school where school_id not in ( select school_id from school_bus )"
  },
  {
    "db_id": "school_bus",
    "input": "what are schools in Hawaii have school buses? | select school from school where location like '%Hawaii%' and school_id in ( select school_id from school_bus ) | What about in Indonesia?",
    "label": "CONFIRM_SQL",
    "output": "select school from school where location like '%Indonesia' and school_id in ( select school_id from school_bus )"
  },
  {
    "db_id": "school_bus",
    "input": "How many private schools are in Hawaii? | select count ( * ) from school where location like '%Hawaii' and type = 'Private' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks.bye."
  },
  {
    "db_id": "products_for_hire",
    "input": "What is the customer id that spends the most | select customer_id from payments group by customer_id order by sum ( amount_paid ) desc limit 1 | For that Customer with ID 12, what was the amount they spend?\n",
    "label": "CONFIRM_SQL",
    "output": "select sum ( amount_paid ) from payments where customer_id = 12"
  },
  {
    "db_id": "products_for_hire",
    "input": "What was the payment type of customer with ID 12? | select payment_type_code from payments where customer_id = 12 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "I'm looking for the things with Close status before 2017-06-19 02:59:21\n | Do you want things that satisfy both criteria or at least at of them? And do you want the ids or other? | I want the number of things in a close status",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct thing_id ) from timed_status_of_things where status_of_thing_code = 'Close'"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "of those things which are closed before 2017-06-19 02:59:21 | Do you still want the number of them? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct thing_id ) from timed_status_of_things where status_of_thing_code = 'Close' and date_and_date < '2017-06-19 02:59:21'"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "What type of thing are all five of those?\n | select distinct things.type_of_thing_code from timed_status_of_things join things on timed_status_of_things.thing_id = things.thing_id where timed_status_of_things.status_of_thing_code = 'Close' and timed_status_of_things.date_and_date < '2017-06-19 02:59:21' | What is the distinct ID of elctronics or Commen?",
    "label": "CONFIRM_SQL",
    "output": "select distinct thing_id from things where type_of_thing_code = 'Electronics' or type_of_thing_code = 'Commen'"
  },
  {
    "db_id": "university_basketball",
    "input": "Hi there! Can you tell me how many school have an affiliation type that is not public? | select count ( * ) from university where affiliation != 'Public' | Can you please tell me the name of that school and the enrollment?",
    "label": "CONFIRM_SQL",
    "output": "select school , enrollment from university where affiliation != 'Public'"
  },
  {
    "db_id": "university_basketball",
    "input": "What year was that school founded? | select founded from university where affiliation != 'Public' | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome, bye"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What is the send date of document Id 2? | select sent_date from documents where document_id = 2 | What is the organisation details of Id 3?\n",
    "label": "CLARIFY",
    "output": "Do you mean the organisation id of grant id 3?"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "yes\n | select organisation_id from grants where grant_id = 3 | What is the grant end date of grant id 3?",
    "label": "CONFIRM_SQL",
    "output": "select grant_end_date from grants where grant_id = 3"
  },
  {
    "db_id": "train_station",
    "input": "Did you mean the ids of stations that server the train Ananthapuri Express? | Yes | Find the station id of Ananthapuri Express?",
    "label": "CONFIRM_SQL",
    "output": "select train_station.station_id from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train.name = 'Ananthapuri Express'"
  },
  {
    "db_id": "train_station",
    "input": "What are the annual entry exit of station id 1? | select annual_entry_exit from station where station_id = '1' | Find the total passengers of station id 1 and 2? ",
    "label": "CONFIRM_SQL",
    "output": "select total_passengers from station where station_id = '1' or station_id = '2'"
  },
  {
    "db_id": "train_station",
    "input": "What are the names of the stations which serve both \"Ananthapuri Express\" and \"Guruvayur Express\" train? | select station.name from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train.name = 'Ananthapuri Express' intersect select station.name from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id where train.name = 'Guruvayur Express' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "match_season",
    "input": "Hello \nYes, I'm interested to know which college has two players | select college from match_season group by college having count ( * ) = 2 | Oh, I see, and what are the names of the players from UCLA?",
    "label": "CONFIRM_SQL",
    "output": "select player from match_season where college = 'UCLA'"
  },
  {
    "db_id": "match_season",
    "input": "Can you also tell me which position they play? | select player , position from match_season where college = 'UCLA' | Great, I'm a bit curious as to how many players does UNLV have",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from match_season where college = 'UNLV'"
  },
  {
    "db_id": "match_season",
    "input": "One player, okay was the season 1997? | select season from match_season where college = 'UNLV' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! What else can I help?"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "What is the address for FJA Filming?\n | select addresses.* from addresses join stores on addresses.address_id = stores.address_id where stores.store_name = 'FJA Filming' | What state is that in?\n",
    "label": "CONFIRM_SQL",
    "output": "select addresses.state_county from addresses join stores on addresses.address_id = stores.address_id where stores.store_name = 'FJA Filming'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Are there any other businesses in Nebraska?\n | select stores.store_name from addresses join stores on addresses.address_id = stores.address_id where addresses.state_county = 'Nebraska' | What is the city?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.city_town from addresses join stores on addresses.address_id = stores.address_id where stores.store_name = 'FJA Filming'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the booking start and end dates of the apartments with more than 2 bedrooms ?\n | select apartment_bookings.booking_start_date , apartment_bookings.booking_start_date from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.bedroom_count > 2 | What are the dates for apartment 585 ?\n",
    "label": "CLARIFY",
    "output": "Did you mean the booking start and end dates of the apartments with id 585?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Yes | select apartment_bookings.booking_start_date , apartment_bookings.booking_start_date from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.apt_number = 'Apt. 585' | Okay, what are the dates for the apartment in building 225 ?",
    "label": "CONFIRM_SQL",
    "output": "select apartment_bookings.booking_start_date , apartment_bookings.booking_start_date from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.building_id = '225'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the apartment numbers of all apartments with more than 2 bedrooms ?\n | select apartments.apt_number from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.bedroom_count > 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "can you tell me all the enzymes that work in the cytosol?\n | select name from enzyme where location = 'Cytosol' | which of those enzymes is in the medicine with the name Aripiprazole?\n",
    "label": "CONFIRM_SQL",
    "output": "select enzyme.name from medicine_enzyme_interaction join medicine on medicine_enzyme_interaction.medicine_id = medicine.id join enzyme on medicine_enzyme_interaction.enzyme_id = enzyme.id where medicine.name = 'Aripiprazole' and enzyme.location = 'Cytosol'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "are there any other enzymes that are not in the cytosol that have the name Aripiprazole? | select enzyme.name from medicine_enzyme_interaction join medicine on medicine_enzyme_interaction.medicine_id = medicine.id join enzyme on medicine_enzyme_interaction.enzyme_id = enzyme.id where medicine.name = 'Aripiprazole' and enzyme.location != 'Cytosol' | and can you tell me what the interaction type is for ALA synthase?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( medicine_enzyme_interaction.interaction_type ) from medicine_enzyme_interaction join enzyme on medicine_enzyme_interaction.enzyme_id = enzyme.id where enzyme.name = 'ALA synthase'"
  },
  {
    "db_id": "theme_gallery",
    "input": "How many exhibitions have an attendance of more than 100? | select count ( * ) from exhibition_record join exhibition on exhibition_record.exhibition_id = exhibition.exhibition_id where exhibition_record.attendance > 100 | How many exhibitions have a ticket price below 10?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from exhibition_record join exhibition on exhibition_record.exhibition_id = exhibition.exhibition_id where exhibition.ticket_price < 10"
  },
  {
    "db_id": "theme_gallery",
    "input": "What are the dates of the exhibitions who have an attendance of more than 100? | select exhibition_record.date from exhibition_record join exhibition on exhibition_record.exhibition_id = exhibition.exhibition_id where exhibition_record.attendance > 100 | What was the theme of the party held in the latest year?",
    "label": "CONFIRM_SQL",
    "output": "select theme from exhibition order by year desc limit 1"
  },
  {
    "db_id": "theme_gallery",
    "input": "What was the ticket price of that party? | select ticket_price from exhibition order by year desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "cre_Theme_park",
    "input": "how many shops are there? | select count ( * ) from shops | what kinds of shops are they?",
    "label": "CONFIRM_SQL",
    "output": "select shop_details from shops"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Can any one of them be accessed by bus? | select shops.shop_id from shops join tourist_attractions on shops.shop_id = tourist_attractions.tourist_attraction_id where tourist_attractions.how_to_get_there = 'bus' | how about by walk?",
    "label": "CONFIRM_SQL",
    "output": "select shops.shop_id from shops join tourist_attractions on shops.shop_id = tourist_attractions.tourist_attraction_id where tourist_attractions.how_to_get_there = 'walk'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What kind of shop is that? | select shops.shop_details from shops join tourist_attractions on shops.shop_id = tourist_attractions.tourist_attraction_id where tourist_attractions.how_to_get_there = 'walk' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "You are welcome! Anything else?"
  },
  {
    "db_id": "game_1",
    "input": "What are the names of all games that were played for at least 1000 hours? | select gname from plays_games join video_games on plays_games.gameid = video_games.gameid group by plays_games.gameid having sum ( hours_played ) >= 1000 | What are the names of all games that were played for less than 1000 hours?",
    "label": "CONFIRM_SQL",
    "output": "select gname from plays_games join video_games on plays_games.gameid = video_games.gameid group by plays_games.gameid having sum ( hours_played ) < 1000"
  },
  {
    "db_id": "game_1",
    "input": "What are the average hours played for each game type? | select video_games.gtype , avg ( plays_games.hours_played ) from plays_games join video_games on plays_games.gameid = video_games.gameid group by video_games.gtype | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "shop_membership",
    "input": "What are the names of all the branches? | select name from branch | Given  the branches are Alexandre, Popert, Stanley, Zytogorski, Cochrane, Taverner, Saint Amant, and Brooke Greville, which have members in Louisville, Kentucky?",
    "label": "CONFIRM_SQL",
    "output": "select branch.name from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id join member on membership_register_branch.member_id = member.member_id where member.hometown = 'Louisville, Kentucky'"
  },
  {
    "db_id": "shop_membership",
    "input": "Given the branches are Alexandre and Zytogorski,  which have members in Hiram, Georgia? | select branch.name from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id join member on membership_register_branch.member_id = member.member_id where member.hometown = 'Louisville ,  Kentucky' intersect select branch.name from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id join member on membership_register_branch.member_id = member.member_id where member.hometown = 'Hiram ,  Georgia' | Thanks",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye!"
  },
  {
    "db_id": "inn_1",
    "input": "Can you list the base price for all rooms? | select baseprice from rooms | Can you sort the list to show only the 3 highest base prices?",
    "label": "CONFIRM_SQL",
    "output": "select baseprice from rooms order by baseprice desc limit 3"
  },
  {
    "db_id": "inn_1",
    "input": "Can you please list the room name and room id associated with each of those 3 base prices? | select roomid , roomname from rooms order by baseprice desc limit 3 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "school_bus",
    "input": "Can you list the driver ids and whether they drive full time or not?  | select driver_id , if_full_time from school_bus | Hmm, I also want to know their years working.",
    "label": "CONFIRM_SQL",
    "output": "select driver_id , years_working , if_full_time from school_bus"
  },
  {
    "db_id": "school_bus",
    "input": "Can you tell me the name of the driver who is driving the school bus with the longest working history? | select driver.name from driver join school_bus on driver.driver_id = school_bus.driver_id order by years_working desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "film_rank",
    "input": "Are there any films that do not have any market estimation? | select count ( * ) from film where film_id not in ( select film_id from film_market_estimation ) | What year did the earliest film release that does not have any market estimation information",
    "label": "REJECT",
    "output": "Sorry I don't have information about the year of films that don't have any market estimation.Please ask something else."
  },
  {
    "db_id": "film_rank",
    "input": "Can you list the titles of the films without any market estimations? | select title from film where film_id not in ( select film_id from film_market_estimation ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "climbing",
    "input": "What are the names of mountains in the area? | select name from mountain | How many of these have a height above 5000?",
    "label": "CONFIRM_SQL",
    "output": "select count ( name ) from mountain where height > 5000"
  },
  {
    "db_id": "climbing",
    "input": "What are the names of these mountains?\n | select name from mountain where height > 5000 | Do any of these mountains above 5000 have a prominence above 1000?",
    "label": "CONFIRM_SQL",
    "output": "select name from mountain where height > 5000 and prominence > 1000"
  },
  {
    "db_id": "climbing",
    "input": "Which of these 3 mountains is the tallest and has the most prominence? | Sorry, can you ask two questions separately? | Which of these 3 mountains is the tallest?",
    "label": "CONFIRM_SQL",
    "output": "select name from mountain where height > 5000 and prominence > 1000 order by height desc limit 1"
  },
  {
    "db_id": "climbing",
    "input": "list the countries with mountains with height less than 5200 | select country from mountain where height < 5200 | what are countries with mountains with height more than 5600",
    "label": "CONFIRM_SQL",
    "output": "select country from mountain where height > 5600"
  },
  {
    "db_id": "climbing",
    "input": "list both the countries with mountains height less than 5200 and height more than 5600 in the same table | select country from mountain where height > 5600 intersect select country from mountain where height < 5200 | thanks",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "network_2",
    "input": "What are the names of all the persons who are friends with Alice? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Alice' | Okay, could you show me Zach's job?",
    "label": "CONFIRM_SQL",
    "output": "select job from person where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "How old is Zach? | select age from person where name = 'Zach' | How many years has Zach been friends with Alice?",
    "label": "CONFIRM_SQL",
    "output": "select year from personfriend where friend = 'Alice' and name = 'Zach'"
  },
  {
    "db_id": "student_1",
    "input": "Hello! Can you please list all of the first and last names for all of the students in the database? | select lastname , firstname from list | Excellent!  Could you filter that list to show only the students who were taught by the teacher with the last name Moyer?",
    "label": "CONFIRM_SQL",
    "output": "select list.firstname , list.lastname from list join teachers on list.classroom = teachers.classroom where teachers.lastname = 'MOYER'"
  },
  {
    "db_id": "student_1",
    "input": "Great!  Could you update this list to include the grade of each student? | select list.firstname , list.lastname , grade from list join teachers on list.classroom = teachers.classroom where teachers.lastname = 'MOYER' | Thanks!",
    "label": "THANK_YOU",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "driving_school",
    "input": "how many customers are presented on the table | select count ( customer_id ) from customers | who is the highest amount outstanding",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from customers order by amount_outstanding desc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "what is the customer status code of Carole | select customer_status_code from customers where first_name = 'Carole' | please tell me Clara phone number",
    "label": "CONFIRM_SQL",
    "output": "select phone_number from customers where first_name = 'Clara'"
  },
  {
    "db_id": "company_office",
    "input": "How many companies have an industry of banking? | select count ( * ) from companies where industry = 'Banking' | How many don't have a banking industry?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from companies where industry != 'Banking'"
  },
  {
    "db_id": "company_office",
    "input": "What are the total sales of those companies? | select sum ( sales_billion ) from companies where industry != 'Banking' | What is the maximum sales of those companies?",
    "label": "CONFIRM_SQL",
    "output": "select max ( sales_billion ) from companies where industry != 'Banking'"
  },
  {
    "db_id": "company_office",
    "input": "What is the minimum sales? | select min ( sales_billion ) from companies where industry != 'Banking' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "restaurant_1",
    "input": "Which city code of Smith? | Is Smith first name or last name? | first name",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student where fname = 'Smith'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What age of last name Kim? | select age from student where lname = 'Kim' | What are the student id of city code WAS?",
    "label": "CONFIRM_SQL",
    "output": "select stuid from student where city_code = 'WAS'"
  },
  {
    "db_id": "restaurant_1",
    "input": "Which major has least number of students? List the major and the number of students. | select major , count ( * ) from student group by major order by count ( major ) asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "dorm_1",
    "input": "what's Smith Hall student capacity? | select distinct ( dorm.student_capacity ) from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm.dorm_name = 'Smith Hall' | which of this have the least capacity of amenities?",
    "label": "CLARIFY",
    "output": "What do you mean by \"least capacity of amenities\"?"
  },
  {
    "db_id": "dorm_1",
    "input": "sorry meant least number of amenities\n | select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid group by has_amenity.dormid order by count ( * ) asc limit 1 | what's the name of the dorm with the highest amenities?",
    "label": "CONFIRM_SQL",
    "output": "select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid group by has_amenity.dormid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "which of this dorm has student capacity of 355? | select dorm_name from dorm where student_capacity = 355 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Can you please show me name of the products? | select distinct product_name from products | Can you please show me the characteristic name used by least number of products?",
    "label": "CONFIRM_SQL",
    "output": "select characteristics.characteristic_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id group by characteristics.characteristic_name order by count ( * ) asc limit 1"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Can you please show me the characteristic name used by most number of products? | select characteristics.characteristic_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id group by characteristics.characteristic_name order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "decoration_competition",
    "input": "Where is the most common country across members? | select country from member group by country order by count ( * ) desc limit 1 | Okay, which members are there?\n",
    "label": "CLARIFY",
    "output": "Do you mean which members are in United States?"
  },
  {
    "db_id": "decoration_competition",
    "input": "Yes. Which members are in the United States? | select name from member where country = 'United States' | Okay. What other countries are listed?",
    "label": "CONFIRM_SQL",
    "output": "select distinct country from member except select country from member where country = 'United States'"
  },
  {
    "db_id": "decoration_competition",
    "input": "Who are the members in Canada? | select name from member where country = 'Canada' | Thanks",
    "label": "GOOD_BYE",
    "output": "You're welcome"
  },
  {
    "db_id": "hospital_1",
    "input": "Can you list the highest dose prescribed for any medication? | select physician.name from physician join prescribes on physician.employeeid = prescribes.physician order by prescribes.dose desc limit 1 | What information do you want for the prescriptions? Do you want all information or just the dose amount?",
    "label": "INFORM_SQL",
    "output": "I wanted the name of the physician that prescribed the highest dose, but I believe you've already provided that information?"
  },
  {
    "db_id": "hr_1",
    "input": "Did you mean the employee with a first name Clara? | Yes | Show me all the employees in the same department as Clara.",
    "label": "CONFIRM_SQL",
    "output": "select * from employees where department_id = ( select department_id from employees where first_name = 'Clara' )"
  },
  {
    "db_id": "hr_1",
    "input": "Can you show me their hire dates? | select hire_date from employees where department_id = ( select department_id from employees where first_name = 'Clara' ) | What is their average salary?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from employees where department_id = ( select department_id from employees where first_name = 'Clara' )"
  },
  {
    "db_id": "college_2",
    "input": "Find the name of instructors who are advisors of students from the Math department, and sort the results by students' total credit. | select instructor.name from advisor join instructor on advisor.i_id = instructor.id join student on advisor.s_id = student.id where student.dept_name = 'Math' order by student.tot_cred asc | Find name of students in the Math department",
    "label": "CONFIRM_SQL",
    "output": "select name from student where dept_name = 'Math'"
  },
  {
    "db_id": "college_2",
    "input": "Give me IDs of instructors in the Marketing department | select id from instructor where dept_name = 'Marketing' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "music_1",
    "input": "What are the names of the top 3 artists with the largest number of songs? | select artist.artist_name from artist join song on artist.artist_name = song.artist_name group by song.artist_name order by count ( * ) desc limit 3 | What about the top 3 artists with the largest number of songs whose language is Bangla?",
    "label": "CONFIRM_SQL",
    "output": "select artist.artist_name from artist join song on artist.artist_name = song.artist_name where song.languages = 'bangla' group by song.artist_name order by count ( * ) desc limit 3"
  },
  {
    "db_id": "music_1",
    "input": "What are their preferred genres? | select artist.preferred_genre from artist join song on artist.artist_name = song.artist_name where song.languages = 'bangla' group by song.artist_name order by count ( * ) desc limit 3 | Could you list the names of all artists that prefer the genre folk and speak the language Bangla?",
    "label": "CONFIRM_SQL",
    "output": "select artist.artist_name from artist join song on artist.artist_name = song.artist_name where song.languages = 'bangla' and artist.preferred_genre = 'folk'"
  },
  {
    "db_id": "music_1",
    "input": "How about the names of all artists that prefer the genre folk? | select artist_name from artist where preferred_genre = 'folk' | How about the names of all artists that prefer the genre tagore?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from artist where preferred_genre = 'tagore'"
  },
  {
    "db_id": "department_store",
    "input": "What are the staff names with job title code Sales Person?\n | select staff.staff_name from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person' | What are their genders?",
    "label": "CLARIFY",
    "output": "Would you like their names and their genders? "
  },
  {
    "db_id": "department_store",
    "input": "Yes. | select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person' except select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Clerical Staff' | What are the staff names and genders for people with job title code Sales Person?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person'"
  },
  {
    "db_id": "department_store",
    "input": "How about with job title code Clerical Staff?\n | select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Clerical Staff' | Which of the people with job title code Sales Person are not Clerical Staff?\n",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person' except select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Clerical Staff'"
  },
  {
    "db_id": "department_store",
    "input": "Hello there!  Can you provide me with a list of all customer names and addresses? | select customer_name , customer_address from customers | Great!  Can you filter this list to show me the rows that correspond to the customers who have both new and pending orders?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , customers.customer_address from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customer_orders.order_status_code = 'New' intersect select customers.customer_name , customers.customer_address from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customer_orders.order_status_code = 'Pending'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "What're the names of the enzymes in the medicine \"Amisulpride\"? | select enzyme.name from enzyme join medicine_enzyme_interaction on enzyme.id = medicine_enzyme_interaction.enzyme_id join medicine on medicine_enzyme_interaction.medicine_id = medicine.id where medicine.name = 'Amisulpride' | What're the names of the enzymes in the medicine \"Amisulpride\" that can serve as an inhibitor?",
    "label": "CONFIRM_SQL",
    "output": "select enzyme.name from enzyme join medicine_enzyme_interaction on enzyme.id = medicine_enzyme_interaction.enzyme_id join medicine on medicine_enzyme_interaction.medicine_id = medicine.id where medicine.name = 'Amisulpride' and medicine_enzyme_interaction.interaction_type = 'inhibitor'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "What are the names of all enzymes that can serve as inhibitors? | select distinct ( enzyme.name ) from enzyme join medicine_enzyme_interaction on enzyme.id = medicine_enzyme_interaction.enzyme_id join medicine on medicine_enzyme_interaction.medicine_id = medicine.id where medicine_enzyme_interaction.interaction_type = 'inhibitor' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What is the organisation ID of the organisation with grant amount of 4094.542?? | select organisation_id from grants where grant_amount = 4094.542 | What is its grant start date?",
    "label": "CONFIRM_SQL",
    "output": "select grant_start_date from grants where grant_amount = 4094.542"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What about its end date? | select grant_end_date from grants where grant_amount = 4094.542 | What is the grant amount of the organisation with the id 14?",
    "label": "CONFIRM_SQL",
    "output": "select grant_amount from grants where organisation_id = 14"
  },
  {
    "db_id": "twitter_1",
    "input": "Can you list the uids and names of all users? | select uid , name from user_profiles | Hmm, I want to know the number of followers of each user.",
    "label": "CONFIRM_SQL",
    "output": "select name , followers from user_profiles"
  },
  {
    "db_id": "twitter_1",
    "input": "What is the maximum number of followers of all users? | select max ( followers ) from user_profiles | What is the total number of followers of all users?\n\n",
    "label": "CONFIRM_SQL",
    "output": "select sum ( followers ) from user_profiles"
  },
  {
    "db_id": "wrestler",
    "input": "hi. can you tell me how many wrestlers were eliminated? | select count ( * ) from elimination | and how many have the largest days held?",
    "label": "REJECT",
    "output": "There can only be one with largest days held, what do you mean by \"how many\"?"
  },
  {
    "db_id": "wrestler",
    "input": "can you list the elimination times of those with the largest days held? | Again, there can only be one with the largest days held, would you like that one? There are  not multiple that can be \"largest\" | yes, please",
    "label": "CONFIRM_SQL",
    "output": "select elimination.time from elimination join wrestler on elimination.wrestler_id = wrestler.wrestler_id order by wrestler.days_held desc limit 1"
  },
  {
    "db_id": "student_assessment",
    "input": "What is the Course Id for English\n | select course_id from courses where course_name = 'English' | how many different student ids are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct student_id ) from student_course_attendance"
  },
  {
    "db_id": "student_assessment",
    "input": "How many students enrolled in Course ID 302? | select count ( * ) from courses join student_course_attendance on courses.course_id = student_course_attendance.course_id where student_course_attendance.course_id = 302 | thanks\n",
    "label": "WELCOME",
    "output": "you're welcome. "
  },
  {
    "db_id": "college_3",
    "input": "which dno has no stuid associated with it? | select dno from department where dno not in ( select dno from minor_in ) | what are the dname's of those DNO's?",
    "label": "CONFIRM_SQL",
    "output": "select dname from department where dno not in ( select dno from minor_in )"
  },
  {
    "db_id": "college_3",
    "input": "sort the department names alphabetically | select dname from department where dno not in ( select dno from minor_in ) order by dname asc | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "movie_1",
    "input": "list the names of all movies | select title from movie | list the year each movie was released ",
    "label": "CONFIRM_SQL",
    "output": "select title , year from movie"
  },
  {
    "db_id": "movie_1",
    "input": "list the titles of all movies  | select title from movie | Thanks!  ",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "document_management",
    "input": "Hello! How many documents are there total? | select count ( document_name ) from documents | Perfect, thanks for that. Now, how many documents don't have images?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select document_name from documents except select documents.document_name from documents join document_sections on documents.document_code = document_sections.document_code join document_sections_images on document_sections.section_id = document_sections_images.section_id )"
  },
  {
    "db_id": "document_management",
    "input": "Can you give me the names of those documents? | select document_name from documents except select documents.document_name from documents join document_sections on documents.document_code = document_sections.document_code join document_sections_images on document_sections.section_id = document_sections_images.section_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "manufacturer",
    "input": "What is the market share of Chabudai? | select market_rate from furniture where name = 'Chabudai' | What is its price?",
    "label": "CONFIRM_SQL",
    "output": "select furniture_manufacte.price_in_dollar from furniture join furniture_manufacte on furniture.furniture_id = furniture_manufacte.furniture_id where furniture.name = 'Chabudai'"
  },
  {
    "db_id": "manufacturer",
    "input": "what is the name of Chadubai's manufacturer? | Sorry, I don't have information about the name of Chadubai's manufacturer. I only have the id. | What is its ID?",
    "label": "CONFIRM_SQL",
    "output": "select furniture_manufacte.manufacturer_id from furniture join furniture_manufacte on furniture.furniture_id = furniture_manufacte.furniture_id where furniture.name = 'Chabudai'"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Did you mean the event details of the events? | No, I meant all the information for the events | Show me the details of all participants.",
    "label": "CONFIRM_SQL",
    "output": "select * from participants_in_events"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "show me the details of the events. | select * from events | How many events did not have any participants?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from events where event_id not in ( select event_id from participants_in_events )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Which grants are described as 'regular'? | select grants.* from grants join documents on grants.grant_id = documents.grant_id join document_types on documents.document_type_code = document_types.document_type_code where document_types.document_description = 'Regular' | Which grants are described both 'regular' and 'initial application'?",
    "label": "CONFIRM_SQL",
    "output": "select grants.* from grants join documents on grants.grant_id = documents.grant_id join document_types on documents.document_type_code = document_types.document_type_code where document_types.document_description = 'Regular' intersect select grants.* from grants join documents on grants.grant_id = documents.grant_id join document_types on documents.document_type_code = document_types.document_type_code where document_types.document_description = 'Initial Application'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you show me the start date for all these grants? | select grants.grant_start_date from grants join documents on grants.grant_id = documents.grant_id join document_types on documents.document_type_code = document_types.document_type_code where document_types.document_description = 'Regular' intersect select grants.grant_start_date from grants join documents on grants.grant_id = documents.grant_id join document_types on documents.document_type_code = document_types.document_type_code where document_types.document_description = 'Initial Application' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "department_management",
    "input": "Hello!  How are you?  Can you please provide me with a list of all department IDs, department names, and their respective years of creation? | select department_id , name , creation from department | Excellent!  Can you filter this list to include only the rows that contain the most common (most frequently occurring) year of creation?",
    "label": "CONFIRM_SQL",
    "output": "select department_id , name , creation from department where creation = ( select creation from department group by creation order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "department_management",
    "input": "Perfect! Can you tell me what is the total combined budget of these two departments? | select sum ( budget_in_billions ) from department where creation = ( select creation from department group by creation order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "cinema",
    "input": "what is the highest price? | select max ( price ) from schedule | what is the average of prices*",
    "label": "CONFIRM_SQL",
    "output": "select avg ( price ) from schedule"
  },
  {
    "db_id": "cinema",
    "input": "what is the average of rank in series? | select avg ( rank_in_series ) from film | thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "network_2",
    "input": "how many person there | select count ( * ) from person | what is the age of Bob",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "what is the city of Alice | select city from person where name = 'Alice' | thanks",
    "label": "REQUEST_MORE",
    "output": "Sure. Do you want to know something else?"
  },
  {
    "db_id": "theme_gallery",
    "input": "what country is Vijay Singh from?\n | select country from artist where name = 'Vijay Singh' | who is the latest artist?",
    "label": "CONFIRM_SQL",
    "output": "select name from artist order by year_join desc limit 1"
  },
  {
    "db_id": "theme_gallery",
    "input": "what year did Vijay Singh joined? | select year_join from artist where name = 'Vijay Singh' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goosbye"
  },
  {
    "db_id": "student_assessment",
    "input": "how many courses did the student with id 121 register for? | select count ( course_id ) from student_course_registrations where student_id = 121 | And how many courses did the student attend?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student_course_attendance where student_id = 121"
  },
  {
    "db_id": "student_assessment",
    "input": "show me the id of courses registered or attended by student whose id is 121 | select course_id from student_course_registrations where student_id = 121 union select course_id from student_course_attendance where student_id = 121 | thanks|",
    "label": "WELCOME",
    "output": "You are welcome. Goodbye."
  },
  {
    "db_id": "wine_1",
    "input": "Find the distinct names of all wines that have prices higher than some wines from John Anthony winery. | select distinct name from wine where price > ( select min ( price ) from wine where winery = 'John Anthony' ) | Find the price of all wines that have prices higher than some wines from John Anthony winery.",
    "label": "CONFIRM_SQL",
    "output": "select price from wine where price > ( select min ( price ) from wine where winery = 'John Anthony' )"
  },
  {
    "db_id": "wine_1",
    "input": "Find the score of all wines that have prices higher than some wines from John Anthony winery. | select score from wine where price > ( select min ( price ) from wine where winery = 'John Anthony' ) | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "ship_1",
    "input": "what are the names and classes of the ships that do not have any captain yet?\n | select name , class from ship where ship_id not in ( select ship_id from captain ) | What are the names of the captains that have classes?",
    "label": "CONFIRM_SQL",
    "output": "select name from captain where class != 'NULL'"
  },
  {
    "db_id": "ship_1",
    "input": "What is the id for HMS Gorgon? | Did  you mean  ship  id? | yes",
    "label": "CONFIRM_SQL",
    "output": "select ship_id from ship where name = 'HMS Gorgon'"
  },
  {
    "db_id": "ship_1",
    "input": "How many classes are there? | Did  you  mean  the number of distinct  type classes of ships? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct class ) from ship"
  },
  {
    "db_id": "ship_1",
    "input": "What is HMS Gorgon's rank? | select captain.rank from captain join ship on captain.ship_id = ship.ship_id where ship.name = 'HMS Gorgon' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and bye"
  },
  {
    "db_id": "railway",
    "input": "Show the countries that have managers of age above 50 or below 46? | select country from manager where age > 50 or age < 46 | What is the least aged Manager's name on the list?",
    "label": "CONFIRM_SQL",
    "output": "select name from manager order by age asc limit 1"
  },
  {
    "db_id": "railway",
    "input": "How many managers are from United States on the list? | select count ( * ) from manager where country = 'United States' | What is the high aged Manager name of the list?",
    "label": "CLARIFY",
    "output": "Do you mean the name of the most aged manager on the list?"
  },
  {
    "db_id": "protein_institute",
    "input": "what are the names of the institution and building here | select building.name , institution.institution from building join institution on building.building_id = institution.building_id group by building.building_id | In what year was Ave Maria University created and where is the  current location",
    "label": "CONFIRM_SQL",
    "output": "select founded , location from institution where institution = 'Ave Maria University'"
  },
  {
    "db_id": "protein_institute",
    "input": "How many enrollement  does Dakota State University have | select enrollment from institution where institution = 'Dakota State University' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "coffee_shop",
    "input": "Which store has the most staff? | Do  you  want  to get  the shop ID which has the  most  staff? | yes, please\n",
    "label": "CONFIRM_SQL",
    "output": "select shop_id from shop order by num_of_staff desc limit 1"
  },
  {
    "db_id": "coffee_shop",
    "input": "Which shop has a happy hour in may? | Do  you  want  to get  shop  ID  or  another attribute? | shop id\n",
    "label": "CONFIRM_SQL",
    "output": "select shop.shop_id from shop join happy_hour on shop.shop_id = happy_hour.shop_id where month = 'May'"
  },
  {
    "db_id": "coffee_shop",
    "input": "Can you also show me their addresses ? | select distinct shop.address from shop join happy_hour on shop.shop_id = happy_hour.shop_id where month = 'May' | Can you show me them with their corresponding shop ids?",
    "label": "CONFIRM_SQL",
    "output": "select shop.address , shop.shop_id from shop join happy_hour on shop.shop_id = happy_hour.shop_id where month = 'May'"
  },
  {
    "db_id": "coffee_shop",
    "input": "Thanks! | Welcome and goodbye | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you list all document descriptions that contain the word \"Initial\"? | select document_description from document_types where document_description like 'Initial%' | Can you list the document type code associated with that document description?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code from document_types where document_description like 'Initial%'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Are there any other document type codes associated with a description that contains the word \"initial\"? | select document_type_code from document_types where document_description like 'Initial%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye!"
  },
  {
    "db_id": "decoration_competition",
    "input": "show the total distinct leader names of the college associated with the members of all country | select distinct college.leader_name from college join member on college.college_id = member.college_id | find the college id for the college location Ottawa",
    "label": "CONFIRM_SQL",
    "output": "select college_id from college where college_location = 'Ottawa'"
  },
  {
    "db_id": "decoration_competition",
    "input": "find the member name and college location for the member id 1 | select member.name , college.college_location from college join member on member.college_id = college.college_id where member_id = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "solvency_ii",
    "input": "Hello!  Can you show me a list of the various product type codes? | select product_type_code from products | Wonderful!  Of these product type codes, can you tell me which code is the most common one?",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code from products group by product_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "solvency_ii",
    "input": "Thanks! Is there a corresponding \"product name\" for the product type of food? | select product_name from products where product_type_code = 'Food' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem. Goodbye!"
  },
  {
    "db_id": "manufacturer",
    "input": "what are the companies that produce the most expensive furniture | Do you mean the names of manufacturers that produce the most expensive furniture? | yes, the names of the company that produces the most expensive furniture",
    "label": "CONFIRM_SQL",
    "output": "select manufacturer.name from manufacturer join furniture_manufacte on manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id order by furniture_manufacte.price_in_dollar desc limit 1"
  },
  {
    "db_id": "manufacturer",
    "input": "what is the id of this name | select manufacturer.manufacturer_id from manufacturer join furniture_manufacte on manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id order by furniture_manufacte.price_in_dollar desc limit 1 | list both the id and number of shops for the company that produces the most expensive furniture in the same table",
    "label": "CONFIRM_SQL",
    "output": "select manufacturer.manufacturer_id , manufacturer.num_of_shops from manufacturer join furniture_manufacte on manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id order by furniture_manufacte.price_in_dollar desc limit 1"
  },
  {
    "db_id": "race_track",
    "input": "what is the longest race? | Sorry, there is no info about that. | can you show me names of races?",
    "label": "CONFIRM_SQL",
    "output": "select name from race"
  },
  {
    "db_id": "race_track",
    "input": "what is the Mexico City 250's date? | select date from race where name = 'Mexico City 250' | can you show me class of race?",
    "label": "CONFIRM_SQL",
    "output": "select class from race"
  },
  {
    "db_id": "station_weather",
    "input": "how many trains have express in their names?  | select count ( * ) from train where name like '%Express%' | what is the destination for Ananthapuri Express?",
    "label": "CONFIRM_SQL",
    "output": "select destination from train where name = 'Ananthapuri Express'"
  },
  {
    "db_id": "station_weather",
    "input": "give me the train number | select train_number from train where name = 'Ananthapuri Express' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "music_4",
    "input": "What are the issue date of 34th England Academy Prize? | select volume.issue_date from music_festival join volume on music_festival.volume = volume.volume_id where music_festival.music_festival = '34th England Academy Prize' | What are the music festivals of Everybody Have Fun Tonight song? ",
    "label": "CONFIRM_SQL",
    "output": "select music_festival.music_festival from music_festival join volume on music_festival.volume = volume.volume_id where volume.song = ' Everybody Have Fun Tonight '"
  },
  {
    "db_id": "music_4",
    "input": "Show the songs that have result \"nominated\" at music festivals. | select volume.song from music_festival join volume on music_festival.volume = volume.volume_id where music_festival.result = 'Nominated' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Hello!  Can you please list the different interaction types for me? | select distinct interaction_type from medicine_enzyme_interaction | Great!  Can you provide me with the name, location, and product for each enzyme that is associated with the \"inhibitor\" interaction type?",
    "label": "CONFIRM_SQL",
    "output": "select distinct enzyme.name , enzyme.location , enzyme.product from enzyme join medicine_enzyme_interaction on medicine_enzyme_interaction.enzyme_id = enzyme.id where medicine_enzyme_interaction.interaction_type = 'inhibitor'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Great!  Can you update this list to show the chromosome associated with each enzyme on this list? | select distinct enzyme.name , enzyme.location , enzyme.product , enzyme.chromosome from enzyme join medicine_enzyme_interaction on medicine_enzyme_interaction.enzyme_id = enzyme.id where medicine_enzyme_interaction.interaction_type = 'inhibitor' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye. "
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what are the names of the products with category \"Herbs\" | select products.product_name from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs' | what are the color descriptions for the products? ",
    "label": "CLARIFY",
    "output": "Do you want both the names and the color descriptions? "
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "yes | select products.product_name , ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs' | list down all the product ids",
    "label": "CONFIRM_SQL",
    "output": "select product_id from products"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Thanks! | Thank you, would you like to know more?  | no",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "how many claim headers on the table | select count ( * ) from claim_headers | what is the highest amount claimed on the claim headers",
    "label": "CONFIRM_SQL",
    "output": "select max ( amount_claimed ) from claim_headers"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "what is the least paid amount on the table | select min ( amount_piad ) from claim_headers | what is the date of settlement on Overtime Meal Subsidy",
    "label": "CLARIFY",
    "output": "Did you want the date of settlement of claim headers with a type code Overtime Meal Subsidy?"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "exactly | select date_of_settlement from claim_headers where claim_type_code = 'Overtime Meal Subsidy' | thanks",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "sports_competition",
    "input": "Did you mean the name of that club? | Yes | How many clubs have players with the position \"Right Wing\"?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from club join player on club.club_id = player.club_id where player.position = 'Right Wing'"
  },
  {
    "db_id": "sports_competition",
    "input": "Can you list that club?  | select club.name from club join player on club.club_id = player.club_id where player.position = 'Right Wing' | How many players are from the U.S.?",
    "label": "REJECT",
    "output": "Sorry, I can't answer this question! Can you ask something else?"
  },
  {
    "db_id": "sports_competition",
    "input": "How many total players are there?  | select count ( * ) from player | Can you list all the players? ",
    "label": "CONFIRM_SQL",
    "output": "select * from player"
  },
  {
    "db_id": "sports_competition",
    "input": "How many positions are there in total? | select count ( distinct position ) from player | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "culture_company",
    "input": "Could you please show me the publishers with a book published in 1989? | select publisher from book_club where year = 1989 | Could you please show me the publishers with a book published in 1990?",
    "label": "CONFIRM_SQL",
    "output": "select publisher from book_club where year = 1990"
  },
  {
    "db_id": "dorm_1",
    "input": "How many students are living in the dorms? | select count ( * ) from student | Do they all have all amenities?",
    "label": "CLARIFY",
    "output": "Did you mean whether all dorms have all amenities?"
  },
  {
    "db_id": "dorm_1",
    "input": "Yes. | select distinct dormid from has_amenity | How many dorms do not have a TV lounge?",
    "label": "CONFIRM_SQL",
    "output": "select has_amenity.dormid from has_amenity join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge'"
  },
  {
    "db_id": "dorm_1",
    "input": "How many students are in those four dorms? | select count ( * ) from student join lives_in on student.stuid = lives_in.stuid where lives_in.dormid not in ( select has_amenity.dormid from has_amenity join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' ) | What are the first names of those nine students?",
    "label": "CONFIRM_SQL",
    "output": "select student.fname from student join lives_in on student.stuid = lives_in.stuid where lives_in.dormid not in ( select has_amenity.dormid from has_amenity join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' )"
  },
  {
    "db_id": "dorm_1",
    "input": "What are their ages? | select student.age from student join lives_in on student.stuid = lives_in.stuid where lives_in.dormid not in ( select has_amenity.dormid from has_amenity join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Good bye."
  },
  {
    "db_id": "ship_mission",
    "input": "List the name of ships that are not involved in any mission | select name from ship where ship_id not in ( select ship_id from mission ) | The name of the ship that is not involved in any mission is Author.\n",
    "label": "INFORM_SQL",
    "output": "Which ships have been decommissioned?"
  },
  {
    "db_id": "ship_mission",
    "input": "select ship_id from mission where fate like '%Decommissioned%' | Give me the names of ships that have been decommissioned | select name from ship where ship_id in ( select ship_id from mission where fate like '%Decommissioned%' )",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "flight_4",
    "input": "Needed id of routes | Sorry can you clarify your question? | whose source and destination airports are in the United States",
    "label": "CLARIFY",
    "output": "Do you want the id of the routes whose source and destination airports are in the United States?"
  },
  {
    "db_id": "flight_4",
    "input": "Yes | select rid from routes where dst_apid in ( select apid from airports where country = 'United States' ) and src_apid in ( select apid from airports where country = 'United States' ) | Thanks",
    "label": "GOOD_BYE",
    "output": "thanks. bye"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "How many distinct locations have the things with service detail 'Unsatisfied' been located in? | select count ( distinct timed_locations_of_things.location_code ) from things join timed_locations_of_things on things.thing_id = timed_locations_of_things.thing_id where things.service_details = 'Unsatisfied' | How many type of thing code includes 'Electronics'?",
    "label": "CLARIFY",
    "output": "Do you mean how many things include type of thing code 'Electronics'?"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Yes | select count ( distinct thing_id ) from things where type_of_thing_code = 'Electronics' | What are the service details of thing id 2?",
    "label": "CONFIRM_SQL",
    "output": "select service_details from things where thing_id = 2"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "What is the service type code of thing id 2? | select service_type_code from things where thing_id = 2 | What is the location code of thing id 10 and the date and time?",
    "label": "CONFIRM_SQL",
    "output": "select location_code , date_and_time from timed_locations_of_things where thing_id = 10"
  },
  {
    "db_id": "coffee_shop",
    "input": "whats he average number of staffs in charge | select avg ( num_of_shaff_in_charge ) from happy_hour | how many months in total",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct month ) from happy_hour"
  },
  {
    "db_id": "coffee_shop",
    "input": "which months have more than 2 happy hours | select month from happy_hour group by month having count ( * ) > 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How many tourists were there total? | select count ( * ) from visitors | How many tourist attractions?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct tourist_attraction_id ) from visits"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How many tourists visited all 10 attractions? | Sorry I cannot answer this question. | How many tourists visited more than one tourist attraction?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from visits join visitors on visits.tourist_id = visitors.tourist_id group by visits.tourist_id having count ( * ) > 1 )"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How many tourists didn't visit any tourist attractions? | select count ( * ) from visitors where tourist_id not in ( select tourist_id from visits ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "bike_1",
    "input": "how many stations are presented on the table | select distinct count ( * ) from station | list out the station names",
    "label": "CONFIRM_SQL",
    "output": "select distinct name from station"
  },
  {
    "db_id": "bike_1",
    "input": "what is the bikes available of San Jose Diridon Caltrain Station | SELECT DISTINCT t2.bikes_available FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T1.name = \"San Jose Diridon Caltrain Station\" | Sorry, we do not have information on the bike availability of San Jose Diridon Caltrain Station.",
    "label": "INFORM_SQL",
    "output": "what is the city of San Jose Civic Center"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can I have the dates for all the shipments? | select shipment_date from shipments | Which of these dates occurred most recently? ",
    "label": "CONFIRM_SQL",
    "output": "select shipment_date from shipments order by shipment_date desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "What is the shipment id for the shipment with this shipment date? | select shipment_id from shipments where shipment_date = ( select max ( shipment_date ) from shipments ) | Thanks",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "gymnast",
    "input": "Hello!  Can you show me a list of all of the hometowns? | select hometown from people | Thank you!  Can you filter this list ot show only the hometowns that have both people older than 23 years of age and people younger than 20 years of age?",
    "label": "CONFIRM_SQL",
    "output": "select hometown from people where age > 23 intersect select hometown from people where age < 20"
  },
  {
    "db_id": "gymnast",
    "input": "Excellent!  Can you tell me how many people in total have Santo Domingo as their Hometown? | select count ( * ) from people where hometown = 'Santo Domingo' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Did you mean the number of events that have associated service type \"Marriage\"? | Yes | How many events with \"Marriage\" type codes are there? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from events join services on events.service_id = services.service_id where services.service_type_code = 'Marriage'"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "What are event details associated with the event of this type code?   | select events.event_details from events join services on events.service_id = services.service_id where services.service_type_code = 'Marriage' | How many among them are with \"success\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from events join services on events.service_id = services.service_id where services.service_type_code = 'Marriage' and event_details = 'Success'"
  },
  {
    "db_id": "hr_1",
    "input": "Can you show me the first and last names of all employees who work in any department located in London please? | select first_name , last_name from employees join departments on employees.department_id = departments.department_id join locations on departments.location_id = locations.location_id where locations.city = 'London' | What are the first and last names of the person with the second lowest salary?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name , salary from employees join departments on employees.department_id = departments.department_id order by salary asc"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is the project detail for the project with document \"King Book\"? | select projects.project_details from projects join documents on projects.project_id = documents.project_id where documents.document_name = 'King Book' | What is the document date for the project with document \"King Book\"?",
    "label": "CONFIRM_SQL",
    "output": "select documents.document_date from projects join documents on projects.project_id = documents.project_id where documents.document_name = 'King Book'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "How many documents are there with the document type code \"CV\"? | select count ( documents.document_date ) from projects join documents on projects.project_id = documents.project_id where documents.document_type_code = 'CV' | How many documents are there with the document type code \"BK\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( documents.document_date ) from projects join documents on projects.project_id = documents.project_id where documents.document_type_code = 'BK'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What are the document dates of all documents with the document type code \"BK\"? | select documents.document_date from projects join documents on projects.project_id = documents.project_id where documents.document_type_code = 'BK' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "bike_1",
    "input": "how many trip are presented on the table | select count ( * ) from trip | show all the start station name",
    "label": "CONFIRM_SQL",
    "output": "select start_station_name from trip"
  },
  {
    "db_id": "bike_1",
    "input": "what is the start date of Howard at 2nd  | Do you mean its start station is Howard at 2nd? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select start_date from trip where start_station_name = 'Howard at 2nd'"
  },
  {
    "db_id": "store_1",
    "input": "What is title of album which track Balls to the Wall belong to? | select albums.title from albums join tracks on albums.id = tracks.genre_id where tracks.name = 'Balls to the Wall' | Hmmm. What is title of album which track Fast as a Shark belong to?",
    "label": "CONFIRM_SQL",
    "output": "select albums.title from albums join tracks on albums.id = tracks.genre_id where tracks.name = 'Fast As a Shark'"
  },
  {
    "db_id": "store_1",
    "input": "And who is the composer for the album? | select tracks.composer from albums join tracks on albums.id = tracks.genre_id where tracks.name = 'Fast As a Shark' | What is title of album which track For Those About To Rock (We Salute You) belong to?",
    "label": "CONFIRM_SQL",
    "output": "select albums.title from albums join tracks on albums.id = tracks.genre_id where tracks.name = 'For Those About To Rock (We Salute You)'"
  },
  {
    "db_id": "product_catalog",
    "input": "What are the names of catalog with number 8 | select catalog_contents.catalog_entry_name from catalog_contents join catalog_contents_additional_attributes on catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id where catalog_contents_additional_attributes.catalog_level_number = '8' | Could you please show me their attribute ID",
    "label": "CONFIRM_SQL",
    "output": "select catalog_contents_additional_attributes.attribute_id from catalog_contents join catalog_contents_additional_attributes on catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id where catalog_contents_additional_attributes.catalog_level_number = '8'"
  },
  {
    "db_id": "product_catalog",
    "input": "What about their attribute value | select catalog_contents_additional_attributes.attribute_value from catalog_contents join catalog_contents_additional_attributes on catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id where catalog_contents_additional_attributes.catalog_level_number = '8' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Please show me all customers and their contact channels\n | Do you want the names of customers or id? | names please",
    "label": "CONFIRM_SQL",
    "output": "select distinct customer_name , channel_code from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "please show just those customers who's channel code was email | select distinct customer_name from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where channel_code = 'Email' | Please list just Tillman Ernsers contact channel",
    "label": "CONFIRM_SQL",
    "output": "select distinct channel_code from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customer_name = 'Tillman Ernser'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "The column \"product_id \" in Table: \"problems\" refers to column \"product_id\" in Table: \" product\" | could  give more info about  this question? | List the ids of the problem from the product ''voluptatem'' that are reported after 1995?",
    "label": "CONFIRM_SQL",
    "output": "select problems.problem_id from problems join product on problems.product_id = product.product_id where product.product_name = 'voluptatem' and problems.date_problem_reported > '1995'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Thanks! | are  you  want  to  leave?can you  ask more  question? | No Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  googbye"
  },
  {
    "db_id": "store_product",
    "input": "Find all stores in the Attock district | Do you want the id or the name of these stores? | The name",
    "label": "CONFIRM_SQL",
    "output": "select store.store_name from store join store_district on store.store_id = store_district.store_id join district on district.district_id = store_district.district_id where district.district_name = 'Attock District'"
  },
  {
    "db_id": "store_product",
    "input": "Find all the store names in the district with the lowest population.  | select store.store_name from store join store_district on store.store_id = store_district.store_id where district_id = ( select district_id from district order by city_population asc limit 1 ) | Find all the store names in the district with the highest population.",
    "label": "CONFIRM_SQL",
    "output": "select store.store_name from store join store_district on store.store_id = store_district.store_id where district_id = ( select district_id from district order by city_population desc limit 1 )"
  },
  {
    "db_id": "store_product",
    "input": "What is the city area of the district with the highest population.  | select city_area from district order by city_population desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "college_1",
    "input": "How many departments do you have? | select count ( * ) from department | What are the first names of professors in the history department?",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname from employee join professor on employee.emp_num = professor.emp_num where professor.dept_code = 'HIST'"
  },
  {
    "db_id": "college_1",
    "input": "What are the offices of these professors? | select professor.prof_office from employee join professor on employee.emp_num = professor.emp_num where professor.dept_code = 'HIST' | Can you tell me the first name and office of the professor in the history department who has a Ph.D. degree?",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname , professor.prof_office from employee join professor on employee.emp_num = professor.emp_num where professor.dept_code = 'HIST' and professor.prof_high_degree = 'Ph.D.'"
  },
  {
    "db_id": "theme_gallery",
    "input": "Can you please tell me the names of the artists who don't have any exhibitions? | select name from artist where artist_id not in ( select artist_id from exhibition ) | What are their countries?",
    "label": "CONFIRM_SQL",
    "output": "select country from artist where artist_id not in ( select artist_id from exhibition )"
  },
  {
    "db_id": "theme_gallery",
    "input": "What are their ages? | select age from artist where artist_id not in ( select artist_id from exhibition ) | What is the name of the oldest artist?",
    "label": "CONFIRM_SQL",
    "output": "select name from artist order by age desc limit 1"
  },
  {
    "db_id": "theme_gallery",
    "input": "Did he have any exhibitions? | select name from artist where artist_id in ( select artist_id from exhibition ) and name = 'Jeff Sluman' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_3",
    "input": "How many faculty members are in building Barton? | select count ( * ) from faculty where building = 'Barton' | Please list the faculty members in building Barton.",
    "label": "CONFIRM_SQL",
    "output": "select * from faculty where building = 'Barton'"
  },
  {
    "db_id": "college_3",
    "input": "Can you please get just their last names? | select lname from faculty where building = 'Barton' | Of the faculty members in building Barton, how many are in each rank?",
    "label": "CONFIRM_SQL",
    "output": "select rank , count ( * ) from faculty where building = 'Barton' group by rank"
  },
  {
    "db_id": "college_3",
    "input": "Can you please list the last names of the faculty in Barton one more time, in alphabetical order? | select lname from faculty where building = 'Barton' order by lname asc | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "store_1",
    "input": "Do you mean the contact number of the customer of 'Woodstock Discos'? | Yes. | Check whether Mr. Eduardo Martin is a customer or not?",
    "label": "CLARIFY",
    "output": "Great. Which is the first name?"
  },
  {
    "db_id": "store_1",
    "input": "Eduardo. | select * from customers where first_name = 'Eduardo' and last_name = 'Martins' | Of which company is Mr. Eduardo Martins a customer?",
    "label": "CONFIRM_SQL",
    "output": "select company from customers where first_name = 'Eduardo' and last_name = 'Martins'"
  },
  {
    "db_id": "store_1",
    "input": "In which city is the company 'Woodstock Discos' located? | select city from customers where company = 'Woodstock Discos' | what is the contact number of 'Woodstock discos' company?",
    "label": "CONFIRM_SQL",
    "output": "select phone from customers where company = 'Woodstock Discos'"
  },
  {
    "db_id": "store_1",
    "input": "What is the contact number of Mr. Eduardo Martins? | select phone from customers where first_name = 'Eduardo' and last_name = 'Martins' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye!"
  },
  {
    "db_id": "game_1",
    "input": "Can you show me the student names with ids? | select stuid , lname , fname from student | Hmm, can you list the student ids with sports played?",
    "label": "CONFIRM_SQL",
    "output": "select stuid , sportname from sportsinfo"
  },
  {
    "db_id": "game_1",
    "input": "I want to know the student names and ids who don’t play any sports. | select stuid , lname , fname from student where stuid not in ( select stuid from sportsinfo ) | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Do you want more help?"
  },
  {
    "db_id": "railway",
    "input": "Which railways do not have trains?\n | Did you mean the object number of railways that do not have any train? | Yes\n",
    "label": "CONFIRM_SQL",
    "output": "select objectnumber from railway where railway_id not in ( select railway_id from train )"
  },
  {
    "db_id": "railway",
    "input": "and ones that do?\n\n | select objectnumber from railway where railway_id in ( select railway_id from train ) | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select railway from railway where railway_id in ( select railway_id from train )"
  },
  {
    "db_id": "railway",
    "input": "and the names of the railways with no trains?\n | select railway from railway where railway_id not in ( select railway_id from train ) | when were they built?\n\n",
    "label": "CONFIRM_SQL",
    "output": "select built from railway where railway_id not in ( select railway_id from train )"
  },
  {
    "db_id": "gas_company",
    "input": "Hi can you show me all the headquarters of a company in backing industry? | Do you mean banking, not backing? | Sorry, yes banking!",
    "label": "CONFIRM_SQL",
    "output": "select headquarters from company where main_industry = 'Banking'"
  },
  {
    "db_id": "gas_company",
    "input": "Thank you! Can you now tell me the all the headquarters of a company in Oil and gas? | select headquarters from company where main_industry = 'Oil and gas' | Great, what about all the headquarters with both a company in oil and gas and a company in banking?",
    "label": "CONFIRM_SQL",
    "output": "select headquarters from company where main_industry = 'Banking' intersect select headquarters from company where main_industry = 'Oil and gas'"
  },
  {
    "db_id": "hr_1",
    "input": "What is the department id for the Finance department? | select department_id from departments where department_name = 'Finance' | How many employees work in that department?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees join departments on employees.department_id = departments.department_id where departments.department_name = 'Finance'"
  },
  {
    "db_id": "hr_1",
    "input": "What are their first names? | select employees.first_name from employees join departments on employees.department_id = departments.department_id where departments.department_name = 'Finance' | What is the job id for each employee in the Finance department?",
    "label": "CONFIRM_SQL",
    "output": "select employees.job_id from employees join departments on employees.department_id = departments.department_id where departments.department_name = 'Finance'"
  },
  {
    "db_id": "hr_1",
    "input": "What are their employee IDs? | select employees.employee_id from employees join departments on employees.department_id = departments.department_id where departments.department_name = 'Finance' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "hospital_1",
    "input": "What is is the number of patients who are not using Procrastin-X? | select count ( * ) from patient where ssn not in ( select prescribes.patient from prescribes join medication on prescribes.medication = medication.code where medication.name = 'Procrastin-X' ) | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select name from patient where ssn not in ( select prescribes.patient from prescribes join medication on prescribes.medication = medication.code where medication.name = 'Procrastin-X' )"
  },
  {
    "db_id": "game_1",
    "input": "How many hours of role-playing games were played? | select sum ( hours_played ) from plays_games join video_games where gtype = 'Role-playing game' | What game had the most hours played?",
    "label": "CONFIRM_SQL",
    "output": "select gname from plays_games join video_games on plays_games.gameid = video_games.gameid group by plays_games.gameid order by sum ( hours_played ) desc limit 1"
  },
  {
    "db_id": "game_1",
    "input": "Who played the most hours of Works of Widenius? | select stuid from plays_games join video_games on plays_games.gameid = video_games.gameid where video_games.gname = 'Works of Widenius' order by hours_played desc limit 1 | Did any other student play Works of Widenius?",
    "label": "CONFIRM_SQL",
    "output": "select plays_games.stuid from plays_games join video_games on plays_games.gameid = video_games.gameid where video_games.gname = 'Works of Widenius' and plays_games.studid != '1010'"
  },
  {
    "db_id": "game_1",
    "input": "How many students play Works of Widenius? | select count ( distinct plays_games.stuid ) from plays_games join video_games on plays_games.gameid = video_games.gameid where video_games.gname = 'Works of Widenius' | What game type is Works of Widenius?",
    "label": "CONFIRM_SQL",
    "output": "select gtype from video_games where gname = 'Works of Widenius'"
  },
  {
    "db_id": "game_1",
    "input": "Is Works of Widenius the only massively multiplayer online game played? | select gname from video_games where gname != 'Works of Widenius' and gtype = 'massively multiplayer online game' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye!"
  },
  {
    "db_id": "loan_1",
    "input": "Hello!  Can you provide me with a list of all of the customers with a credit score below 100? | select * from customer where credit_score < 100 | Can you provide me with a list of all of the loans that both Mary and Jack received?",
    "label": "CONFIRM_SQL",
    "output": "select loan.loan_type from customer join loan on customer.cust_id = loan.cust_id where customer.cust_name = 'Mary' intersect select loan.loan_type from customer join loan on customer.cust_id = loan.cust_id where customer.cust_name = 'Jack'"
  },
  {
    "db_id": "loan_1",
    "input": "Can you show me which bank branch provided the highest number of loans to customers with credit scores below 100? | select bank.bname from loan join bank on loan.branch_id = bank.branch_id join customer on loan.cust_id = customer.cust_id where customer.credit_score < 100 group by bank.bname order by sum ( loan.amount ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "thank. bye."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What is the customer name of customer id 9? | select customer_name from customers where customer_id = 9 | Find the payment method of Tillman Ernser.",
    "label": "CONFIRM_SQL",
    "output": "select payment_method from customers where customer_name = 'Tillman Ernser'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What are the contact number of customer id 3? | select contact_number from customer_contact_channels where customer_id = 3 | What is the \"active to date\" of the latest contact channel used by \"Tillman Ernser\"?",
    "label": "CONFIRM_SQL",
    "output": "select max ( customer_contact_channels.active_to_date ) from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customers.customer_name = 'Tillman Ernser'"
  },
  {
    "db_id": "twitter_1",
    "input": "how many  tweets there | select count ( * ) from tweets | what is email id of Mary",
    "label": "CLARIFY",
    "output": "Did you mean what is the email of Mary or uid or her?"
  },
  {
    "db_id": "twitter_1",
    "input": "yes  user profiles email id of mary\n | select email from user_profiles where name = 'Mary' | how many followers in Iron Man",
    "label": "CONFIRM_SQL",
    "output": "select followers from user_profiles where name = 'Iron Man'"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the top 3 enrollment numbers among the schools? | select enr from college order by enr desc limit 3 | Hmm, I want to know the states of the schools with the top 3 largest size.",
    "label": "CONFIRM_SQL",
    "output": "select state from college order by enr desc limit 3"
  },
  {
    "db_id": "soccer_2",
    "input": "Can you tell me the names of the schools with the top 3 largest size? | select cname from college order by enr desc limit 3 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "student_assessment",
    "input": "Did you mean the id of student with details Martin? | Yes | how many course id in the table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct course_id ) from student_course_registrations"
  },
  {
    "db_id": "student_assessment",
    "input": "what is martin's student id in the table? | select student_id from students where student_details = 'Martin' | Ok. thanks",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to know any other information? "
  },
  {
    "db_id": "station_weather",
    "input": "I need to know which train route passes through the most stations, please. | select train.name from train join route on train.id = route.train_id group by route.train_id order by count ( * ) desc limit 1 | How many stations does this train run through?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from train join route on train.id = route.train_id group by route.train_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "station_weather",
    "input": "What are the names of those stations? | select route.station_id from train join route on train.id = route.train_id group by route.train_id order by count ( * ) desc limit 3 | That's great - finally, can you please tell me the number of the Ananthapuri Express train?",
    "label": "CONFIRM_SQL",
    "output": "select train_number from train where name = 'Ananthapuri Express'"
  },
  {
    "db_id": "station_weather",
    "input": "Give me the times of all trains that go to Chennai | select time from train where destination = 'Chennai' | Show me the numbers of all trains that go to Chennai",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from train where destination = 'Chennai'"
  },
  {
    "db_id": "station_weather",
    "input": "Show me the train number of all trains that go to Chennai | select train_number from train where destination = 'Chennai' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "railway",
    "input": "how many railway there | select count ( * ) from railway | what is the train number of sewagram exp",
    "label": "CONFIRM_SQL",
    "output": "select train_num from train where name = 'Sewagram Exp'"
  },
  {
    "db_id": "railway",
    "input": "what is the location of mr | select location from railway where railway = 'MR' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "swimming",
    "input": "Can you list the names of all the swimmers who have won more than once? | select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' group by record.swimmer_id having count ( * ) > 1 | What are their nationalities?",
    "label": "CONFIRM_SQL",
    "output": "select swimmer.nationality from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' group by record.swimmer_id having count ( * ) > 1"
  },
  {
    "db_id": "swimming",
    "input": "Can you list the names and nationalities of the swimmers who have never won? | select swimmer.name , swimmer.nationality from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' except select swimmer.name , swimmer.nationality from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' group by record.swimmer_id having count ( * ) > 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "dorm_1",
    "input": "Did you mean the first name of students living in PHL city? | Yes | What are the students name living in PHL city?\n",
    "label": "CONFIRM_SQL",
    "output": "select fname from student where city_code = 'PHL'"
  },
  {
    "db_id": "dorm_1",
    "input": "Who are the students that are between 20 and 25 years of age? | Do you mean the last name or the first name of the students between 20 and 25 years of age? | What are the first names of the students who are between 20 and 25 years of age?",
    "label": "CONFIRM_SQL",
    "output": "select fname from student where age between 20 and 25"
  },
  {
    "db_id": "dorm_1",
    "input": "what are the student names who are in PHL city and are between 20 and 25 years of age | First name or last name? | first",
    "label": "CONFIRM_SQL",
    "output": "select fname from student where city_code = 'PHL' and age between 20 and 25"
  },
  {
    "db_id": "company_employee",
    "input": "Names of headquarters that have at least two companies? | select headquarters from company group by headquarters having count ( * ) >= 2 | What is tbe name of the company in china?",
    "label": "CONFIRM_SQL",
    "output": "select name from company where headquarters = 'China'"
  },
  {
    "db_id": "company_employee",
    "input": "What industry does petrochina belong to? | select industry from company where name = 'PetroChina' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to know anything else? "
  },
  {
    "db_id": "apartment_rentals",
    "input": "What is the booking status of the apartment with number \"Suite 634\"? | select apartment_bookings.booking_status_code from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.apt_number = 'Suite 634' | What is the bathroom count for \"Suite 643\"?",
    "label": "CONFIRM_SQL",
    "output": "select apartments.bathroom_count from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.apt_number = 'Suite 634'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What is the apartment type code for \"Suite 643\"? | select apartments.apt_type_code from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.apt_number = 'Suite 634' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "candidate_poll",
    "input": "How many poll sources are there? | select count ( poll_source ) from candidate | how many people are there?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( people_id ) from people"
  },
  {
    "db_id": "candidate_poll",
    "input": "And how many are female?\n | Do you mean the people who are female? | Yes, how many are female, have gender \"F\"",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where sex = 'F'"
  },
  {
    "db_id": "candidate_poll",
    "input": "what is their unsure rate?\n | Do you mean the unsure rate of the people who are female? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select candidate.unsure_rate from people join candidate on people.people_id = candidate.people_id where people.sex = 'F'"
  },
  {
    "db_id": "candidate_poll",
    "input": "and the males? | Do you mean the unsure rate of the people who are male? | yes",
    "label": "CONFIRM_SQL",
    "output": "select candidate.unsure_rate from people join candidate on people.people_id = candidate.people_id where people.sex = 'M'"
  },
  {
    "db_id": "college_1",
    "input": "what is employee number of james ? | Is James a first name or last name? | first name\n",
    "label": "CONFIRM_SQL",
    "output": "select emp_num from employee where emp_fname = 'James'"
  },
  {
    "db_id": "college_1",
    "input": "please show me the DOB OF EMPLOYEE WHO HAS THIS AS HIS FIRST NAME\n | Do you mean the first name \"James\"? | yeah \n",
    "label": "CONFIRM_SQL",
    "output": "select emp_dob from employee where emp_fname = 'James'"
  },
  {
    "db_id": "college_1",
    "input": "SHOW ME THE  hire date OF THE EMPLOYEE WHO HAS THE FIRST NAME AS JAMES | select emp_hiredate from employee where emp_fname = 'James' | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "candidate_poll",
    "input": "Find the average height and weight for all males (sex is M). | select avg ( height ) , avg ( weight ) from people where sex = 'M' | How many male people are on the table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where sex = 'M'"
  },
  {
    "db_id": "candidate_poll",
    "input": "Which person has the highest height? | select * from people order by height desc limit 1 | How many female people are on the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where sex = 'F'"
  },
  {
    "db_id": "college_3",
    "input": "What is the door number to the house of the instructor? | * I have left the chat * | select room from faculty where rank = 'Instructor'",
    "label": "INFORM_SQL",
    "output": "what is the first name of  the instructor who teaches the least number of courses?"
  },
  {
    "db_id": "college_3",
    "input": "select faculty.fname from course join faculty on course.instructor = faculty.facid group by course.instructor order by count ( * ) asc limit 1 | Does the istructor who teaches the least no of courses live on the first or the second floor of the bulding? | select faculty.room from course join faculty on course.instructor = faculty.facid group by course.instructor order by count ( * ) desc limit 1",
    "label": "NOT_RELATED",
    "output": "Is the house that the instructor who teaches the least no of courses connected to WiFi?"
  },
  {
    "db_id": "college_3",
    "input": "the question is not related | Ok, thank you | welcome goodbye\n",
    "label": "THANK_YOU",
    "output": "Thanks"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What was the least quantity of items purchased? | do you mean the id of product or the id of order? | ID of the order please.",
    "label": "CONFIRM_SQL",
    "output": "select order_id from order_items order by order_quantity asc limit 1"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What is the payment method of the order with an id of 11? | select customers.payment_method from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customer_orders.order_id = 11 | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "How many products are there? | select count ( * ) from products | How many orders were there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct order_id ) from order_items"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Were there any products that are not included in any of the 8 orders? | select * from products where product_id not in ( select product_id from order_items ) | What is the total number of products not included in any of the orders?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products where product_id not in ( select product_id from order_items )"
  },
  {
    "db_id": "driving_school",
    "input": "What is the status code of the customer with the last name Kohler or first name Marina? | select customer_status_code from customers where first_name = 'Marina' or last_name = 'Kohler' | What are the names of each of those codes?",
    "label": "REQUEST_MORE",
    "output": "Sorry I don't have that information. Can you ask anything else?"
  },
  {
    "db_id": "driving_school",
    "input": "What is the mobile phone number of the customer with the last name Kohler or first name Marina? | select phone_number from customers where first_name = 'Marina' or last_name = 'Kohler' | How about their email addresses?",
    "label": "CONFIRM_SQL",
    "output": "select email_address from customers where first_name = 'Marina' or last_name = 'Kohler'"
  },
  {
    "db_id": "formula_1",
    "input": "You are welcome. Good bye! | What are the driver's names? | select forename , surname from drivers",
    "label": "INFORM_SQL",
    "output": "How many of them participated in more than 5 races?"
  },
  {
    "db_id": "formula_1",
    "input": "select count ( * ) from ( select ( drivers.driverid ) from drivers join results on drivers.driverid = results.driverid group by drivers.driverid having count ( * ) > 5 ) | Which drivers had 8 pit stops or more? | select count ( * ) from ( select drivers.forename , drivers.surname , drivers.driverid from drivers join pitstops on drivers.driverid = pitstops.driverid group by drivers.driverid having count ( * ) > 8 )",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "customer_complaints",
    "input": "Which state has the most customers? | select state from customers group by state order by count ( * ) asc limit 1 | Which state has the fourth least customers?",
    "label": "CONFIRM_SQL",
    "output": "select state from customers group by state order by count ( * ) asc limit 4"
  },
  {
    "db_id": "customer_complaints",
    "input": "How many customers have the customer type code \"Good Credit Rating\"? | select count ( customer_id ) from customers where customer_type_code = 'Good Credit Rating' | What are the states of all customers who who have the customer type code Good Credit Rating?",
    "label": "CONFIRM_SQL",
    "output": "select state from customers where customer_type_code = 'Good Credit Rating'"
  },
  {
    "db_id": "customer_complaints",
    "input": "What are the customer ids of all customers who who have the customer type code Good Credit Rating? | select customer_id from customers where customer_type_code = 'Good Credit Rating' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "protein_institute",
    "input": "show the maximum number of floors for all buildings? | select max ( floors ) from building | Show me the name of the building with building id 1?",
    "label": "CONFIRM_SQL",
    "output": "select name from building where building_id = '1'"
  },
  {
    "db_id": "protein_institute",
    "input": "Show me the name of the building with 12 floors? | select name from building where floors = 12 | Show me the average and minimum number of floors for all buildings?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( floors ) , min ( floors ) from building"
  },
  {
    "db_id": "body_builder",
    "input": "What is the most common birth place of people? | select birth_place from people group by birth_place order by count ( * ) desc limit 1 | What are the names of the people born there?",
    "label": "CONFIRM_SQL",
    "output": "select name from people where birth_place = 'Anchorage, Alaska'"
  },
  {
    "db_id": "body_builder",
    "input": "What is the least common birthplace of people? | select birth_place from people group by birth_place order by count ( * ) asc limit 1 | What about the most common?",
    "label": "CONFIRM_SQL",
    "output": "select birth_place from people group by birth_place order by count ( * ) desc limit 1"
  },
  {
    "db_id": "body_builder",
    "input": "What is the birth date of Ty Conklin? | select birth_place from people where name = 'Ty Conklin' | When was he born?",
    "label": "CONFIRM_SQL",
    "output": "select birth_date from people where name = 'Ty Conklin'"
  },
  {
    "db_id": "body_builder",
    "input": "What is his height? | select height from people where name = 'Ty Conklin' | Tell me his weight please.",
    "label": "CONFIRM_SQL",
    "output": "select weight from people where name = 'Ty Conklin'"
  },
  {
    "db_id": "body_builder",
    "input": "What are the names of the other people with that weight? | select name from people where weight = 90.0 and name != 'Ty Conklin' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "ship_mission",
    "input": "Show the types of ships that have both ships with tonnage larger than 6000 and ships with tonnage smaller than 4000. | select type from ship where tonnage > 6000 intersect select type from ship where tonnage < 4000 | Show the types of ships with tonnage between 3000 and 5000.",
    "label": "CONFIRM_SQL",
    "output": "select distinct type from ship where tonnage > 3000 and tonnage < 5000"
  },
  {
    "db_id": "ship_mission",
    "input": "What is the nationality of the ship with maximum tonnage? | select nationality from ship order by tonnage desc limit 1 | Can you give me the nationality of the ship with minimum tonnage.",
    "label": "CONFIRM_SQL",
    "output": "select nationality from ship order by tonnage asc limit 1"
  },
  {
    "db_id": "ship_mission",
    "input": "What is the maximum and the minimum tonnage for a cargo ship? | select max ( tonnage ) , min ( tonnage ) from ship where type = 'Cargo ship' | Hmmm. Can you also give me the maximum and the minimum tonnage for a battle ship?",
    "label": "CONFIRM_SQL",
    "output": "select max ( tonnage ) , min ( tonnage ) from ship where type = 'Battle ship'"
  },
  {
    "db_id": "roller_coaster",
    "input": "how many  country there | select count ( * ) from country | what is the languages of Finland",
    "label": "CONFIRM_SQL",
    "output": "select languages from country where name = 'Finland'"
  },
  {
    "db_id": "roller_coaster",
    "input": "what is the speed of Dauling Dragon | select speed from roller_coaster where name = 'Dauling Dragon' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "shop_membership",
    "input": "What is the name of the branch with the greatest amount of memberships that were registered in the year 2016? | select branch.name from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id where membership_register_branch.register_year = 2016 group by branch.branch_id order by count ( * ) desc limit 1 | What is the year that branch opened?",
    "label": "CONFIRM_SQL",
    "output": "select branch.open_year from membership_register_branch join branch on membership_register_branch.branch_id = branch.branch_id where membership_register_branch.register_year = 2016 group by branch.branch_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "shop_membership",
    "input": "Can you list the name and membership amount of the branch that had the least amount of memberships that were opened in the year 2017? | select name , membership_amount from branch where membership_amount = ( select min ( membership_amount ) from branch where open_year like '%2017%' ) | Can you list the name and opening year of the branch that opened the earliest?",
    "label": "CONFIRM_SQL",
    "output": "select name , open_year from branch where open_year = ( select min ( open_year ) from branch )"
  },
  {
    "db_id": "cinema",
    "input": "How many film titles are there? | select count ( distinct title ) from film | Please list all the film titles.",
    "label": "CONFIRM_SQL",
    "output": "select title from film"
  },
  {
    "db_id": "cinema",
    "input": "Please list each title with its maximum price. | select film.title , max ( price ) from film join schedule on film.film_id = schedule.film_id group by film.film_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "inn_1",
    "input": "Could you please tell me which room has the cheapest base price? | select * from rooms order by baseprice asc limit 1 | Could you please tell me which room has the most expensive base price?",
    "label": "CONFIRM_SQL",
    "output": "select * from rooms order by baseprice desc limit 1"
  },
  {
    "db_id": "inn_1",
    "input": "What is the average base price for all rooms? | select avg ( baseprice ) from rooms | What is the median base price for all rooms?",
    "label": "REQUEST_MORE",
    "output": "sorry I cannot answer that. please ask anything else."
  },
  {
    "db_id": "inn_1",
    "input": "What is the name of the room with the largest max occupancy? | select roomname from rooms order by maxoccupancy desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "epinions_1",
    "input": "for which user id rating is high | did you mean for which user id is the rating highest? | ok, find user id who gives the rating 10",
    "label": "CONFIRM_SQL",
    "output": "select useracct.u_id from useracct join review on useracct.u_id = review.u_id where review.rating = 10"
  },
  {
    "db_id": "epinions_1",
    "input": "find the name of the user who gives most reviews | select useracct.name from useracct join review on useracct.u_id = review.u_id group by review.u_id order by count ( * ) desc limit 1 | find the name of the user who gives 1 rank",
    "label": "CONFIRM_SQL",
    "output": "select useracct.name from useracct join review on useracct.u_id = review.u_id where review.rank = 1"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the the birth country of player-ids? | Do you mean the birth country of all players? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select birth_country from player"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the birth state of player aardsda01?\n | select birth_state from player where player_id = 'aardsda01' | What about birth city?",
    "label": "CONFIRM_SQL",
    "output": "select birth_city from player where player_id = 'aardsda01'"
  },
  {
    "db_id": "baseball_1",
    "input": "and for aaronto01? | You mean the birth city for the player with ID aaronto01? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select birth_city from player where player_id = 'aaronto01'"
  },
  {
    "db_id": "baseball_1",
    "input": "How many players in the USA have a batter value R?\n | select count ( * ) from player where birth_country = 'USA' and bats = 'R' | How many are still alive?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player where birth_country = 'USA' and bats = 'R' and death_year > 2018"
  },
  {
    "db_id": "baseball_1",
    "input": "How many with a batter value of R are still playing? | Sorry the question cannot be answered from the table. | How many with a value R that are dead, died in the USA?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player where birth_country = 'USA' and bats = 'R' and death_year < 2019 and death_country = 'USA'"
  },
  {
    "db_id": "baseball_1",
    "input": "How many with a value R died after the year 2000? | select count ( * ) from player where bats = 'R' and death_year > 2000 | What about born after the year 1980?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player where bats = 'R' and birth_year > 1980"
  },
  {
    "db_id": "allergy_1",
    "input": "Can you list the student ids and their allergies? | select stuid , allergy from has_allergy | How many students have milk or egg allergies?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from has_allergy join student on has_allergy.stuid = student.stuid where has_allergy.allergy = 'Milk' or has_allergy.allergy = 'Eggs'"
  },
  {
    "db_id": "allergy_1",
    "input": "Hmm, I want to know just the number of female students who have milk or egg allergies. | select count ( * ) from ( select * from has_allergy join student on has_allergy.stuid = student.stuid where has_allergy.allergy = 'Milk' or has_allergy.allergy = 'Eggs' ) where sex = 'F' and | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "party_people",
    "input": "What member is in charge of the most events? | select member_in_charge_id , count ( * ) from party_events group by member_in_charge_id order by count ( * ) desc limit 1 | What is the name of Member ID 4?",
    "label": "CONFIRM_SQL",
    "output": "select member_name from member where member_id = 4"
  },
  {
    "db_id": "party_people",
    "input": "What is Hon John Anderson's  Party ID ? | select party_id from member where member_name = 'Hon John Anderson' | What events is Hon John Anderson in charge of ?",
    "label": "CONFIRM_SQL",
    "output": "select event_name from member join party_events on member.party_id = party_events.party_id where member_name = 'Hon John Anderson'"
  },
  {
    "db_id": "film_rank",
    "input": "Find the number of cities in USA country? | select number_cities from market where country = 'USA' | How many country's located in the world?",
    "label": "CONFIRM_SQL",
    "output": "select count ( country ) from market"
  },
  {
    "db_id": "film_rank",
    "input": "What are the market id of china? | select market_id from market where country = 'China' | What are the maximum and minimum number of cities in all markets.",
    "label": "CONFIRM_SQL",
    "output": "select max ( number_cities ) , min ( number_cities ) from market"
  },
  {
    "db_id": "driving_school",
    "input": "Hi there!  Can you provide me with the country and state province county information for the staff member named Janessa Sawayn? | Are you referring to the staff member having first name Janessa and last name Sawayn? | Yes, that is correct!",
    "label": "CONFIRM_SQL",
    "output": "select addresses.country , addresses.state_province_county from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Janessa' and staff.last_name = 'Sawayn'"
  },
  {
    "db_id": "driving_school",
    "input": "Great!  Can you tell me how many other staff also have \"Connecticut\" as their state province county? | select count ( * ) from addresses join staff on addresses.address_id = staff.staff_address_id where state_province_county = 'Connecticut' | Can you please list the fist name and last name of these two other staff?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name from addresses join staff on addresses.address_id = staff.staff_address_id where state_province_county = 'Connecticut'"
  },
  {
    "db_id": "student_1",
    "input": "what is the lname of grade 2 | Do you mean what are the last names of the students in grade 2? | what is the lname of classroom 101",
    "label": "CONFIRM_SQL",
    "output": "select lastname from list where classroom = 101"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "how many products are there | select count ( * ) from products | what is the product name of color code 2",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products where color_code = 2"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the characteristic data type of characteristic id 1 | select characteristic_data_type from characteristics where characteristic_id = 1 | thanks!",
    "label": "SORRY",
    "output": "welcomde,goodbye"
  },
  {
    "db_id": "insurance_fnol",
    "input": "How many policies does America Jaskolski have listed?\n | select count ( * ) from customers join customers_policies on customers.customer_id = customers_policies.customer_id where customer_name = 'America Jaskolski' | What about Mrs. Hanna Willms ?",
    "label": "CLARIFY",
    "output": "Did  you  mean the number of policies Mrs. Hanna Willms has listed?"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Yes | select count ( * ) from customers join customers_policies on customers.customer_id = customers_policies.customer_id where customer_name = 'Mrs. Hanna Willms' | How many policies are listed total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( policy_id ) from customers_policies"
  },
  {
    "db_id": "insurance_fnol",
    "input": "What is the Customer Name who has the most policies listed ?\n | select customers.customer_name from customers join customers_policies on customers.customer_id = customers_policies.customer_id group by customers.customer_name order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome  and   bye "
  },
  {
    "db_id": "club_1",
    "input": "Hi. How many different clubs are there in total? | select count ( * ) from club | What are the names of the 4 clubs?",
    "label": "CONFIRM_SQL",
    "output": "select clubname from club"
  },
  {
    "db_id": "club_1",
    "input": "Among the 4 clubs, how many members are there in total? | select count ( * ) from member_of_club | Of the 4 members, how many of them are members of the club \"Pen and Paper Gaming\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Pen and Paper Gaming'"
  },
  {
    "db_id": "election_representative",
    "input": "what is the average lifespan of the representatives | select avg ( lifespan ) from representative | what parties have at least two representatives",
    "label": "CONFIRM_SQL",
    "output": "select party from representative group by party having count ( * ) >= 2"
  },
  {
    "db_id": "department_store",
    "input": "Did you mean the id of the products that were ordered four or more times? | Yes. | Which items were ordered four or more times?",
    "label": "CONFIRM_SQL",
    "output": "select product_id from order_items group by product_id having count ( * ) >= 4"
  },
  {
    "db_id": "department_store",
    "input": "What is the id of products supplied more than 80000? | select product_id from product_suppliers group by product_id having sum ( total_amount_purchased ) > 80000 | What is the product id of the product?\n",
    "label": "REJECT",
    "output": "We already showed that info."
  },
  {
    "db_id": "department_store",
    "input": "What is the latest date that orders were sent by supplier id 4? | Did you mean date of supplied from or to? | Supplied to.\n",
    "label": "CONFIRM_SQL",
    "output": "select date_supplied_to from product_suppliers where supplier_id = 4 order by date_supplied_to desc limit 1"
  },
  {
    "db_id": "match_season",
    "input": "What colleges do the players play for? | * I have left the chat * | I'm sorry, do you mean you wanna see the whole collages' names?",
    "label": "AFFIRM",
    "output": "Yes, please"
  },
  {
    "db_id": "match_season",
    "input": "select distinct college from match_season | Thank you. And what are the names of the players who play for those schools? | select player from match_season",
    "label": "INFORM_SQL",
    "output": "Thank you. Which players play midfielder?"
  },
  {
    "db_id": "match_season",
    "input": "select player from match_season where position = 'Midfielder' | Which college have both players with position midfielder and players with position defender? | select college from match_season where position = 'Midfielder' intersect select college from match_season where position = 'Defender'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "sakila_1",
    "input": "What are the last name of staff id 1? | Do you mean customer, not staff? | yes",
    "label": "CONFIRM_SQL",
    "output": "select last_name from customer where customer_id = 1"
  },
  {
    "db_id": "sakila_1",
    "input": "what is the inventory id of the rent id 3? | select inventory_id from rental where rental_id = 3 | what is the first name and the last name of the customer who made the earliest rental ?",
    "label": "CONFIRM_SQL",
    "output": "select customer.first_name , customer.last_name from customer join rental on customer.customer_id = rental.customer_id order by rental.rental_date asc limit 1"
  },
  {
    "db_id": "station_weather",
    "input": "What are the times of trains that go to chennai? | select time from train where destination = 'Chennai' | What are the trains names that go to chennai?",
    "label": "CONFIRM_SQL",
    "output": "select name from train where destination = 'Chennai'"
  },
  {
    "db_id": "station_weather",
    "input": "What is the origin of Ananthapuri express ? | select origin from train where name = 'Ananthapuri Express' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "game_1",
    "input": "What are the number of games played for students under the age of 20? | select sum ( gamesplayed ) from sportsinfo join student on sportsinfo.stuid = student.stuid where student.age < 20 | What are the total hours per week students under the age of 20 played games?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( hoursperweek ) from sportsinfo join student on sportsinfo.stuid = student.stuid where student.age < 20"
  },
  {
    "db_id": "activity_1",
    "input": "Do you mean the last name of the faculty with a first name Mark? | Yes! | what is the lname of mark",
    "label": "CONFIRM_SQL",
    "output": "select lname from faculty where fname = 'Mark'"
  },
  {
    "db_id": "activity_1",
    "input": "what is the activity id of 1082 | sorry  i  have  no  answer  to this  question | what is the activity id of faculty id of 1082",
    "label": "CONFIRM_SQL",
    "output": "select actid from faculty_participates_in where facid = 1082"
  },
  {
    "db_id": "activity_1",
    "input": "what is the rank of mark | select rank from faculty where fname = 'Mark' | thanks",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "wine_1",
    "input": "Hi, could you please show me the list of all appellations those produce wine after 2008? | select appelation from wine where year > 2008 | That's a big list, thank you. Then could you please exclude Central Coast area from them?",
    "label": "CONFIRM_SQL",
    "output": "select appelation from wine where year > 2008 except select appelation from appellations where area = 'Central Coast'"
  },
  {
    "db_id": "wine_1",
    "input": "That's great, thank you. Could you please show me the list of states where these appellations are located at? | select state from appellations where appelation in ( select appelation from wine where year > 2008 except select appelation from appellations where area = 'Central Coast' ) | Wow, other than Central Coast is all California. Thank you, are there any appellations those are not in California?",
    "label": "CONFIRM_SQL",
    "output": "select appelation from appellations where state != 'California'"
  },
  {
    "db_id": "wine_1",
    "input": "Oh.. actually somewhat expected that. Thank you, then could you please let me know the average price of all wines? | select avg ( price ) from wine | Then could you please show me the list of wines those are more expensive than the average?",
    "label": "CONFIRM_SQL",
    "output": "select * from wine where price > ( select avg ( price ) from wine )"
  },
  {
    "db_id": "wine_1",
    "input": "Wow great, thank you. This will be my last question, could you please let me know which ones of them are good to drink now? | select count ( * ) from wine where drink = 'now' | Thanks! ",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "hospital_1",
    "input": "Which department has the least number of employees? | select * from department group by departmentid order by count ( * ) asc limit 1 | What is the head of that department?",
    "label": "CONFIRM_SQL",
    "output": "select head from department group by departmentid order by count ( departmentid ) asc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "Ok and what is the employee id for the head? | Sorry I don't have that information. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_3",
    "input": "What is the highest grade point? | select max ( gradepoint ) from gradeconversion | What is the highest grade point for each letter grade?",
    "label": "CONFIRM_SQL",
    "output": "select lettergrade , max ( gradepoint ) from gradeconversion group by lettergrade"
  },
  {
    "db_id": "college_3",
    "input": "Can you show both the highest and lowest grade point for each letter grade? | select lettergrade , max ( gradepoint ) , min ( gradepoint ) from gradeconversion group by lettergrade | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "election_representative",
    "input": "list the life spans of all representatives | select lifespan from representative | what are the life spans of representatives from New York? ",
    "label": "CONFIRM_SQL",
    "output": "select lifespan from representative where state = 'New York'"
  },
  {
    "db_id": "election_representative",
    "input": "what are the life spans of representatives from Indiana?  | select lifespan from representative where state = 'Indiana' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Would you like to ask for more information on the representatives?"
  },
  {
    "db_id": "film_rank",
    "input": "How many films are there in total? | select count ( distinct title ) from film | How many of those films do not have any market estimation?",
    "label": "CONFIRM_SQL",
    "output": "select count ( title ) from film where film_id not in ( select film_id from film_market_estimation )"
  },
  {
    "db_id": "film_rank",
    "input": "What is the estimation ID of those nine films? | Sorry, we do not market estimation information for films that do not have market estimations. | What about film IDs?",
    "label": "CLARIFY",
    "output": "Do you mean the film IDs of the 9 films that do not have market estimations?"
  },
  {
    "db_id": "film_rank",
    "input": "Yes, could you tell me those films' IDs? | select film_id from film where film_id not in ( select film_id from film_market_estimation ) | What are the titles of the films with those IDs?",
    "label": "CONFIRM_SQL",
    "output": "select title from film where film_id in ( select film_id from film where film_id not in ( select film_id from film_market_estimation ) )"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What is the number of the apartment with the greatest number of bedrooms? | select apt_number from apartments order by bedroom_count desc limit 1 | What is the number of the apartment with the least number of bedrooms?",
    "label": "CONFIRM_SQL",
    "output": "select apt_number from apartments order by bedroom_count asc limit 1"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What is the apartment type code of the apartment with the greatest number of bathrooms? | select apt_type_code from apartments order by bathroom_count desc limit 1 | How many rooms does that apartment have, and what is the number of that apartment?",
    "label": "CONFIRM_SQL",
    "output": "select room_count , apt_number from apartments order by bathroom_count desc limit 1"
  },
  {
    "db_id": "hr_1",
    "input": "List all employees? | select first_name , last_name from employees | Of these employees, how many did not have a job in the past?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees where employee_id not in ( select employee_id from job_history )"
  },
  {
    "db_id": "hr_1",
    "input": "Okay. How many had jobs in the past? | select count ( * ) from employees where employee_id in ( select employee_id from job_history ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "scientist_1",
    "input": "Find the number of scientists involved for the projects that require more than 300 hours | select count ( distinct scientist ) from projects join assignedto on projects.code = assignedto.project where projects.hours > 300 | Hmm. Can you give me their names.",
    "label": "REJECT",
    "output": "sorry, there is no info about their names in the tables."
  },
  {
    "db_id": "scientist_1",
    "input": "Find the number of scientists involved for the projects that require less than 300 hours | select count ( distinct scientist ) from projects join assignedto on projects.code = assignedto.project where projects.hours < 300 | And what are the name of the departments requiring between 100 and 200 hours",
    "label": "CLARIFY",
    "output": "there is no info about departments, did you mean projects?"
  },
  {
    "db_id": "scientist_1",
    "input": "yes projects | select name from projects where hours < 200 and hours > 100 | and what are the names of the projects requiring more than 300 hours",
    "label": "CONFIRM_SQL",
    "output": "select name from projects where hours > 300"
  },
  {
    "db_id": "scientist_1",
    "input": "and what is the scientist id for project Aerodynamics and Bridge Design | select assignedto.scientist from projects join assignedto on projects.code = assignedto.project where projects.name = 'Aerodynamics and Bridge Design' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "shop_membership",
    "input": "How many names in this table? | select count ( name ) from branch | Find the total amount of membership?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( membership_amount ) from branch"
  },
  {
    "db_id": "shop_membership",
    "input": "Find highest membership amount? | select membership_amount from branch order by membership_amount desc limit 1 | Find the lowest membership amount?",
    "label": "CONFIRM_SQL",
    "output": "select min ( membership_amount ) from branch"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the color code of basil? | select color_code from products where product_name = 'basil' | what is the color with least products?",
    "label": "CONFIRM_SQL",
    "output": "select ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code group by ref_colors.color_description order by count ( * ) asc limit 1"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the name of the product with color code 4? | select product_name from products where color_code = 4 | What is the typical selling price of product paper?",
    "label": "CONFIRM_SQL",
    "output": "select typical_selling_price from products where product_name = 'peper'"
  },
  {
    "db_id": "baseball_1",
    "input": "Which player has the highest salary on the list? | select player_id from salary order by salary desc limit 1 | How many players has the birth country in USA?",
    "label": "CONFIRM_SQL",
    "output": "select count ( player_id ) from player where birth_country = 'USA'"
  },
  {
    "db_id": "baseball_1",
    "input": "State the team id which has the highest rank in the list? | select team_id from team order by rank asc limit 1 | List player's first name and last name who received salary from team Washington Nationals in both 2005 and 2007?",
    "label": "CONFIRM_SQL",
    "output": "select player.name_first , player.name_last from salary join player on salary.player_id = player.player_id join team on team.team_id_br = salary.team_id where salary.year = 2005 and team.name = 'Washington Nationals' intersect select player.name_first , player.name_last from salary join player on salary.player_id = player.player_id join team on team.team_id_br = salary.team_id where salary.year = 2007 and team.name = 'Washington Nationals'"
  },
  {
    "db_id": "network_2",
    "input": "what is the name of all males?  | select name from person where gender = 'male' | what is the age of Bob?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "who is a doctor?  | select name from person where job = 'doctor' | Thanks! ",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many different apartment building are there?\n | select count ( distinct building_id ) from apartment_buildings | How many of those apartment building are managed by Kyle?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartment_buildings join apartments on apartment_buildings.building_id = apartments.building_id where apartment_buildings.building_manager = 'Kyle'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many apartment type codes are there? | select count ( distinct apt_type_code ) from apartments | Show the apartment types codes in buildings managed by Kyle?",
    "label": "CONFIRM_SQL",
    "output": "select apartments.apt_type_code from apartment_buildings join apartments on apartment_buildings.building_id = apartments.building_id where apartment_buildings.building_manager = 'Kyle'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Show the apartment numbers in the buildings managed by Kyle. | select apartments.apt_number from apartment_buildings join apartments on apartment_buildings.building_id = apartments.building_id where apartment_buildings.building_manager = 'Kyle' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "voter_2",
    "input": "What is the first and last name of all students 18 years old who have vice president votes? | select distinct student.fname , student.lname from student join voting_record on student.stuid = voting_record.vice_president_vote where student.age = 18 | Ok, what is the first and last name of the student who has president votes?",
    "label": "CONFIRM_SQL",
    "output": "select distinct student.fname , student.lname from student join voting_record on student.stuid = voting_record.president_vote"
  },
  {
    "db_id": "voter_2",
    "input": "What are all of the vote categories that students can have? | select * from voting_record | Ok, and of the students who had President votes how many were males?",
    "label": "CONFIRM_SQL",
    "output": "select distinct count ( * ) from student join voting_record on student.stuid = voting_record.president_vote where student.sex = 'M'"
  },
  {
    "db_id": "department_store",
    "input": "What is the average price of all products? | select avg ( product_price ) from products | What is the product type of the product whose average price is greater than the average price of all products?",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code from products group by product_type_code having avg ( product_price ) > ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "department_store",
    "input": "What is the average price of that product with type code Hardware? | select avg ( product_price ) from products where product_type_code = 'Hardware' | What is the average price of all products with the type code \"clothes\"?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( product_price ) from products where product_type_code = 'Clothes'"
  },
  {
    "db_id": "theme_gallery",
    "input": "What is the name for the artist with the most number of exhibitions? | select artist.name from exhibition join artist on exhibition.artist_id = artist.artist_id group by exhibition.artist_id order by count ( * ) desc limit 1 | What country is he from?",
    "label": "CONFIRM_SQL",
    "output": "select artist.country from exhibition join artist on exhibition.artist_id = artist.artist_id group by exhibition.artist_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "theme_gallery",
    "input": "What other artists are from there? | select * from artist where country = ( select artist.country from exhibition join artist on exhibition.artist_id = artist.artist_id group by exhibition.artist_id order by count ( * ) desc limit 1 ) | What other artists are the same age as him?",
    "label": "CONFIRM_SQL",
    "output": "select * from artist where age = ( select artist.age from exhibition join artist on exhibition.artist_id = artist.artist_id group by exhibition.artist_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "theme_gallery",
    "input": "Are there any other artists that joined in the same year? | select * from artist where year_join = ( select artist.year_join from exhibition join artist on exhibition.artist_id = artist.artist_id group by exhibition.artist_id order by count ( * ) desc limit 1 ) | Who is the artist with the least number of exhibitions?",
    "label": "CONFIRM_SQL",
    "output": "select artist.* from exhibition join artist on exhibition.artist_id = artist.artist_id group by exhibition.artist_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "soccer_1",
    "input": "Hello!  Can you please provide me with a list of the player IDs and player names? | select player_api_id , player_name from player | Can you update this list to show both the heights for each player, as well as each of their overall scores?",
    "label": "CONFIRM_SQL",
    "output": "select player.player_api_id , player.player_name , player.height , player_attributes.overall_rating from player join player_attributes on player.player_fifa_api_id = player_attributes.player_fifa_api_id"
  },
  {
    "db_id": "soccer_1",
    "input": "Thank you!  Can you filter this list to show only the players who have an overall rating higher than 85? | select player.player_api_id , player.player_name , player.height , player_attributes.overall_rating from player join player_attributes on player.player_fifa_api_id = player_attributes.player_fifa_api_id where player_attributes.overall_rating > 85 | Excellent!  Finally, could you filter this list to show only the players with a height that is greater than 180 cm?",
    "label": "CONFIRM_SQL",
    "output": "select player_api_id from player where height > 180 intersect select player_api_id from player_attributes where overall_rating > 85"
  },
  {
    "db_id": "phone_1",
    "input": "Can you list the maximum number of used kb in screen mode? | select max ( used_kb ) from screen_mode | How about the minimum too?",
    "label": "CONFIRM_SQL",
    "output": "select min ( used_kb ) from screen_mode"
  },
  {
    "db_id": "phone_1",
    "input": "Could you get me the average as well, please? | select avg ( used_kb ) from screen_mode | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "chinook_1",
    "input": "State the email id of custormer id 1? | select email from customer where customerid = '1' | How many employees are from Calgary city?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employee where city = 'Calgary'"
  },
  {
    "db_id": "chinook_1",
    "input": "Please show the employee first names and ids of employees who serve at least 10 customers? | select customer.firstname , customer.supportrepid from customer join employee on customer.supportrepid = employee.employeeid group by customer.supportrepid having count ( * ) >= 10 | State the title of employee id 2?",
    "label": "CONFIRM_SQL",
    "output": "select title from employee where employeeid = 2"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Could you please show me the average share count of transactions of each investor? | select investor_id , avg ( share_count ) from transactions group by investor_id | Could you order those by average share count, please?",
    "label": "CONFIRM_SQL",
    "output": "select investor_id , avg ( share_count ) from transactions group by investor_id order by avg ( share_count ) asc"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are the dates of those transactions? | select date_of_transaction from transactions | What about just the ones with the transaction type code SALE?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_transaction from transactions where transaction_type_code = 'SALE'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What about transactions with type code PUR? | select date_of_transaction from transactions where transaction_type_code = 'PUR' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Hi, can you tell me the name of an HR employee? | select employee_name from employees where role_code = 'HR' | Great, can you show the role code with the last employees?",
    "label": "CLARIFY",
    "output": "Did you mean the employee with the largest id?"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "yes | select role_code from employees order by employee_id desc limit 1 | and the role code with the least employees?",
    "label": "CONFIRM_SQL",
    "output": "select role_code from employees group by role_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "What is the name of the newest song? | select song_name from song order by releasedate desc limit 1 | And the oldest song?\n",
    "label": "CONFIRM_SQL",
    "output": "select song_name from song order by releasedate asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "What are the names of the artists that released the oldest song on the list?\n | select artist_name from song order by releasedate asc limit 1 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to know anything else? "
  },
  {
    "db_id": "hr_1",
    "input": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments. | select first_name , last_name , department_id from employees where salary in ( select min ( salary ) from employees group by department_id ) | Which of those has the highest salary?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name , department_id from employees where salary in ( select max ( salary ) from employees group by department_id )"
  },
  {
    "db_id": "hr_1",
    "input": "Of the people who earn the smallest salary in each department, who has the highest salary? | do you mean the first name and last name and department id for the people? | yes",
    "label": "REJECT",
    "output": "sorry,sql cannot answer the question directly,can you  give another question? thanks"
  },
  {
    "db_id": "hr_1",
    "input": "Give me the first and last name of the highest paid employee | select first_name , last_name from employees order by salary desc limit 1 | Give me their salary and their manager's salary",
    "label": "CLARIFY",
    "output": "do you mean the salary and manager's salary of all people?"
  },
  {
    "db_id": "hr_1",
    "input": "Give me the name and salary of the highest paid employee and their manager | select first_name , last_name , salary , manager_id from employees order by salary desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "college_1",
    "input": "what is the first and last name of the profesor in biology department? | select employee.emp_fname , employee.emp_lname from professor join department on professor.dept_code = department.dept_code join employee on professor.emp_num = employee.emp_num where dept_name = 'Biology' | how many employee in table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employee"
  },
  {
    "db_id": "college_1",
    "input": "what is the highest professor extension in the table? | select max ( prof_extension ) from professor | what is least employee number in the table?",
    "label": "CONFIRM_SQL",
    "output": "select min ( emp_num ) from employee"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "List the names of all the customers that use email as a contact channel.  | select customers.customer_name from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customer_contact_channels.channel_code = 'Email' | List the names of all the customers that use email as a contact channel and the date they became a member. \n",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , customers.date_became_customer from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customer_contact_channels.channel_code = 'Email'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Find the name and active to date of the customers that use email as the contact channel.  | select customers.customer_name , customer_contact_channels.active_to_date from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customer_contact_channels.channel_code = 'Email' | What is the payment method of Devin Mills.",
    "label": "CONFIRM_SQL",
    "output": "select distinct customers.payment_method from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customers.customer_name = 'Devin Mills'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What is the customer id of Devin Mills.  | select distinct customers.customer_id from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customers.customer_name = 'Devin Mills' | List the names of all the customers with the same payment method as Devin Mills. ",
    "label": "CONFIRM_SQL",
    "output": "select distinct customers.customer_name from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customers.payment_method = ( select distinct customers.payment_method from customers join customer_contact_channels on customers.customer_id = customer_contact_channels.customer_id where customers.customer_name = 'Devin Mills' )"
  },
  {
    "db_id": "baseball_1",
    "input": "is there any games played in atlanta | select * from park where city = 'Atlanta' | is there any games played in the year 2000",
    "label": "CONFIRM_SQL",
    "output": "select * from home_game where year = 2000"
  },
  {
    "db_id": "baseball_1",
    "input": "can you count the number of of games played in atlanta in 2000 | select count ( * ) from home_game join park on home_game.park_id = park.park_id where home_game.year = 2000 and park.city = 'Atlanta' | thanks\n",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "what is the country of zip postcode 416? | select country from addresses where zip_postcode = 416 | what is the city of south california",
    "label": "CONFIRM_SQL",
    "output": "select city from addresses where state_province_county = 'SouthCarolina'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "what is the address content of colorando? | select address_content from addresses where state_province_county = 'Colorado' | what is the city of new jersey",
    "label": "CONFIRM_SQL",
    "output": "select city from addresses where state_province_county = 'NewJersey'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "list the city of country USA? | select city from addresses where country = 'USA' | Thanks",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "store_1",
    "input": "What is the title, phone and hire date of Nancy Edwards? | select title , phone , hire_date from employees where first_name = 'Nancy' and last_name = 'Edwards' |  what is the total number of employees?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees"
  },
  {
    "db_id": "store_1",
    "input": "what is the first name of gentral manager? | I cannot find \"gentral manager\" in the table. Did you mean general manager? | yes that is the general manager?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from employees where title = 'General Manager'"
  },
  {
    "db_id": "flight_company",
    "input": "What is the most common type?\n | select type from operate_company group by type order by count ( * ) desc limit 1 | And how many companies are there with this type?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct name ) from operate_company where type = 'Subsidiary'"
  },
  {
    "db_id": "flight_company",
    "input": "And how about the least common type of company? | select type from operate_company group by type order by count ( * ) asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "inn_1",
    "input": "Show me all the rooms. | select * from rooms | which one of these rooms has reservations?",
    "label": "CONFIRM_SQL",
    "output": "select * from rooms where roomid in ( select distinct room from reservations )"
  },
  {
    "db_id": "inn_1",
    "input": "What about the rooms which do not have reservations? | select * from rooms where roomid not in ( select distinct room from reservations ) | Can you tell me show me the total number of these rooms?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from rooms where roomid not in ( select distinct room from reservations )"
  },
  {
    "db_id": "gas_company",
    "input": "Show all locations and the number of gas stations in each location ordered by the count, please? | select location , count ( * ) from gas_station group by location order by count ( * ) asc | What is the name of the location that has more than one gas station?",
    "label": "CONFIRM_SQL",
    "output": "select location from gas_station group by location having count ( * ) > 1"
  },
  {
    "db_id": "gas_company",
    "input": "What year was more than one gas station opened in? | select open_year from gas_station group by open_year having count ( * ) > 1 | Thanks! Have a great night!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "swimming",
    "input": "Hello, are there any countries that have two or more stadiums? | select country from stadium group by country having count ( * ) >= 2 | Do either have a stadium with a capacity greater than 60000?",
    "label": "CONFIRM_SQL",
    "output": "select country from stadium where capacity > 60000 group by country having count ( * ) >= 2"
  },
  {
    "db_id": "swimming",
    "input": "Does Spain have a stadium with a capacity less than 50000? | select * from stadium where country = 'Spain' | What countries have a stadium with a copacity greather than 60000?",
    "label": "CONFIRM_SQL",
    "output": "select distinct country from stadium where capacity > 60000"
  },
  {
    "db_id": "swimming",
    "input": "Do any of these also have staduims with a capacity of less than 50000? | select country from stadium where capacity > 60000 intersect select country from stadium where capacity < 50000 | Thanks",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "school_bus",
    "input": "Can you show me the number of drivers who are from Hartford City? | select count ( * ) from driver where home_city = 'Hartford' | Oh, I want the names of the drivers.",
    "label": "CONFIRM_SQL",
    "output": "select name from driver where home_city = 'Hartford'"
  },
  {
    "db_id": "school_bus",
    "input": "Hmm, please show me names of the drivers who are younger than 40. | select name from driver where age < 40 | Can you count the number of drivers who are from Hartford City or younger than 40?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from driver where home_city = 'Hartford' or age < 40"
  },
  {
    "db_id": "shop_membership",
    "input": "show the minimum amount of memberships for all branches opened in 2011 or located at city location | select min ( membership_amount ) from branch where open_year = 2011 or city = 'London' | show the maximum amount of memberships for all branches opened in 2011 or located at city location",
    "label": "CONFIRM_SQL",
    "output": "select max ( membership_amount ) from branch where open_year = 2011 or city = 'London'"
  },
  {
    "db_id": "hr_1",
    "input": "display the emails of the employees who have no commission percentage and salary within the range 7000 to 12000 and works in that department which number is 50.  | select email from employees where commission_pct = 'null' and salary between 7000 and 12000 and department_id = 50 | display the emails of the employees who have no commission percentage",
    "label": "CONFIRM_SQL",
    "output": "select email from employees where commission_pct = 'null'"
  },
  {
    "db_id": "hr_1",
    "input": "display the emails of the employees who have a commission percentage | Did you mean the employees who have commission percentage more than 0? | yes",
    "label": "CONFIRM_SQL",
    "output": "select email from employees where commission_pct > 0"
  },
  {
    "db_id": "hr_1",
    "input": "How many employees with salary above 12000 are there? | select count ( * ) from employees where salary > 12000 | List their names please",
    "label": "CLARIFY",
    "output": "Did you mean their FIRST NAME\tand LAST NAME?"
  },
  {
    "db_id": "hr_1",
    "input": "yes | select first_name , last_name from employees where salary > 12000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "wedding",
    "input": "which females had a wedding in 2016? | select people.name from wedding join people on wedding.female_id = people.people_id where wedding.year = 2016 and people.is_male = 'F' | which females in that list are from canada?\n",
    "label": "CONFIRM_SQL",
    "output": "select people.name from wedding join people on wedding.female_id = people.people_id where wedding.year = 2016 and people.is_male = 'F' and people.country = 'Canada'"
  },
  {
    "db_id": "wedding",
    "input": "who are the females in canada? | select name from people where country = 'Canada' and is_male = 'F' | who got married in 2016?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from wedding join people on wedding.female_id = people.people_id or wedding.male_id = people.people_id where wedding.year = 2016"
  },
  {
    "db_id": "wedding",
    "input": "who in that list is from canada? | select people.name from wedding join people on wedding.female_id = people.people_id or wedding.male_id = people.people_id where wedding.year = 2016 and people.country = 'Canada' | thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "storm_record",
    "input": "What are the names of storms which don't have affected region in record? | select name from storm where storm_id not in ( select storm_id from affected_region ) | What is the number of city affected for storm with name two?",
    "label": "CONFIRM_SQL",
    "output": "select number_city_affected from affected_region where storm_id = ( select storm_id from storm where name = 'Two' )"
  },
  {
    "db_id": "storm_record",
    "input": "What is storm name two storm ID? | select storm_id from storm where name = 'Two' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "network_2",
    "input": "How many persons are on the list? | select count ( * ) from person | Who is the least aged person on the list?",
    "label": "CONFIRM_SQL",
    "output": "select name from person order  by age limit 1"
  },
  {
    "db_id": "network_2",
    "input": "How many people whose age is greater 30 and job is engineer? | select count ( * ) from person where age > 30 and job = 'engineer' | How many female people are on the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person where gender = 'female'"
  },
  {
    "db_id": "farm",
    "input": "What is the population of city Id 2? | select population from city where city_id = 2 | What is the census ranking of Perth-Andover?",
    "label": "CONFIRM_SQL",
    "output": "select census_ranking from city where official_name = 'Perth-Andover'"
  },
  {
    "db_id": "farm",
    "input": "What is the name of hosts of Carnival M is back? | select hosts from farm_competition where theme like '%Carnival M is back%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "insurance_fnol",
    "input": "What are all the policy types of the customer that has the most policies listed? | select distinct available_policies.policy_type_code from customers join customers_policies on customers.customer_id = customers_policies.customer_id join available_policies on customers_policies.policy_id = available_policies.policy_id where customers.customer_name = ( select customers.customer_name from customers join customers_policies on customers.customer_id = customers_policies.customer_id group by customers.customer_name order by count ( * ) desc limit 1 ) | What is the name of the customer?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join customers_policies on customers.customer_id = customers_policies.customer_id group by customers.customer_name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "insurance_fnol",
    "input": "what is the phone number for life insurance? | select customer_phone from available_policies where policy_type_code = 'Life Insurance' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Which gender makes up the majority of the staff? | select gender from staff group by gender order by count ( * ) desc limit 1 | how many staff are gender 1?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from staff where gender = 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "how many staff are not gender 1? | select count ( * ) from staff where gender != 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "scientist_1",
    "input": "Fine the name of the project for which a scientist whose name contains \"Smith\" is assigned to. | select projects.name from assignedto join projects on assignedto.project = projects.code join scientists on assignedto.scientist = scientists.ssn where scientists.name like '%Smith%' | What is the first name of \"Smith\"",
    "label": "CONFIRM_SQL",
    "output": "select name from scientists where name like '%Smith%'"
  },
  {
    "db_id": "scientist_1",
    "input": "Which \"Smith\" is working on Aerodynamics and Gas Mileage project? | select scientists.name from assignedto join projects on assignedto.project = projects.code join scientists on assignedto.scientist = scientists.ssn where projects.name = 'Aerodynamics and Gas Mileage' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "shop_membership",
    "input": "Could you please show the membership level with the greatest number of members? | select level from member group by level order by count ( * ) desc limit 1 | What are the member ids of the people who have that membership level?",
    "label": "CONFIRM_SQL",
    "output": "select member_id from member where level in ( select level from member group by level order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "shop_membership",
    "input": "What are their names, please? | select name from member where level in ( select level from member group by level order by count ( * ) desc limit 1 ) | What about the membership level with the least number of members?",
    "label": "CONFIRM_SQL",
    "output": "select level from member group by level order by count ( * ) asc limit 1"
  },
  {
    "db_id": "shop_membership",
    "input": "What are the member ids of the people who have that membership level? | select member_id from member where level in ( select level from member group by level order by count ( * ) asc limit 1 ) | What is their name, please?",
    "label": "CONFIRM_SQL",
    "output": "select name from member where level in ( select level from member group by level order by count ( * ) asc limit 1 )"
  },
  {
    "db_id": "department_store",
    "input": "what is the date assigned to of the department managers? | select date_assigned_to from staff_department_assignments where job_title_code = 'Department Manager' | list the name of staff who has been assigned multiple jobs?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_name from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id group by staff_department_assignments.staff_id having count ( * ) > 1"
  },
  {
    "db_id": "department_store",
    "input": "what is the date assigned from sales person? | select date_assigned_from from staff_department_assignments where job_title_code = 'Sales Person' | thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can you show me the invoice numbers which are created before 1989-09-03? | select invoice_number from invoices where invoice_date < '1989-09-03' | What about the invoice numbers which are created after 2007-12-25?",
    "label": "CONFIRM_SQL",
    "output": "select invoice_number from invoices where invoice_date > '2007-12-25'"
  },
  {
    "db_id": "tracking_orders",
    "input": "Hmm, can you list the invoice numbers which are created before 1989-09-03 or after 2007-12-25? | select invoice_number from invoices where invoice_date < '1989-09-03' or invoice_date > '2007-12-25' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_1",
    "input": "Show names for all employees with a salary greater than average | select name from employee where salary > ( select avg ( salary ) from employee ) | Great, could you tell me the average salary?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from employee"
  },
  {
    "db_id": "flight_1",
    "input": "Could you show me a list of employees with a salary less than the average? | select name from employee where salary < ( select avg ( salary ) from employee ) | how many employees earn above the average salary?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employee where salary > ( select avg ( salary ) from employee )"
  },
  {
    "db_id": "flight_1",
    "input": "how many earn below the average?\n | select count ( * ) from employee where salary < ( select avg ( salary ) from employee ) | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "phone_market",
    "input": "Show the names of phones and the districts of markets they are on, in ascending order of the ranking of the market. | select phone.name , market.district from phone_market join market on phone_market.market_id = market.market_id join phone on phone_market.phone_id = phone.phone_id order by market.ranking asc | Which carriers are active in Alberta?",
    "label": "CONFIRM_SQL",
    "output": "select phone.carrier from phone_market join market on phone_market.market_id = market.market_id join phone on phone_market.phone_id = phone.phone_id where market.district = 'Alberta'"
  },
  {
    "db_id": "phone_market",
    "input": "Where else is TMobile active? | select market.district from phone_market join market on phone_market.market_id = market.market_id join phone on phone_market.phone_id = phone.phone_id where phone.carrier = 'TMobile' and market.district != 'Alberta' | And which phones do they support?",
    "label": "CONFIRM_SQL",
    "output": "select phone.name from phone_market join market on phone_market.market_id = market.market_id join phone on phone_market.phone_id = phone.phone_id where phone.carrier = 'TMobile'"
  },
  {
    "db_id": "phone_market",
    "input": "Which phones does TMobile support? | select name from phone where carrier = 'TMobile' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "university_basketball",
    "input": "I want to know the number of public universities | select count ( * ) from university where affiliation = 'Public' | Ok, What about the number of private universities?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from university where affiliation = 'Private/Methodist'"
  },
  {
    "db_id": "university_basketball",
    "input": "I want to know the number of public universities with over 20000 enrollment size. | select count ( * ) from university where affiliation = 'Public' and enrollment > 20000 | Are there private universities with over 20000 enrollment size?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from university where affiliation = 'Private/Methodist' and enrollment > 20000"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Which festival name  was nimonated for artwork? | you want all of festival name was nimonated for artwork? | Yes ",
    "label": "CONFIRM_SQL",
    "output": "select distinct festival_detail.festival_name from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id"
  },
  {
    "db_id": "entertainment_awards",
    "input": "What was LA awards  num of audience? | sorry,i dont have the anwser to your question | Which festival name was associated with program talent show?",
    "label": "CONFIRM_SQL",
    "output": "select festival_detail.festival_name from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id where artwork.type = 'Program Talent Show'"
  },
  {
    "db_id": "entertainment_awards",
    "input": "What was the location of LA awards? | select location from festival_detail where festival_name = 'LA Awards' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "scientist_1",
    "input": "How many number if scientist belong to project AeH1 | select count ( * ) from projects join assignedto on projects.code = assignedto.project where projects.code = 'AeH1' | How about project Ast3, how many scientists?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from projects join assignedto on projects.code = assignedto.project where projects.code = 'Ast3'"
  },
  {
    "db_id": "news_report",
    "input": "What is the average attendance of all events? | select avg ( event_attendance ) from event | What is the maximum attendance of all events?",
    "label": "CONFIRM_SQL",
    "output": "select max ( event_attendance ) from event"
  },
  {
    "db_id": "machine_repair",
    "input": "show names of technicians by order of quality rank of machine they are assigned from worst to best | select technician.name from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id order by machine.quality_rank asc | Which technician is the oldest?",
    "label": "CLARIFY",
    "output": "Do you mean the id of the oldest technician?"
  },
  {
    "db_id": "machine_repair",
    "input": "What is the Name of the oldest technician? | select name from technician order by age desc limit 1 | What is the name of the Team with the most number of value points?",
    "label": "CONFIRM_SQL",
    "output": "select team from machine order by value_points desc limit 1"
  },
  {
    "db_id": "machine_repair",
    "input": "What was the Making Year of the Machine series With the lowest quality rank? | select making_year from machine order by quality_rank asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "ship_1",
    "input": "How many ships in this table? | select count ( * ) from ship | How many captains in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from captain"
  },
  {
    "db_id": "ship_1",
    "input": "Who is the most aged captain in this table? | select captain_id from captain order by age desc limit 1 | How many different ranks in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct rank ) from captain"
  },
  {
    "db_id": "tracking_orders",
    "input": "How many total orders do we have? | select count ( * ) from orders | What is the total number of customers?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers"
  },
  {
    "db_id": "tracking_orders",
    "input": "What are their customer id's? | select customer_id from customers | What was the amount of orders for the customer that had that most orders?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers join orders on customers.customer_id = orders.customer_id group by customers.customer_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "Which customer had 3 orders? | select customers.* from customers join orders on customers.customer_id = orders.customer_id group by customers.customer_id having count ( * ) = 3 | So George and Jeramie are tied for the most orders?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id group by customers.customer_id having count ( * ) = 3"
  },
  {
    "db_id": "tracking_orders",
    "input": "What is the customer id for George? | select customer_id from customers where customer_name = 'George' | And for Jeramie?",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from customers where customer_name = 'Jeramie'"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "how many customers cards there | select count ( * ) from customers_cards | how many credit cards there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers_cards where card_type_code = 'Credit'"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "how many debit cards there | select count ( * ) from customers_cards where card_type_code = 'Debit' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "How many products have the characteristic named \"hot\" | select count ( * ) from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where characteristics.characteristic_name = 'hot' | what is the name of the product with the characteristic \"hot\"?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where characteristics.characteristic_name = 'hot'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the selling price of lotus? | select products.typical_selling_price from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'lotus' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Show the detention type code for the detention with id 1? | select detention.detention_type_code from detention join ref_detention_type on detention.detention_type_code = ref_detention_type.detention_type_code where detention_id = 1 | Show the code and description of the least frequent detention type?",
    "label": "CONFIRM_SQL",
    "output": "select detention.detention_type_code , ref_detention_type.detention_type_description from detention join ref_detention_type on detention.detention_type_code = ref_detention_type.detention_type_code group by detention.detention_type_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Show the code and description of the most frequent detention type? | select detention.detention_type_code , ref_detention_type.detention_type_description from detention join ref_detention_type on detention.detention_type_code = ref_detention_type.detention_type_code group by detention.detention_type_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "perpetrator",
    "input": "How many perpetrators are there? | select count ( * ) from perpetrator | What is the location for each perpetrator?",
    "label": "CONFIRM_SQL",
    "output": "select location from perpetrator"
  },
  {
    "db_id": "perpetrator",
    "input": "Can you tell me the location of the perpetrator with the largest kills? | select location from perpetrator order by killed desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "station_weather",
    "input": "hi, what is the maximum low temperature at Amersham station? | select max ( weekly_weather.low_temperature ) from weekly_weather join station on weekly_weather.station_id = station.id where station.network_name = 'Amersham' | on what day was it?",
    "label": "CLARIFY",
    "output": "Did  you  mean  the day of week in  weekly weather table "
  },
  {
    "db_id": "station_weather",
    "input": "Yes, in what say was the maximum low temperature in Amersham station. | select weekly_weather.day_of_week from weekly_weather join station on weekly_weather.station_id = station.id where station.network_name = 'Amersham' order by low_temperature desc limit 1 | Can you tell me what is the average precipitation at the Amersham station?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( weekly_weather.precipitation ) from weekly_weather join station on weekly_weather.station_id = station.id where station.network_name = 'Amersham'"
  },
  {
    "db_id": "driving_school",
    "input": "can you show me a list of lesson date? | select lesson_date from lessons | what is the average of lesson time?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( lesson_time ) from lessons"
  },
  {
    "db_id": "driving_school",
    "input": "what is the highest price? | select price from lessons order by price desc limit 1 | how many lessons does customer with first name ray took?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from lessons join customers on lessons.customer_id = customers.customer_id where customers.first_name = 'Ray'"
  },
  {
    "db_id": "bike_1",
    "input": "what is the total duration of trips with bike id 636? | select sum ( duration ) from trip where bike_id = 636 | ok,what is the maximum duration of trip with bike id 636?",
    "label": "CONFIRM_SQL",
    "output": "select max ( duration ) from trip where bike_id = 636"
  },
  {
    "db_id": "bike_1",
    "input": "ok,what is the maximum duration of trip with bike id 454? | select max ( duration ) from trip where bike_id = 454 | thanks",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "college_3",
    "input": "Full name of faculty id 1082? | select lname , fname from faculty where facid = 1082 | Room and phone no. of id 1121?",
    "label": "CONFIRM_SQL",
    "output": "select room , phone from faculty where facid = 1121"
  },
  {
    "db_id": "college_3",
    "input": "Provide the rooms of faculties with rank professor who live in building NEB? | select room from faculty where rank = 'Professor' and building = 'NEB' | thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "twitter_1",
    "input": "How many tweets in this table? | select count ( * ) from tweets | How many user profiles in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from user_profiles"
  },
  {
    "db_id": "twitter_1",
    "input": "What is the email id of Iron Man? | select email from user_profiles where name = 'Iron Man' | What is the text tweet of Iron Man?",
    "label": "CONFIRM_SQL",
    "output": "select tweets.text from user_profiles join tweets on user_profiles.uid = tweets.uid where user_profiles.name = 'Iron Man'"
  },
  {
    "db_id": "document_management",
    "input": "What documents types have more than 2 corresponding documents?  | select document_type_code from documents group by document_type_code having count ( * ) > 2 | What is the document type for document name Learning English?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code from documents where document_name = 'Learning English'"
  },
  {
    "db_id": "document_management",
    "input": "What documents types have more than 2 corresponding documents? | select document_type_code from documents group by document_type_code having count ( * ) > 2 | List all the document name?",
    "label": "CONFIRM_SQL",
    "output": "select document_name from documents"
  },
  {
    "db_id": "machine_repair",
    "input": "Hello!  How many technicians are there in total? | select count ( * ) from technician | Can you show me a list of all of the technicians names the machines they are assigned to repair?",
    "label": "CLARIFY",
    "output": "Did you want the names of technicians and the ids of machines they are assigned to repair?"
  },
  {
    "db_id": "machine_repair",
    "input": "Yes!  Can you show me their names and their machine ids that they are assigned to repair? | select technician.name , repair_assignment.machine_id from repair_assignment join technician on repair_assignment.technician_id = technician.technician_id | Great!  Also add to that list the starting year and age of each technician?",
    "label": "CONFIRM_SQL",
    "output": "select technician.name , repair_assignment.machine_id , technician.starting_year , technician.age from repair_assignment join technician on repair_assignment.technician_id = technician.technician_id"
  },
  {
    "db_id": "epinions_1",
    "input": "Can you please tell me the names of the items that did not receive any reviews? | select title from item where i_id not in ( select i_id from review ) | What are their item IDs?",
    "label": "CONFIRM_SQL",
    "output": "select i_id from item where i_id not in ( select i_id from review )"
  },
  {
    "db_id": "epinions_1",
    "input": "What are the user IDs associated with those? | there are no users associated with those, because they are not in review | How many items did receive reviews?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct i_id ) from review"
  },
  {
    "db_id": "epinions_1",
    "input": "What are the names of those items? | select item.title from item join review where item.i_id = review.i_id | What did the users say about those products?",
    "label": "REQUEST_MORE",
    "output": "I can't answer the question, please give another problem"
  },
  {
    "db_id": "epinions_1",
    "input": "What are their item ids? | select distinct ( i_id ) from review | What is the rating of item id 3?",
    "label": "CONFIRM_SQL",
    "output": "select rating from review where i_id = 3"
  },
  {
    "db_id": "products_for_hire",
    "input": "How many customers are there | select count ( * ) from customers | How many of them have a coupon amount of 500",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers join discount_coupons on customers.coupon_id = discount_coupons.coupon_id where discount_coupons.coupon_amount = 500"
  },
  {
    "db_id": "products_for_hire",
    "input": "What is their name | First name or last name? | What is their customer id",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_id from customers join discount_coupons on customers.coupon_id = discount_coupons.coupon_id where discount_coupons.coupon_amount = 500"
  },
  {
    "db_id": "products_for_hire",
    "input": "Are they a good or bad customer | select customers.good_or_bad_customer from customers join discount_coupons on customers.coupon_id = discount_coupons.coupon_id where discount_coupons.coupon_amount = 500 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "aircraft",
    "input": "In which country  Swan River ' Perth located ? | select country from match where location = 'Swan River , Perth' | How old is Mr. Cristian Halvorson II?",
    "label": "CONFIRM_SQL",
    "output": "select age from pilot where name = 'Mr. Cristian Halvorson II'"
  },
  {
    "db_id": "aircraft",
    "input": "In which country Mina' Zayid , Abu Dhabi located ? | select country from match where location = 'Mina Zayid , Abu Dhabi' | what is the name and age of the oldest winning pilot ",
    "label": "CONFIRM_SQL",
    "output": "select pilot.name , pilot.age from pilot join match on pilot.pilot_id = match.winning_pilot order by pilot.age desc limit 1"
  },
  {
    "db_id": "aircraft",
    "input": "what is the name of most winning aircraft ? | sorry, I cannot answer this question based on the tables. there is no info about aircraft name. could you please ask other related questions? |  where is Flamengo Beach , Rio de Janeiro situated ? ",
    "label": "CLARIFY",
    "output": "did you want to return its country?"
  },
  {
    "db_id": "aircraft",
    "input": "where its located ? | Flamengo Beach , Rio de Janeiro is already a location. The only geographical info else i can provide is its country. do you want to show it? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select country from match where location = 'Flamengo Beach , Rio de Janeiro'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Hello, how many total documents are there? | select count ( * ) from documents | Can you tell me the document type code, name, and description of the document with the name 'Noel CV'?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code , document_name , document_description from documents where document_name = 'Noel CV'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Perfect, and can you do the same with 'King Book'? | select document_type_code , document_name , document_description from documents where document_name = 'King Book' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "program_share",
    "input": "which program owners have programs in the morning and the night | select program.owner from program join broadcast on program.program_id = broadcast.program_id where broadcast.time_of_day = 'Morning' intersect select program.owner from program join broadcast on program.program_id = broadcast.program_id where broadcast.time_of_day = 'Night' | what are the programs by Beijing television?",
    "label": "CLARIFY",
    "output": "Did you want the program names by the owner Beijing television (BTV)"
  },
  {
    "db_id": "program_share",
    "input": "yes | select name from program where owner = 'Beijing Television (BTV)' | when did kaku launch? ",
    "label": "CONFIRM_SQL",
    "output": "select launch from program where name = 'Kaku'"
  },
  {
    "db_id": "program_share",
    "input": "who is Toonmax owner? | Did you want the owner of the program named Toonmax? | yes",
    "label": "CONFIRM_SQL",
    "output": "select owner from program where name = 'Toonmax'"
  },
  {
    "db_id": "store_1",
    "input": "How many employees have the job title Manager? | select count ( * ) from employees where title like '%manager%' | Which one manages the most employees?",
    "label": "CONFIRM_SQL",
    "output": "select employees.* from employees join employees on employees.reports_to = employees.id group by employees.reports_to order by count ( employees.reports_to ) desc limit 1"
  },
  {
    "db_id": "store_1",
    "input": "How many employees does she manage? | select count ( employees.reports_to ) from employees join employees on employees.reports_to = employees.id group by employees.reports_to order by count ( employees.reports_to ) desc limit 1 | And their names?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name from employees where reports_to = ( select employees.id from employees join employees on employees.reports_to = employees.id group by employees.reports_to order by count ( employees.reports_to ) desc limit 1 )"
  },
  {
    "db_id": "store_1",
    "input": "Great! Can you list the first and last name of the employee that manages them? | select employees.first_name , employees.last_name from employees join employees on employees.reports_to = employees.id group by employees.reports_to order by count ( employees.reports_to ) desc limit 1 | Okay! I appreciate all your help. Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "insurance_policies",
    "input": "what's the policy id for claim id 143? | select policy_id from claims where claim_id = '143' | What's the most recent claim date?\n",
    "label": "CONFIRM_SQL",
    "output": "select date_claim_settled from claims order by date_claim_settled desc limit 1"
  },
  {
    "db_id": "insurance_policies",
    "input": "what was the amount claimed? | On this day? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select amount_claimed from claims where date_claim_settled = '2018-03-09'"
  },
  {
    "db_id": "ship_1",
    "input": "Are there any classes that have more than two captains? | select class from captain group by class having count ( * ) > 2 | Is third-rate ship of the line the only class with more than two captains?",
    "label": "CONFIRM_SQL",
    "output": "select class from captain where class != 'Third-rate ship of the line' group by class having count ( * ) > 2"
  },
  {
    "db_id": "ship_1",
    "input": "How many captains does third-rate ship of the line have? | select count ( * ) from captain where class = 'Third-rate ship of the line' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "sports_competition",
    "input": "Can you show me the club names and ids? | select name , club_id from club | Hmm, I want to know the player ids, names and their club ids.",
    "label": "CONFIRM_SQL",
    "output": "select player_id , name , club_id from player"
  },
  {
    "db_id": "sports_competition",
    "input": "Please list the names of those clubs that do not have any players. | select name from club where club_id not in ( select club_id from player ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "city_record",
    "input": "Tell me Regional Population and GDP for City ID 2 ? | select regional_population , gdp from city where city_id = 2 | Tell me temperature for City ID 2 for Jan, Apr and Oct",
    "label": "CONFIRM_SQL",
    "output": "select jan , apr , oct from temperature where city_id = 2"
  },
  {
    "db_id": "city_record",
    "input": "tell me which city had high temperature in the month of May ? | Sorry, what do you mean by high? | high value of temperature...\n",
    "label": "CLARIFY",
    "output": "I mean how high is high? You can say temperature higher than a certain number."
  },
  {
    "db_id": "city_record",
    "input": "Higher than 21 | select city.city from city join temperature on city.city_id = temperature.city_id where temperature.mar > 21 | Give me a list of cities whose temperature in Mar is lower than that in July and which have also served as host cities ?",
    "label": "CONFIRM_SQL",
    "output": "select city.city from city join temperature on city.city_id = temperature.city_id where temperature.mar < temperature.jul intersect select city.city from city join hosting_city on city.city_id = hosting_city.host_city"
  },
  {
    "db_id": "city_record",
    "input": "Hi there! Can you tell me which three cities have the highest regional populations, and list the population totals too? | select city , regional_population from city order by regional_population desc limit 3 | Great! Which of these have the highest GDP?",
    "label": "CONFIRM_SQL",
    "output": "select city , regional_population , gdp from city order by regional_population desc limit 3"
  },
  {
    "db_id": "city_record",
    "input": "Great!  And what is the average GDP among all of the cities? | select avg ( gdp ) from city | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "wine_1",
    "input": "Can you show me the most expensive wine made in the year 2006? | select * from wine where year = 2006 order by price desc limit 1 | Great, can you show me all wines that have a higher price than the one currently in the table?",
    "label": "CONFIRM_SQL",
    "output": "select * from wine where price > ( select max ( price ) from wine where year = 2006 )"
  },
  {
    "db_id": "wine_1",
    "input": "Can you show only the name? | select name from wine where price > ( select max ( price ) from wine where year = 2006 ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "student_assessment",
    "input": "which candidates got assessed? | Do you mean the ids of all the candidates who got assessed? | yes",
    "label": "CONFIRM_SQL",
    "output": "select candidate_id from candidate_assessments"
  },
  {
    "db_id": "student_assessment",
    "input": "which of those most recently had an assessment? | select candidate_id from candidate_assessments order by assessment_date desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "chinook_1",
    "input": "In the rock genre, how many tracks are there? | select count ( * ) from genre join track on genre.genreid = track.genreid where genre.name = 'Rock' | What about jazz?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from genre join track on genre.genreid = track.genreid where genre.name = 'Jazz'"
  },
  {
    "db_id": "chinook_1",
    "input": "Can you list the composer who wrote the most rock genre songs? | select composer from genre join track on genre.genreid = track.genreid where genre.name = 'Rock' group by composer order by count ( * ) desc limit 1 | Can you list all composers who wrote tracks with the letter B in their name?",
    "label": "CONFIRM_SQL",
    "output": "select composer from track where name like '%B%'"
  },
  {
    "db_id": "music_1",
    "input": "Find the distinct names of all songs that have a higher resolution than some songs in English. | select distinct song_name from song where resolution > ( select min ( resolution ) from song where languages = 'english' ) | what is the total number of songs?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from song"
  },
  {
    "db_id": "music_1",
    "input": "what is the total number of most social media songs? | sorry,the question cannot be understood and answered, can you give more details? thanks | Thanks",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "game_1",
    "input": "list all the game type | select gtype from video_games | list the most played game type.",
    "label": "SORRY",
    "output": "Sorry, that information is not in the table."
  },
  {
    "db_id": "game_1",
    "input": "list the name of a shooting game.\n | Do you mean \"First-person shooter\" games? | yes i mean \"first-person shooter\" game?\n",
    "label": "CONFIRM_SQL",
    "output": "select gname from video_games where gtype = 'Frist-person shooter'"
  },
  {
    "db_id": "game_1",
    "input": "which game type has least number of games? | select gtype from video_games group by gtype order by count ( * ) asc limit 1 | Which game type has most number of games?",
    "label": "CONFIRM_SQL",
    "output": "select gtype from video_games group by gtype order by count ( * ) desc limit 1"
  },
  {
    "db_id": "storm_record",
    "input": "Can you please show me the average damage for all storms? | select avg ( damage_millions_usd ) from storm | Can you please show me the maximum damage for all storms?",
    "label": "CONFIRM_SQL",
    "output": "select max ( damage_millions_usd ) from storm"
  },
  {
    "db_id": "storm_record",
    "input": "Can you please show me the minimum damage for all storms? | select min ( damage_millions_usd ) from storm | Can you please show me the minimum damage for all storms with maximum speed higher than 1000?",
    "label": "CONFIRM_SQL",
    "output": "select min ( damage_millions_usd ) from storm where max_speed > 1000"
  },
  {
    "db_id": "storm_record",
    "input": "Can you please show me the maximum damage for all storms with maximum speed higher than 1000? | select max ( damage_millions_usd ) from storm where max_speed > 1000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "storm_record",
    "input": "how many region are presented on the table | select count ( * ) from region | list out the region name",
    "label": "CONFIRM_SQL",
    "output": "select region_name from region"
  },
  {
    "db_id": "storm_record",
    "input": "what is the region code of Afghanistan | select region_code from region where region_name = 'Afghanistan' | what is the highest number city affected",
    "label": "CONFIRM_SQL",
    "output": "select region.region_name from region join affected_region on region.region_id = affected_region.region_id group by region.region_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "hi, can you list me the user name and the password of the most popular role user? | select user_name , password from users group by role_code order by count ( * ) desc limit 1 | great, how many popular role users are?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from users group by role_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "Can you list me all the username of users with the most popular role? | select user_name from users group by role_code order by count ( * ) desc limit 1 | Ok,  show me the username of an unpopular user.",
    "label": "CONFIRM_SQL",
    "output": "select user_name from users where user_name not in ( select user_name from users group by role_code order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "csu_1",
    "input": "please list out the campus | which column do you want to list? | first column",
    "label": "CONFIRM_SQL",
    "output": "select id from campuses"
  },
  {
    "db_id": "csu_1",
    "input": "what is the highest campus fees | select campusfee from csu_fees order by campusfee desc limit 1 | what is the year of California State University-Bakersfield",
    "label": "CONFIRM_SQL",
    "output": "select year from campuses where campus = 'California State University-Bakersfield'"
  },
  {
    "db_id": "inn_1",
    "input": "Can you find the first and last names of all people who paid more than the rooms' base prices? | select reservations.firstname , reservations.lastname from reservations join rooms on reservations.room = rooms.roomid where reservations.rate - rooms.baseprice > 0 | Could you add in the rates they paid to the table please?",
    "label": "CLARIFY",
    "output": "Sorry, did you mean the base price of the room?"
  },
  {
    "db_id": "inn_1",
    "input": "The reservation rate, please | select reservations.firstname , reservations.lastname , reservations.rate from reservations join rooms on reservations.room = rooms.roomid where reservations.rate - rooms.baseprice > 0 | Can you find the first and last names of all people who paid less than the rooms' base prices?",
    "label": "CONFIRM_SQL",
    "output": "select reservations.firstname , reservations.lastname from reservations join rooms on reservations.room = rooms.roomid where reservations.rate - rooms.baseprice < 0"
  },
  {
    "db_id": "inn_1",
    "input": "Could you add in the reservation rates they paid to the table? | select reservations.firstname , reservations.lastname , reservations.rate from reservations join rooms on reservations.room = rooms.roomid where reservations.rate - rooms.baseprice < 0 | What is the name of the room that was booked most often?",
    "label": "CONFIRM_SQL",
    "output": "select room from reservations group by room order by count ( * ) desc limit 1"
  },
  {
    "db_id": "hr_1",
    "input": "create a table with a column for department id and a column for department name | select department_id , department_name from departments | Show the total number of employee ids for each department id",
    "label": "CONFIRM_SQL",
    "output": "select departments.department_id , count ( * ) from departments join employees where departments.department_id = employees.department_id group by departments.department_id"
  },
  {
    "db_id": "hr_1",
    "input": "Add a column with department name | select departments.department_id , departments.department_name , count ( * ) from departments join employees where departments.department_id = employees.department_id group by departments.department_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "department_store",
    "input": "Hi there!  Can you show me a list of all of the customer IDs and the corresponding customer names? | select customer_name , customer_id from customers | Thanks!  Can you filter this list to show only the rows for customers who have an address in the state of TN?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name , customer_id from customers where customer_address like '%TN%'"
  },
  {
    "db_id": "department_store",
    "input": "Great!  Can you provide me with the customer addresses for those two customers? | select customer_address from customers where customer_address like '%TN%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem! Bye"
  },
  {
    "db_id": "book_2",
    "input": "thank you | bye! | What are the publication dates in the list?",
    "label": "CONFIRM_SQL",
    "output": "select publication_date from publication"
  },
  {
    "db_id": "book_2",
    "input": "Can you sort the list by publication date from most common to least common? | select publication_date from publication group by publication_date order by count ( * ) desc | What is the most common publication date?",
    "label": "CONFIRM_SQL",
    "output": "select publication_date from publication group by publication_date order by count ( * ) desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "How many films are there? | select count ( * ) from film | What is the range of dates they were made?",
    "label": "CONFIRM_SQL",
    "output": "select min ( release_year ) , max ( release_year ) from film"
  },
  {
    "db_id": "sakila_1",
    "input": "What is the range of rental cost for the films? | select min ( rental_rate ) , max ( rental_rate ) from film | Which film has the most actors and actresses?",
    "label": "CLARIFY",
    "output": "What attributes of the film that has the most actors and actresses would you like to know? "
  },
  {
    "db_id": "sakila_1",
    "input": "film name? | select film.title from film_actor join film on film_actor.film_id = film.film_id group by film.film_id order by count ( * ) desc limit 1 | film id?",
    "label": "CONFIRM_SQL",
    "output": "select film.film_id from film_actor join film on film_actor.film_id = film.film_id group by film.film_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "film description? | select film.description from film_actor join film on film_actor.film_id = film.film_id group by film.film_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "decoration_competition",
    "input": "how many members are from united states or canada | select count ( name ) from member where country = 'United States' or country = 'Canada' | can you list the name of these 10 members",
    "label": "CONFIRM_SQL",
    "output": "select name from member where country = 'United States' or country = 'Canada'"
  },
  {
    "db_id": "decoration_competition",
    "input": "arrange the names in ascending order | select name from member where country = 'United States' or country = 'Canada' order by name asc | thanks",
    "label": "WELCOME",
    "output": "welcome, goodbye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "how many rooms are available in the apartment with short name columbus square | select sum ( apartments.room_count ) from apartment_buildings join apartments on apartment_buildings.building_id = apartments.building_id where apartment_buildings.building_short_name = 'Columbus Square' | what is the building id for this apartment\n",
    "label": "CLARIFY",
    "output": "what did you mean by this apartment? Please give more info"
  },
  {
    "db_id": "apartment_rentals",
    "input": "how many bathrooms are there in these 2 rooms | Did  you mean the number of bathrooms in the  apartment with id  is  2? | yes, thanks",
    "label": "CONFIRM_SQL",
    "output": "select bathroom_count from apartments where apt_id = 2"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What kind of payment methods are there? | Do you mean the number of payment kinds? | yes",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct payment_method ) from customers"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "And can you show me how many customers there are? | select count ( * ) from customers | Can you show me the name of the customer who purchased the least quantity of items?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customers.customer_name order by sum ( order_items.order_quantity ) asc limit 1"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What payment method did that customer use? | select customers.payment_method from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customers.customer_name order by sum ( order_items.order_quantity ) asc limit 1 | How many items did that customer buy?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( order_items.order_quantity ) from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customers.customer_name order by sum ( order_items.order_quantity ) asc limit 1"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Which customer bought the most items? | That would be lovely.\n | select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customers.customer_name order by sum ( order_items.order_quantity ) desc limit 1",
    "label": "INFORM_SQL",
    "output": "How many did he purchase?"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "select sum ( order_items.order_quantity ) from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customers.customer_name order by sum ( order_items.order_quantity ) desc limit 1 | How did he pay? | select customers.payment_method from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customers.customer_name order by sum ( order_items.order_quantity ) desc limit 1",
    "label": "INFORM_SQL",
    "output": "When did he become a customer?"
  },
  {
    "db_id": "college_3",
    "input": "What are the first names of the students that minor in the department with DNO 140? | select student.fname from minor_in join student on minor_in.stuid = student.stuid where minor_in.dno = 140 | What are the last names of the students that minor in the department with DNO 140?",
    "label": "CONFIRM_SQL",
    "output": "select student.lname from minor_in join student on minor_in.stuid = student.stuid where minor_in.dno = 140"
  },
  {
    "db_id": "college_3",
    "input": "What are the ages of the students with the last name Lee? | select age from student where lname = 'Lee' | What are the department numbers of the students with the last name Smith?",
    "label": "SORRY",
    "output": "Sorry, there is no attribute in the table as department number."
  },
  {
    "db_id": "college_3",
    "input": "What are the student ids of the students with the last name Smith? | select stuid from student where lname = 'Smith' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "Can you Please list all departments? | select dept_name from department | Thank You.  Can you provide the department code for each of these?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( dept_code ) from department"
  },
  {
    "db_id": "college_1",
    "input": "Thank you.  Can you provide the names of students taking classes in CIS? | select student.stu_fname , student.stu_lname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Computer Info. Systems' | Just the First name?\n",
    "label": "CONFIRM_SQL",
    "output": "select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Computer Info. Systems'"
  },
  {
    "db_id": "college_1",
    "input": "Which one of these students also has a class in ACCT? | select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Accounting' intersect select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Computer Info. Systems' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! Bye."
  },
  {
    "db_id": "network_2",
    "input": "Show me the names | Do you mean the name of all the person? | name of all the persons",
    "label": "INFORM_SQL",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "network_2",
    "input": "select name from person | show me the name of persons | select person.name from person as person",
    "label": "INFORM_SQL",
    "output": "Who has a friend from New York?"
  },
  {
    "db_id": "baseball_1",
    "input": "Which team had the most players in the all star games? | select * from all_star group by team_id order by count ( * ) desc limit 1 | WHich player has the most all star games played?",
    "label": "CONFIRM_SQL",
    "output": "select player.* from player join all_star on player.player_id = all_star.player_id group by player.player_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "baseball_1",
    "input": "What is his id? | select player.player_id from player join all_star on player.player_id = all_star.player_id group by player.player_id order by count ( * ) desc limit 1 | Thanks!\n",
    "label": "WELCOME",
    "output": "You're welcome! Bye."
  },
  {
    "db_id": "dorm_1",
    "input": "How many amenities are offered in all dorms? | select count ( * ) from dorm_amenity | Could you tell me the names of these amenities?",
    "label": "CONFIRM_SQL",
    "output": "select amenity_name from dorm_amenity"
  },
  {
    "db_id": "dorm_1",
    "input": "What is the name of the most common amenity in all dorms? | select dorm_amenity.amenity_name from dorm_amenity join has_amenity on dorm_amenity.amenid = has_amenity.amenid group by has_amenity.amenid order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "flight_1",
    "input": "can you show me average of the distances? | select avg ( distance ) from flight | which one is the longest distance?",
    "label": "CONFIRM_SQL",
    "output": "select max ( distance ) from flight"
  },
  {
    "db_id": "flight_1",
    "input": "what is the highest price? | select max ( price ) from flight | thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "department_store",
    "input": "Details of staff id 1? | Do you mean the staff gender and staff name of staff id 1? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select staff_gender , staff_name from staff where staff_id = 1"
  },
  {
    "db_id": "department_store",
    "input": "Give the id and name of the staff who has been assigned for the shortest period? | select staff.staff_id , staff.staff_name from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id order by date_assigned_to - date_assigned_from asc limit 1 | job title code for staff id?",
    "label": "CLARIFY",
    "output": "Do you mean all the job title codes for all the staff ids?"
  },
  {
    "db_id": "department_store",
    "input": "yes | select job_title_code from staff_department_assignments | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "chinook_1",
    "input": "What is the title of AC/DC's albums? | select title from album join artist on album.artistid = artist.artistid where artist.name = 'AC/DC' | How many songs are there in \"Let there Be Rock\"?",
    "label": "CLARIFY",
    "output": "Sorry, I don't have the answer to your question."
  },
  {
    "db_id": "chinook_1",
    "input": "What about balls to the wall? | Sorry, I don't have the answer to your question. | How many songs does AC/DC have in that album?",
    "label": "REJECT",
    "output": "Sorry, I don't have the answer to your question. We don't have the tables that store the number of songs in an album."
  },
  {
    "db_id": "chinook_1",
    "input": "Thanks | Do you want anything else? | No. I am satisfied. Thanks",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "csu_1",
    "input": "How many degrees did \"San Jose State University\" confer in 2000? | select degrees from campuses join degrees on campuses.id = degrees.campus where campuses.campus = 'San Jose State University' and degrees.year = 2000 | What about for campus id 5?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( degrees ) from degrees where campus = 5"
  },
  {
    "db_id": "csu_1",
    "input": "What is the name of that campus? | select distinct campuses.campus from campuses join degrees on campuses.id = degrees.campus where degrees.campus = 5 | What is the name of campus with id 19?",
    "label": "CONFIRM_SQL",
    "output": "select distinct campuses.campus from campuses join degrees on campuses.id = degrees.campus where degrees.campus = 19"
  },
  {
    "db_id": "csu_1",
    "input": "How many degrees did \"San Jose State University\" confer in 2001? | select sum ( degrees ) from campuses join degrees on campuses.id = degrees.campus where campuses.campus = 'San Jose State University' and degrees.year = 2001 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Show the first name and last name for the customer with account name 900. | select customers.customer_first_name , customers.customer_last_name from accounts join customers on accounts.customer_id = customers.customer_id where accounts.account_name = '900' | What is a login name of Dee A Larkin?",
    "label": "CONFIRM_SQL",
    "output": "select login_name from customers where customer_first_name = 'Dee' and customer_middle_initial = 'A' and customer_last_name = 'Larkin'"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Final question is How many customers in the table? | select count ( customer_id ) from customers | Thanks",
    "label": "GOOD_BYE",
    "output": "no problem, bye"
  },
  {
    "db_id": "college_2",
    "input": "Who are the students that have more than one advisor? | select student.name from student join advisor on student.id = advisor.s_id group by advisor.s_id having count ( * ) > 1 | How many students have more than one credit?\n",
    "label": "CONFIRM_SQL",
    "output": "select student.name from student join advisor on student.id = advisor.s_id group by advisor.s_id having student.tot_cred > 1"
  },
  {
    "db_id": "college_2",
    "input": "How many students have more than 115 credits?\n | select student.name from student join advisor on student.id = advisor.s_id group by advisor.s_id having student.tot_cred > 115 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "entertainment_awards",
    "input": "show the different type of artworks? | select distinct type from artwork | Show the most common type of artworks?",
    "label": "CONFIRM_SQL",
    "output": "select type from artwork group by type order by count ( * ) desc limit 1"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Show the type of artwork Loving you? | select type from artwork where name = 'Loving you' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "how many distinct names of the products have characteristc name warm? | select count ( distinct products.product_name ) from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where characteristics.characteristic_name = 'warm' | Which distinct name is that?",
    "label": "CONFIRM_SQL",
    "output": "select distinct products.product_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where characteristics.characteristic_name = 'warm'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What is the name of a spice with buying price of 352447.2874677? | select product_name from products where typical_buying_price = 352447.2874677 | What is its color code?",
    "label": "CONFIRM_SQL",
    "output": "select color_code from products where typical_buying_price = 352447.2874677"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Can you show the dates of transactions with at least 100 share count? | select date_of_transaction from transactions where share_count >= 100 | Hmm, I want to know the dates of transactions with amount bigger than 100 please.",
    "label": "CONFIRM_SQL",
    "output": "select date_of_transaction from transactions where amount_of_transaction > 100"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Can you list the dates of transactions for all of them? | select date_of_transaction from transactions where share_count >= 100 or amount_of_transaction > 100 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "how many documents are there? | select count ( * ) from draft_copies | What's the least amount of draft copies that a document has?",
    "label": "CONFIRM_SQL",
    "output": "select count ( copy_number ) from draft_copies group by document_id order by count ( copy_number ) asc limit 1"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "What's the most amount of draft copies that a document has? | select count ( copy_number ) from draft_copies group by document_id order by count ( copy_number ) desc limit 1 | what's the id of the document that has the most draft copies?",
    "label": "CONFIRM_SQL",
    "output": "select document_id from draft_copies group by document_id order by count ( copy_number ) desc limit 1"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "how many draft copies does that document have? | select document_id , count ( copy_number ) from draft_copies group by document_id order by count ( copy_number ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "driving_school",
    "input": "how many address are presented on the table | select count ( * ) from addresses | list out the staff first name on the table",
    "label": "CONFIRM_SQL",
    "output": "select first_name from staff"
  },
  {
    "db_id": "driving_school",
    "input": "what is the city of Janessa | select addresses.city from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Janessa' | what is the address of Kaitlin",
    "label": "REQUEST_MORE",
    "output": "Do you mean the staff with first name as Kaitlin?"
  },
  {
    "db_id": "driving_school",
    "input": "exactly | select addresses.* from addresses join staff on addresses.address_id = staff.staff_address_id where staff.first_name = 'Kaitlin' | thanks",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "debate",
    "input": "Can you show me the names of the people who were on the affirmative side of debates with an audience bigger than 200? | select people.name from debate_people join debate on debate_people.debate_id = debate.debate_id join people on debate_people.affirmative = people.people_id where debate.num_of_audience > 200 | Of those three, who is the oldest?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from debate_people join debate on debate_people.debate_id = debate.debate_id join people on debate_people.affirmative = people.people_id where debate.num_of_audience > 200 order by people.age desc limit 1"
  },
  {
    "db_id": "debate",
    "input": "What party affiliation does James Humphrey hold? | select party from people where name = 'James Humphrey' | What district does James Humphrey represent?",
    "label": "CONFIRM_SQL",
    "output": "select district from people where name = 'James Humphrey'"
  },
  {
    "db_id": "department_store",
    "input": "Find the id of customers whose address contains WY state and do not use credit card for payment. | select customer_id from customers where customer_address like '%WY%' and payment_method_code != 'Credit Card' | Can I have the customer's name please?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers where customer_address like '%WY%' and payment_method_code != 'Credit Card'"
  },
  {
    "db_id": "department_store",
    "input": "Please find the id and name of customers whose address contains WY state and use credit card for payment. | select customer_id , customer_name from customers where customer_address like '%WY%' and payment_method_code != 'Credit Card' | Hmm. Can you please give me his email address and phone?",
    "label": "CONFIRM_SQL",
    "output": "select customer_email , customer_phone from customers where customer_address like '%WY%' and payment_method_code != 'Credit Card'"
  },
  {
    "db_id": "theme_gallery",
    "input": "Show the theme for exhibitions with records of an attendance below 100 | select exhibition.theme from exhibition_record join exhibition on exhibition_record.exhibition_id = exhibition.exhibition_id where exhibition_record.attendance < 100 | Show the theme for exhibitions with records of an attendance above 500",
    "label": "CONFIRM_SQL",
    "output": "select exhibition.theme from exhibition_record join exhibition on exhibition_record.exhibition_id = exhibition.exhibition_id where exhibition_record.attendance > 500"
  },
  {
    "db_id": "theme_gallery",
    "input": "Show me the dates of those exhibitions | select exhibition_record.date from exhibition_record join exhibition on exhibition_record.exhibition_id = exhibition.exhibition_id where exhibition_record.attendance > 500 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the building short name of building id 133? | select building_short_name from apartment_buildings where building_id = 133 | Who is building manager of Mercedes House?",
    "label": "CONFIRM_SQL",
    "output": "select building_manager from apartment_buildings where building_full_name = 'Mercedes House'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Find the building address of building manager Melyssa. | select building_address from apartment_buildings where building_manager = 'Melyssa' | What are the building full names that contain the word \"court\"?",
    "label": "CONFIRM_SQL",
    "output": "select building_full_name from apartment_buildings where building_full_name like '%court%'"
  },
  {
    "db_id": "riding_club",
    "input": "What is the most common occupation of players? | select occupation from player group by occupation order by count ( * ) desc limit 1 | What about least common?",
    "label": "CONFIRM_SQL",
    "output": "select occupation from player group by occupation order by count ( * ) asc limit 1"
  },
  {
    "db_id": "riding_club",
    "input": "What are their names? | did you mean the names of the players who have the least common occupation? | yes",
    "label": "CONFIRM_SQL",
    "output": "select player_name from player group by occupation order by count ( * ) asc limit 1"
  },
  {
    "db_id": "riding_club",
    "input": "What about most common? | select player_name from player group by occupation order by count ( * ) desc limit 1 | What is his sponsor name?",
    "label": "CONFIRM_SQL",
    "output": "select sponsor_name from player group by occupation order by count ( * ) desc limit 1"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Can you show me the policy ids, customer ids and policy type codes of all policies? | select policy_id , customer_id , policy_type_code from policies | Can you list the policy type codes of all the policies used?",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from policies"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Which type of policy is most frequently used? Can you give me the policy type code? | select policy_type_code from policies group by policy_type_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "csu_1",
    "input": "Hello. What universities are in San Francisco? | Would you like to know the names of all campuses located in San Francisco? | That would be great!",
    "label": "CONFIRM_SQL",
    "output": "select campus from campuses where location = 'San Francisco'"
  },
  {
    "db_id": "csu_1",
    "input": "Okay. What was the fee of San Francisco State University in 1996? | select campusfee from campuses join csu_fees on campuses.id = csu_fees.campus where campuses.campus = 'San Francisco State University' and csu_fees.year = 1996 | Was that the highest of the State campuses in that year?",
    "label": "CONFIRM_SQL",
    "output": "select campusfee from campuses join csu_fees on campuses.id = csu_fees.campus order by campusfee desc limit 1"
  },
  {
    "db_id": "csu_1",
    "input": "And which campus had a fee of 2258 in 1996? | select campuses.campus from campuses join csu_fees on campuses.id = csu_fees.campus where csu_fees.year = 1996 and csu_fees.campusfee = 2258 | Interesting! What county is that in?",
    "label": "CONFIRM_SQL",
    "output": "select campuses.county from campuses join csu_fees on campuses.id = csu_fees.campus where csu_fees.year = 1996 and csu_fees.campusfee = 2258"
  },
  {
    "db_id": "csu_1",
    "input": "And what county is San Francisco State University in? | select county from campuses where campus = 'San Francisco State University' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What are the number of products that had problems? | select count ( * ) from problems join product on problems.product_id = product.product_id | Could you please list their product ids?",
    "label": "CONFIRM_SQL",
    "output": "select product.product_id from problems join product on problems.product_id = product.product_id"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What are the number of problems each of these had? | select count ( * ) , product.product_id from problems join product on problems.product_id = product.product_id group by product.product_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "wrestler",
    "input": "list the location that was share by more than two wrestler | select location from wrestler group by location having count ( * ) > 2 | which of them has the highest days held",
    "label": "CONFIRM_SQL",
    "output": "select location from wrestler group by location having count ( * ) > 2 order by days_held desc limit 1"
  },
  {
    "db_id": "wrestler",
    "input": "what are the name of the wrestler  | Would you like to know the names of all wrestlers with location Tokyo, Japan? | yes",
    "label": "CONFIRM_SQL",
    "output": "select name from wrestler where location = 'Tokyo , Japan'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is the name of the document on project \"Graph Database project\"? | select document_name from documents join projects on documents.project_id = projects.project_id where projects.project_details = 'Graph Database project' | What are the document dates?",
    "label": "CONFIRM_SQL",
    "output": "select document_date from documents join projects on documents.project_id = projects.project_id where projects.project_details = 'Graph Database project'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is their description? | select document_description from documents join projects on documents.project_id = projects.project_id where projects.project_details = 'Graph Database project' | Thanks",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "architecture",
    "input": "Can I please have a list of architects who have built at least two bridges, or at least one mill? | What attributes of the architects do you want? | Can you please tell me the names and the ids of the architects who have built two bridges?",
    "label": "CONFIRM_SQL",
    "output": "select architect.id , architect.name from architect join bridge on architect.id = bridge.architect_id group by architect.id having count ( * ) = 2"
  },
  {
    "db_id": "architecture",
    "input": "Are these architects male, or female? | select architect.id , architect.name , architect.gender from architect join bridge on architect.id = bridge.architect_id group by architect.id having count ( * ) = 2 | Great. Would you please list the ids, names and genders of architects have built one mill?",
    "label": "CONFIRM_SQL",
    "output": "select architect.id , architect.name , architect.gender from architect join mill on architect.id = mill.architect_id group by architect.id having count ( * ) = 1"
  },
  {
    "db_id": "architecture",
    "input": "Has Zaha Hadid built any bridges longer than 200 meters? | select architect.id , architect.name , architect.gender from architect join bridge on architect.id = bridge.architect_id where architect.name = 'Zaha Hadid' and length_meters > 200 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "bike_1",
    "input": "Good morning, could you please let me know the IDs of the stations those are located in San Francisco? | select id from station where city = 'San Francisco' | That's a big list, thank you. Then could you please let me know which of these stations has more than 10 bikes available?",
    "label": "CONFIRM_SQL",
    "output": "select id from station where city = 'San Francisco' intersect select station_id from status group by station_id having bikes_available > 10"
  },
  {
    "db_id": "bike_1",
    "input": "That was fast, thank you again :) Could you please let me know which station is located in the highest latitude?  | select name from station order by lat desc limit 1 | Awesome, then could you please let me know the installation date of the station?",
    "label": "CONFIRM_SQL",
    "output": "select installation_date from station order by lat desc limit 1"
  },
  {
    "db_id": "bike_1",
    "input": "Thank you, then could you please let me know if there are any stations those have earlier installation date than 8/6/2013? | select count ( * ) from station where installation_date < '8/6/2013' | Wow that's a lot. Thank you again, this will be my last question :) Could you please let me know the ID of the station which has the biggest number of docks available among these 61 stations? ",
    "label": "CONFIRM_SQL",
    "output": "select id from station where installation_date < '8/6/2013' order by dock_count desc limit 1"
  },
  {
    "db_id": "game_1",
    "input": "show student ids who are female and play football | select stuid from student where sex = 'F' intersect select stuid from sportsinfo where sportname = 'Football' | what is the name of the student with the id 1002",
    "label": "CLARIFY",
    "output": "Would you like first name and last name of the student with student id 1002?"
  },
  {
    "db_id": "game_1",
    "input": "yes | select fname , lname from student where stuid = 1002 | what is the first name and last name of the student with the student id 1003",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where stuid = 1003"
  },
  {
    "db_id": "dorm_1",
    "input": "Can you show me the dorms with female only students?\n | select * from dorm where gender = 'F' | okay, can you show me all the names of dorm with male only students?\n",
    "label": "CONFIRM_SQL",
    "output": "select * from dorm where gender = 'M'"
  },
  {
    "db_id": "dorm_1",
    "input": "what about the name of the dorms that are both male and female? | select * from dorm where gender = 'M' or gender = 'F' | show me the name of dorms that are no gender specific?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_name from dorm where gender = 'X'"
  },
  {
    "db_id": "dorm_1",
    "input": "Show me all dorm names | select dorm_name from dorm | Can you tell me which one of them do not have TV Lounge?\n",
    "label": "CONFIRM_SQL",
    "output": "select dorm_name from dorm except select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge'"
  },
  {
    "db_id": "dorm_1",
    "input": "and which one DO have TV Lounge? | select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' | Thanks",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "customers_and_invoices",
    "input": "how many Invoices there | select count ( * ) from invoices | how many orders there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from orders"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "what is the customer id of order id 3 | select customer_id from orders where order_id = 3 | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "Find the destination of the airport least number of routes in china? | select airports.name from airports join routes on airports.apid = routes.dst_apid where airports.country = 'China' group by airports.name order by count ( * ) asc limit 1 | how many airports in the list?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( count ( name ) ) from airports"
  },
  {
    "db_id": "flight_4",
    "input": "find the country in the list? | What do you mean? | how many country in the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct country ) from airports"
  },
  {
    "db_id": "cinema",
    "input": "Show all the locations where some cinemas were opened in year 2010 | select location from cinema where openning_year = 2010 | Show all the locations where some cinemas were opened in year 2011",
    "label": "CONFIRM_SQL",
    "output": "select location from cinema where openning_year = 2011"
  },
  {
    "db_id": "cinema",
    "input": "How many locations where cinemas were opened in both year 2010 and 2011? | select count ( * ) from ( select location from cinema where openning_year = 2010 intersect select location from cinema where openning_year = 2011 ) | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "race_track",
    "input": "Which was the most recently opened track? | select name from track order by year_opened desc limit 1 | What is the seating capacity for Chicagoland Speedway?",
    "label": "CONFIRM_SQL",
    "output": "select seating from track where name = 'Chicagoland Speedway'"
  },
  {
    "db_id": "race_track",
    "input": "What is the location of the Chicagoland Speedway tract? | select location from track where name = 'Chicagoland Speedway' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "farm",
    "input": "Do you mean the themes for competitions in those cities? | Yes | Which cities have populations larger than 1000? List their ids.",
    "label": "CONFIRM_SQL",
    "output": "select city_id from city where population > 1000"
  },
  {
    "db_id": "farm",
    "input": "What is the theme for these cities? | select farm_competition.theme from city join farm_competition on city.city_id = farm_competition.host_city_id where city.population > 1000 | Which cities have populations less than 1000? List their ids.",
    "label": "CONFIRM_SQL",
    "output": "select distinct city.city_id from city join farm_competition on city.city_id = farm_competition.host_city_id where city.population < 1000"
  },
  {
    "db_id": "browser_web",
    "input": "how many accelerators are there? | select count ( * ) from web_client_accelerator | what accelerators are not compatible with the browsers?",
    "label": "CONFIRM_SQL",
    "output": "select * from web_client_accelerator where id not in ( select accelerator_id from accelerator_compatible_browser )"
  },
  {
    "db_id": "browser_web",
    "input": "can you tell me how many accelerators are not compatible? | select count ( * ) from web_client_accelerator where id not in ( select accelerator_id from accelerator_compatible_browser ) | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! What else can I do?"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "How many products have a price higher than the average? | select count ( * ) from products where product_price > ( select avg ( product_price ) from products ) | Can you give me the product names for these?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products where product_price > ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "And how many products have a price lower than the average? | select count ( * ) from products where product_price < ( select avg ( product_price ) from products ) | May I have their product names please?",
    "label": "CONFIRM_SQL",
    "output": "select distinct product_name from products where product_price < ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "document_management",
    "input": "Can you show me how many documents there are in total? | select count ( * ) from documents | What's the name of the document that was accessed the least amount of times?",
    "label": "CONFIRM_SQL",
    "output": "select document_name from documents order by access_count asc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "How about the name of the document that was accessed the most amount of times? | select document_name from documents order by access_count desc limit 1 | How many times has that document been accessed?",
    "label": "CONFIRM_SQL",
    "output": "select access_count from documents order by access_count desc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "What type of document is that? | select document_type_code from documents order by access_count desc limit 1 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "My pleasure. Anything else?"
  },
  {
    "db_id": "flight_1",
    "input": "How many flights have an origin of Los Angeles? | select count ( * ) from flight where origin = 'Los Angeles' | How many of those are going to Honolulu?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from flight where origin = 'Los Angeles' and destination = 'Honolulu'"
  },
  {
    "db_id": "flight_1",
    "input": "What is their departure date and arrival date? | select departure_date , arrival_date from flight where origin = 'Los Angeles' and destination = 'Honolulu' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "movie_1",
    "input": "What are the movie titles and average rating of the movies with the lowest average rating? | You didn’t follow the task rules, I have to leave first. | select movie.title , avg ( rating.stars ) from rating join movie on rating.mid = movie.mid group by rating.mid order by avg ( rating.stars ) asc limit 1",
    "label": "AMBIGUOUS",
    "output": "What year did the sound of music come out and who was the director?"
  },
  {
    "db_id": "movie_1",
    "input": "Do you mean the year of the movie whose title is The Sound of Music came out and the director of it? | yes | select year , director from movie where title = 'The Sound of Music'",
    "label": "AMBIGUOUS",
    "output": "What movie title has the highest rating?"
  },
  {
    "db_id": "movie_1",
    "input": "Do you mean the title of the movie with the highest stars? | Yes | select movie.title from rating join movie on rating.mid = movie.mid group by rating.mid order by rating.stars desc limit 1",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "department_management",
    "input": "tell me the name of head id  1 | select name from head where head_id = 1 | Tell me the born state and age for head id 3 ",
    "label": "CONFIRM_SQL",
    "output": "select born_state , age from head where head_id = 3"
  },
  {
    "db_id": "department_management",
    "input": "Which head's name has the substring 'Ha' ? List the id and name. | select head_id , name from head where name like '%Ha%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "climbing",
    "input": "How many mountains in this table? | select count ( * ) from mountain | Show the distinct names of mountains climbed by climbers from country \"West Germany\".",
    "label": "CONFIRM_SQL",
    "output": "select distinct mountain.name from climber join mountain on climber.mountain_id = mountain.mountain_id where climber.country = 'West Germany'"
  },
  {
    "db_id": "climbing",
    "input": "Please show me the name of the highest mountain. | select name from mountain order by height desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "store_product",
    "input": "What are the names of each district? | select district_name from district | What are the names of the districts whose area is larger than the average city area?",
    "label": "CONFIRM_SQL",
    "output": "select district_name from district where city_area > ( select avg ( city_area ) from district )"
  },
  {
    "db_id": "store_product",
    "input": "What are the total population of the districts whose area is larger than the average city area? | select sum ( city_population ) from district where city_area > ( select avg ( city_area ) from district ) | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "school_bus",
    "input": "How many drivers are there? | select count ( * ) from driver | What is the average age of your drivers?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) from driver"
  },
  {
    "db_id": "school_bus",
    "input": "How many female drivers are there? | sorry  i  can  not  answer  this question | Thanks",
    "label": "WELCOME",
    "output": "welcome  goodbye"
  },
  {
    "db_id": "party_host",
    "input": "Do you mean the id of the host of the earliest party? | Yes | Can you list the themes of the parties with the names of the party hosts?",
    "label": "CONFIRM_SQL",
    "output": "select party.party_theme , host.name from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id"
  },
  {
    "db_id": "party_host",
    "input": "What are the nationalities of the party hosts? | select host.nationality from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id | Who was the host of the earliest party listed?",
    "label": "CONFIRM_SQL",
    "output": "select host.host_id from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id order by party.first_year asc limit 1"
  },
  {
    "db_id": "party_host",
    "input": "What was their name? | select host.name from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id order by party.first_year asc limit 1 | Were they the main in charge?",
    "label": "CONFIRM_SQL",
    "output": "select party_host.is_main_in_charge from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id order by party.first_year asc limit 1"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "What is the product id of order item with id 1? | select product_id from order_items where order_item_id = 1 | How many product quantity does order item 1 have ?",
    "label": "CONFIRM_SQL",
    "output": "select product_quantity from order_items where order_item_id = 1"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "What is the product type code of order item 1? | select production_type_code from order_items join products on order_items.product_id = products.product_id where order_items.order_item_id = 1 | is there any product that wasnt included in any order?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products where product_id not in ( select product_id from order_items )"
  },
  {
    "db_id": "party_people",
    "input": "WHO IS THE HON TONY ABBOTT | did you mean the Member ID of HON TONY ABBOTT | YES EXACTLY",
    "label": "CONFIRM_SQL",
    "output": "select member_id from member where member_name = 'Hon Tony Abbott'"
  },
  {
    "db_id": "party_people",
    "input": "WHAT IS THE NAME OF PARTY WITH MOST NUMBER OF MEMBERS | select party.party_name from member join party on member.party_id = party.party_id group by member.party_id order by count ( * ) desc limit 1 | THANKS",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "e_learning",
    "input": "What is the latest test completion date? | select student_course_enrolment.date_of_completion from student_course_enrolment join student_tests_taken on student_course_enrolment.registration_id = student_tests_taken.registration_id order by student_course_enrolment.date_of_completion desc limit 1 | How many students have taken tests?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct student_id ) from student_course_enrolment"
  },
  {
    "db_id": "e_learning",
    "input": "How many students failed tests? | select count ( distinct student_course_enrolment.student_id ) from student_course_enrolment join student_tests_taken on student_course_enrolment.registration_id = student_tests_taken.registration_id where student_tests_taken.test_result = 'Fail' | When did these failures occur?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_enrolment.date_of_completion from student_course_enrolment join student_tests_taken on student_course_enrolment.registration_id = student_tests_taken.registration_id where student_tests_taken.test_result = 'Fail'"
  },
  {
    "db_id": "device",
    "input": "what are the shops? | Do you want the names of all the shops? | yes",
    "label": "CONFIRM_SQL",
    "output": "select shop_name from shop"
  },
  {
    "db_id": "device",
    "input": "now show me the shop which have devices in stock | select shop.shop_name from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id | now show me the shops that have more than one device in stock",
    "label": "CONFIRM_SQL",
    "output": "select shop.shop_name from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id having count ( * ) > 1"
  },
  {
    "db_id": "products_for_hire",
    "input": "can you show me a list of product description? | select product_description from products_for_hire | what are the start date and end of date of the booking that has booked the product named 'book collection A'?",
    "label": "CONFIRM_SQL",
    "output": "select bookings.booking_start_date , bookings.booking_end_date from products_for_hire join products_booked on products_for_hire.product_id = products_booked.product_id join bookings on products_booked.booking_id = bookings.booking_id where products_for_hire.product_name = 'Book collection A'"
  },
  {
    "db_id": "products_for_hire",
    "input": "thanks! | You're welcome. | what is the average of booked amount?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( booked_amount ) from products_booked"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the full name and id of the college with the largest number of baseball players?\n | select college.name_full , college.college_id from college join player_college on college.college_id = player_college.college_id group by college.college_id order by count ( * ) desc limit 1 | And how many players go there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct player_id ) from player_college where college_id = ( select college.college_id from college join player_college on college.college_id = player_college.college_id group by college.college_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "baseball_1",
    "input": "And where is that college located? | select college.city , college.state , college.country from college join player_college on college.college_id = player_college.college_id group by college.college_id order by count ( * ) desc limit 1 | And what year did the largest number of baseball players attend that college?",
    "label": "CONFIRM_SQL",
    "output": "select year from player_college where college_id = ( select college.college_id from college join player_college on college.college_id = player_college.college_id group by college.college_id order by count ( * ) desc limit 1 ) group by college_id order by year desc limit 1"
  },
  {
    "db_id": "baseball_1",
    "input": "How many baseball players attended that college in 2018? | select count ( player_id ) from player_college where year = '2018' and college_id = 'texas' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Show all product names and the number of customers having an order on each product. | select products.product_name , count ( * ) from order_items join products on order_items.product_id = products.product_id join orders on orders.order_id = order_items.order_id group by products.product_name | Please show me unit price of books?",
    "label": "CONFIRM_SQL",
    "output": "select unit_price from products where production_type_code = 'Books'"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Please give me Placed order date of customer id 12? | select date_order_placed from orders where customer_id = 12 | Thanks",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "college_2",
    "input": "how many courses have prerequisite? | select count ( * ) from course where course_id in ( select course_id from prereq ) | how many courses are there?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from course"
  },
  {
    "db_id": "college_2",
    "input": "How many courses that do not have prerequisite? | select count ( * ) from course where course_id not in ( select course_id from prereq ) | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome."
  },
  {
    "db_id": "flight_company",
    "input": "How many airports has pilot Thompson driven an aircraft? | select count ( * ) from airport where id in ( select airport_id from flight where pilot = 'Thompson' ) | How many airports had Thompson driven by August 1963?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from airport join flight on airport.id = flight.airport_id where flight.pilot = 'Thompson' and flight.date > 'August 16, 1963'"
  },
  {
    "db_id": "flight_company",
    "input": "What is the flight number of the aircraft Thompson drove in  March 1, 1963 | select vehicle_flight_number from flight where pilot = 'Thompson' and date = 'March 1, 1963' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome! Goodbye."
  },
  {
    "db_id": "college_1",
    "input": "Did you mean the class time for the class with code '10014' | Yes | yes for sure",
    "label": "REQUEST_MORE",
    "output": "Hi, you can start by asking a simple question related to the data."
  },
  {
    "db_id": "college_1",
    "input": "what is the class timing for the student who enrolled in 10014 | may i know the class room for the class section 1 | ok, so which column info do you want to return for these classes?",
    "label": "INFORM_SQL",
    "output": "i want to know the class room column"
  },
  {
    "db_id": "store_1",
    "input": "did you mean first and last names of employees who report to Nancy Edwards? | Yes | Did you mean the full names of employees whom Nancy Edwards reports to?",
    "label": "AFFIRM",
    "output": "Exactly."
  },
  {
    "db_id": "store_1",
    "input": "How many employees report to Nancy Edwards?\n | select count ( * ) from employees join employees on employees.id = employees.reports_to where employees.first_name = 'Nancy' and employees.last_name = 'Edwards' | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select employees.first_name , employees.last_name from employees join employees on employees.id = employees.reports_to where employees.first_name = 'Nancy' and employees.last_name = 'Edwards'"
  },
  {
    "db_id": "store_1",
    "input": "Who does not report to Nancy Edwards? | select employees.first_name , employees.last_name from employees join employees on employees.id = employees.reports_to where employees.first_name != 'Nancy' and employees.last_name != 'Edwards' | Who does Nancy Edwards report to?",
    "label": "CONFIRM_SQL",
    "output": "select employees.first_name , employees.last_name from employees join employees on employees.id = employees.reports_to where employees.first_name = 'Nancy' and employees.last_name = 'Edwards'"
  },
  {
    "db_id": "store_1",
    "input": "SELECT t1.first_name , T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T2.first_name = \"Nancy\" AND T2.last_name = \"Edwards\"; | Who does Andrew Adams report to? | select employees.first_name , employees.last_name from employees join employees on employees.id = employees.reports_to where employees.first_name = 'Andrew' and employees.last_name = 'Adams'",
    "label": "INFORM_SQL",
    "output": "Who else reports to Andrew Adams?"
  },
  {
    "db_id": "solvency_ii",
    "input": "Show the names of products that are in at least two events in ascending alphabetical order of product name. | select products.product_name from products join products_in_events on products.product_id = products_in_events.product_id group by products.product_name having count ( * ) >= 2 order by products.product_name asc | What is the product price of men suits?",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_name = 'Men suits'"
  },
  {
    "db_id": "solvency_ii",
    "input": "What is the most expensive product price? | select max ( product_price ) from products | How about the least expensive?",
    "label": "CONFIRM_SQL",
    "output": "select min ( product_price ) from products"
  },
  {
    "db_id": "solvency_ii",
    "input": "What product type is the one that has the least expensive product price? | Did  you  want  to get \tProduct Type  Code    that has the least expensive product price ? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code from products order  by product_price limit 1"
  },
  {
    "db_id": "sports_competition",
    "input": "What are the names of players who get more than the average points? | select name from player where points > ( select avg ( points ) from player ) | Give me the name of player with the most points",
    "label": "CONFIRM_SQL",
    "output": "select name from player where points = ( select max ( points ) from player )"
  },
  {
    "db_id": "sports_competition",
    "input": "Which players scored highest? Give me names | Do you mean the names of player with the most points? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select name from player where points = ( select max ( points ) from player )"
  },
  {
    "db_id": "college_2",
    "input": "How many instructors are there? | select count ( * ) from instructor | How many students are there?",
    "label": "REJECT",
    "output": "Sorry, I can't answer how many students there are. Could you ask something else?"
  },
  {
    "db_id": "college_2",
    "input": "OK. Which instructor ids appear more than once in the advisor table | select instructor.id from instructor join advisor on instructor.id = advisor.i_id group by advisor.i_id having count ( * ) > 1 | What are the instructors name for each of those ids the are advising more than one student?",
    "label": "CONFIRM_SQL",
    "output": "select instructor.name from instructor join advisor on instructor.id = advisor.i_id group by advisor.i_id having count ( * ) > 1"
  },
  {
    "db_id": "activity_1",
    "input": "How many professors are there? | select count ( * ) from faculty where rank = 'Professor' | how many are assistant professors?",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the number of assistant professors in total?"
  },
  {
    "db_id": "activity_1",
    "input": "Well, yes. | select count ( * ) from faculty where rank = 'AsstProf' | How many or women?",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the number of female assistant professors?"
  },
  {
    "db_id": "activity_1",
    "input": "yes, how many are women? | select count ( * ) from faculty where rank = 'AsstProf' and sex = 'F' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the staff id of Bosco? | select staff_id from staff where staff_last_name = 'Bosco' | Are there any problems reported by staff id 1?\n",
    "label": "CONFIRM_SQL",
    "output": "select problem_id from problems where reported_by_staff_id = 1"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "How many total problems are there reported by staff ID 1? | select count ( * ) from problems where reported_by_staff_id = 1 | What is the full set of information associated with staff with last name Bosco?",
    "label": "CONFIRM_SQL",
    "output": "select * from staff where staff_last_name = 'Bosco'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What are the ids of the problems reported by staff first name Lacey? | select problems.problem_id from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_first_name = 'Lacey' | Find the ids of all problems reported by staff with last name Bosco",
    "label": "CONFIRM_SQL",
    "output": "select problems.problem_id from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_last_name = 'Bosco'"
  },
  {
    "db_id": "allergy_1",
    "input": "What is the most common major? | select major from student group by major order by count ( * ) desc limit 1 | What is the name of the oldest student?",
    "label": "CONFIRM_SQL",
    "output": "select lname , fname from student where age = ( select max ( age ) from student )"
  },
  {
    "db_id": "allergy_1",
    "input": "What is that student's Id? | select stuid from student where age = ( select max ( age ) from student ) | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the customer ID who is associated with the latest policy? | select customers.customer_id from policies join customers on policies.customer_id = customers.customer_id where policies.start_date = ( select max ( start_date ) from policies ) | what is the name of the customer associated with customer ID 263?",
    "label": "CONFIRM_SQL",
    "output": "select customer_details from customers where customer_id = 263"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the policy type code of customer with ID 334? | select policy_type_code from policies where customer_id = 334 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "chinook_1",
    "input": "What is the average unit price of Rock tracks? | select avg ( track.unitprice ) from genre join track on genre.genreid = track.genreid where genre.name = 'Rock' | What's the average milliseconds of the Rock Tracks?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( track.milliseconds ) from genre join track on genre.genreid = track.genreid where genre.name = 'Rock'"
  },
  {
    "db_id": "chinook_1",
    "input": "and for the Jazz tracks? | select avg ( track.milliseconds ) from genre join track on genre.genreid = track.genreid where genre.name = 'Jazz' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "wine_1",
    "input": "Which is the most expensive wine? | select * from wine order by price desc limit 1 | From which year is it?",
    "label": "CONFIRM_SQL",
    "output": "select year from wine order by price desc limit 1"
  },
  {
    "db_id": "wine_1",
    "input": "What is the appelation of Giana | What is Giana? | Sorry Giana is the name of wine\n",
    "label": "CONFIRM_SQL",
    "output": "select appelation from wine where name = 'Giana'"
  },
  {
    "db_id": "wine_1",
    "input": "Which wine has a score of 91? | select * from wine where score = 91 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "store_1",
    "input": "Show the billing address with the highest amount of invoice? | select billing_address from invoices order by total desc limit 1 | Show the total amount of invoice from chicago, IL?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( total ) from invoices where billing_city = 'Chicago' and billing_state = 'IL'"
  },
  {
    "db_id": "store_1",
    "input": "Show the billing country with the total amount of invoice 3.96? | select billing_country from invoices where total = 3.96 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "climbing",
    "input": "Please list the names of all the climbers. | select name from climber | Can you show me the climbers who climbed mountains in Country Uganda?",
    "label": "CONFIRM_SQL",
    "output": "select climber_id from climber join mountain on climber.mountain_id = mountain.mountain_id where mountain.country = 'Uganda'"
  },
  {
    "db_id": "climbing",
    "input": "Hmm, I want to know the times used by the climbers to climb mountains in Country Uganda please. | select climber.time from climber join mountain on climber.mountain_id = mountain.mountain_id where mountain.country = 'Uganda' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome，goodbye"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Do you want the first, middle, and last names of that teacher? | Yes! | hi, how many teachers have addresses with zip code \"918\"",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from addresses join teachers on addresses.address_id = teachers.address_id where addresses.zip_postcode = '918'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "can you tell me who that teacher is? | select teachers.first_name , teachers.middle_name , teachers.last_name from addresses join teachers on addresses.address_id = teachers.address_id where addresses.zip_postcode = '918' | and what is that teacher's email address?",
    "label": "CONFIRM_SQL",
    "output": "select teachers.email_address from addresses join teachers on addresses.address_id = teachers.address_id where addresses.zip_postcode = '918'"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can you list the order id and the date order placed? | select order_id , date_order_placed from orders | What is the order status of the most recent order?",
    "label": "CONFIRM_SQL",
    "output": "select order_status from orders order by date_order_placed desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can you just list the id of the most recent order? | select order_id from orders order by date_order_placed desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "college_1",
    "input": "How many professors in this table? | select count ( * ) from professor | How many department names in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct dept_name ) from department"
  },
  {
    "db_id": "college_1",
    "input": "How many professors are in accounting department? | select count ( * ) from professor join department on professor.dept_code = department.dept_code where department.dept_name = 'Accounting' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome good bye"
  },
  {
    "db_id": "culture_company",
    "input": "What is the publisher with most number of books? | select publisher from book_club group by publisher order by count ( * ) desc limit 1 | What book titles did they publish in 1989?",
    "label": "CONFIRM_SQL",
    "output": "select book_title from book_club where year = 1989 and publisher = ( select publisher from book_club group by publisher order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "culture_company",
    "input": "* I have left the chat * | Who is the author of Unicorn Mountain? | select author_or_editor from book_club where book_title = 'Unicorn Mountain'",
    "label": "INFORM_SQL",
    "output": "Who is the author of Death Takes the Stage?"
  },
  {
    "db_id": "chinook_1",
    "input": "Did you mean the ids of albums of the artist named 'Accept'? | Yes | How many artists have album?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct artistid ) from album"
  },
  {
    "db_id": "chinook_1",
    "input": "Find the album id of  accept? | select album.albumid from artist join album on artist.artistid = album.artistid where artist.name = 'Accept' | How many artists in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct artist.artistid ) from artist join album on artist.artistid = album.artistid where artist.name = 'Accept'"
  },
  {
    "db_id": "chinook_1",
    "input": "How many albums in this table? | did you mean the number of all the albums shown in the table? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from album"
  },
  {
    "db_id": "music_4",
    "input": "what is average of volume? | select avg ( volume ) from music_festival | can you show a list of categories?",
    "label": "CONFIRM_SQL",
    "output": "select distinct category from music_festival"
  },
  {
    "db_id": "music_4",
    "input": "can you show me European music festival? | Sorry we don't have explicit information whether or not each festival is in Europe. Please ask something else. | where are the date of ceremony of music festivals with category 'best song' and 'awarded'?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_ceremony from music_festival where category = 'Best Song' and result = 'Awarded'"
  },
  {
    "db_id": "music_1",
    "input": "Which artist made the most songs? | did you want to return his/her name? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from song group by artist_name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "What about the name of artist with least number of songs? | select artist_name from song group by artist_name order by count ( * ) asc limit 1 | Ok, then what is the country of origin of Enrique?",
    "label": "CONFIRM_SQL",
    "output": "select country from artist where artist_name = 'Enrique'"
  },
  {
    "db_id": "race_track",
    "input": "give me the race class with the most number of races  | select class from race group by class order by count ( * ) desc limit 1 | on what date is it?",
    "label": "CONFIRM_SQL",
    "output": "select date from race where class = ( select class from race group by class order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "race_track",
    "input": "list the race id | select race_id from race where class = ( select class from race group by class order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "musical",
    "input": "What 1986 movie was nominated for a Tony Award for Best Book of a Musical? | select name from musical where year = 1986 and category = 'Best Book of a Musical' and result = 'Nominated' | How many actors appeared in it?",
    "label": "CONFIRM_SQL",
    "output": "select count ( actor.name ) from actor join musical on actor.musical_id = musical.musical_id where musical.year = 1986 and musical.category = 'Best Book of a Musical' and musical.result = 'Nominated'"
  },
  {
    "db_id": "musical",
    "input": "What are their names? | select actor.name from actor join musical on actor.musical_id = musical.musical_id where musical.year = 1986 and musical.category = 'Best Book of a Musical' and musical.result = 'Nominated' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the maximum share count of all of the different transaction type codes? | select transaction_type_code , max ( share_count ) from transactions group by transaction_type_code | What is the minimum share count of all of the different transaction type codes?",
    "label": "CONFIRM_SQL",
    "output": "select transaction_type_code , min ( share_count ) from transactions group by transaction_type_code"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the minimum share count of the transaction type code PUR? | select share_count from transactions where transaction_type_code = 'PUR' and share_count != '' order by share_count asc limit 1 | What is the share count of transaction id 2?",
    "label": "CONFIRM_SQL",
    "output": "select share_count from transactions where transaction_id = 2"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the lowest share count? | select share_count from transactions where share_count != '' order by share_count asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Can you tell me which year had more than one festival please? | select year from festival_detail group by year having count ( * ) > 1 | What are the names of the festivals that occurred that year?",
    "label": "CONFIRM_SQL",
    "output": "select festival_name from festival_detail where year = '2007'"
  },
  {
    "db_id": "entertainment_awards",
    "input": "What other years did the Cherry Awards occur during? | select year from festival_detail where festival_name = 'Cherry Awards' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "how many  Customers are there | select count ( * ) from customers | how may customer payment cash method",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers where payment_method = 'Cash'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "what is the name of customer id 2 | select customer_name from customers where customer_id = 2 | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "loan_1",
    "input": "Can show you the customer name of customer ID 1? | select cust_name from customer where cust_id = 1 | * I have left the chat *",
    "label": "INFORM_SQL",
    "output": "Can you show the average account balance of customers with credit score lower than 50 for each account type and their corresponding account types?"
  },
  {
    "db_id": "formula_1",
    "input": "Find the id, forename and number of races of all drivers who have at least participated in two races? | select drivers.driverid , drivers.forename , count ( * ) from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid group by drivers.driverid having count ( * ) >= 2 | What is the driver reference and nationality of Fernando?",
    "label": "CLARIFY",
    "output": "Do you mean the driver reference and nationality of the driver whose forename is Fernando?"
  },
  {
    "db_id": "formula_1",
    "input": "Yes | select driverref , nationality from drivers where forename = 'Fernando' | What position and how many wins does the forename Fernando have?",
    "label": "CLARIFY",
    "output": "Do you mean the position of the driver with forename Fernando when he ranked 1 and the number of times that he ranked 1?"
  },
  {
    "db_id": "formula_1",
    "input": "yes | select results.position , count ( * ) from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid where drivers.forename = 'Fernando' and rank = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "Hello!  How many students are enrolled in the class with the course code of ACCT-211? | select count ( * ) from class join enroll on class.class_code = enroll.class_code where class.crs_code = 'ACCT-211' | Excellent!  Can you show the class time and class room for ACCt-211?",
    "label": "CONFIRM_SQL",
    "output": "select class_time , class_room from class where crs_code = 'ACCT-211'"
  },
  {
    "db_id": "college_1",
    "input": "Thank you!  I thought there might be more to that table...  Can you provide me with a list of all of the different course codes? | select distinct crs_code from class | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye "
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What is the total number of products? | select sum ( order_items.order_quantity ) from customer_orders join order_items on customer_orders.order_id = order_items.order_id | What is the total number of products that are in orders with status \"Delivered\"?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( order_items.order_quantity ) from customer_orders join order_items on customer_orders.order_id = order_items.order_id where customer_orders.order_status = 'Delivered'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What is the total number of products that are in orders with status \"Cancelled\"? | select sum ( order_items.order_quantity ) from customer_orders join order_items on customer_orders.order_id = order_items.order_id where customer_orders.order_status = 'Cancelled' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "music_1",
    "input": "goodbye | What's the rating of all songs in English? | select rating from song where languages = 'english'",
    "label": "INFORM_SQL",
    "output": "What are the names of all the songs?"
  },
  {
    "db_id": "music_1",
    "input": "select song_name from song | Which of those have rating below that of all songs in English? | select song_name from song where rating < ( select min ( rating ) from song where languages = 'english' )",
    "label": "THANK_YOU",
    "output": "Thanks."
  },
  {
    "db_id": "cinema",
    "input": "How many different cinemas are on the list? | select count ( distinct cinema_id ) from cinema | What is the average capacity of each cinema?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( capacity ) from cinema"
  },
  {
    "db_id": "cinema",
    "input": "Which cinema has the highest capacity, and which has the lowest capacity? | select name from cinema where capacity = ( select min ( capacity ) from cinema ) or capacity = ( select max ( capacity ) from cinema ) | Which locations have the most cinemas?",
    "label": "CONFIRM_SQL",
    "output": "select location from cinema group by location order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "Which location has the most cinemas opened in 2010 or later? | select location from cinema where openning_year >= 2010 group by location order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank! Bye"
  },
  {
    "db_id": "product_catalog",
    "input": "Can you tell me highest value of the entry name? | select catalog_entry_name from catalog_contents order by price_in_dollars desc limit 1 | Is Sprite Lemo under the catalog entry name in the table?\nI can't see it ( Name ) in the table. so can you check it.",
    "label": "AFFIRM",
    "output": "Yes, I want to check it.\n"
  },
  {
    "db_id": "product_catalog",
    "input": "Can you tell me lowest value entry name?\n | select catalog_entry_name from catalog_contents order by price_in_dollars asc limit 1 | Thanks for your co-operation. ",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "store_1",
    "input": "what is the billing address of germany | select billing_address from invoices where billing_country = 'Germany' | what is the invoice date of customer id 2",
    "label": "CONFIRM_SQL",
    "output": "select invoice_date from invoices where customer_id = 2"
  },
  {
    "db_id": "store_1",
    "input": "what is the billing city of norway | select distinct ( billing_city ) from invoices where billing_country = 'Norway' | what is the last name of state sp",
    "label": "CONFIRM_SQL",
    "output": "select last_name from customers where state = 'SP'"
  },
  {
    "db_id": "decoration_competition",
    "input": "list the name of the members in the order of their rank in rounds | select member.name from member join round on member.member_id = round.member_id order by rank_in_round asc | include member id in this table",
    "label": "CONFIRM_SQL",
    "output": "select member.name , member.member_id from member join round on member.member_id = round.member_id order by rank_in_round asc"
  },
  {
    "db_id": "decoration_competition",
    "input": "also include the college id in this table | select member.name , member.member_id , member.college_id from member join round on member.member_id = round.member_id order by rank_in_round asc | thanks",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "products_for_hire",
    "input": "what is the daily hire cost of the product id 1 | select daily_hire_cost from products_for_hire where product_id = 1 | what is the status date of the product name Book collection C ?",
    "label": "CONFIRM_SQL",
    "output": "select status_date from view_product_availability join products_for_hire on view_product_availability.product_id = products_for_hire.product_id where product_name = 'Book collection C'"
  },
  {
    "db_id": "products_for_hire",
    "input": "what is the product description of the booking id 2 ? | select product_description from view_product_availability join products_for_hire on view_product_availability.product_id = products_for_hire.product_id where booking_id = 2 | what is the product description of the product id 3 ?",
    "label": "CONFIRM_SQL",
    "output": "select product_description from products_for_hire where product_id = 3"
  },
  {
    "db_id": "products_for_hire",
    "input": "what are the names of products whose availability equals to 1 ? | select products_for_hire.product_name from view_product_availability join products_for_hire on view_product_availability.product_id = products_for_hire.product_id where view_product_availability.available_yn = 1 |  Okay Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "what are the location of the enzymes? | select distinct location from enzyme | find the chromosome of the PGB diaminsea ?",
    "label": "REQUEST_MORE",
    "output": "Sorry, I could not understand. Could you please describe what is PGB diaminsea ?"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "i mean chromosome value ? | You mean PBG deaminase? | yes",
    "label": "CONFIRM_SQL",
    "output": "select chromosome from enzyme where name = 'PBG deaminase'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Find the product name of the ALA synthase? | select product from enzyme where name = 'ALA synthase' | Find the enzyme name of medicine id 3?",
    "label": "CONFIRM_SQL",
    "output": "select distinct enzyme.name from enzyme join medicine_enzyme_interaction on medicine_enzyme_interaction.enzyme_id = enzyme.id where medicine_enzyme_interaction.medicine_id = 3"
  },
  {
    "db_id": "music_1",
    "input": "Can you show the artist name of song Tumi robe nirobe? | select artist_name from song where song_name = 'Tumi robe nirobe' | Can you show the rating of the song Tumi robe nirobe?",
    "label": "CONFIRM_SQL",
    "output": "select rating from song where song_name = 'Tumi robe nirobe'"
  },
  {
    "db_id": "music_1",
    "input": "What is the genre of the song Tumi robe nirobe? | select genre_is from song where song_name = 'Tumi robe nirobe' | Can you show the names of songs whose genre is modern or language is English?",
    "label": "CONFIRM_SQL",
    "output": "select song_name from song where genre_is = 'modern' or languages = 'english'"
  },
  {
    "db_id": "tracking_orders",
    "input": "what is the customer name of customer id 1 | select customer_name from customers where customer_id = 1 | what is the customer name of customer id 2",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers where customer_id = 2"
  },
  {
    "db_id": "tracking_orders",
    "input": "what is the customer name of customer id 3 | select customer_name from customers where customer_id = 3 | find the name of the customers who have at most two orders",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from orders join customers on orders.customer_id = customers.customer_id group by customers.customer_id having count ( * ) <= 2"
  },
  {
    "db_id": "college_2",
    "input": "What are the names of all students who took any course in the fall semester of the year 2003? | select name from student where id in ( select id from takes where semester = 'Fall' and year = 2003 ) | What about in the spring semester?",
    "label": "CONFIRM_SQL",
    "output": "select name from student where id in ( select id from takes where semester = 'Spring' and year = 2003 )"
  },
  {
    "db_id": "college_2",
    "input": "What about in 2004? | select name from student where id in ( select id from takes where semester = 'Spring' and year = 2004 ) | What course id were offered in that semester?",
    "label": "CONFIRM_SQL",
    "output": "select distinct id from takes where semester = 'Spring' and year = 2004"
  },
  {
    "db_id": "college_2",
    "input": "What's the grade of 10838? | select grade from takes where semester = 'Spring' and year = 2004 and id = 10838 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "match_season",
    "input": "how many different languages do countries speak?\n | select count ( distinct official_native_language ) from country | how  many of them are some form of English?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct official_native_language ) from country where official_native_language like '%English%'"
  },
  {
    "db_id": "match_season",
    "input": "please list those languages | select official_native_language from country where official_native_language like '%English%' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "csu_1",
    "input": "how many campuses are presented on the table | select count ( * ) from campuses | list out the campuses name",
    "label": "CONFIRM_SQL",
    "output": "select campus from campuses"
  },
  {
    "db_id": "csu_1",
    "input": "what is the location of California State University-Bakersfield | select location from campuses where campus = 'California State University-Bakersfield' | what is the county of California State University-Chico",
    "label": "CONFIRM_SQL",
    "output": "select county from campuses where campus = 'California State University-Chico'"
  },
  {
    "db_id": "entrepreneur",
    "input": "How many weight of Francesco Postiglione? | select weight from people where name = 'Francesco Postiglione' | How much money requested of people id 2?",
    "label": "CONFIRM_SQL",
    "output": "select money_requested from entrepreneur where people_id = '2'"
  },
  {
    "db_id": "entrepreneur",
    "input": "Date of birth of Fabrizio Buonocore? | select date_of_birth from people where name = 'Fabrizio Buonocore' | What is the name of the entrepreneur with the greatest weight?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from entrepreneur join people on entrepreneur.people_id = people.people_id order by people.weight desc limit 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "How many balance of customer id 1? | Do you want the saving balance of the customer with id 1? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select balance from savings where custid = 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "Find the savings balance of Wang? | select savings.balance from accounts join savings on accounts.custid = savings.custid where accounts.name = 'Wang' | What are the accountant name of customer id 3?",
    "label": "CONFIRM_SQL",
    "output": "select name from accounts where custid = 3"
  },
  {
    "db_id": "small_bank_1",
    "input": "Find the checking balance of the accounts whose savings balance is higher than the average savings balance. | select savings.balance from accounts join checking on accounts.custid = savings.custid where accounts.name in ( select accounts.name from accounts join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings ) ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "music_1",
    "input": "Hello!  Can you provide me with the song name for the song with the lowest resolution? | select song.song_name from artist join song on artist.artist_name = song.artist_name order by song.resolution asc limit 1 | Thanks!  What is the name of the artist who produced the song with the lowest resolution?",
    "label": "CONFIRM_SQL",
    "output": "select artist.artist_name from artist join song on artist.artist_name = song.artist_name order by song.resolution asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "Thank you very much!  Can you please tell me what the gender of the artist is? | select artist.gender from artist join song on artist.artist_name = song.artist_name order by song.resolution asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome!"
  },
  {
    "db_id": "insurance_fnol",
    "input": "How many service names in this table? | select count ( service_name ) from services | How many customers in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers"
  },
  {
    "db_id": "insurance_fnol",
    "input": "How many customer names in this table? | select count ( distinct customer_name ) from customers | How many policy ids are in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( policy_id ) from first_notification_of_loss"
  },
  {
    "db_id": "gas_company",
    "input": "what is the average of market value? | select avg ( market_value ) from company | what is the average of assets billion?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( assets_billion ) from company"
  },
  {
    "db_id": "gas_company",
    "input": "what is companies headquarters? | select headquarters from company | show all headquarters without a company in banking industry.",
    "label": "CONFIRM_SQL",
    "output": "select headquarters from company except select headquarters from company where main_industry = 'Banking'"
  },
  {
    "db_id": "musical",
    "input": "Can you list the awards of the musical nominee \"Bob Fosse\"? | select distinct award from musical where nominee = 'Bob Fosse' | Can you list the awards of the musical nominee \"Cleavant Derricks\"?",
    "label": "CONFIRM_SQL",
    "output": "select distinct award from musical where nominee = 'Cleavant Derricks'"
  },
  {
    "db_id": "musical",
    "input": "What categories did Cleavant Derricks win for? | select category from musical where nominee = 'Cleavant Derricks' and result = 'Won' | What categories were Cleavant Derrick nominated for?",
    "label": "CONFIRM_SQL",
    "output": "select category from musical where nominee = 'Cleavant Derricks' and result = 'Nominated'"
  },
  {
    "db_id": "musical",
    "input": "What categories did Bob Fosse win in? | select category from musical where nominee = 'Bob Fosse' and result = 'Won' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "shop_membership",
    "input": "What are the register year of Jeremy Jarmon? | select membership_register_branch.register_year from membership_register_branch join member on membership_register_branch.member_id = member.member_id where member.name = 'Jeremy Jarmon' | What is Corey Peters Card_Number?",
    "label": "CONFIRM_SQL",
    "output": "select card_number from member where name = 'Corey Peters'"
  },
  {
    "db_id": "shop_membership",
    "input": "What is Myron Pryor Hometown? | select hometown from member where name = 'Myron Pryor' | Show the member name and hometown who registered a branch in 2016.",
    "label": "CONFIRM_SQL",
    "output": "select member.name , member.hometown from membership_register_branch join member on membership_register_branch.member_id = member.member_id where membership_register_branch.register_year = 2016"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Is there a product name \"chervil\" in the table Products? | select * from products where product_name = 'chervil' | What is the product description for this product?",
    "label": "CONFIRM_SQL",
    "output": "select product_description from products where product_name = 'chervil'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Also, what is the color code? | select products.color_code , ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where products.product_name = 'chervil' | Great, what is the typical product price for this product?",
    "label": "CONFIRM_SQL",
    "output": "select typical_buying_price from products where product_name = 'chervil'"
  },
  {
    "db_id": "school_player",
    "input": "Show the School name with School_ID 1? | select school from school where school_id = '1' | Show the denomination shared by more than one school?",
    "label": "CONFIRM_SQL",
    "output": "select denomination from school group by denomination having count ( * ) > 1"
  },
  {
    "db_id": "school_player",
    "input": "Show the Location of Barker College? | select location from school where school = 'Barker College' | Show the names of schools with only girls?",
    "label": "CONFIRM_SQL",
    "output": "select school from school where boys_or_girls = 'Girls'"
  },
  {
    "db_id": "student_1",
    "input": "What are the names of all of the students? | select lastname , firstname from list | Which classroom has the largest number of students?",
    "label": "CONFIRM_SQL",
    "output": "select classroom from list group by classroom order by count ( * ) desc limit 1"
  },
  {
    "db_id": "student_1",
    "input": "How many students are in that classroom? | select count ( * ) from list group by classroom order by count ( * ) desc limit 1 | What is the name of the teacher who teaches in that classroom?",
    "label": "CONFIRM_SQL",
    "output": "select teachers.firstname , teachers.lastname from list join teachers on list.classroom = teachers.classroom group by teachers.firstname , teachers.lastname order by count ( * ) desc limit 1"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many apartments are there? | select count ( * ) from apartments | Which apartments has the largest number of total rooms?",
    "label": "CLARIFY",
    "output": "what attribute did you want me to return for the apartment with the largest number of total rooms? the apartment type code?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "The apt ID first. | select apt_id from apartments group by apt_id order by sum ( room_count ) desc limit 1 | Now what is the apartment type code of that apartment.",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code from apartments group by apt_type_code order by sum ( room_count ) desc limit 1"
  },
  {
    "db_id": "journal_committee",
    "input": "Show the names of editors of age either 24 or 25. | select name from editor where age = 24 or age = 25 | List out the editors name?",
    "label": "CLARIFY",
    "output": "sorry, did you mean you need the Editor ID"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Can you list the asset ids, the fault log entry ids and the fault descriptions?  | select asset_id , fault_log_entry_id , fault_description from fault_log | Hmm, I want to know the asset ids that did not incur any fault log.",
    "label": "CONFIRM_SQL",
    "output": "select asset_id from assets where asset_id not in ( select asset_id from fault_log )"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Please just list the asset model of those assets. | select asset_model from assets where asset_id not in ( select asset_id from fault_log ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "driving_school",
    "input": "What are the lessons thought by jenessa | select lessons.lesson_id from lessons join staff on lessons.staff_id = staff.staff_id where staff.first_name = 'Janessa' | What are those id's\n",
    "label": "CLARIFY",
    "output": "You mean the detailed information about the lesson with id 4?"
  },
  {
    "db_id": "driving_school",
    "input": "yes i need details  | select * from lessons where lesson_id = 4 | What was the lesson date",
    "label": "CONFIRM_SQL",
    "output": "select lesson_date from lessons where lesson_id = 4"
  },
  {
    "db_id": "driving_school",
    "input": "What was the lesson timing | select lesson_time from lessons where lesson_id = 4 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "flight_1",
    "input": "list the salaries in ascending order | select salary from employee order by salary asc | show the least three salaries in the table",
    "label": "CONFIRM_SQL",
    "output": "select salary from employee order by salary asc limit 3"
  },
  {
    "db_id": "flight_1",
    "input": "list the name of the employees with the lowest salaries | select name from employee order by salary asc limit 1 | what is the id of him?",
    "label": "CONFIRM_SQL",
    "output": "select eid from employee order by salary asc limit 1"
  },
  {
    "db_id": "department_management",
    "input": "how many departments are there? | select count ( * ) from department | how many employees are there in Department ID 2",
    "label": "CONFIRM_SQL",
    "output": "select num_employees from department where department_id = 2"
  },
  {
    "db_id": "department_management",
    "input": "what is the name of Department ID 3 | select name from department where department_id = 3 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome! Goodbye."
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Would you please show me the ids of all employees who don't destroy any documents? | select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select employee_name from employees except select destroyed_by_employee_id from documents_to_be_destroyed"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Would you please show me the ids of all employees who do destroy any documents? | select employee_id from employees join documents_to_be_destroyed on employees.employee_id = documents_to_be_destroyed.destroyed_by_employee_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "county_public_safety",
    "input": "Hi there!  Can you show me a list of all of the cities including city IDs and city names? | select city_id , name from city | Thanks for that!  Can you filter this list to show only the cities that have populations of more than 20,000, and display the corresponding population for each city?",
    "label": "REJECT",
    "output": "sorry,i dont have the answer to your question"
  },
  {
    "db_id": "county_public_safety",
    "input": "Can you update this list with the population value that corresponds to each city? | sorry,i dont have the answer to your question ,i only have the population value that corresponds to each county | Oh, I am sorry about that.  Can you please show me a list of all of the cities located in counties that for which the county has a population over 20,000?",
    "label": "CONFIRM_SQL",
    "output": "select name from city where county_id in ( select county_id from county_public_safety where population > 20000 )"
  },
  {
    "db_id": "game_injury",
    "input": "Did you mean the id of the stadium? | Yes | How many games has each stadium held?\n",
    "label": "CONFIRM_SQL",
    "output": "select stadium.id , count ( * ) from stadium join game on stadium.id = game.stadium_id group by stadium.id"
  },
  {
    "db_id": "game_injury",
    "input": "So how many total games were there? | select count ( * ) from game | Which stadium had the most games?",
    "label": "CONFIRM_SQL",
    "output": "select stadium.id from stadium join game on stadium.id = game.stadium_id group by stadium.id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "game_injury",
    "input": "What is the average number of games per stadium? | Sorry, i CANNOT ANSWER THIS QUESTION. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "insurance_policies",
    "input": "Hello, I was wondering how many claims are made? | select count ( * ) from claims | About how many settlements does each claim correspond to?\n",
    "label": "CONFIRM_SQL",
    "output": "select claims.claim_id , count ( * ) from claims join settlements on claims.claim_id = settlements.claim_id group by claims.claim_id"
  },
  {
    "db_id": "insurance_policies",
    "input": "That is so helpful.  Is there a month of the year that brings in more claims than another? | You are welcome. Sorry, I cannot answer this question. | No problem, what is the average amount of days for a claim to be settled?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( date_claim_settled - date_claim_made ) from claims"
  },
  {
    "db_id": "insurance_policies",
    "input": "Claim number 801 had 4 settlements, what was the largest one? | Do you mean largest in terms of the amount claimed or amount settled? | Yes, both.  ",
    "label": "CONFIRM_SQL",
    "output": "select settlements.settlement_id , settlements.amount_claimed , settlements.amount_settled from claims join settlements on claims.claim_id = settlements.claim_id where claims.claim_id = 801"
  },
  {
    "db_id": "insurance_policies",
    "input": "Did another claim besides 801 carry a larger individual settlement?\n | select claims.claim_id , settlements.settlement_id , settlements.amount_settled from claims join settlements on claims.claim_id = settlements.claim_id where claims.claim_id != 801 and settlements.amount_settled > 1805 | Great, I appreciate your help.",
    "label": "WELCOME",
    "output": "Sure! You are welcome!"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "How many customers are there? | select count ( * ) from customers | How many of them have \"Diana\" anywhere in their name?",
    "label": "CONFIRM_SQL",
    "output": "select count ( customer_details ) from customers where customer_details like '%Diana%'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is her full name? | select customer_details from customers where customer_details like '%Diana%' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! Bye."
  },
  {
    "db_id": "wedding",
    "input": "Hello!  Can you provide me with a list of all churches please? | Do you need their names or ids? | Ah yes!  Can you please provide me with a list containing both?",
    "label": "CONFIRM_SQL",
    "output": "select church_id , name from church"
  },
  {
    "db_id": "wedding",
    "input": "Thank you for that!  Could you filter that list to show only the  church names and ids of churches that have hosted 2 or more weddings? | select church.name , church.church_id from church join wedding on church.church_id = wedding.church_id group by church.church_id having count ( * ) >= 2 | Alright!  Can you show me a list of all church names and the total number of weddings that each church has hosted?",
    "label": "CONFIRM_SQL",
    "output": "select church.name , church.church_id from church join wedding on church.church_id = wedding.church_id"
  },
  {
    "db_id": "twitter_1",
    "input": "How many users are followed by Mary? | select count ( * ) from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Mary' | What about by Susan?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Susan'"
  },
  {
    "db_id": "twitter_1",
    "input": "What is the id for those users? | Do you mean users followed by only Mary, or only Susan, or by either? | I mean the users followed by either.",
    "label": "CONFIRM_SQL",
    "output": "select follows.f1 from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Mary' or user_profiles.name = 'Susan'"
  },
  {
    "db_id": "twitter_1",
    "input": "What are the names of those users? | select uid , name from user_profiles where uid in ( select follows.f1 from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Mary' or user_profiles.name = 'Susan' ) | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "riding_club",
    "input": "what are the names of the players? | select player_name from player | Is Jameson Tomas the rank 1 coach?",
    "label": "CONFIRM_SQL",
    "output": "select coach_name from coach where rank = 1"
  },
  {
    "db_id": "riding_club",
    "input": "Who has been coached by Jameson Tomas? | select player.player_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id where coach.coach_name = 'Jameson Tomas' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "department_management",
    "input": "Are there any distinct creation years managed by a secretary | Sorry do you mean the distinct creation years of the departments managed by a secretary? But I think all the departments are managed by a secretary. | where is Sergio García born",
    "label": "CONFIRM_SQL",
    "output": "select born_state from head where name = 'Sergio García'"
  },
  {
    "db_id": "department_management",
    "input": "what is the highest head id in the management | select max ( head_id ) from head | give me the age of all the people in the mangement",
    "label": "CONFIRM_SQL",
    "output": "select head.age from head join management on head.head_id = management.head_id"
  },
  {
    "db_id": "mountain_photos",
    "input": "what is the brand name of id  2 ? | Did you mean the brand or name of the camera lens with ID 2? | yes",
    "label": "CONFIRM_SQL",
    "output": "select brand from camera_lens where id = 2"
  },
  {
    "db_id": "mountain_photos",
    "input": "what is color of mountain id no. 20 ? | select distinct ( color ) from photos where mountain_id = 20 | what is focus  length of id 3?",
    "label": "CONFIRM_SQL",
    "output": "select focal_length_mm from camera_lens where id = 3"
  },
  {
    "db_id": "mountain_photos",
    "input": "what is the name of the camera lens in the mountains id 2? | select camera_lens.name from photos join camera_lens on photos.camera_lens_id = camera_lens.id where photos.mountain_id = 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Hello! How many transactions are there total? | select count ( * ) from financial_transactions | Perfect! And is there an account number of 337?",
    "label": "CLARIFY",
    "output": "Do you mean the account name?"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Yes the account name being 337. | select * from accounts where account_name = '337' | How many total transactions does that account have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from financial_transactions join accounts on financial_transactions.account_id = accounts.account_id where accounts.account_name = '337'"
  },
  {
    "db_id": "station_weather",
    "input": "Hello!  Can you provide me with a list of all train names for trains that are associated with the local authority of Chiltern? | select distinct train.name from station join route on station.id = route.station_id join train on route.train_id = train.id where station.local_authority = 'Chiltern' | That's great!  Can you update that list to also include all of the arrival times for the trains that have Chiltern listed as their station's local authority?",
    "label": "CONFIRM_SQL",
    "output": "select train.name , train.time from station join route on station.id = route.station_id join train on route.train_id = train.id where station.local_authority = 'Chiltern'"
  },
  {
    "db_id": "station_weather",
    "input": "Great!  Finally, can you update this list to also include The train ID and train number for each? | select train.name , train.time , train.train_number , route.train_id from station join route on station.id = route.station_id join train on route.train_id = train.id where station.local_authority = 'Chiltern' | Thanks!",
    "label": "WELCOME",
    "output": "welcome and goodbye"
  },
  {
    "db_id": "insurance_policies",
    "input": "hi I was wondering how many policies Ellsworth Paucek has?\n | select count ( * ) from customers join customer_policies on customers.customer_id = customer_policies.customer_id where customers.customer_details = 'Ellsworth Paucek' | do you know how many total customers had more than 1 policy?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select customers.customer_details , customers.customer_id from customers join customer_policies on customers.customer_id = customer_policies.customer_id group by customers.customer_id having count ( * ) > 1 )"
  },
  {
    "db_id": "insurance_policies",
    "input": "could you tell me those four customer's details and their ID? | select customers.customer_details , customers.customer_id from customers join customer_policies on customers.customer_id = customer_policies.customer_id group by customers.customer_id having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "store_1",
    "input": "Do you mean the address of the customer with first name Luis? | Yes | how many customers are presented on the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers"
  },
  {
    "db_id": "store_1",
    "input": "what are all the companies on the table | Do  you  mean the companies that  customers  work? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select company from customers where company != 'NULL'"
  },
  {
    "db_id": "store_1",
    "input": "what is the city of Luís | select address from customers where first_name = 'Luís' | what is the highest total on the table",
    "label": "REQUEST_MORE",
    "output": "what do you mean the highest total?"
  },
  {
    "db_id": "store_1",
    "input": "actually i mean highest total amount | select total from invoices order by total desc limit 1 | thanks",
    "label": "WELCOME",
    "output": "welcome  goodbye"
  },
  {
    "db_id": "flight_1",
    "input": "LIST THE NAME OF THE AIRCRAFTS | select name from aircraft | WHAT ARE THE NAMES OF AIRCRAFT WHICH FEWEST PEOPLE HAVE ITS CERTIFICATE",
    "label": "CONFIRM_SQL",
    "output": "select aircraft.name from certificate join aircraft on aircraft.aid = certificate.aid group by certificate.aid order by count ( * ) asc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "WHAT IS THE ID OF THE AIRCRAFT | Do you mean the aircraft id of the aircraft named Boeing 727? | YES",
    "label": "CONFIRM_SQL",
    "output": "select aid from aircraft where name = 'Boeing 727'"
  },
  {
    "db_id": "scientist_1",
    "input": "how many projects are presented on the table | select count ( * ) from projects | list out the projects names",
    "label": "CONFIRM_SQL",
    "output": "select name from projects"
  },
  {
    "db_id": "scientist_1",
    "input": "which project are least hours on the table | select name from projects where hours = ( select min ( hours ) from projects ) | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "how many airports are presented on the table | select count ( * ) from airports | list out the airports names",
    "label": "CONFIRM_SQL",
    "output": "select name from airports"
  },
  {
    "db_id": "flight_4",
    "input": "how many cities are the aiports | Did you mean the number of cities that have any airport? | exactly",
    "label": "AFFIRM",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "driving_school",
    "input": "how many Lessons there | select count ( * ) from lessons | what is the nickname of staff id 3",
    "label": "CONFIRM_SQL",
    "output": "select nickname from staff where staff_id = 3"
  },
  {
    "db_id": "driving_school",
    "input": "what is the middle name if staff with id 2 | select middle_name from staff where staff_id = 2 | thanks",
    "label": "WELCOME",
    "output": "Welcome! Bye."
  },
  {
    "db_id": "university_basketball",
    "input": "What is the Primary conference of Lebanon Valley College? | select primary_conference from university where school = 'Lebanon Valley College' | What is the nickname of University of Rhode Island?",
    "label": "CONFIRM_SQL",
    "output": "select nickname from university where school = 'University of Rhode Island'"
  },
  {
    "db_id": "university_basketball",
    "input": "What is the location of Fightin' Blue Hens? | select location from university where nickname = 'Fightin Blue Hens' | Find the school that was either founded after 1850 or public.",
    "label": "CONFIRM_SQL",
    "output": "select school from university where founded > 1850 or affiliation = 'Public'"
  },
  {
    "db_id": "musical",
    "input": "How many nominees have been nominated more than once? | select nominee from musical group by nominee having count ( * ) > 1 | How many times has Bob Fosse been nominated?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from musical where nominee = 'Bob Fosse'"
  },
  {
    "db_id": "musical",
    "input": "Is there anyone who has been nominated more than Bob Fosse? | select nominee from musical group by nominee having count ( * ) > ( select count ( * ) from musical where nominee = 'Bob Fosse' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "news_report",
    "input": "show me the journalists from England\n | Do you want their names? | Yes, I do",
    "label": "CONFIRM_SQL",
    "output": "select name from journalist where nationality = 'England'"
  },
  {
    "db_id": "news_report",
    "input": "and from Wales too | select name from journalist where nationality = 'England' or nationality = 'Wales' | How many journalists are from England or Wales ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from journalist where nationality = 'England' or nationality = 'Wales'"
  },
  {
    "db_id": "news_report",
    "input": "Can you show me their names ? | select name from journalist where nationality = 'England' or nationality = 'Wales' | How many journalists from England have worked for over an year ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from journalist where nationality = 'England' and years_working > 1"
  },
  {
    "db_id": "news_report",
    "input": "What about Wales ? | select count ( * ) from journalist where nationality = 'Wales' and years_working > 1 | Can you show me the names of those journalists ?",
    "label": "CLARIFY",
    "output": "Do you mean the journalists from Wales and England who have worked for over a year?"
  },
  {
    "db_id": "news_report",
    "input": "Yes\n | select name from journalist where nationality = 'Wales' and years_working > 1 union select name from journalist where nationality = 'England' and years_working > 1 | What about any journalists from Wales or England which have not worked at all ?",
    "label": "REJECT",
    "output": "Sorry, I cannot answer this."
  },
  {
    "db_id": "school_bus",
    "input": "how many driver are presented on the table | select count ( * ) from driver | list out the driver names on the table",
    "label": "CONFIRM_SQL",
    "output": "select name from driver"
  },
  {
    "db_id": "school_bus",
    "input": "what is the age of Matthew Ritter | select age from driver where name = 'Matthew Ritter' | what is the home city of Dan Carter",
    "label": "CONFIRM_SQL",
    "output": "select home_city from driver where name = 'Dan Carter'"
  },
  {
    "db_id": "hr_1",
    "input": "How many employees first names contain the letter M? | select count ( * ) from employees where first_name like '%M%' | What are the names of those employees?",
    "label": "CLARIFY",
    "output": "Do you mean the first name and last name of those employees?"
  },
  {
    "db_id": "hr_1",
    "input": "Yes. | select first_name , last_name from employees where first_name like '%M%' | How many employees first names do not contain the letter M?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees where first_name not like '%M%'"
  },
  {
    "db_id": "hr_1",
    "input": "What are their full names? | select first_name , last_name from employees where first_name not like '%M%' | When were they hired?",
    "label": "CONFIRM_SQL",
    "output": "select hire_date from employees where first_name not like '%M%'"
  },
  {
    "db_id": "roller_coaster",
    "input": "What is the  height of the highest roller coaster? | select max ( height ) from roller_coaster | Which park is this roller coaster located at?",
    "label": "CONFIRM_SQL",
    "output": "select park from roller_coaster where height = ( select max ( height ) from roller_coaster )"
  },
  {
    "db_id": "roller_coaster",
    "input": "What is the name of the country that has the highest roller coaster? | select country.name from roller_coaster join country on roller_coaster.country_id = country.country_id where roller_coaster.height = ( select max ( height ) from roller_coaster ) | Hmm, I also want to know the population of this country.",
    "label": "CONFIRM_SQL",
    "output": "select country.name , country.population from roller_coaster join country on roller_coaster.country_id = country.country_id where roller_coaster.height = ( select max ( height ) from roller_coaster )"
  },
  {
    "db_id": "student_assessment",
    "input": "whats the course id of statistics  | select course_id from courses where course_name = 'statistics' | whats the course description of french",
    "label": "CONFIRM_SQL",
    "output": "select course_description from courses where course_name = 'French'"
  },
  {
    "db_id": "student_assessment",
    "input": "which course has most number of registered students ? | select courses.course_name from courses join student_course_registrations on courses.course_id = student_course_registrations.course_id group by courses.course_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "movie_1",
    "input": "what is the highest rating star? | select max ( stars ) from rating | what is the average of rating stars?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( stars ) from rating"
  },
  {
    "db_id": "movie_1",
    "input": "what is the first movie's year? | What do you mean by \"first\"? Do you mean the earliest movie? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select min ( year ) from movie"
  },
  {
    "db_id": "riding_club",
    "input": "What is the name of the player with the largest number of votes? | select player_name from player order by votes desc limit 1 | What is his sponsor's name?",
    "label": "CONFIRM_SQL",
    "output": "select sponsor_name from player order by votes desc limit 1"
  },
  {
    "db_id": "riding_club",
    "input": "Who is the sponsor of the player with the least amount of votes? | select sponsor_name from player order by votes asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Goodbye."
  },
  {
    "db_id": "small_bank_1",
    "input": "Hi, could you please let me know what is the average savings balance of all customers? | select avg ( balance ) from savings | Awesome, thank you. Then could you please show me the ID of the customers who have higher balance than this average?",
    "label": "CONFIRM_SQL",
    "output": "SELECT custid from savings where balance > (select avg(balance) from savings)"
  },
  {
    "db_id": "small_bank_1",
    "input": "oh that's a bit surprising, maybe this person is elevating the average a lot. Thank you, then could you please show me this customer's balance on both CHECKING and SAVINGS table? | select checking.balance , savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings ) | That's great, thank you. Then could you please let me know what is the sum of those two accounts?",
    "label": "CONFIRM_SQL",
    "output": "select checking.balance + savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings )"
  },
  {
    "db_id": "small_bank_1",
    "input": "Thank you. Then could you please let me know what would be the difference between the balances of the two accounts? | select savings.balance - checking.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings ) | Thanks! nice working with you, hope you have a great day ahead!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye! "
  },
  {
    "db_id": "college_2",
    "input": "How many instructors are in the statistics department? | select count ( * ) from instructor where dept_name = 'Statistics' | What is the lowest salary of the instructors in the statistics department?",
    "label": "CONFIRM_SQL",
    "output": "select min ( salary ) from instructor where dept_name = 'Statistics'"
  },
  {
    "db_id": "college_2",
    "input": "And what is the name of the instructor that earns that salary? | select name from instructor where dept_name = 'Statistics' order by salary asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "department_store",
    "input": "Hello!  Can you provide me with a list of all the different product types? | select distinct product_type_code from products group by product_type_code | Sweet!  Can you update this list to show what the maximum product price is for both Clothes and Hardware, and include the minimum product price for each?",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code , max ( product_price ) , min ( product_price ) from products group by product_type_code"
  },
  {
    "db_id": "department_store",
    "input": "Cool!  Can you show me a list of all of the different product names? | select distinct product_name from products | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Could you please tell me the total amount paid in claim headers? | select sum ( amount_piad ) from claim_headers | Could you please tell me the average amount paid in claim headers?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( amount_piad ) from claim_headers"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Could you please tell me the total amount claimed? | select sum ( amount_claimed ) from claim_headers | What is the date of the largest amount claimed?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_claim from claim_headers order by amount_claimed desc limit 1"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the date of the smallest amount paid? | select date_of_claim from claim_headers order by amount_claimed asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the salary of team id ATL? | select salary from salary join team on salary.team_id = team.team_id_br where salary.team_id = 'ATL' | Show me the league id of player id bedrost01 ?",
    "label": "CONFIRM_SQL",
    "output": "select distinct salary.league_id from salary join team on salary.team_id = team.team_id_br where salary.player_id = 'bedrost01'"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the player id with salary 545000? | select distinct salary.player_id from salary join team on salary.team_id = team.team_id_br where salary.salary = 545000 | Show how many players were in the team Boston Red Stockings in 2000?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings' and salary.year = 2000"
  },
  {
    "db_id": "company_office",
    "input": "What is the name of the building with the largest height? | select name from buildings order by height desc limit 1 | How many stories does that building have?",
    "label": "CONFIRM_SQL",
    "output": "select stories from buildings order by height desc limit 1"
  },
  {
    "db_id": "company_office",
    "input": "What is the height of that building? | select height from buildings order by height desc limit 1 | What city is that building in?",
    "label": "CONFIRM_SQL",
    "output": "select city from buildings order by height desc limit 1"
  },
  {
    "db_id": "company_office",
    "input": "How many stories does the building with the smallest height have? | select stories from buildings order by height asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "network_2",
    "input": "Hello, could you find how many friends Alice has? | select count ( * ) from personfriend where name = 'Alice' | Is this friend a female?",
    "label": "CONFIRM_SQL",
    "output": "select person.gender from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice'"
  },
  {
    "db_id": "network_2",
    "input": "Does Alice have any female friends? | select person.gender from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice' | What is the name of Alice's friend?",
    "label": "CONFIRM_SQL",
    "output": "select friend from personfriend where name = 'Alice'"
  },
  {
    "db_id": "network_2",
    "input": "What are the names of Bob's friends? | select friend from personfriend where name = 'Bob' | Are there any people that have Alice listed as their friend?",
    "label": "CONFIRM_SQL",
    "output": "select name from personfriend where friend = 'Alice'"
  },
  {
    "db_id": "network_2",
    "input": "Is Zach also a male? | select gender from person where name = 'Zach' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks!  Bye"
  },
  {
    "db_id": "railway",
    "input": "Can you tell me the name of the oldest manager please? | select name from manager order by age desc limit 1 | What about the second youngest manager?",
    "label": "CONFIRM_SQL",
    "output": "select name from manager order by age asc limit 2"
  },
  {
    "db_id": "railway",
    "input": "What is the name of the manager with the earliest working year? | select name from manager order by working_year_starts asc limit 1 | Can you list the names of all managers with the highest level?",
    "label": "CONFIRM_SQL",
    "output": "select name from manager where level = ( select max ( level ) from manager )"
  },
  {
    "db_id": "college_1",
    "input": "How many students took any course? | Did you mean how many students there are? | Yes, sorry!\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student"
  },
  {
    "db_id": "college_1",
    "input": "How many students got an A? | select count ( student.stu_fname ) from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'A' | or a C?",
    "label": "CLARIFY",
    "output": "You want the students just with grade \"C\" or including \"A\""
  },
  {
    "db_id": "college_1",
    "input": "Who got either an A or a C? | select count ( student.stu_fname ) from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'C' or enroll.enroll_grade = 'A' | Thanks!\n",
    "label": "WELCOME",
    "output": "Welcome. Bye."
  },
  {
    "db_id": "college_1",
    "input": "How many schools are there? | select count ( distinct school_code ) from department | What classes did each school offer?",
    "label": "CONFIRM_SQL",
    "output": "select * , department.school_code from class join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code group by department.school_code"
  },
  {
    "db_id": "soccer_2",
    "input": "Hello!  Can you provide me with a list of all of the colleges located in the state of LA? | select cname from college where state = 'LA' | Awesome! Can you show me a list that contains both the colleges in LA and those located in AZ?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college where state = 'LA' or state = 'AZ'"
  },
  {
    "db_id": "soccer_2",
    "input": "Thank you!  So if I were to ask you for a list of all colleges in LA with an enrollment of more that 15000 and all colleges in the stat of LA with an enrollment of less than 13000, then it would be just these two colleges, correct? | select cname from college where enr < 13000 and state = 'AZ' union select cname from college where enr > 15000 and state = 'LA' | Sure!  What is the average enrollment of ASU and LSU?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( enr ) from college where cname = 'ASU' or cname = 'LSU'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "list all city towns\n | select city_town from addresses | give the state county each belongs to",
    "label": "CONFIRM_SQL",
    "output": "select city_town , state_county from addresses"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "list all store email addresses  | select store_email_address from drama_workshop_groups | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "movie_1",
    "input": "how many movies are there in total? | select count ( * ) from movie | What year did the oldest movie come out?",
    "label": "CONFIRM_SQL",
    "output": "select year from movie order by year asc limit 1"
  },
  {
    "db_id": "movie_1",
    "input": "How about the most recent one? | select year from movie order by year desc limit 1 | What's the name of that movie?",
    "label": "CONFIRM_SQL",
    "output": "select title from movie where year = ( select max ( year ) from movie )"
  },
  {
    "db_id": "movie_1",
    "input": "How about the name of the director? | Do you mean the name of the director of Avatar? | yes",
    "label": "CONFIRM_SQL",
    "output": "select director from movie where title = 'Avatar'"
  },
  {
    "db_id": "party_people",
    "input": "How many ministers were there? | select count ( minister ) from party | Show the minister who took office after 1961 or before 1959.",
    "label": "CONFIRM_SQL",
    "output": "select minister from party where took_office > 1961 or took_office < 1959"
  },
  {
    "db_id": "party_people",
    "input": "Which minister took office just before 1959? | select minister from party where took_office < 1959 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "flight_1",
    "input": "How many flights are arriving in Washington DC today?  | Sorry, what is the date you meant by today? | I am sorry I meant on April/12/2005\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from flight where destination = 'Washington D.C.' and arrival_date like '%04/12/2005%'"
  },
  {
    "db_id": "flight_1",
    "input": "Does Washington D.C. have more flights arriving than Chicago?\n | select destination , count ( * ) from flight where destination = 'Washington D.C.' or destination = 'Chicago' group by destination | What about Dallas ?\n",
    "label": "CONFIRM_SQL",
    "output": "select destination , count ( * ) from flight where destination = 'Washington D.C.' or destination = 'Dallas' and arrival_date like '%04/12/2005%' group by destination"
  },
  {
    "db_id": "flight_1",
    "input": "How many flights are arriving in Dallas? | select count ( * ) from flight where destination = 'Dallas' | What about Chicago?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from flight where destination = 'Chicago'"
  },
  {
    "db_id": "flight_1",
    "input": "Do all 3 destinations have the same number of flights? | SELECT destination, count(*) FROM Flight where destination = \"Washington D.C.\" or destination = \"Dallas\" or destination = \"Chicago\" group by destination  | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "college_1",
    "input": "How many professors have either a Ph.D. or a MA degree? | select count ( * ) from professor where prof_high_degree = 'Ph.D.' or prof_high_degree = 'MA' | Show me employee number for professors with a Ph.D. degree",
    "label": "CONFIRM_SQL",
    "output": "select emp_num from professor where prof_high_degree = 'Ph.D.'"
  },
  {
    "db_id": "college_1",
    "input": "Show me professor office for professors with a MA degree | select prof_office from professor where prof_high_degree = 'MA' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "flight_1",
    "input": "What is the salary and name of the employee who has the least number of certificates on aircrafts with distance more than 5000? | select employee.salary , employee.name from employee join certificate on employee.eid = certificate.eid join aircraft on aircraft.aid = certificate.aid where aircraft.distance > 5000 group by employee.eid order by count ( * ) asc limit 1 | Okay. What is the salary and name of the employee who has the most number of certificates on aircrafts with distance more than 5000?",
    "label": "CONFIRM_SQL",
    "output": "select employee.salary , employee.name from employee join certificate on employee.eid = certificate.eid join aircraft on aircraft.aid = certificate.aid where aircraft.distance > 5000 group by employee.eid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "What is the salary and name of the employee who has the most number of certificates on aircraft with distance less than 5000? | select employee.salary , employee.name from employee join certificate on employee.eid = certificate.eid join aircraft on aircraft.aid = certificate.aid where aircraft.distance < 5000 group by employee.eid order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "game_injury",
    "input": "what is the average attendance of Cowboys Stadium? | select average_attendance from stadium where name = 'Cowboys Stadium' | give the total  attendance Cowboys Stadium\t",
    "label": "CONFIRM_SQL",
    "output": "select total_attendance from stadium where name = 'Cowboys Stadium'"
  },
  {
    "db_id": "game_injury",
    "input": "what is the capacity percentage of New Meadowlands Stadium\t\n | select capacity_percentage from stadium where name = 'New Meadowlands Stadium' | thanks",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Show details of all investors that made transactions with sgare greater than 100? | select investors.investor_details from investors join transactions on investors.investor_id = transactions.investor_id where transactions.share_count > 100 | What is the transaction id of all investors that made transactions with sgare greater than 100?",
    "label": "CONFIRM_SQL",
    "output": "select transactions.transaction_id from investors join transactions on investors.investor_id = transactions.investor_id where transactions.share_count > 100"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the transaction type code of transaction id 2? | select transactions.transaction_type_code from investors join transactions on investors.investor_id = transactions.investor_id where transactions.transaction_id = 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "performance_attendance",
    "input": "can you show me a list of locations? | select location from performance | what is the average of attendance?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( attendance ) from performance"
  },
  {
    "db_id": "performance_attendance",
    "input": "what is the highest attendance's ? | select max ( attendance ) from performance | what is the lowest attendance's ?",
    "label": "CONFIRM_SQL",
    "output": "select min ( attendance ) from performance"
  },
  {
    "db_id": "chinook_1",
    "input": "I want to know the invoice dates corresponding to customers | select customer.firstname , customer.lastname , invoice.invoicedate from customer join invoice on customer.customerid = invoice.customerid | Could you please help me with the billing addresses of the named customers?",
    "label": "CONFIRM_SQL",
    "output": "select customer.firstname , customer.lastname , invoice.billingaddress from customer join invoice on customer.customerid = invoice.customerid"
  },
  {
    "db_id": "chinook_1",
    "input": "Ok, I will also want to know the billing countries of the named customers | select customer.firstname , customer.lastname , invoice.billingcountry from customer join invoice on customer.customerid = invoice.customerid | OK, I will like to know the billing city of the names customers please.",
    "label": "CONFIRM_SQL",
    "output": "select customer.firstname , customer.lastname , invoice.billingcity from customer join invoice on customer.customerid = invoice.customerid"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "WHAT IS THE EMAIL ADDRESS OF LYLA WILSON MEDHURST ? | select email_address from teachers where first_name = 'Lyla' and middle_name = 'Wilson' and last_name = 'Medhurst' | WHAT IS THE ADDRESS ID OF SID TREMAYNE BRAKUS ?",
    "label": "CONFIRM_SQL",
    "output": "select email_address from teachers where first_name = 'Sid' and middle_name = 'Tremayne' and last_name = 'Brakus'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "WHAT IS THE CELL MOBILE NUMBER OF TRYSTAN ALEXANE SCHUSTER ? | select cell_mobile_number from teachers where first_name = 'Trystan' and middle_name = 'Alexane' and last_name = 'Schuster' | THANKS!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "race_track",
    "input": "Are there any tracks with no races? | select count ( * ) from track where track_id not in ( select track_id from race ) | What are the names of those tracks?",
    "label": "CONFIRM_SQL",
    "output": "select name from track where track_id not in ( select track_id from race )"
  },
  {
    "db_id": "race_track",
    "input": "Can you show me the location and year opened for these tracks? | select location , year_opened from track where track_id not in ( select track_id from race ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "csu_1",
    "input": "can you show me campuses years? | select year from campuses | can you show me campuses county?",
    "label": "CONFIRM_SQL",
    "output": "select county from campuses"
  },
  {
    "db_id": "csu_1",
    "input": "can you show me a list of degrees? | select * from degrees | how many faculty lines are there in the university that conferred the least number of degrees in year 2001?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.faculty from campuses join faculty on campuses.id = faculty.campus join degrees on campuses.id = degrees.campus and faculty.year = degrees.year where faculty.year = 2001 order by degrees.degrees asc limit 1"
  },
  {
    "db_id": "pilot_record",
    "input": "What are the names of the pilots with IDs 1 and 2? | select pilot_name from pilot where pilot_id = 1 or pilot_id = 2 | How many records do they have?",
    "label": "CONFIRM_SQL",
    "output": "select pilot.pilot_id , count ( * ) from pilot_record join pilot on pilot_record.pilot_id = pilot.pilot_id where pilot.pilot_id = 1 or pilot.pilot_id = 2 group by pilot.pilot_id"
  },
  {
    "db_id": "pilot_record",
    "input": "Which year did they join? | select pilot_id , join_year from pilot where pilot_id = 1 or pilot_id = 2 | Which are their teams?",
    "label": "CONFIRM_SQL",
    "output": "select pilot_id , team from pilot where pilot_id = 1 or pilot_id = 2"
  },
  {
    "db_id": "document_management",
    "input": "Find the total access count of all documents in the most popular document type. | select sum ( access_count ) from documents group by document_type_code order by count ( * ) desc limit 1 | Show me the access count for books?",
    "label": "CONFIRM_SQL",
    "output": "select access_count from documents where document_type_code = 'Book'"
  },
  {
    "db_id": "document_management",
    "input": "How about in paper? | select access_count from documents where document_type_code = 'Paper' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "assets_maintenance",
    "input": "How many fault logs are there in total? | select count ( fault_log_entry_id ) from fault_log | How many of those fault logs had faulty parts?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select fault_log_entry_id from fault_log where fault_log_entry_id in ( select fault_log_entry_id from fault_log_parts ) )"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What was the fault log ID with the least number of faulty parts? | select fault_log.fault_log_entry_id from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) asc limit 1 | What was its description?",
    "label": "CONFIRM_SQL",
    "output": "select fault_log.fault_log_entry_id , fault_log.fault_description from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Did it have a record time? | select fault_log.fault_log_entry_id , fault_log.fault_description , fault_log.fault_log_entry_datetime from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) asc limit 1 | What was the fault log ID with the most number of faulty parts?",
    "label": "CONFIRM_SQL",
    "output": "select fault_log.fault_log_entry_id from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What was its description? | select fault_log.fault_log_entry_id , fault_log.fault_description from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 | How about the record time?",
    "label": "CONFIRM_SQL",
    "output": "select fault_log.fault_log_entry_id , fault_log.fault_description , fault_log.fault_log_entry_datetime from fault_log join fault_log_parts on fault_log.fault_log_entry_id = fault_log_parts.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "Do you mean the enrollment of the oldest college? | Yes | which is the oldest college in the table",
    "label": "CONFIRM_SQL",
    "output": "select school from university order by founded asc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "is there any primary-conference held in the university of delaware | select primary_conference from university where school = 'University of Delaware' | what is the enrollment of the conference",
    "label": "CONFIRM_SQL",
    "output": "select enrollment from university order by founded asc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "list the enrollment and primary-conference of the oldest college | select enrollment , primary_conference from university order by founded asc limit 1 | thanks\n",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "loan_1",
    "input": "How many customers have loans that total more than 5000? | select count ( * ) from ( select * from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having sum ( loan.amount ) > 5000 ) | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select cust_name from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having sum ( loan.amount ) > 5000"
  },
  {
    "db_id": "loan_1",
    "input": "What is her account balance? | select customer.acc_bal from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having sum ( loan.amount ) > 5000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "e_learning",
    "input": "can you show me a list of login name? | select login_name from students | can you show me a list of password?",
    "label": "CONFIRM_SQL",
    "output": "select password from students"
  },
  {
    "db_id": "manufactory_1",
    "input": "what are the average revenues of all compaies? | select avg ( revenue ) from manufacturers | what are the maximum revenues of all companies?",
    "label": "CONFIRM_SQL",
    "output": "select max ( revenue ) from manufacturers"
  },
  {
    "db_id": "manufactory_1",
    "input": "what are the total revenues of all companies? | select sum ( revenue ) from manufacturers | thanks",
    "label": "GOOD_BYE",
    "output": "No problem. Bye"
  },
  {
    "db_id": "hr_1",
    "input": "Which department IDs have manager ids that are from 0-100? | select department_id from departments where manager_id >= 0 and manager_id <= 100 | What about from 100 - 200?",
    "label": "CONFIRM_SQL",
    "output": "select department_id from departments where manager_id >= 100 and manager_id <= 200"
  },
  {
    "db_id": "hr_1",
    "input": "What are the employee ids who work in those departments? | select employee_id from employees where department_id in ( select department_id from departments where manager_id between 100 and 200 ) | What about employees who don't work with employees in those departments?",
    "label": "CONFIRM_SQL",
    "output": "select * from employees where department_id not in ( select department_id from departments where manager_id between 100 and 200 )"
  },
  {
    "db_id": "wine_1",
    "input": "Did you mean the grape in the wine with the name Old Kraft Vineyard? | Yes | Thanks",
    "label": "GOOD_BYE",
    "output": "Good bye."
  },
  {
    "db_id": "wine_1",
    "input": "Please show me the type of grape available at Old Kraft Vineyard\n | select grape from wine where name = 'Old Kraft Vineyard' | What are other wineries that also have Zinfandel?\n",
    "label": "CONFIRM_SQL",
    "output": "select winery from wine where grape = 'Zinfandel'"
  },
  {
    "db_id": "wine_1",
    "input": "Can you give me the top three wineries with the most white wines? | select wine.winery from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White' group by wine.winery order by count ( * ) desc limit 3 | Which of these have the most white wines?",
    "label": "CONFIRM_SQL",
    "output": "select wine.winery from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White' group by wine.winery order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Hello there!  Which roll code on this list is the most common? | select role_code from project_staff group by role_code order by count ( * ) desc limit 1 | Great!  Can you tell me how many instances of role code \"researcher\" there are?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from project_staff where role_code = 'researcher'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Excellent!  Can you now list for me all of the staff IDs that have researcher as their role code? | select staff_id from project_staff where role_code = 'researcher' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "company_1",
    "input": "Show me all the departments | select * from department | Which of these departments are located in Houston?",
    "label": "CONFIRM_SQL",
    "output": "select * from department join dept_locations on department.dnumber = dept_locations.dnumber where dept_locations.dlocation = 'Houston'"
  },
  {
    "db_id": "company_1",
    "input": "Show me only their names | select department.dname from department join dept_locations on department.dnumber = dept_locations.dnumber where dept_locations.dlocation = 'Houston' | Thanks",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "activity_1",
    "input": "how many student of there | select count ( * ) from student | how many male students of there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where sex = 'M'"
  },
  {
    "db_id": "activity_1",
    "input": "how many students from age of 18 | select count ( * ) from student where age = 18 | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "What is the name of the department that has the largest number of students enrolled? | select department.dept_name from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code group by course.dept_code order by count ( * ) desc limit 1 | What's that department's address?",
    "label": "CONFIRM_SQL",
    "output": "select department.dept_address from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code group by course.dept_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "What about the department extension? | select department.dept_extension from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code group by course.dept_code order by count ( * ) desc limit 1 | How about employee number?",
    "label": "CONFIRM_SQL",
    "output": "select department.emp_num from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code group by course.dept_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "news_report",
    "input": "how many journalist there | select count ( * ) from journalist | what is the Nationality of Herbert Swindells",
    "label": "CONFIRM_SQL",
    "output": "select nationality from journalist where name = 'Herbert Swindells'"
  },
  {
    "db_id": "news_report",
    "input": "what is the age of George Gilchrist | select age from journalist where name = 'George Gilchrist' | thanks",
    "label": "WELCOME",
    "output": "Welcome! Bye."
  },
  {
    "db_id": "tracking_orders",
    "input": "Hello!  How many customers have an order status of \"On Road\"? | select count ( * ) from customers join orders on customers.customer_id = orders.customer_id where orders.order_status = 'On Road' | Great! Of those 8 customers, how many also have the status of \"Shipped\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id where orders.order_status = 'On Road' intersect select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id where orders.order_status = 'Shipped' )"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can you please list the name of that 1 customer please? | select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id where orders.order_status = 'On Road' intersect select customers.customer_name from customers join orders on customers.customer_id = orders.customer_id where orders.order_status = 'Shipped' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "phone_1",
    "input": "How large is the ROM? | What do you mean by ROM?  | When the \"Nokia Corporation\" company produces phones, what is the average ROM size implemented into a certain phone.",
    "label": "CONFIRM_SQL",
    "output": "select chip_model.rom_mib from chip_model join phone on chip_model.model_name = phone.chip_model where phone.company_name = 'Nokia Corporation' order by chip_model.rom_mib desc limit 1"
  },
  {
    "db_id": "phone_1",
    "input": "What is the smallest ROM size of any phone made by company Nokia? | select chip_model.rom_mib from chip_model join phone on chip_model.model_name = phone.chip_model where phone.company_name = 'Nokia Corporation' order by chip_model.rom_mib asc limit 1 | What is the average ROM size of a phone made by company Nokia?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( chip_model.rom_mib ) from chip_model join phone on chip_model.model_name = phone.chip_model where phone.company_name = 'Nokia Corporation'"
  },
  {
    "db_id": "phone_1",
    "input": "Thanks | Thank you, would you like to know anything else?  | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "activity_1",
    "input": "Find the ids of the students who participate in Canoeing and Kayaking. | select participates_in.stuid from participates_in join activity on activity.actid = activity.actid where activity.activity_name = 'Canoeing' intersect select participates_in.stuid from participates_in join activity on activity.actid = activity.actid where activity.activity_name = 'Kayaking' | What is activity name of activity id 770?",
    "label": "CONFIRM_SQL",
    "output": "select activity_name from activity where actid = 770"
  },
  {
    "db_id": "activity_1",
    "input": "Finally how many participate students? | select count ( stuid ) from participates_in where actid = 770 | Thanks",
    "label": "REQUEST_MORE",
    "output": "Do you have any more questions?"
  },
  {
    "db_id": "twitter_1",
    "input": "What are the total number of followers for all users? | select sum ( followers ) from user_profiles | What are the lowest number of followers?",
    "label": "CONFIRM_SQL",
    "output": "select min ( followers ) from user_profiles"
  },
  {
    "db_id": "twitter_1",
    "input": "Which user has the largest number of followers? | Do you want the name of that user? | Yes, please. ",
    "label": "CONFIRM_SQL",
    "output": "select name from user_profiles where followers = ( select max ( followers ) from user_profiles )"
  },
  {
    "db_id": "department_store",
    "input": "Show me all products supplied by supplier id 2. | Do you mean the product ID of all products supplied by supplier id 2? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select product_id from product_suppliers where supplier_id = 2"
  },
  {
    "db_id": "department_store",
    "input": "What is the average price of all products? | select avg ( product_price ) from products | Which of the previous products are more expensive than the average price of all products?",
    "label": "CLARIFY",
    "output": "Do you mean to find the names of those products that are more expensive than the average price of all products?"
  },
  {
    "db_id": "department_store",
    "input": "Only the names of those products supplied by supplier id 2. | select product_suppliers.product_id from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 2 and products.product_price > ( select avg ( product_price ) from products ) | How much does product ID 8 cost?",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_id = 8"
  },
  {
    "db_id": "department_store",
    "input": "And product ID 15? | select product_price from products where product_id = 15 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What were the dates that APP sent their grants? | select sent_date from documents where document_type_code = 'APP' | Ah. And how many grants can APP have total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( grant_id ) from documents where document_type_code = 'APP'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "No, I mean what is the maximum number of grants that APP can have? | select max ( grant_id ) from documents where document_type_code = 'APP' | I see. Can you list the id and number for every grand that APP has?",
    "label": "CONFIRM_SQL",
    "output": "select grant_id from documents where document_type_code = 'APP'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Thanks! | You are welcome! | You have done a great job! Please activate the Submit and Leave button so we can end the conversation.",
    "label": "GOOD_BYE",
    "output": "Sure. Glad it helps. Bye!"
  },
  {
    "db_id": "college_1",
    "input": "What are the first names of all students who are taking classes from the accounting department? | select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Accounting' | What are the first names of all students who are taking classes from the Computer Info. Systems department?",
    "label": "CONFIRM_SQL",
    "output": "select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Computer Info. Systems'"
  },
  {
    "db_id": "college_1",
    "input": "What are the first names of all students who are taking classes from both the accounting department and the Computer Info. Systems department? | select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Accounting' intersect select student.stu_fname from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code join department on department.dept_code = course.dept_code where department.dept_name = 'Computer Info. Systems' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "Could you please find all the names of the students who took some course and got an A? | select student.stu_fname , student.stu_lname from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'A' | Could you please find all the names of the students who took some course and got a C?",
    "label": "CONFIRM_SQL",
    "output": "select student.stu_fname , student.stu_lname from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'C'"
  },
  {
    "db_id": "college_1",
    "input": "What are their student numbers? | select student.stu_num from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'C' | What are the class codes for the students who took some course and got a C?",
    "label": "CONFIRM_SQL",
    "output": "select enroll.class_code from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'C'"
  },
  {
    "db_id": "college_1",
    "input": "What are the student class and gpa of each of those students? | select stu_class , stu_gpa from student join enroll on student.stu_num = enroll.stu_num where enroll.enroll_grade = 'C' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye."
  },
  {
    "db_id": "sports_competition",
    "input": "What year did the IFG Club form?\n | select club.start_year from club join player on club.club_id = player.club_id where club.name = 'IFG' | And the club with the name \"AIB\"\n",
    "label": "CLARIFY",
    "output": "Do you mean the start year of the club \"AIB\"?"
  },
  {
    "db_id": "sports_competition",
    "input": "yes | select distinct club.start_year from club join player on club.club_id = player.club_id where club.name = 'AIB' | What is the position of the player \"Michael Platt\"?",
    "label": "CONFIRM_SQL",
    "output": "select player.position from club join player on club.club_id = player.club_id where player.name = 'Michael Platt'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What type of organizations are there?  | select organisation_type from organisation_types | And what is the organization ids detailed as \"quo\"?",
    "label": "CONFIRM_SQL",
    "output": "select organisation_id from organisations where organisation_details = 'quo'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "And what is this organization's type? | select organisation_types.organisation_type from organisation_types join organisations on organisation_types.organisation_type = organisations.organisation_type where organisations.organisation_details = 'quo' | And what is the total number of  RES organizations?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from organisations where organisation_type = 'RES'"
  },
  {
    "db_id": "game_1",
    "input": "Show the game name that has most number of hours played. | select gname from plays_games join video_games on plays_games.gameid = video_games.gameid group by plays_games.gameid order by sum ( hours_played ) desc limit 1 | Show the game that least number of hours played.",
    "label": "CONFIRM_SQL",
    "output": "select gname from plays_games join video_games on plays_games.gameid = video_games.gameid group by plays_games.gameid order by sum ( hours_played ) asc limit 1"
  },
  {
    "db_id": "game_1",
    "input": "how many student played the game? | Would you like to know how many entries in the plays games table correspond to The Vanishing of Eric Calder? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from plays_games join video_games on plays_games.gameid = video_games.gameid where gname = 'The Vanishing of Eric Calder'"
  },
  {
    "db_id": "school_finance",
    "input": "List the name of the school with the highest enrollment? | select school_name from school order by enrollment desc limit 1 | How many school names in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct school_name ) from school"
  },
  {
    "db_id": "school_finance",
    "input": "Which school is the top enrollment? | select school_name from school order by enrollment desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "swimming",
    "input": "List the countries more than two swimmer? | select nationality from swimmer group by nationality having count ( * ) > 2 | what is the name of swimmer with id 5?",
    "label": "CONFIRM_SQL",
    "output": "select name from swimmer where id = 5"
  },
  {
    "db_id": "swimming",
    "input": "whats is nationality of the craif colbertaldo? | select nationality from swimmer where name = 'craif colbertaldo' | how many swimmer in the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( id ) from swimmer"
  },
  {
    "db_id": "swimming",
    "input": "what is the location of the  Federico colbertaldo? | Sorry, I cannot answer acoording to the information I have | what is the name of the swimmer id 4?",
    "label": "CONFIRM_SQL",
    "output": "select name from swimmer where id = 4"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the dates of assessment notes for students with first name 'Fanny'? | select assessment_notes.date_of_notes from assessment_notes join students on assessment_notes.student_id = students.student_id where students.first_name = 'Fanny' | Could you tell me the dates students with first name 'Fanny' left the university?",
    "label": "CONFIRM_SQL",
    "output": "select date_left_university from students where first_name = 'Fanny'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the cell mobile numbers of students with the first name 'Fanny'? | select cell_mobile_number from students where first_name = 'Fanny' | Do you have text of notes of students with the first name \"Fanny\"?",
    "label": "CONFIRM_SQL",
    "output": "select assessment_notes.text_of_notes from assessment_notes join students on assessment_notes.student_id = students.student_id where students.first_name = 'Fanny'"
  },
  {
    "db_id": "browser_web",
    "input": "Which accelerator did the client user have? | Do you mean the name of the accelerator that the client named user has? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select name from web_client_accelerator where client = 'user'"
  },
  {
    "db_id": "browser_web",
    "input": "Which one of this contains a substring called Opera? | Do you mean the name of the accelerators whose name contains a substring called \"Opera\" and that the client named user has? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select name from web_client_accelerator where client = 'user' and name like '%Opera%'"
  },
  {
    "db_id": "browser_web",
    "input": "Which operating system did the client End user, ISP have? | select operating_system from web_client_accelerator where client = 'End user, ISP' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "e_learning",
    "input": "How many courses are taught? | select count ( * ) from courses | How many different course authors are there?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct author_id ) from course_authors_and_tutors"
  },
  {
    "db_id": "e_learning",
    "input": "What is the name of the author who teaches the most courses? | Which kinds of names do you prefer? | personal name",
    "label": "CONFIRM_SQL",
    "output": "select course_authors_and_tutors.personal_name from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id group by courses.author_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "e_learning",
    "input": "what is the family name? | select course_authors_and_tutors.family_name from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id group by courses.author_id order by count ( * ) desc limit 1 | What is the author id?",
    "label": "CONFIRM_SQL",
    "output": "select courses.author_id from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id group by courses.author_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How many documents are named \"Robin CV\"? | select count ( * ) from all_documents where document_name = 'Robin CV' | What is the document id of that document?\n",
    "label": "CONFIRM_SQL",
    "output": "select document_id from all_documents where document_name = 'Robin CV'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What is the date in location from for this document? | select document_locations.date_in_location_from from all_documents join document_locations on all_documents.document_id = document_locations.document_id where all_documents.document_name = 'Robin CV' | What is the date in location to date?",
    "label": "CONFIRM_SQL",
    "output": "select document_locations.date_in_locaton_to from all_documents join document_locations on all_documents.document_id = document_locations.document_id where all_documents.document_name = 'Robin CV'"
  },
  {
    "db_id": "solvency_ii",
    "input": "Can you list all the product type codes that have two or more products? | select product_type_code from products group by product_type_code having count ( * ) >= 2 | What is the name of the product with the greatest price?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products order by product_price desc limit 1"
  },
  {
    "db_id": "solvency_ii",
    "input": "What are the names of all products with prices over 3000? | select product_name from products where product_price > 3000 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "How many transactions share a count smaller than 50? | select count ( * ) from transactions where share_count < 50 | What lots are associate with those transactions with a count smaller than 50?",
    "label": "CLARIFY",
    "output": "Do you mean all the information about lots or some specific attributes?"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are all of the details about the lots? | select lots.lot_details from lots join transactions_lots on lots.lot_id = transactions_lots.transaction_id join transactions on transactions_lots.transaction_id = transactions.transaction_id where transactions.share_count < 50 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome. Goodbye."
  },
  {
    "db_id": "local_govt_mdm",
    "input": "Can you list all the cmi cross reference id on here | select cmi_cross_ref_id from cmi_cross_references | can i have the master customer id",
    "label": "CONFIRM_SQL",
    "output": "select master_customer_id from cmi_cross_references"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "What Are the source system code of  CMI_Cross_References | select source_system_code from cmi_cross_references | Thanks.",
    "label": "WELCOME",
    "output": "You're welcome."
  },
  {
    "db_id": "student_1",
    "input": "can you show me a list of grades? | select grade from list | can you show me a list of first name that starting with 'J'?",
    "label": "CONFIRM_SQL",
    "output": "select firstname from list where firstname like 'J%'"
  },
  {
    "db_id": "student_1",
    "input": "can you show me a list of last name that starting with 'J'? | select lastname from list where lastname like 'J%' | thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "student_1",
    "input": "can you show me a list of teacher class room? | select classroom from teachers | \"Find the last names of all the teachers that teach GELL TAMI.",
    "label": "CONFIRM_SQL",
    "output": "select teachers.lastname from list join teachers on list.classroom = teachers.classroom where list.firstname = 'GELL' and list.lastname = 'TAMI'"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "Can you please provide me with a list of all customer names and phone numbers? | select customers.customer_name , customers.customer_phone from customers join mailshot_customers on customers.customer_id = mailshot_customers.customer_id | Can you filter that list of customers to show only those who have 'No Response' as their outcome code?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , customers.customer_phone from customers join mailshot_customers on customers.customer_id = mailshot_customers.customer_id where mailshot_customers.outcome_code = 'No Response'"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "Can you please provide me with the phone number and email addresses of these five customers? | select customers.customer_phone , customers.customer_email from customers join mailshot_customers on customers.customer_id = mailshot_customers.customer_id where mailshot_customers.outcome_code = 'No Response' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "club_1",
    "input": "Tell me the club description for club id 1 ? | select clubdesc from club where clubid = 1 | Tell me the position for the student id 1001 ?",
    "label": "CLARIFY",
    "output": "Do you mean the city code for students?"
  },
  {
    "db_id": "club_1",
    "input": "yes | select city_code from student where stuid = 1001 | How many clubs does the student named 'Eric TAI' belong to ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct club.clubname ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where student.fname = 'Eric' and student.lname = 'Tai'"
  },
  {
    "db_id": "tracking_orders",
    "input": "Find the customer id of Savannah?  | select customer_id from customers where customer_name = 'Savannah' | Which date of order placed in Alberto?",
    "label": "CONFIRM_SQL",
    "output": "select orders.date_order_placed from customers join orders on customers.customer_id = orders.customer_id where customers.customer_name = 'Alberto'"
  },
  {
    "db_id": "tracking_orders",
    "input": "What are the customer details of order id 2? | select customer_details from customers where customer_id = '2' | Find the details of all distinct customers who have orders with status \"On Road\".",
    "label": "CONFIRM_SQL",
    "output": "select distinct customers.customer_details from customers join orders on customers.customer_id = orders.customer_id where orders.order_status = 'On Road'"
  },
  {
    "db_id": "college_3",
    "input": "How many students are there?  | select count ( * ) from student | What are their names? ",
    "label": "CONFIRM_SQL",
    "output": "select lname , fname from student"
  },
  {
    "db_id": "college_3",
    "input": "Can I see a list of students who's first name contains letter \"a\"? | select distinct fname from student where fname like '%a%' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "body_builder",
    "input": "Show me the details of the body builders | Which information would you like to know about the body builders? | Heights of the body builders",
    "label": "CONFIRM_SQL",
    "output": "select people.height from body_builder join people on body_builder.people_id = people.people_id"
  },
  {
    "db_id": "body_builder",
    "input": "Show me the scores of the body builders | Which score, Snatch, Clean Jerk, or Total? | Total score",
    "label": "CONFIRM_SQL",
    "output": "select body_builder.total from body_builder join people on body_builder.people_id = people.people_id"
  },
  {
    "db_id": "movie_1",
    "input": "How many movies altogether do you have? | select count ( distinct mid ) from rating | What is the number of reviewers?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from reviewer"
  },
  {
    "db_id": "movie_1",
    "input": "Can you tell me the ids of the movies not reviewed by Brittany Harris? | select mid from rating except select rating.mid from rating join reviewer on rating.rid = reviewer.rid where reviewer.name = 'Brittany Harris' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "How many transactions have the type code PUR? | select count ( * ) from transactions where transaction_type_code = 'PUR' | How many transactions have a share count larger than 50?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from transactions where share_count > 50"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the least amount of transactions that have both a type code of PUR and a share count larger than 50? | select min ( amount_of_transaction ) from transactions where transaction_type_code = 'PUR' and share_count > 50 | How many transactions have the type code PUR and a share count larger than 50?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from transactions where transaction_type_code = 'PUR' and share_count > 50"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What are the engineers first names? | Do you mean the first name of all the engineers? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select first_name from maintenance_engineers"
  },
  {
    "db_id": "assets_maintenance",
    "input": "I want to know all the engineers corresponding skill description? | Do you mean the corresponding skill description for all the engineers? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select skills.skill_description from maintenance_engineers join engineer_skills on maintenance_engineers.engineer_id = engineer_skills.engineer_id join skills on engineer_skills.skill_id = skills.skill_id"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What are the details for all the engineers? | Do you mean the other details for all the engineers? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select other_details from maintenance_engineers"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Lastly, i will like to know the last name of all the engineers? | select last_name from maintenance_engineers | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "election_representative",
    "input": "How many representatives are republicans?\n | select count ( * ) from representative where party = 'Republican' | And democrats?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from representative where party = 'Democratic'"
  },
  {
    "db_id": "election_representative",
    "input": "Which party has the most seats? | Sorry the question cannot be answered from the table. | WHich representative has the lowest votes?",
    "label": "CONFIRM_SQL",
    "output": "select representative_id from election order by votes asc limit 1"
  },
  {
    "db_id": "election_representative",
    "input": "What party is this representative in?\n | select party from representative where representative_id = ( select representative_id from election order by votes asc limit 1 ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "restaurant_1",
    "input": "Which major has between 2 and 30 number of students? List major and the number of students. | select major , count ( * ) from student group by major having count ( major ) between 2 and 30 | Which major has highest number of students?List the students First name?",
    "label": "CONFIRM_SQL",
    "output": "select major , fname from student where major = ( select major from student group by major order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "restaurant_1",
    "input": "Which major has least number of students?List the students First name? | select major , fname from student where major = ( select major from student group by major order by count ( * ) asc limit 1 ) | Thanks for your co-operation.",
    "label": "GOOD_BYE",
    "output": "Thank you. Bye."
  },
  {
    "db_id": "music_1",
    "input": "How many songs have a resolution below 800? | select count ( song.song_name ) from files join song on files.f_id = song.f_id where song.resolution < 800 | What are the file sizes of those songs?",
    "label": "CONFIRM_SQL",
    "output": "select files.file_size from files join song on files.f_id = song.f_id where song.resolution < 800"
  },
  {
    "db_id": "music_1",
    "input": "What are the formats for the songs with a resolution below 800? | select files.formats from files join song on files.f_id = song.f_id where song.resolution < 800 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "store_product",
    "input": "Hello there!  Can you tell me what is the sum total of the populations of the three districts with the largest area? | select sum ( city_population ) from district order by city_area desc limit 3 | Excellent!  Can you tell me the district name associated with the largest population?",
    "label": "CONFIRM_SQL",
    "output": "select district_name from district where city_population = ( select max ( city_population ) from district )"
  },
  {
    "db_id": "store_product",
    "input": "Wonderful!  Can you show me the city's population total and the city's area? | select city_population , city_area from district where city_population = ( select max ( city_population ) from district ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "college_1",
    "input": "Hello  Can you provide me with a list of all of the different department names? | select dept_name from department | That's great!  Now can you update this list to include the total number of students for each department?",
    "label": "CONFIRM_SQL",
    "output": "select department.dept_name , count ( * ) from student join department on student.dept_code = department.dept_code group by student.dept_code"
  },
  {
    "db_id": "college_1",
    "input": "Can you update this list to show the Department Name, Department Address, and number of students for the 3 departments with the highest number of students? | select department.dept_name , department.dept_address , count ( * ) from student join department on student.dept_code = department.dept_code group by student.dept_code order by count ( * ) desc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "baseball_1",
    "input": "List the 3 highest salaries of the players in 2001? | select salary from salary where year = 2001 order by salary desc limit 3 | List the 3 highest salaries of players on ATL in 2001.",
    "label": "CONFIRM_SQL",
    "output": "select salary from salary where year = 2001 and team_id = 'ATL' order by salary desc limit 3"
  },
  {
    "db_id": "baseball_1",
    "input": "List the 3 highest salaries of players in the NL in 2001. | select salary from salary where year = 2001 and league_id = 'NL' order by salary desc limit 3 | List the 3 highest salaries of players in the AL in 2001",
    "label": "CONFIRM_SQL",
    "output": "select salary from salary where year = 2001 and league_id = 'AL' order by salary desc limit 3"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Hello | Hello! | Can you show me the numbers of the apartments?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartments"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Of those apartments, which ones have more than 2 bedrooms? | select count ( * ) from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.bedroom_count > 2 | Can you provide the booking start dates and end dates, for all the apartments with more than 2 bedrooms?",
    "label": "CONFIRM_SQL",
    "output": "select apartment_bookings.booking_start_date , apartment_bookings.booking_start_date from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.bedroom_count > 2"
  },
  {
    "db_id": "e_learning",
    "input": "What is the highest number of enrollments any student has? | select count ( * ) from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id order by count ( * ) desc limit 1 | How many students have 5 enrollments?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id having count ( * ) = 5 )"
  },
  {
    "db_id": "e_learning",
    "input": "What is that student's registration ID? | select student_course_enrolment.registration_id from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id having count ( * ) = 5 | Can you give me the student ID of registration ID 19?",
    "label": "CONFIRM_SQL",
    "output": "select student_id from student_course_enrolment where registration_id = 19"
  },
  {
    "db_id": "e_learning",
    "input": "What is the personal name of student ID 15? | select personal_name from students where student_id = 15 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "chinook_1",
    "input": "Find the titles of all the albums of the artist AC/DC? | select title from album join artist on album.artistid = artist.artistid where artist.name = 'AC/DC' | What about for the artist Aerosmith?",
    "label": "REJECT",
    "output": "sorry   i  can not  answer, can  you  ask  other  question?"
  },
  {
    "db_id": "chinook_1",
    "input": "Find the titles of all the albums of the artist Aerosmith please? | select title from album join artist on album.artistid = artist.artistid where artist.name = 'Aerosmith' | What are the titles of all the albums by artist id 4?",
    "label": "CONFIRM_SQL",
    "output": "select title from album where artistid = 4"
  },
  {
    "db_id": "chinook_1",
    "input": "Show me the title of album id 1? | select album.title from album join artist on album.artistid = artist.artistid where album.albumid = 1 | Show me the name of artist with artist id 3?",
    "label": "CONFIRM_SQL",
    "output": "select name from artist where artistid = 3"
  },
  {
    "db_id": "chinook_1",
    "input": "Show me the names of all artist? | select name from artist | Show me the list of all id and names of all artists that have at least 3 albums in alphabetical order?",
    "label": "CONFIRM_SQL",
    "output": "select artist.name , album.artistid from album join artist on album.artistid = artist.artistid group by album.artistid having count ( * ) >= 3 order by artist.name asc"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is Dayana Robel policy id? | select policy_id from policies join customers on policies.customer_id = customers.customer_id where customers.customer_details = 'Dayana Robel' | And what are policy type code associated with this id?",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from policies join customers on policies.customer_id = customers.customer_id where customers.customer_details = 'Dayana Robel'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "On which date did this policy start?  | select start_date from policies join customers on policies.customer_id = customers.customer_id where customers.customer_details = 'Dayana Robel' | And on which date did it end? ",
    "label": "CONFIRM_SQL",
    "output": "select end_date from policies join customers on policies.customer_id = customers.customer_id where customers.customer_details = 'Dayana Robel'"
  },
  {
    "db_id": "e_government",
    "input": "What booking made date of service id 1? | select booking_made_date from services join party_services on services.service_id = party_services.service_id where services.service_id = '1' | What are the service name of booking id 2?",
    "label": "CONFIRM_SQL",
    "output": "select service_name from services join party_services on services.service_id = party_services.service_id where party_services.booking_id = '2'"
  },
  {
    "db_id": "e_government",
    "input": "What are the service description of service type code Welfare? | select service_descriptio from services where service_type_code = 'Welfare' | Find mane of the service that has never been used.",
    "label": "CONFIRM_SQL",
    "output": "select service_name from services except select services.service_name from services join party_services on services.service_id = party_services.service_id"
  },
  {
    "db_id": "tracking_orders",
    "input": "How many customers are there? | select count ( * ) from customers | How many orders each customer have?",
    "label": "CONFIRM_SQL",
    "output": "select customer_id , count ( * ) from orders group by customer_id"
  },
  {
    "db_id": "tracking_orders",
    "input": "Can you provide me with the list of id and status of orders of the customer named \"Jeramie\"? | select orders.order_id , orders.order_status from customers join orders on customers.customer_id = orders.customer_id where customers.customer_name = 'Jeramie' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "movie_1",
    "input": "what are the name of the reviewers? | select name from reviewer | how many of them have given ratings higher than 3?",
    "label": "CONFIRM_SQL",
    "output": "select count ( reviewer.rid ) from rating join reviewer on rating.rid = reviewer.rid where rating.stars > 3"
  },
  {
    "db_id": "movie_1",
    "input": "can you tell me their names? | select reviewer.name from rating join reviewer on rating.rid = reviewer.rid where rating.stars > 3 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "school_finance",
    "input": "Which donators have a donation amount above 8.5? | select donator_name from endowment where amount > 8.5 | Which school ids have at least two of those donators?",
    "label": "CONFIRM_SQL",
    "output": "select school.school_id from endowment join school on endowment.school_id = school.school_id where endowment.amount > 8.5 group by endowment.school_id having count ( * ) > 1"
  },
  {
    "db_id": "school_finance",
    "input": "What are the schools names? | select school.school_name from endowment join school on endowment.school_id = school.school_id where endowment.amount > 8.5 group by endowment.school_id having count ( * ) > 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "products_for_hire",
    "input": "what is the highest booked amount | select max ( booked_amount ) from products_booked | what is the minimum booked count for products booked",
    "label": "CONFIRM_SQL",
    "output": "select min ( booked_count ) from products_booked"
  },
  {
    "db_id": "products_for_hire",
    "input": "what is the maximum booked count | select max ( booked_count ) from products_booked | what is the least booked amount ",
    "label": "CONFIRM_SQL",
    "output": "select min ( booked_amount ) from products_booked"
  },
  {
    "db_id": "gymnast",
    "input": "Who is the tallest gymnast? | select people.name from gymnast join people on gymnast.gymnast_id = people.people_id order by people.height desc limit 1 | How tall is Nadia Caba Rodríguez?",
    "label": "CONFIRM_SQL",
    "output": "select height from people where name = 'Nadia Caba Rodríguez'"
  },
  {
    "db_id": "gymnast",
    "input": "Great, can you list the names of the gymnasts in ascending order by their heights? | select people.name from gymnast join people on gymnast.gymnast_id = people.people_id order by people.height asc | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "student_1",
    "input": "Which classroom has the most students? | select classroom from list group by classroom order by count ( * ) desc limit 1 | Could you tell me what grade that is, please?",
    "label": "CONFIRM_SQL",
    "output": "select classroom , grade from list group by classroom order by count ( * ) desc limit 1"
  },
  {
    "db_id": "student_1",
    "input": "What are the first names of the students in that classroom that begin with the letter \"S\"? | select firstname from list where firstname like ' S%' and classroom in ( select classroom from list group by classroom order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "insurance_fnol",
    "input": " What is the customer ID of America Jaskolski\n | select customer_id from customers where customer_name = 'America Jaskolski' | How many customer listed ? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers as customers"
  },
  {
    "db_id": "insurance_fnol",
    "input": "What is the date opened for customer ID 214 ? | select date_opened from customers_policies where customer_id = 214 | “Thanks!”",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Can you list the names of all the tourist attractions? | select name from tourist_attractions | Hmm, I want to know the names of the tourist attractions that can be reached by bus.",
    "label": "CONFIRM_SQL",
    "output": "select name from tourist_attractions where how_to_get_there = 'bus'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Can you also tell me the name of the tourist attraction that is at address 254 Ottilie Junction? | select tourist_attractions.name from locations join tourist_attractions on locations.location_id = tourist_attractions.location_id where locations.address = '254 Ottilie Junction' | Can you list the location names of the tourist attractions that can be reached by bus?",
    "label": "CONFIRM_SQL",
    "output": "select locations.location_name from locations join tourist_attractions on locations.location_id = tourist_attractions.location_id where tourist_attractions.how_to_get_there = 'bus'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Can you list the location addresses? | select locations.address from locations join tourist_attractions on locations.location_id = tourist_attractions.location_id where tourist_attractions.how_to_get_there = 'bus' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! bye."
  },
  {
    "db_id": "dorm_1",
    "input": "What is the student_capacity of Smith Hall? | Are you asking about the student capacity of the dorm named Smith Hall? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select student_capacity from dorm where dorm_name = 'Smith Hall'"
  },
  {
    "db_id": "dorm_1",
    "input": "How May female Dorm are there? | select count ( * ) from dorm where gender = 'F' | What is the amenity_name of Dorm_amenity?",
    "label": "CLARIFY",
    "output": "Did you want all amenity names for dorms?"
  },
  {
    "db_id": "dorm_1",
    "input": "Yes | select amenity_name from dorm_amenity | List name of all amenities which Anonymous Donor Hall has, and sort the result in alphabetic order.",
    "label": "CONFIRM_SQL",
    "output": "select dorm_amenity.amenity_name from dorm_amenity join has_amenity on has_amenity.amenid = dorm_amenity.amenid join dorm on has_amenity.dormid = dorm.dormid where dorm.dorm_name = 'Anonymous Donor Hall' order by dorm_amenity.amenity_name asc"
  },
  {
    "db_id": "dorm_1",
    "input": "Show me the names of students | Do you mean full names of all the students? | Yes\n",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student"
  },
  {
    "db_id": "dorm_1",
    "input": "Show me the Age list of all students\n | select age from student | Show me the first and last name of students whose age is younger than the average age",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where age < ( select avg ( age ) from student )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "How many projects are there? | select count ( * ) from projects | How many of those projects did not hire anyone for a researcher role?",
    "label": "CONFIRM_SQL",
    "output": "select count ( project_id ) from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher' )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are the details of those projects? | select project_details from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "twitter_1",
    "input": "Hi, I was wondering how many users do not have tweets?\n | select count ( * ) from user_profiles where uid not in ( select uid from tweets ) | Great, what is the average number of followers for everyone in the data set?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( followers ) from user_profiles"
  },
  {
    "db_id": "twitter_1",
    "input": "Okay, and what about the average followers for those who do have tweets? | select avg ( followers ) from user_profiles where uid in ( select uid from tweets ) | And what was the average followers for those who do not have any tweets?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( followers ) from user_profiles where uid not in ( select uid from tweets )"
  },
  {
    "db_id": "scientist_1",
    "input": "What are all of the scientists' names please? | select name from scientists | What are the project names of all of them?",
    "label": "CONFIRM_SQL",
    "output": "select scientists.name , projects.name from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code"
  },
  {
    "db_id": "scientist_1",
    "input": "Can you show the hours they each worked too, please? | select scientists.name , projects.name , projects.hours from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by projects.name asc , scientists.name | Can you please order them in alphabetical order of project, and then of scientist name?",
    "label": "CONFIRM_SQL",
    "output": "select scientists.name , projects.name , projects.hours from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by projects.name asc , scientists.name"
  },
  {
    "db_id": "scientist_1",
    "input": "What are the average hours worked by all scientists, please? | Do you mean average hours on each project among all scientists? | Yes, please.",
    "label": "CONFIRM_SQL",
    "output": "select avg ( hours ) from projects"
  },
  {
    "db_id": "college_1",
    "input": "How many students are enrolled in any type of accounting course? | Do you mean the course taught by some professor from the accounting department? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code where department.dept_name = 'Accounting'"
  },
  {
    "db_id": "college_1",
    "input": "And what are their student numbers? | select enroll.stu_num from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code where department.dept_name = 'Accounting' | And what about the course code that they are enrolled in? ",
    "label": "CONFIRM_SQL",
    "output": "select course.crs_code from class join enroll on class.class_code = enroll.class_code join course on class.crs_code = course.crs_code join department on course.dept_code = department.dept_code where department.dept_name = 'Accounting'"
  },
  {
    "db_id": "college_1",
    "input": "Thanks! | Sure. Do you want to know more? | Yes, what is the class time?",
    "label": "CLARIFY",
    "output": "Do you want to know all class time?"
  },
  {
    "db_id": "college_1",
    "input": "NO, only for ACCT-211 | select class_time from class where crs_code = 'ACCT-211' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "hr_1",
    "input": "Which employee is the highest paid? | select * from employees order by salary desc limit 1 | Which is the employee with the lowest pay?",
    "label": "CONFIRM_SQL",
    "output": "select * from employees order by salary asc limit 1"
  },
  {
    "db_id": "hr_1",
    "input": "When is the earliest day of pay? | Sorry we don't have information about the pay day. | Ok, Thank you",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "music_4",
    "input": "The song The way was issued on what date? | select issue_date from volume where song like '%The Way%' | the song The way was issued what volume?",
    "label": "CONFIRM_SQL",
    "output": "select volume_issue from volume where song like '%The Way%'"
  },
  {
    "db_id": "music_4",
    "input": "what's the artist id for Everybody Have Fun Tonight | select artist_id from volume where song like '%Everybody Have Fun Tonight%' | Give me the issue date of the volume with the minimum weeks on top",
    "label": "CONFIRM_SQL",
    "output": "select issue_date from volume order by weeks_on_top asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "hi. how many countries of origin are represented by the artists? | select count ( country ) from artist | and which artist has made the least number of songs?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from song group by artist_name order by count ( * ) asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "OK.  and what is that artist's country of origin? | Do you mean the country of the artist named Enrique? | yes",
    "label": "CONFIRM_SQL",
    "output": "select country from artist where artist_name = 'Enrique'"
  },
  {
    "db_id": "browser_web",
    "input": "WHAT ARE THE BROWSERS LISTED IN THE TABLE | select name from browser | WHICH BROWSER IS COMPATIBLE WITH ACCELERATOR 'CPROXY' AFTER YEAR 1998",
    "label": "CONFIRM_SQL",
    "output": "select browser.name from browser join accelerator_compatible_browser on browser.id = accelerator_compatible_browser.browser_id join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id where web_client_accelerator.name = 'CProxy' and accelerator_compatible_browser.compatible_since_year > 1998"
  },
  {
    "db_id": "browser_web",
    "input": "WHAT IS THE BROWSER ID OF OPERA | select browser.id from browser join accelerator_compatible_browser on browser.id = accelerator_compatible_browser.browser_id join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id where browser.name = 'Opera' | THANKS",
    "label": "GOOD_BYE",
    "output": "BYE"
  },
  {
    "db_id": "csu_1",
    "input": "Which California State University is located in Kern County?\n | select campus from campuses where campus like '%California State University%' and county = 'Kern' | What year was California State University-Chico started?\n",
    "label": "CONFIRM_SQL",
    "output": "select year from campuses where campus = 'California State University-Chico'"
  },
  {
    "db_id": "csu_1",
    "input": "Which campus has the smallest faculty\n | select campuses.campus from campuses join faculty on campuses.id = faculty.campus where faculty.faculty = ( select min ( faculty ) from faculty ) | Which campus was started in 2002?",
    "label": "CONFIRM_SQL",
    "output": "select campus from campuses where year = 2002"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Please list staff names of staff assigned to at least 1 problem | First or last name? | both",
    "label": "CONFIRM_SQL",
    "output": "select staff_first_name , staff_last_name from staff join problem_log on staff.staff_id = problem_log.assigned_to_staff_id where problem_log.problem_id = 1"
  },
  {
    "db_id": "formula_1",
    "input": "What is the id and last name of the driver who participated in the most races after 2010? | select drivers.driverid , drivers.surname from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid where races.year > 2010 group by drivers.driverid order by count ( * ) desc limit 1 | What is the id of the driver who participated in the least races after 2010?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.driverid from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid where races.year > 2010 group by drivers.driverid order by count ( * ) asc limit 1"
  },
  {
    "db_id": "formula_1",
    "input": "Hmm. Can you also give me his last name. | select drivers.surname from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid where races.year > 2010 group by drivers.driverid order by count ( * ) asc limit 1 | Okay. How many races did he participate in?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid where races.year > 2010 group by drivers.driverid order by count ( * ) asc limit 1"
  },
  {
    "db_id": "formula_1",
    "input": "How many races did Hamilton participate in after 2010? | select count ( * ) from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid where races.year > 2010 and drivers.surname = 'Hamilton' group by drivers.driverid | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "wedding",
    "input": "Which weddings took place after 2014? | select * from wedding where year > 2014 | What are the male names in weddings after 2014?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from wedding join people on wedding.male_id = people.people_id where wedding.year > 2014"
  },
  {
    "db_id": "wedding",
    "input": "What are the female names in weddings after 2014? | select people.name from wedding join people on wedding.male_id = people.people_id join people on wedding.female_id = people.people_id where wedding.year > 2014 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome. bye."
  },
  {
    "db_id": "book_2",
    "input": "Show publishers that have less than one publication? | select publisher from publication group by publisher having count ( * ) > 1 | Show all the publishers?",
    "label": "CONFIRM_SQL",
    "output": "select publisher from publication"
  },
  {
    "db_id": "book_2",
    "input": "What is the highest price that a publisher earns? | select price from publication order by price desc limit 1 | What is the lowest price that a publisher earns?",
    "label": "CONFIRM_SQL",
    "output": "select price from publication order by price asc limit 1"
  },
  {
    "db_id": "entrepreneur",
    "input": "Show me the company details | select company from entrepreneur | Show me the details of all entrepreneurs",
    "label": "CONFIRM_SQL",
    "output": "select * from entrepreneur"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "How many participants are there? | select count ( * ) from participants | How about the total number of events?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct event_id ) from participants_in_events"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Can you list the events that have participents whose details had the substring 'Dr.'? | select participants_in_events.event_id from participants join participants_in_events on participants.participant_id = participants_in_events.participant_id where participants.participant_details like '%Dr.%' | Can you please list all those events with their participants' names?",
    "label": "CONFIRM_SQL",
    "output": "select participants_in_events.event_id , participants.participant_details from participants join participants_in_events on participants.participant_id = participants_in_events.participant_id"
  },
  {
    "db_id": "train_station",
    "input": "Show the train name and station name for each train | select station.name , train.name from train_station join station on train_station.station_id = station.station_id join train on train.train_id = train_station.train_id | Give me total passengers on each station",
    "label": "CONFIRM_SQL",
    "output": "select total_passengers from station"
  },
  {
    "db_id": "train_station",
    "input": "Give me main services for each station | select main_services from station | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "game_1",
    "input": "Please show me the ids of the students who play video games and play sports? | select stuid from sportsinfo intersect select stuid from plays_games | How many hours have they played?",
    "label": "CLARIFY",
    "output": "Sorry. can you clarify your question?"
  },
  {
    "db_id": "game_1",
    "input": "What are the hours played of the student with student id 1001? | select sum ( hours ) from ( select sum ( hours_played ) as hours from plays_games where stuid = 1001 union select sum ( hoursperweek ) as hours from sportsinfo where stuid = 1001 ) | Is that student on a scholarship?",
    "label": "CONFIRM_SQL",
    "output": "select onscholarship from sportsinfo where stuid = 1001"
  },
  {
    "db_id": "music_1",
    "input": "Hello there!  How are you doing tonight!?  Can you provide me with a list of all of the artist names in this database? | select artist_name from artist | Thank you very much!  Can you filter that list to show only the artist_names who have song for which the country code is the UK?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from artist where country = 'UK' intersect select artist.artist_name from artist join song on artist.artist_name = song.artist_name"
  },
  {
    "db_id": "music_1",
    "input": "Did Michel release any songs for which the language is English? | select * from song where artist_name = 'Michel' and languages = 'english' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "bike_1",
    "input": "Hi, can you tell me how many trips there have been, starting from\n August? | select count ( * ) from trip where start_date like '8/%' | oh wow that's a lot! and how many stations have those started from?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct start_station_name ) from trip where start_date like '8/%'"
  },
  {
    "db_id": "bike_1",
    "input": "is there a station that had the most trips starting from August?\n | select start_station_name from trip where start_date like '8/%' group by start_station_name order by count ( * ) desc limit 1 | how many trips started from there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from trip where start_station_name = ( select start_station_name from trip where start_date like '8/%' group by start_station_name order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "bike_1",
    "input": "thanks!\n | Anything you would like to know more? | Could you tell me the ID and name of the San Francisco station?",
    "label": "CONFIRM_SQL",
    "output": "select distinct start_station_name , start_station_id from trip where start_station_name = 'San Francisco Caltrain 2 (330 Townsend)'"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Please list all unique Product Names | select distinct product_name from products | Now please list all unique product type codes",
    "label": "CONFIRM_SQL",
    "output": "select distinct product_type_code from products"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "now please show the product type codes which have at least two products | select product_type_code from products group by product_type_code having count ( * ) >= 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you. Good bye!"
  },
  {
    "db_id": "driving_school",
    "input": "Which state have more than 2 staff members living there? | select addresses.state_province_county from addresses join staff on addresses.address_id = staff.staff_address_id group by addresses.state_province_county having count ( * ) > 2 | Of those 2 states, which ones have less than 4 staff members living there?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.state_province_county from addresses join staff on addresses.address_id = staff.staff_address_id group by addresses.state_province_county having count ( * ) > 2 and count ( * ) < 4"
  },
  {
    "db_id": "driving_school",
    "input": "Precisely how many staff members live in Connecticut? | select count ( * ) from addresses join staff on addresses.address_id = staff.staff_address_id where addresses.state_province_county = 'Connecticut' | Can you list the first names of these 3 staff members?",
    "label": "CONFIRM_SQL",
    "output": "select staff.first_name from addresses join staff on addresses.address_id = staff.staff_address_id where addresses.state_province_county = 'Connecticut'"
  },
  {
    "db_id": "driving_school",
    "input": "Can you provide me with the nickname of Janessa? | select nickname from staff where first_name = 'Janessa' | Of the 3 staff members living in Connecticut, can you tell me which one joined the staff first?",
    "label": "CONFIRM_SQL",
    "output": "select staff.first_name from addresses join staff on addresses.address_id = staff.staff_address_id where addresses.state_province_county = 'Connecticut' order by date_joined_staff asc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "Hello!  Can you first give me a list of all of the countries? | select country from airlines | Great!  Which of these countries has the most airlines with an Active status of \"Y\"?",
    "label": "CONFIRM_SQL",
    "output": "select country from airlines where active = 'Y' group by country order by count ( * ) desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "Can you tell me what is the total number of airlines in the United States that have an active status of \"Y\"? | select count ( * ) from airlines where active = 'Y' and country = 'United States' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye!"
  },
  {
    "db_id": "store_1",
    "input": "What tracks belong to genre Rock? | select tracks.* from genres join tracks on genres.id = tracks.genre_id where genres.name = 'Rock' | What are the names of tracks that are Rock or MPEG media type?",
    "label": "CONFIRM_SQL",
    "output": "select tracks.name from genres join tracks on genres.id = tracks.genre_id join media_types on media_types.id = tracks.media_type_id where genres.name = 'Rock' or media_types.name = 'MPEG audio file'"
  },
  {
    "db_id": "store_1",
    "input": "What are the names of tracks that belong to the genre Rock and are media type MPEG audio file? | select tracks.name from genres join tracks on genres.id = tracks.genre_id join media_types on media_types.id = tracks.media_type_id where genres.name = 'Rock' or media_types.name = 'MPEG audio file' | How many distinct media types are Rock genre?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct tracks.media_type_id ) from genres join tracks on genres.id = tracks.genre_id join media_types on media_types.id = tracks.media_type_id where genres.name = 'Rock'"
  },
  {
    "db_id": "store_1",
    "input": "What is the most common media type for the Rock genre? | select media_types.* from genres join tracks on genres.id = tracks.genre_id join media_types on media_types.id = tracks.media_type_id where genres.name = 'Rock' group by media_types.id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "epinions_1",
    "input": "Hello!  Can you provide me with a list of all product IDs and the associated product titles? | Are you asking for all item IDs and their corresponding item titles? | Yes!  That is correct!",
    "label": "CONFIRM_SQL",
    "output": "select i_id , title from item"
  },
  {
    "db_id": "epinions_1",
    "input": "Thank you!  Can you filter that list to show only the entries with a rank that is higher than 3 please? | Are you looking for ranks that are better than 3 or higher in value than 3? | I would like to filter the list to show the entries which have a rank value that is higher than 3 please.",
    "label": "CONFIRM_SQL",
    "output": "select item.title , item.i_id from item join review on item.i_id = review.i_id where review.rank > 3"
  },
  {
    "db_id": "epinions_1",
    "input": "Excellent.  Can you  include to this list the review rating for each of these items? | select item.title , item.i_id , rating from item join review on item.i_id = review.i_id where review.rank > 3 | Perfect!  Are these rating values that use listed averages?",
    "label": "REJECT",
    "output": "I cannot answer this question using the information in the table."
  },
  {
    "db_id": "department_management",
    "input": "Did you mean the ids of departments managed by heads whose temporary acting value is 'Yes'?\n | yes | Show me the departments managed by heads whose temporary acting value is 'Yes', please",
    "label": "INFORM_SQL",
    "output": "Great, could you tell me the name and number of employees within those departments?\n"
  },
  {
    "db_id": "department_management",
    "input": "select department.name , department.num_employees from department join management on department.department_id = management.department_id where management.temporary_acting = 'Yes' | Awesome, could you show me the budget of those departments?\n | select budget_in_billions from department join management on department.department_id = management.department_id where management.temporary_acting = 'Yes'",
    "label": "INFORM_SQL",
    "output": "Could you tell me when those departments were founded, and display the name next to each founding year?"
  },
  {
    "db_id": "department_management",
    "input": "select creation , name from department join management on department.department_id = management.department_id where management.temporary_acting = 'Yes' | Could you tell me how many departments have a head whose temporary acting value is 'no'?\n | select count ( * ) from management where temporary_acting = 'No'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "driving_school",
    "input": "Tell me the vehicle id and staff id for all lesson id's... | select vehicles.vehicle_id , lessons.staff_id from vehicles join lessons on vehicles.vehicle_id = lessons.vehicle_id | What is the vehicle details of vehicle id 1 and 2 ?",
    "label": "CONFIRM_SQL",
    "output": "select vehicle_details from vehicles where vehicle_id = '1' or vehicle_id = '2'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the price of vehicle id 2 ? | select price from lessons where vehicle_id = '2' | What is the id and detail of the vehicle used in lessons for most of the times ?",
    "label": "CONFIRM_SQL",
    "output": "select vehicles.vehicle_id , vehicles.vehicle_details from vehicles join lessons on vehicles.vehicle_id = lessons.vehicle_id group by vehicles.vehicle_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "icfp_1",
    "input": "What institution does \"Katsuhiro Ueno\" belong to? | select distinct inst.name from authors join authorship on authors.authid = authorship.authid join inst on authorship.instid = inst.instid where authors.fname = 'Katsuhiro' and authors.lname = 'Ueno' | What is Katsuhiro Ueno's author ID?",
    "label": "CONFIRM_SQL",
    "output": "select authid from authors where fname = 'Katsuhiro' and lname = 'Ueno'"
  },
  {
    "db_id": "icfp_1",
    "input": "Okay. What country is Tohoku University located in? | select country from inst where name = 'Tohoku University' | How many authors belong to Tohoku University?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from inst join authorship on inst.instid = authorship.instid where inst.name = 'Tohoku University'"
  },
  {
    "db_id": "icfp_1",
    "input": "What is Tohoku University's institution ID? | select instid from inst where name = 'Tohoku University' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_1",
    "input": "Could you find the names of all the departments, please? | select dept_name from department | What about the names of all classes whose description has the word \"Statistics\"?",
    "label": "SORRY",
    "output": "Sorry, we do not have information about class names."
  },
  {
    "db_id": "college_1",
    "input": "What about classes with the course description \"Statistics\"? | select * from course where crs_description like '%Statistics%' | What department name offers that course description?",
    "label": "CONFIRM_SQL",
    "output": "select department.dept_name from course join department on course.dept_code = department.dept_code where course.crs_description like '%Statistics%'"
  },
  {
    "db_id": "college_1",
    "input": "What other courses does that department offer? | select course.crs_code from course join department on course.dept_code = department.dept_code where department.dept_name = 'Computer Info. Systems' | How many course credits are each of those worth?",
    "label": "CONFIRM_SQL",
    "output": "select crs_credit from course where crs_code in ( select course.crs_code from course join department on course.dept_code = department.dept_code where department.dept_name = 'Computer Info. Systems' )"
  },
  {
    "db_id": "bike_1",
    "input": "What is the latitude of each station, please? | select name , lat from station | What are the minimum durations of all trips that end in those stations?",
    "label": "CONFIRM_SQL",
    "output": "select station.name , station.lat , min ( trip.duration ) from station join trip on station.id = trip.end_station_id group by trip.end_station_id"
  },
  {
    "db_id": "bike_1",
    "input": "What are the zip codes of those stations? | Sorry we don't have zip code of specific station. Please ask anything else. | What dates were all the stations installed?",
    "label": "CONFIRM_SQL",
    "output": "select name , installation_date from station"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Which services type had successful event details? | select services.service_type_code from services join events on services.service_id = events.service_id where events.event_details = 'Success' | What about events that had failure for their event details?",
    "label": "CONFIRM_SQL",
    "output": "select services.service_type_code from services join events on services.service_id = events.service_id where events.event_details = 'Fail'"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Which service types had both success and failure for their event details? | select services.service_type_code from services join events on services.service_id = events.service_id where events.event_details = 'Success' intersect select services.service_type_code from services join events on services.service_id = events.service_id where events.event_details = 'Fail' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Can you find me student with first name \"Emma\"? | What do you want to know about that student? | Student id",
    "label": "CONFIRM_SQL",
    "output": "select student_id from students where first_name = 'Emma'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the last name for that student? | select last_name from students where first_name = 'Emma' | What is her email?",
    "label": "CONFIRM_SQL",
    "output": "select email_address from students where first_name = 'Emma'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Show ID and first and last name of Engineer who has visited the most times. | select maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id group by maintenance_engineers.engineer_id order by count ( * ) desc limit 1 | what is the fault status of Engineer with the first name Etha?",
    "label": "CONFIRM_SQL",
    "output": "select engineer_visits.fault_status from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id where maintenance_engineers.first_name = 'Etha'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the visit start DateTime of Engineer with the first name Etha? | select engineer_visits.visit_start_datetime from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id where maintenance_engineers.first_name = 'Etha' | What is the visit end datetime of Engineer with the first name Etha?",
    "label": "CONFIRM_SQL",
    "output": "select engineer_visits.visit_end_datetime from maintenance_engineers join engineer_visits on maintenance_engineers.engineer_id = engineer_visits.engineer_id where maintenance_engineers.first_name = 'Etha'"
  },
  {
    "db_id": "twitter_1",
    "input": "what is the users' name? | select name from user_profiles | which one has the most followers?\t",
    "label": "CONFIRM_SQL",
    "output": "select name from user_profiles order by followers desc limit 1"
  },
  {
    "db_id": "twitter_1",
    "input": "what is her email? | select email from user_profiles order by followers desc limit 1 | thanks!",
    "label": "REQUEST_MORE",
    "output": "Anything more you would like to know?"
  },
  {
    "db_id": "twitter_1",
    "input": "find the id of users who are followed by mary and susan. | select follows.f1 from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Mary' intersect select follows.f1 from user_profiles join follows on user_profiles.uid = follows.f2 where user_profiles.name = 'Susan' | thanks!",
    "label": "WELCOME",
    "output": "You're welcome."
  },
  {
    "db_id": "chinook_1",
    "input": "How many customers are there? | select count ( * ) from customer | What is the most popular company?",
    "label": "CONFIRM_SQL",
    "output": "select company from customer group by company order by count ( * ) desc limit 1"
  },
  {
    "db_id": "chinook_1",
    "input": "How many customers have gmail emails? | select count ( * ) from customer where email like '%gmail.com%' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome! Bye."
  },
  {
    "db_id": "gymnast",
    "input": "Hello!  Can you please list all of the gymnast IDs and their associated hometowns? | select gymnast.gymnast_id , people.hometown from gymnast join people on gymnast.gymnast_id = people.people_id | Awesome!  Which of these hometowns is the most common?",
    "label": "CONFIRM_SQL",
    "output": "select people.hometown from gymnast join people on gymnast.gymnast_id = people.people_id group by people.hometown order by count ( * ) desc limit 1"
  },
  {
    "db_id": "gymnast",
    "input": "Awesome!  Can you show me a list of all people names that are associated with Santo Domingo? | select name from people where hometown = 'Santo Domingo' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "soccer_2",
    "input": "Which position is the most popular among players in the tryout? | select ppos from tryout group by ppos order by count ( * ) desc limit 1 | What were the names of the colleges for that position?",
    "label": "CONFIRM_SQL",
    "output": "select cname from tryout where ppos = ( select ppos from tryout group by ppos order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "soccer_2",
    "input": "And what decisions resulted from those tryouts? | select decision from tryout where ppos = ( select ppos from tryout group by ppos order by count ( * ) desc limit 1 ) | Were there any other position in the try outs other than goalie position?",
    "label": "CONFIRM_SQL",
    "output": "select ppos from tryout where ppos != 'goalie'"
  },
  {
    "db_id": "soccer_2",
    "input": "Which colleges were those positions for? | select cname from tryout where ppos != 'goalie' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "icfp_1",
    "input": "What is the name of the organization that has published the largest number of papers? | select inst.name from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.name order by count ( * ) desc limit 1 | What is the Country code for University of Oxford?",
    "label": "CONFIRM_SQL",
    "output": "select country from inst where name = 'University of Oxford'"
  },
  {
    "db_id": "icfp_1",
    "input": "What is the instID code for University of Oxford? | select instid from inst where name = 'University of Oxford' | What is the paperID code for University of Oxford?",
    "label": "CONFIRM_SQL",
    "output": "select distinct papers.paperid from papers join authorship join inst where inst.name = 'University of Oxford'"
  },
  {
    "db_id": "icfp_1",
    "input": "What is the Title of paperID 200? | select title from papers where paperid = '200' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "flight_4",
    "input": "What is the name of the airport with the lowest altitude?  | select name from airports order by elevation asc limit 1 | And in which city is it located? ",
    "label": "CONFIRM_SQL",
    "output": "select city from airports order by elevation asc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "And in what country is that?  | select country from airports order by elevation asc limit 1 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Do you want to check more?"
  },
  {
    "db_id": "flight_4",
    "input": "Yes, what is the exact altitude of the Bar Yehuda Airfield? | select elevation from airports where name = 'Bar Yehuda Airfield' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "gymnast",
    "input": "what are the hometowns of gymnasts  | select people.hometown from gymnast join people on gymnast.gymnast_id = people.people_id group by people.hometown | the corresponding number of gymnasts?",
    "label": "CLARIFY",
    "output": "Can you clarity what do you mean by the corresponding number?"
  },
  {
    "db_id": "gymnast",
    "input": "how many gymnasts are in table? | select count ( * ) from gymnast | details about paul hamm",
    "label": "CLARIFY",
    "output": "Can you be more specific for what details do you need for Paul Hamm?"
  },
  {
    "db_id": "gymnast",
    "input": "i want paul hamm's age | select age from people where name = 'Paul Hamm' | thanks",
    "label": "THANK_YOU",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "hr_1",
    "input": "Could you please display the first and last names of all employees whose first names end in the letter \"m\"? | select first_name , last_name from employees where first_name like '%m' | What are their hire dates?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , hire_date from employees where first_name like '%m'"
  },
  {
    "db_id": "hr_1",
    "input": "What commission pct do they get? | select commission_pct from employees where first_name like '%m' | What is the name of the person who gets the highest pct commission?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name from employees order by commission_pct desc limit 1"
  },
  {
    "db_id": "hr_1",
    "input": "What is the hire date of the person who gets the lowest pct commission? | select hire_date from employees order by commission_pct asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Have a good night!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "How many students are in the class | select count ( * ) from students | What are the student id 1's incident type code?",
    "label": "CONFIRM_SQL",
    "output": "select incident_type_code from behavior_incident where student_id = 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "what are the recommendations are given to student? | select recommendations from behavior_incident | How many male students  are there?\n",
    "label": "SORRY",
    "output": "Sorry the information is not available from the table."
  },
  {
    "db_id": "behavior_monitoring",
    "input": "what is the mobile number of student id 1?\n | select cell_mobile_number from students where student_id = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "department_management",
    "input": "Did you want the names of departments managed by heads whose temporary acting value is 'Yes'? | yes | What are the departments managed by heads whose temporary acting value is \"yes\"?",
    "label": "CONFIRM_SQL",
    "output": "select department.name from department join management on department.department_id = management.department_id where management.temporary_acting = 'Yes'"
  },
  {
    "db_id": "department_management",
    "input": "Show me the name and number of employees for the Treasury department.\n | select name , num_employees from department where name = 'Treasury' | Show me the number of employees for the Homeland Security department.",
    "label": "CONFIRM_SQL",
    "output": "select name , num_employees from department where name = 'Homeland Security'"
  },
  {
    "db_id": "college_3",
    "input": "what is the rank of Mark | Do you mean the rank of the faculty whose fname is Mark? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select rank from faculty where fname = 'Mark'"
  },
  {
    "db_id": "college_3",
    "input": "how many faculty are presented on the table | select count ( * ) from faculty | what are all the ranks on the table",
    "label": "CONFIRM_SQL",
    "output": "select distinct rank from faculty"
  },
  {
    "db_id": "college_1",
    "input": "How many students in this table? | select count ( * ) from student | Find name of all students?",
    "label": "CLARIFY",
    "output": "Do you mean First or Last name of the students?"
  },
  {
    "db_id": "college_1",
    "input": "Find the average student GPA? | select avg ( stu_gpa ) from student | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Anything you'd like to know more?"
  },
  {
    "db_id": "college_1",
    "input": "Find top enroll grade?\n | select enroll_grade from enroll order by enroll_grade asc limit 1 | Find the names of all students who took some course and the course description?",
    "label": "CONFIRM_SQL",
    "output": "select student.stu_fname , student.stu_lname , course.crs_description from student join enroll on student.stu_num = enroll.stu_num join class on enroll.class_code = class.class_code join course on class.crs_code = course.crs_code"
  },
  {
    "db_id": "driving_school",
    "input": "Which city has the most number of customers? | select addresses.city from customers join addresses on customers.customer_address_id = addresses.address_id group by addresses.city order by count ( * ) desc limit 1 | Which city has the least number of customers?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.city from customers join addresses on customers.customer_address_id = addresses.address_id group by addresses.city order by count ( * ) asc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "What is the most common city of all customers with the customer status code \"Bad Customer\"? | What do you mean by saying the most common city? | The city name that appears the most",
    "label": "CONFIRM_SQL",
    "output": "select addresses.city from customers join addresses on customers.customer_address_id = addresses.address_id where customers.customer_status_code = 'Bad Customer' group by addresses.city order by count ( * ) asc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "What is the country of Ericamouth? | select country from addresses where city = 'Ericamouth' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "movie_1",
    "input": "What are the names of the movies that was reviewed by brittany harris? | select distinct movie.title from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where reviewer.name = 'Brittany Harris' | What are the names of movies made after 2000?",
    "label": "CONFIRM_SQL",
    "output": "select distinct movie.title from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where movie.year > 2000"
  },
  {
    "db_id": "movie_1",
    "input": "How many rating  stars did Avatar had? | select rating.stars from rating join movie on rating.mid = movie.mid where movie.title = 'Avatar' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "soccer_2",
    "input": "What is the player id for Charles? | select pid from player where pname = 'Charles' | What the college Charles is attending?",
    "label": "CONFIRM_SQL",
    "output": "select college.cname from college join tryout on college.cname = tryout.cname join player on tryout.pid = player.pid where player.pname = 'Charles'"
  },
  {
    "db_id": "soccer_2",
    "input": "What is the state of the college OU? | select college.state from college join tryout on college.cname = tryout.cname join player on tryout.pid = player.pid where college.cname = 'OU' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks, good bye."
  },
  {
    "db_id": "journal_committee",
    "input": "What is the journal id of Anna Powierza? | select journal.journal_id from journal_committee join editor on journal_committee.editor_id = editor.editor_id join journal on journal_committee.journal_id = journal.journal_id where editor.name = 'Anna Powierza' | What are the work type of Kamila Porczyk?",
    "label": "CONFIRM_SQL",
    "output": "select journal_committee.work_type from journal_committee join editor on journal_committee.editor_id = editor.editor_id join journal on journal_committee.journal_id = journal.journal_id where editor.name = 'Kamila Porczyk'"
  },
  {
    "db_id": "county_public_safety",
    "input": "Hello!  Can you provide me with a list of the names of Counties that do not have any cities in them? | select name from county_public_safety where county_id not in ( select county_id from city ) | Okay!  Can you provide me with a list of all of the city names and which counties they belong to?",
    "label": "CONFIRM_SQL",
    "output": "select city.name , county_public_safety.name from county_public_safety join city on county_public_safety.county_id = city.county_id"
  },
  {
    "db_id": "county_public_safety",
    "input": "Thank you very much! Can you filter this list to show only the cities in the country with the largest population? | select city.name , county_public_safety.name from county_public_safety join city on county_public_safety.county_id = city.county_id order by population desc limit 1 | Thank you!  Can you update this filtered list to show the total population of this county?",
    "label": "CONFIRM_SQL",
    "output": "select county_public_safety.population from county_public_safety join city on county_public_safety.county_id = city.county_id order by population desc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "Awesome!  Finally, can you show me the number of residents per officer for this county? | select county_public_safety.residents_per_officer from county_public_safety join city on county_public_safety.county_id = city.county_id order by population desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "match_season",
    "input": "WHAT IS THE Indonesia CAPITAL | select capital from country where country_name = 'Indonesia' | WHAT IS THE Iran\tOF CAPITAL",
    "label": "CLARIFY",
    "output": "Did you mean the capital of the country named Iran?"
  },
  {
    "db_id": "match_season",
    "input": "YES EXACTLY | select capital from country where country_name = 'Iran' | HOW MANY DISTINCT OFFICIAL LANGUAGES ARE THERE AMONG COUNTRIES  OF PLAYERS WHOSE POSITIONS ARE DEFENDERS",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct country.official_native_language ) from country join match_season on country.country_id = match_season.country where match_season.position = 'Defender'"
  },
  {
    "db_id": "ship_1",
    "input": "What are the names of all ships? | select name from ship | And what about all the classes?",
    "label": "CONFIRM_SQL",
    "output": "select class from ship"
  },
  {
    "db_id": "ship_1",
    "input": "Can I see list of names and classes of ships that don't have any captain? | select name , class from ship where ship_id not in ( select ship_id from captain ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "movie_1",
    "input": "Hello!  Can you show me a list of all director names who have directed more than one movie? | select distinct movie.director from movie join movie on movie.director = movie.director where movie.title != movie.title | This is great!  Can you please update the list to show each of the films directed by each director and keep the director names in the list?",
    "label": "CONFIRM_SQL",
    "output": "select movie.director , movie.title from movie join movie on movie.director = movie.director where movie.title != movie.title"
  },
  {
    "db_id": "movie_1",
    "input": "Wonderful!  Can you please sort this list by the director name, and then sort by movie title? | select movie.title , movie.director from movie join movie on movie.director = movie.director where movie.title != movie.title order by movie.director asc , movie.title | Excellent!  Would you be able to update that list to also include the year each film was released?",
    "label": "CONFIRM_SQL",
    "output": "select movie.title , movie.director , movie.year from movie join movie on movie.director = movie.director where movie.title != movie.title order by movie.director asc , movie.title"
  },
  {
    "db_id": "game_1",
    "input": "How many students are on scholarship? | select count ( * ) from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.onscholarship = 'Y' | What are the last names for those students?",
    "label": "CONFIRM_SQL",
    "output": "select student.lname from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.onscholarship = 'Y'"
  },
  {
    "db_id": "game_1",
    "input": "What are their first names? | select student.fname from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.onscholarship = 'Y' | What are their majors?",
    "label": "CONFIRM_SQL",
    "output": "select student.major from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.onscholarship = 'Y'"
  },
  {
    "db_id": "game_1",
    "input": "What sport name do they play? | select sportsinfo.sportname from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.onscholarship = 'Y' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "wedding",
    "input": "What years did two or more churches open in? | select open_date from church group by open_date having count ( * ) >= 2 | What is the name of the church that opened the latest?",
    "label": "CONFIRM_SQL",
    "output": "select name from church order by open_date desc limit 1"
  },
  {
    "db_id": "wedding",
    "input": "What is that church a continuation of? | select open_date from church order by open_date desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you tell me the number of research staff in each organisation?\n | select employer_organisation_id , count ( * ) from research_staff group by employer_organisation_id | What is the organisation type for each organisation?",
    "label": "CONFIRM_SQL",
    "output": "select organisation_type from organisations"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Who are the staff for the organisation with id 5? | Do you mean the id of the staffs for orginisation with id 5? | Yes, that would be fine.",
    "label": "CONFIRM_SQL",
    "output": "select staff_id from research_staff where employer_organisation_id = 5"
  },
  {
    "db_id": "college_3",
    "input": "Can you show me all the course ids and enrollments? | select course.cid , count ( * ) from course join enrolled_in on course.cid = enrolled_in.cid group by enrolled_in.cid | Which courses have at least five enrollments?",
    "label": "CONFIRM_SQL",
    "output": "select course.* from course join enrolled_in on course.cid = enrolled_in.cid group by enrolled_in.cid having count ( * ) >= 5"
  },
  {
    "db_id": "college_3",
    "input": "Can you show me their ids? | select course.cid from course join enrolled_in on course.cid = enrolled_in.cid group by enrolled_in.cid having count ( * ) >= 5 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "baseball_1",
    "input": "Hello!  Can you provide me with a list of all of the player IDs in the database? | select player_id from hall_of_fame | Can you update this list to indicate whether or not these players were inducted into the hall of fame?",
    "label": "CONFIRM_SQL",
    "output": "select player_id , inducted from hall_of_fame"
  },
  {
    "db_id": "baseball_1",
    "input": "Thank you for that!  Of all of the years, which year had the fewest players entering the hall of fame? | select yearid from hall_of_fame group by yearid order by count ( * ) asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "network_2",
    "input": "can you please tell me if Alice is friends with Bob? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob' | great. and who are Zach's friends?",
    "label": "CONFIRM_SQL",
    "output": "select person.* from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "and can you tell me, besides Alice and Zach, is there anyone else who is friends with Bob? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob' and person.name != 'Alice' and person.name != 'Zach' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "soccer_2",
    "input": "What is the max training hours of all players, please? | select max ( hs ) from player | What about the min?",
    "label": "CONFIRM_SQL",
    "output": "select min ( hs ) from player"
  },
  {
    "db_id": "soccer_2",
    "input": "How about the average? | select avg ( hs ) from player | Who is the player with the lowest training hours?",
    "label": "CONFIRM_SQL",
    "output": "select pname from player order by hs asc limit 1"
  },
  {
    "db_id": "soccer_2",
    "input": "What about the highest training hours, please? | select pname from player order by hs desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "icfp_1",
    "input": "What is the name of the organization that published the greatest number of papers? | select inst.name from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.name order by count ( * ) desc limit 1 | What is the name of the organization that published the least number of papers?",
    "label": "CONFIRM_SQL",
    "output": "select inst.name from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.name order by count ( * ) asc limit 1"
  },
  {
    "db_id": "icfp_1",
    "input": "What are the titles of all the papers Google published? | select papers.title from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid where inst.name = 'Google' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "hospital_1",
    "input": "find the names of all patients who have an undergoing treatment and are staying in room 111 | select distinct patient.name from undergoes join patient on undergoes.patient = patient.ssn join stay on undergoes.stay = stay.stayid where stay.room = 111 | find the name of the patient who have an insurance id 68476213",
    "label": "CONFIRM_SQL",
    "output": "select name from patient where insuranceid = 68476213"
  },
  {
    "db_id": "hospital_1",
    "input": "find the name of physician who have seen the patient 100000001 | select distinct physician from undergoes where patient = 100000001 | Thanks!",
    "label": "GOOD_BYE",
    "output": "no problem, bye!"
  },
  {
    "db_id": "driving_school",
    "input": "Can you display the address id associated with the city of Damianfort? | select address_id from addresses where city = 'Damianfort' | Can you display all staff ids that contain a staff address id of 14?",
    "label": "CONFIRM_SQL",
    "output": "select staff_id from staff where staff_address_id = 14"
  },
  {
    "db_id": "driving_school",
    "input": "Can you display the first and last names associated with those staff ids? | select staff_id , first_name , last_name from staff where staff_address_id = 14 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! Goodbye."
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Could you show me the IDs for all documents with budget types described as 'Government'? | select documents_with_expenses.document_id from documents_with_expenses join ref_budget_codes on documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code where ref_budget_codes.budget_type_description = 'Government' | What are the document details of each of those?",
    "label": "INFORM_SQL",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "select documents_with_expenses.document_details from documents_with_expenses join ref_budget_codes on documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code where ref_budget_codes.budget_type_description = 'Government' | Could you show me the IDs for all documents with budget types described as 'Organisation'? | select documents_with_expenses.document_id from documents_with_expenses join ref_budget_codes on documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code where ref_budget_codes.budget_type_description = 'Organisation'",
    "label": "INFORM_SQL",
    "output": "What are the budget type codes for those?"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "select ref_budget_codes.budget_type_code from documents_with_expenses join ref_budget_codes on documents_with_expenses.budget_type_code = ref_budget_codes.budget_type_code where ref_budget_codes.budget_type_description = 'Organisation' | Can you tell me the document details for the highest numbered document id please? | select document_details from documents_with_expenses order by document_id desc limit 1",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "coffee_shop",
    "input": "Do you want the id of the shop? | Yes | How many shops have a score of above 37?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from shop where score > 37"
  },
  {
    "db_id": "coffee_shop",
    "input": "Which shop has the lowest number of staff? | select shop_id from shop order by num_of_staff asc limit 1 | What is the average number of workers for all the shops?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( num_of_staff ) from shop"
  },
  {
    "db_id": "election",
    "input": "How many parties are there? | select count ( * ) from party | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select party from party"
  },
  {
    "db_id": "election",
    "input": "Is there any party that has no record? | Sorry, I cannot answer this. | Is there any party that has at least two records?",
    "label": "CONFIRM_SQL",
    "output": "select party from party group by party having count ( * ) > 1"
  },
  {
    "db_id": "election",
    "input": "Thanks! | Sure! Do you want to know more? | Yes, can you show me all the attorney generals from democratic party?",
    "label": "CONFIRM_SQL",
    "output": "select attorney_general from party where party = 'Democratic'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What assets have been aquired? | What kind of information about the assets do you want me to return? | Can you tell me the date each asset was aquired?",
    "label": "CONFIRM_SQL",
    "output": "select asset_acquired_date from assets"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Now i would like to know what the earliest date is? | select asset_acquired_date from assets order by asset_acquired_date asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "pilot_record",
    "input": "Hello, how many different nationalities of pilots are there? | select count ( distinct nationality ) from pilot | What are the pilot names of those 3 nationalities? ",
    "label": "CONFIRM_SQL",
    "output": "select nationality , pilot_name from pilot"
  },
  {
    "db_id": "pilot_record",
    "input": "What is the most common nationality of the 3 nationalities? | select nationality from pilot group by nationality order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "wrestler",
    "input": "How many wrestlers are there? | select count ( * ) from wrestler | Where are they from?",
    "label": "CLARIFY",
    "output": "Do you want just a list of the locations, or their ids as well? "
  },
  {
    "db_id": "wrestler",
    "input": "just locations | select distinct location from wrestler | What are their ids?",
    "label": "CONFIRM_SQL",
    "output": "select wrestler_id from wrestler"
  },
  {
    "db_id": "wrestler",
    "input": "What are the most common reigns of wrestlers? | select reign from wrestler group by reign order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye. "
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Which employees did not destroy any documents?\n | Do you want the ids of all the employees who did not destroy any documents? | Yes.  Show the IDs of all employees who didn't destroy any documents please.",
    "label": "CONFIRM_SQL",
    "output": "select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Thank you.  What are their names? | select employee_name from employees where employee_id in ( select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed ) | Thank you.  What are their roles?",
    "label": "CONFIRM_SQL",
    "output": "select role_code from employees where employee_id in ( select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed )"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Thank you. What are their ages? | Sorry, we don't have information about ages. Do you mean the date of birth? | Yes.  What is their date of birth?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_birth from employees where employee_id in ( select employee_id from employees except select destroyed_by_employee_id from documents_to_be_destroyed )"
  },
  {
    "db_id": "network_2",
    "input": "Hi can you tell me in witch city does Alice live? | select city from person where name = 'Alice' | Great, how many males friends does she have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice' and person.gender = 'male'"
  },
  {
    "db_id": "network_2",
    "input": "What job does he have? | select job from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice' and person.gender = 'male' | Does Alice have any male friend that is a doctor?",
    "label": "CONFIRM_SQL",
    "output": "select personfriend.friend from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice' and person.gender = 'male' and person.job = 'doctor'"
  },
  {
    "db_id": "wine_1",
    "input": "Which appelation produces the most expensive wine? | select appellations.appelation from appellations join wine on appellations.appelation = wine.appelation where wine.price = ( select max ( price ) from wine ) | How much is the most expensive wine produced in Sonoma County?",
    "label": "CONFIRM_SQL",
    "output": "select max ( wine.price ) from appellations join wine on appellations.appelation = wine.appelation where appellations.county = 'Sonoma'"
  },
  {
    "db_id": "wine_1",
    "input": "How many wines are produced in Sonoma County? | select count ( * ) from appellations join wine on appellations.appelation = wine.appelation where appellations.county = 'Sonoma' | What is the price of the least expensive wine produced in Sonoma County?",
    "label": "CONFIRM_SQL",
    "output": "select min ( wine.price ) from appellations join wine on appellations.appelation = wine.appelation where appellations.county = 'Sonoma'"
  },
  {
    "db_id": "wine_1",
    "input": "What is the median price of wines produced in Sonoma County? | Did you mean the average price of wines produced in Sonoma County? | Yes, what is the average price of wines produced in Sonoma County?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( wine.price ) from appellations join wine on appellations.appelation = wine.appelation where appellations.county = 'Sonoma'"
  },
  {
    "db_id": "race_track",
    "input": "which track has the highest number of race?\n | select track.name from race join track on race.track_id = track.track_id group by race.track_id order by count ( * ) desc limit 1 | where is Auto Club Speedway located?",
    "label": "CONFIRM_SQL",
    "output": "select track.location from race join track on race.track_id = track.track_id where track.name = 'Auto Club Speedway'"
  },
  {
    "db_id": "race_track",
    "input": "where is Chicagoland Speedway located? | select track.location from race join track on race.track_id = track.track_id where track.name = 'Chicagoland Speedway' | how many seating does Chicagoland Speedway have?",
    "label": "CONFIRM_SQL",
    "output": "select track.seating from race join track on race.track_id = track.track_id where track.name = 'Chicagoland Speedway'"
  },
  {
    "db_id": "baseball_1",
    "input": "What were all the salary values of players in 2010 and 2001? | select salary from salary where year = 2010 union select salary from salary where year = 2001 | What was the average salary of players in 2010?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from salary where year = 2010"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the difference between the lowest paid player and the highest paid player in 2010?\n | select max ( salary ) - min ( salary ) from salary where year = 2010 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "You are welcome. Anything more you'd like to know?"
  },
  {
    "db_id": "news_report",
    "input": "Show me the names of journalists | select name from journalist | Show me the events they reported",
    "label": "CLARIFY",
    "output": "which columuns to return"
  },
  {
    "db_id": "news_report",
    "input": "date | select event.event_id , event.date from event join news_report on event.event_id = news_report.event_id | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "dorm_1",
    "input": "How many students live in each dorm? | select count ( * ) , dorm.dorm_name from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid group by dorm.dorm_name | What is the average age of the students living in each dorm?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( student.age ) , dorm.dorm_name from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid group by dorm.dorm_name"
  },
  {
    "db_id": "dorm_1",
    "input": "What is the age range for the students in each dorm? | select min ( student.age ) , max ( student.age ) , dorm.dorm_name from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid group by dorm.dorm_name | How many students are 26?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where age = 26"
  },
  {
    "db_id": "dorm_1",
    "input": "What is the most common age for students in each dorm? | Sorry, I am unable to answer this question. Could you please ask other related questions? | What is the mode of ages for the students in each dorm?",
    "label": "REJECT",
    "output": "Sorry, there is no info related to the mode of ages in tables. Could you please ask other related questions?"
  },
  {
    "db_id": "dorm_1",
    "input": "What is the age  of most students in each dorm? | Sorry, I am unable to answer this question. Could you please ask other related questions? | Thanks!",
    "label": "GOOD_BYE",
    "output": "ok, goodbye!"
  },
  {
    "db_id": "swimming",
    "input": "What are the names of stadiums that some Australian swimmers have been to? | select stadium.name from swimmer join record on swimmer.id = record.swimmer_id join event on record.event_id = event.id join stadium on stadium.id = event.stadium_id where swimmer.nationality = 'Australia' | Who were the Australian swimmers?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from swimmer where nationality = 'Australia'"
  },
  {
    "db_id": "swimming",
    "input": "Did Craig Stevens win at Baku Olympic Stadium? | select result from swimmer join record on swimmer.id = record.swimmer_id join event on record.event_id = event.id join stadium on stadium.id = event.stadium_id where swimmer.name = 'Craig Stevens' and stadium.name = 'Baku Olympic Stadium' | Did Craig Stevens win or lose at Gazprom Arena?",
    "label": "CONFIRM_SQL",
    "output": "select result from swimmer join record on swimmer.id = record.swimmer_id join event on record.event_id = event.id join stadium on stadium.id = event.stadium_id where swimmer.name = 'Craig Stevens' and stadium.name = 'Gazprom Arena'"
  },
  {
    "db_id": "party_people",
    "input": "What are the names of parties with 2 events | select party.party_name from party_events join party on party_events.party_id = party.party_id group by party_events.party_id having count ( * ) = 2 | which party event is rank best \n",
    "label": "REJECT",
    "output": "Sorry, we do not have information about rank. Can you ask something else?"
  },
  {
    "db_id": "party_people",
    "input": "what is the minister name of the party with 2 events\n | select party.minister from party_events join party on party_events.party_id = party.party_id group by party_events.party_id having count ( * ) = 2 | what are the minister names of the parties with 1 events ",
    "label": "CONFIRM_SQL",
    "output": "select party.minister from party_events join party on party_events.party_id = party.party_id group by party_events.party_id having count ( * ) = 1"
  },
  {
    "db_id": "party_people",
    "input": "what is the name of the party with region ID 3 | select party_name from party where region_id = 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "manufactory_1",
    "input": "List names of each manufacturer? | select name from manufacturers | Name of each manufacturer's product?",
    "label": "CONFIRM_SQL",
    "output": "select products.name , manufacturers.name from products join manufacturers on products.manufacturer = manufacturers.code"
  },
  {
    "db_id": "manufactory_1",
    "input": "Price of each manufacturer's product?  | select products.price from products join manufacturers on products.manufacturer = manufacturers.code | Which product is the most expensive?",
    "label": "CONFIRM_SQL",
    "output": "select name from products order by price desc limit 1"
  },
  {
    "db_id": "manufactory_1",
    "input": "Name of each manufacturer along with the name and price of its most expensive product? | select products.name , max ( products.price ) , manufacturers.name from products join manufacturers on products.manufacturer = manufacturers.code group by manufacturers.name | What of their least expensive product?",
    "label": "CONFIRM_SQL",
    "output": "select products.name , min ( products.price ) , manufacturers.name from products join manufacturers on products.manufacturer = manufacturers.code group by manufacturers.name"
  },
  {
    "db_id": "soccer_2",
    "input": "what is average of training hours? | select avg ( hs ) from player | can you show me player names that starting with 'A'?",
    "label": "CONFIRM_SQL",
    "output": "select pname from player where pname like 'A%'"
  },
  {
    "db_id": "soccer_2",
    "input": "can you show me a list of college name? | select distinct cname from tryout | thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "scientist_1",
    "input": "state the projects with least hours? | name | select name from projects order by hours asc limit 1",
    "label": "INFORM_SQL",
    "output": "List the name of all projects that are operated longer than the average working hours of all projects"
  },
  {
    "db_id": "scientist_1",
    "input": "select name from projects where hours > ( select avg ( hours ) from projects ) | State the total number of projects of the list? | select count ( * ) from projects",
    "label": "INFORM_SQL",
    "output": "Which project has the highest hours on the list?"
  },
  {
    "db_id": "small_bank_1",
    "input": "Find the saving balance of the account with the highest checking balance. | select savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by checking.balance desc limit 1 | And how about the lowest?",
    "label": "CONFIRM_SQL",
    "output": "select savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by checking.balance asc limit 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "Checking balance of Customer id 3 | select balance from checking where custid = '3' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "products_for_hire",
    "input": "How many 'Cutlery' type products are there? | select count ( product_id ) from products_for_hire where product_type_code = 'Cutlery' | Okay good to know. How many products have a daily hire cost lower than 20?",
    "label": "CONFIRM_SQL",
    "output": "select count ( product_id ) from products_for_hire where daily_hire_cost < 20"
  },
  {
    "db_id": "products_for_hire",
    "input": "Thank you for that info. Now, how many 'cutlery' products have the daily hire cost lower than 20? | select count ( product_id ) from products_for_hire where product_type_code = 'Cutlery' and daily_hire_cost < 20 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the tourist attractions available? | Did you mean to show you all the attractions? | Yes, what are their names?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( name ) from tourist_attractions"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Which attractions did Vincent go to? | select tourist_attractions.* from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' | Which attractions did Vivian visit?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.* from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vivian'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Are there any attractions that both Vivian and Vincent go to? | select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' intersect select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vivian' | What are the names of the other tourist?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_details from visitors where tourist_details != 'Vivian' and tourist_details != 'Vincent'"
  },
  {
    "db_id": "debate",
    "input": "Could you please tell me the names of the people that have not been on the affirmative side of all debates? | select name from people where people_id not in ( select affirmative from debate_people ) | Could you please tell me their party affiliations?",
    "label": "CONFIRM_SQL",
    "output": "select party from people where people_id not in ( select affirmative from debate_people )"
  },
  {
    "db_id": "debate",
    "input": "What are their ages? | select age from people where people_id not in ( select affirmative from debate_people ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "flight_4",
    "input": "What cities have more than 3 airports in the United States? | select city from airports where country = 'United States' group by city having count ( * ) > 3 | What cities in the United States have more than 4 airports?",
    "label": "CONFIRM_SQL",
    "output": "select city from airports where country = 'United States' group by city having count ( * ) > 4"
  },
  {
    "db_id": "flight_4",
    "input": "What are their names? | select name from airports where country = 'United States' group by city having count ( * ) > 4 | Show the names of all airports with elevation over 4000.",
    "label": "CONFIRM_SQL",
    "output": "select name from airports where elevation > 4000"
  },
  {
    "db_id": "flight_4",
    "input": "Show the names of all airports with elevation over 5000. | select name from airports where elevation > 5000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "chinook_1",
    "input": "Hello. I am looking for the album titled \"Balls to the Wall\". | What specifically about the album \"Balls to the Wall\" are you looking for? | I am interested in learning who the artist is.\n",
    "label": "CONFIRM_SQL",
    "output": "select artist.name from album join artist on album.artistid = artist.artistid where album.title = 'Balls to the Wall'"
  },
  {
    "db_id": "chinook_1",
    "input": "That's okay. What are some of Accept's other albums? | select album.title from album join artist on album.artistid = artist.artistid where artist.name = 'Accept' and album.title != 'Balls to the Wall' | That sounds good. What about the album \"For Those About To Rock, We Salute You\"? Which artist produced that one?",
    "label": "CONFIRM_SQL",
    "output": "select artist.name from album join artist on album.artistid = artist.artistid where album.title = 'For Those About To Rock We Salute You'"
  },
  {
    "db_id": "movie_1",
    "input": "Do you want the names of those movies? | Yes | What are the names of the movies?",
    "label": "CONFIRM_SQL",
    "output": "select title from movie"
  },
  {
    "db_id": "movie_1",
    "input": "Which are made before 1980? | select title from movie where year < 1980 | From the list of all movies, which were directed by James Cameron?",
    "label": "CONFIRM_SQL",
    "output": "select title from movie where director = 'James Cameron'"
  },
  {
    "db_id": "movie_1",
    "input": "What movies were either directed by James Cameron, or made before 1980? | select title from movie where director = 'James Cameron' or year < 1980 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "roller_coaster",
    "input": "Which roller coasters are longer than 3300?\n | select roller_coaster_id from roller_coaster where length > 3300 | Which of them are higher than 100?",
    "label": "CLARIFY",
    "output": "Do you mean among all roller costers or among the those longer than 3300?"
  },
  {
    "db_id": "roller_coaster",
    "input": "Among those longer than 3300\n | select roller_coaster_id from roller_coaster where length > 3300 and height > 100 | And what are their status?\n",
    "label": "CONFIRM_SQL",
    "output": "select roller_coaster_id , status from roller_coaster where length > 3300 and height > 100"
  },
  {
    "db_id": "roller_coaster",
    "input": "Thanks! | Sure. Do you want to check more | Yes, what is their speed?",
    "label": "CONFIRM_SQL",
    "output": "select roller_coaster_id , status , speed from roller_coaster where length > 3300 and height > 100"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "Show me a list of all shipping agent codes | select shipping_agent_code from ref_shipping_agents | add a column showing the total number of documents shipped per code",
    "label": "CONFIRM_SQL",
    "output": "select shipping_agent_code , count ( * ) from documents group by shipping_agent_code"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "Add another column showing the shipping agent name | select ref_shipping_agents.shipping_agent_code , ref_shipping_agents.shipping_agent_name , count ( * ) from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by documents.shipping_agent_code | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Bye!"
  },
  {
    "db_id": "city_record",
    "input": "What is the name of the city that already served as host more than once? | The names in English or Hanzi? | English, please.",
    "label": "CONFIRM_SQL",
    "output": "select city.city from city join hosting_city on city.city_id = hosting_city.host_city group by hosting_city.host_city having count ( * ) > 1"
  },
  {
    "db_id": "city_record",
    "input": "What is the GDP and population of Nanjing （Jiangsu）? | select distinct city.gdp , city.regional_population from city join hosting_city on city.city_id = hosting_city.host_city where city.city = 'Nanjing ( Jiangsu )' | What is the name of the city in English and Hanzi that hosted in 2011?",
    "label": "CONFIRM_SQL",
    "output": "select city.city , city.hanzi from city join hosting_city on city.city_id = hosting_city.host_city where hosting_city.year = 2011"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How many employees are there? | select count ( employee_id ) from employees | How many employee have the ability to authorize the destruction of documents?",
    "label": "CONFIRM_SQL",
    "output": "select count ( destruction_authorised_by_employee_id ) from documents_to_be_destroyed"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What are the ids of those particular employees?\n | select destruction_authorised_by_employee_id from documents_to_be_destroyed | Now how many employees can't authorize the destruction of documents.",
    "label": "CONFIRM_SQL",
    "output": "select sum ( employee_id ) from employees except select destruction_authorised_by_employee_id from documents_to_be_destroyed"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "May I have the ids of those employees who cant authorize the destruction of documents? | select employee_id from employees except select destruction_authorised_by_employee_id from documents_to_be_destroyed | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "movie_1",
    "input": "Which movie has the highest average rating? | select movie.title from rating join movie on rating.mid = movie.mid group by rating.mid order by avg ( rating.stars ) desc limit 1 | What is it's rating?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( rating.stars ) from rating join movie on rating.mid = movie.mid group by rating.mid order by avg ( rating.stars ) desc limit 1"
  },
  {
    "db_id": "movie_1",
    "input": "What is the average rating for all movies? | select movie.title , avg ( rating.stars ) from rating join movie on rating.mid = movie.mid group by rating.mid | Which movie has the lowest rating?",
    "label": "CONFIRM_SQL",
    "output": "select movie.title from rating join movie on rating.mid = movie.mid where rating.stars = ( select min ( stars ) from rating )"
  },
  {
    "db_id": "aircraft",
    "input": "What are the names of the aircraft? | select aircraft from aircraft | And which of those aircraft won a match?",
    "label": "CONFIRM_SQL",
    "output": "select aircraft.aircraft from aircraft join match on aircraft.aircraft_id = match.winning_aircraft"
  },
  {
    "db_id": "aircraft",
    "input": "How many have won at least two matches?\n | select aircraft.aircraft from aircraft join match on aircraft.aircraft_id = match.winning_aircraft group by match.winning_aircraft having count ( * ) >= 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "allergy_1",
    "input": "Did you mean the ids of students who have allergies to both milk and cats? | Yes. | Which student have allergy to both milk and cats? ",
    "label": "CONFIRM_SQL",
    "output": "select stuid from has_allergy where allergy = 'Milk' intersect select stuid from has_allergy where allergy = 'Cat'"
  },
  {
    "db_id": "allergy_1",
    "input": "What are their last names?  | select lname from student where stuid in ( select stuid from has_allergy where allergy = 'Milk' intersect select stuid from has_allergy where allergy = 'Cat' ) | And what about their age?",
    "label": "CONFIRM_SQL",
    "output": "select lname , age from student where stuid in ( select stuid from has_allergy where allergy = 'Milk' intersect select stuid from has_allergy where allergy = 'Cat' )"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Hello! Can you tell me how many total nominees there are? | select count ( artwork_id ) from nomination | Excellent!  For each nomination can you show me the name of the artwork associated with it, and the name of the festival where it was nominated?",
    "label": "CONFIRM_SQL",
    "output": "select artwork.name , festival_detail.festival_name from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Thanks!  Can you update this list to show all of the associated years for each of these festivals? | select artwork.name , festival_detail.festival_name , festival_detail.year from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome, bye!"
  },
  {
    "db_id": "icfp_1",
    "input": "Which papers were published in an institution in the \"USA\" please? | select papers.title from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid join inst on authorship.instid = inst.instid where inst.country = 'USA' | Can you please tell me which ones of those have \"Turon\" as their second author?",
    "label": "CONFIRM_SQL",
    "output": "select papers.title from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid join inst on authorship.instid = inst.instid where inst.country = 'USA' and authorship.authorder = 2 and authors.lname = 'Turon'"
  },
  {
    "db_id": "icfp_1",
    "input": "What is Turon's author id? | select authid from authors where lname = 'Turon' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "epinions_1",
    "input": "What is the used id 1? | Do you mean what is the name of the user with id 1? | yes",
    "label": "CONFIRM_SQL",
    "output": "select name from useracct where u_id = 1"
  },
  {
    "db_id": "epinions_1",
    "input": "What is the name of user id 3? | select name from useracct where u_id = 3 | What is the rank of user id 3?",
    "label": "CONFIRM_SQL",
    "output": "select review.rank from useracct join review on useracct.u_id = review.u_id where review.u_id = 3"
  },
  {
    "db_id": "epinions_1",
    "input": "What is the average rating of reviews of user id1?  | select avg ( review.rating ) from useracct where review.u_id = 1 as t1 join review on t1.u_id = review.u_id group by review.u_id | Find out the average rating of every user?",
    "label": "CONFIRM_SQL",
    "output": "select useracct.name , avg ( review.rating ) from useracct join review on useracct.u_id = review.u_id group by review.u_id"
  },
  {
    "db_id": "college_3",
    "input": "Can you please tell me the full names of all faculty who are members of department number 520? | select faculty.fname , faculty.lname from faculty join member_of on faculty.facid = member_of.facid where member_of.dno = 520 | What about for department number 600?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.fname , faculty.lname from faculty join member_of on faculty.facid = member_of.facid where member_of.dno = 600"
  },
  {
    "db_id": "college_3",
    "input": "What is the sex of each of those faculty who are members of the department with department number 600. | select faculty.sex from faculty join member_of on faculty.facid = member_of.facid where member_of.dno = 600 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "manufactory_1",
    "input": "hello | hi, what can I do for you? | what is the average price among all products?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( price ) from products"
  },
  {
    "db_id": "manufactory_1",
    "input": "which products have a price higher than or equal to $150? | select * from products where price >= 150 | what are the names of the manufacturers of those products?",
    "label": "CONFIRM_SQL",
    "output": "select manufacturers.name from products join manufacturers on products.manufacturer = manufacturers.code where products.price >= 150"
  },
  {
    "db_id": "store_product",
    "input": "What is the district name for district id 15? | select district_name from district where district_id = 15 | What is the district name for District id 11?",
    "label": "CONFIRM_SQL",
    "output": "select district_name from district where district_id = 11"
  },
  {
    "db_id": "store_product",
    "input": "How many store are located in district 15? | select count ( * ) from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where district.district_id = 15 | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select store.store_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where district.district_id = 15"
  },
  {
    "db_id": "store_product",
    "input": "What is the name of the store in district 11? | select store.store_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where district.district_id = 11 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Hello!  How many different Apartment Type Codes are there? | select count ( apt_type_code ) from apartments | Can you provide me with the most common apartment type code among all of the apartments with at least 1 bathroom?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code from apartments where bathroom_count >= 1 group by apt_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you list all apartment IDs with \"Flat\" as the apartment type? | select apt_id from apartments where apt_type_code = 'Flat' | Thank you! Can you update that list to include the building ID for each of those apartment IDs?",
    "label": "CONFIRM_SQL",
    "output": "SELECT building_id, apt_id  FROM Apartments WHERE apt_type_code = 'Flat'"
  },
  {
    "db_id": "flight_1",
    "input": "What are the departure dates for all flights from Los Angeles to Honolulu? | select departure_date from flight where origin = 'Los Angeles' and destination = 'Honolulu' | What are the arrival dates for all flights from Los Angeles to Honolulu?",
    "label": "CONFIRM_SQL",
    "output": "select arrival_date from flight where origin = 'Los Angeles' and destination = 'Honolulu'"
  },
  {
    "db_id": "flight_1",
    "input": "What are the prices of those flights? | select price from flight where origin = 'Los Angeles' and destination = 'Honolulu' | What about the flight numbers?",
    "label": "CONFIRM_SQL",
    "output": "select flno from flight where origin = 'Los Angeles' and destination = 'Honolulu'"
  },
  {
    "db_id": "tracking_orders",
    "input": "When was the order with the tracking number 3452 placed? | Did you want the order id of the order with shipment tracking number 3452? | Okay, tell me the order ID of that tracking number.",
    "label": "CONFIRM_SQL",
    "output": "select orders.order_id from orders join shipments on orders.order_id = shipments.order_id where shipments.shipment_tracking_number = 3452"
  },
  {
    "db_id": "tracking_orders",
    "input": "Thank you, what is the shipment date of order id 5? | select shipment_date from shipments where order_id = 5 | What was the date when order id 5 was placed?",
    "label": "CONFIRM_SQL",
    "output": "select date_order_placed from orders where order_id = 5"
  },
  {
    "db_id": "tracking_orders",
    "input": "How about the order with invoice number 13, when was that order placed? | select orders.date_order_placed from orders join shipments on orders.order_id = shipments.order_id where shipments.invoice_number = 13 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "book_2",
    "input": "I need a list of the titles of books. | select title from book | Can you give me the price of those books?",
    "label": "CONFIRM_SQL",
    "output": "select publication.price from book join publication on book.book_id = publication.book_id"
  },
  {
    "db_id": "book_2",
    "input": "can you list those in ascending order?\n | select publication.price from book join publication on book.book_id = publication.book_id order by publication.price asc | Can you list the prices along with the books?",
    "label": "CONFIRM_SQL",
    "output": "select publication.price , book.title from book join publication on book.book_id = publication.book_id order by publication.price asc"
  },
  {
    "db_id": "book_2",
    "input": "Now can you list the titles of the books and the prices but in descending order? | select publication.price , book.title from book join publication on book.book_id = publication.book_id order by publication.price desc | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "hospital_1",
    "input": "How many patients in this table? | select count ( patient ) from stay | Find the patient who most recently stayed in room 112?",
    "label": "CONFIRM_SQL",
    "output": "select patient from stay where room = 112 order by staystart desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "How many rooms in this table? | select count ( distinct room ) from stay | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "department_store",
    "input": "how many products on the table | select count ( * ) from products | what are all the products name on this table",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products"
  },
  {
    "db_id": "department_store",
    "input": "what is the product price of red jeans | select product_price from products where product_name = 'red jeans' | which product is highest price on the table",
    "label": "CLARIFY",
    "output": "Which kinds of product information do you want?"
  },
  {
    "db_id": "department_store",
    "input": "i want to the black jeans product price | select product_price from products where product_name = 'black jeans' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "icfp_1",
    "input": "Hello!  Can you provide me with a list of all paper IDs and paper titles that correspond to \"Indiana University\"? | select distinct papers.title , papers.paperid from papers join authorship on papers.paperid = authorship.paperid join inst on authorship.instid = inst.instid where inst.name = 'Indiana University' | Great!  Can you please list all of the author Ids that are associated with that paper title?",
    "label": "CONFIRM_SQL",
    "output": "select distinct authorship.authid from papers join authorship on papers.paperid = authorship.paperid join inst on authorship.instid = inst.instid where papers.title = ( select distinct papers.title from papers join authorship on papers.paperid = authorship.paperid join inst on authorship.instid = inst.instid where inst.name = 'Indiana University' )"
  },
  {
    "db_id": "icfp_1",
    "input": "Great! Can you tell me what the total number of papers are for each of these author IDs?...in other words, how many papers have each of these authors published? | select authid , count ( * ) from authorship group  by authid | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "college_2",
    "input": "How many courses do not have a prerequisite? | select count ( * ) from course where course_id not in ( select course_id from prereq ) | Which of those courses has the most number of credits?",
    "label": "CONFIRM_SQL",
    "output": "select * from course where course_id not in ( select course_id from prereq ) order by credits desc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "How many courses are there? | select count ( * ) from course | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome!"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Which event id does not have any participant with the detail Kneyatta Kuhn? | select event_id from events except select participants_in_events.event_id from participants_in_events join participants on participants_in_events.participant_id = participants.participant_id where participant_details = 'Kenyatta Kuhn' | And how about the detail \"Karlee Batz\"?",
    "label": "CONFIRM_SQL",
    "output": "select event_id from events except select participants_in_events.event_id from participants_in_events join participants on participants_in_events.participant_id = participants.participant_id where participant_details = 'Karlee Batz'"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "Which event id does have a participant with the detail Kenyatta Kuhn? | * I have left the chat * | select events.event_id from events join participants_in_events join participants where participant_details = 'Kenyatta Kuhn'",
    "label": "INFORM_SQL",
    "output": "How many events have the event detail fail?"
  },
  {
    "db_id": "college_2",
    "input": "What is the course id for the International Finance course? | select course_id from course where title = 'International Finance' | What is the course id for the prerequisite of that course?",
    "label": "CONFIRM_SQL",
    "output": "select course_id from course where course_id in ( select prereq.prereq_id from prereq join course on prereq.course_id = course.course_id where course.title = 'International Finance' )"
  },
  {
    "db_id": "college_2",
    "input": "What is the title of that course? | select title from course where course_id in ( select prereq.prereq_id from prereq join course on prereq.course_id = course.course_id where course.title = 'International Finance' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "Can you tell me the highest number of mailshots for the customers? | select count ( * ) from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id group by mailshot_customers.customer_id order by count ( * ) desc limit 1 | What about the highest mailshot id number?",
    "label": "CONFIRM_SQL",
    "output": "select mailshot_customers.mailshot_id from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id group by mailshot_customers.customer_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "What is the customer id for that mailshot id? | select mailshot_customers.customer_id from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id group by mailshot_customers.customer_id order by count ( * ) desc limit 1 | How many mailshots does customer id 1 have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from mailshot_customers where customer_id = 1"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "What is the name of customer id 1? | select customer_name from customers where customer_id = 1 | What is the amount of mailshots that Wendell has?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id where customers.customer_name = 'Wendell'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Tell me the chargeable amount for part id 1 ? | select chargeable_amount from parts where part_id = '1' | Tell me the part name of the part id 3 ?",
    "label": "CONFIRM_SQL",
    "output": "select part_name from parts where part_id = '3'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Tell me the part name of the part id 2 ? | select part_name from parts where part_id = '2' | Which part has the least chargeable amount ? List the part id and amount.",
    "label": "CONFIRM_SQL",
    "output": "select part_id , chargeable_amount from parts order by chargeable_amount asc limit 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "what is the highest saving balance? | select max ( balance ) from savings | what is the lowest saving balance?",
    "label": "CONFIRM_SQL",
    "output": "select min ( balance ) from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "can you show me a list of accounts name? | select name from accounts | thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "sakila_1",
    "input": "what is the city id   of alberta district? | select distinct city_id from address where district = 'Alberta' | ok good!.what is last update in qld district?",
    "label": "CONFIRM_SQL",
    "output": "select distinct last_update from address where district = 'QLD'"
  },
  {
    "db_id": "sakila_1",
    "input": "what is address of qld district? | select address from address where district = 'QLD' | thanks",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "chinook_1",
    "input": "Hello there!  Can you tell me, which media type is the least common associated with all tracks? | select mediatype.name from mediatype join track on mediatype.mediatypeid = track.mediatypeid group by track.mediatypeid order by count ( * ) asc limit 1 | Thank you!  Can you show me the total number of occurrences for Purchased AAC as the media type?",
    "label": "CONFIRM_SQL",
    "output": "select mediatype.name , count ( * ) from mediatype join track on mediatype.mediatypeid = track.mediatypeid group by track.mediatypeid order by count ( * ) asc limit 1"
  },
  {
    "db_id": "chinook_1",
    "input": "Can you tell me what the second most common media type is and how many times it's been purchased? | select mediatype.name , count ( * ) from mediatype join track on mediatype.mediatypeid = track.mediatypeid group by track.mediatypeid order by count ( * ) desc limit 2 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "wedding",
    "input": "What are the names and opening years of the three churches that opened most recently? | select name , open_date from church order by open_date desc limit 3 | What are the names and opening years of the three churches that opened the earliest?",
    "label": "CONFIRM_SQL",
    "output": "select name , open_date from church order by open_date asc limit 3"
  },
  {
    "db_id": "wedding",
    "input": "Who were those churches organized by? | select organized_by from church order by open_date asc limit 3 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "program_share",
    "input": "Hello! Could you provide me with a list of all of the channel IDs for which the \"time of day\" is morning? | select channel_id from broadcast where time_of_day = 'Morning' | Thank you for that!  Could you update this list to include the channel name?",
    "label": "CONFIRM_SQL",
    "output": "select channel.name , broadcast.channel_id from channel join broadcast on channel.channel_id = broadcast.channel_id where broadcast.time_of_day = 'Morning'"
  },
  {
    "db_id": "program_share",
    "input": "Excellent!  Finally, can you show me what the ownership is of each of those stations? | select channel.name , broadcast.channel_id , owner from channel join broadcast on channel.channel_id = broadcast.channel_id where broadcast.time_of_day = 'Morning' | Thanks! (My timer is just about to run out!!)",
    "label": "SORRY",
    "output": "I m sorry,welcome,goodbye"
  },
  {
    "db_id": "hr_1",
    "input": "display the department id and the total salary for those departments which contains at least two employees. | select department_id , sum ( salary ) from employees group by department_id having count ( * ) >= 2 | What are the first and last names of employees in department id 90?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name from employees where department_id = 90"
  },
  {
    "db_id": "hr_1",
    "input": "What department id is Steven King in? | select department_id from employees where first_name = 'Steven' and last_name = 'King' | What is Steven King's Salary and Job id?",
    "label": "CONFIRM_SQL",
    "output": "select job_id , salary from employees where first_name = 'Steven' and last_name = 'King'"
  },
  {
    "db_id": "hr_1",
    "input": "What is the highest salary and what employee id has it? | select employee_id , salary from employees order by salary desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "ship_1",
    "input": "what is the average number of captains per ship? | select avg ( ct ) from ( select captain.ship_id , count ( * ) as ct from ship join captain on ship.ship_id = captain.ship_id group by captain.ship_id ) | how many ships have more than one captain?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from ship join captain on ship.ship_id = captain.ship_id group by captain.ship_id having count ( * ) > 1 )"
  },
  {
    "db_id": "ship_1",
    "input": "how many ships have a single captain? | select count ( * ) from ( select * from ship join captain on ship.ship_id = captain.ship_id group by captain.ship_id having count ( * ) = 1 ) | what is the age of the oldest captain?",
    "label": "CONFIRM_SQL",
    "output": "select age from captain order by age desc limit 1"
  },
  {
    "db_id": "ship_1",
    "input": "what about the youngest? | select age from captain order by age asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "network_2",
    "input": "Who is the oldest person? | What attributes do you want for this person, name or something else? | name",
    "label": "CONFIRM_SQL",
    "output": "select name from person order by age desc limit 1"
  },
  {
    "db_id": "network_2",
    "input": "How many friends does Alice have? | select count ( personfriend.friend ) from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice' | How many of those are women?",
    "label": "CONFIRM_SQL",
    "output": "select count ( personfriend.friend ) from person join personfriend on person.name = personfriend.friend where personfriend.name = 'Alice' and person.gender = 'female'"
  },
  {
    "db_id": "soccer_2",
    "input": "Find the names of either colleges in LA with greater than 15000 size or in state AZ with less than 13000 enrollment. | select cname from college where enr < 13000 and state = 'AZ' union select cname from college where enr > 15000 and state = 'LA' | OK! please give me the names of the colleges where enrollment is greater than 20000",
    "label": "CONFIRM_SQL",
    "output": "select cname from college where enr > 20000"
  },
  {
    "db_id": "soccer_2",
    "input": "Also give me the names of the colleges where enrollment is between 10000 and 20000. | select cname from college where enr < 20000 and enr > 10000 | Ok. Can you please tell me which college has the lowest enrollment.",
    "label": "CONFIRM_SQL",
    "output": "select cname from college order by enr asc limit 1"
  },
  {
    "db_id": "soccer_2",
    "input": "And which college has the highest enrollment? | select cname from college order by enr desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "baseball_1",
    "input": "Which team had the least number of attendances? | Do you mean which game of the sum of attendance of a team in its home game? | Yes",
    "label": "CLARIFY",
    "output": "Sorry. I mean which game OR the sum of attendance of a team in its home game"
  },
  {
    "db_id": "baseball_1",
    "input": "The sum of attendance of a team in its home game | select team.name from home_game join team on home_game.team_id = team.team_id_br group by home_game.team_id order by sum ( home_game.attendance ) asc limit 1 | What was the actual attendance in number?",
    "label": "CLARIFY",
    "output": "What do you mean by actual attendance "
  },
  {
    "db_id": "baseball_1",
    "input": "The attendance in home games for Altoona Mountain City | select sum ( home_game.attendance ) from home_game join team on home_game.team_id = team.team_id group by home_game.team_id order by sum ( home_game.attendance ) asc limit 1 | Which team had the highest number of attendance?",
    "label": "CONFIRM_SQL",
    "output": "select team.name from home_game join team on home_game.team_id = team.team_id group by home_game.team_id order by sum ( home_game.attendance ) desc limit 1"
  },
  {
    "db_id": "baseball_1",
    "input": "How many openings? | Do you mean the number of attendance? | Yes",
    "label": "INFORM_SQL",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "college_2",
    "input": "How many buildings are in the list? | select count ( distinct building ) from classroom | What are the buildings that have more than 50 capacity?",
    "label": "CONFIRM_SQL",
    "output": "select building from classroom where capacity > 50 group by building"
  },
  {
    "db_id": "college_2",
    "input": "Can you rind me the number of rooms with more than 50 capacity for those 20 buildings? | select count ( room_number ) from classroom where capacity > 50 | Can you show me the number of rooms with capacity greater than 50 for each building?",
    "label": "CONFIRM_SQL",
    "output": "select building , count ( room_number ) from classroom where capacity > 50 group by building"
  },
  {
    "db_id": "hospital_1",
    "input": "How many patients are there? | select count ( * ) from patient | Can you show me the name of the patient who stays in room 111?",
    "label": "CONFIRM_SQL",
    "output": "select patient.name from stay join patient on stay.patient = patient.ssn join prescribes on prescribes.patient = patient.ssn join medication on prescribes.medication = medication.code where room = 111"
  },
  {
    "db_id": "hospital_1",
    "input": "Can you show me the insurance id of the patient who stays in room 111? | select patient.insuranceid from stay join patient on stay.patient = patient.ssn join prescribes on prescribes.patient = patient.ssn join medication on prescribes.medication = medication.code where room = 111 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "student_assessment",
    "input": "How many students are there? | select count ( distinct student_id ) from courses join student_course_attendance on courses.course_id = student_course_attendance.course_id | And the amount of courses?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct courses.course_id ) from courses join student_course_attendance on courses.course_id = student_course_attendance.course_id"
  },
  {
    "db_id": "student_assessment",
    "input": "And how many courses did student 171 take? | select count ( * ) from courses join student_course_attendance on courses.course_id = student_course_attendance.course_id where student_course_attendance.student_id = 171 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "gas_company",
    "input": "What is the average market value | select avg ( market_value ) from company | Which location is most profitable?",
    "label": "CLARIFY",
    "output": "What do you mean by location? We have different companies in different countries."
  },
  {
    "db_id": "gas_company",
    "input": "Which company is the most profitable? | select company from company order by assets_billion desc limit 1 | What is the average sales of the companies ranked 1, 2 and 3?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( sales_billion ) from company where rank = 1 or rank = 2 or rank = 3"
  },
  {
    "db_id": "gas_company",
    "input": "Which manager has been at this company the longest | Sorry, we don't have that information. | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "baseball_1",
    "input": "Hi can you tell me how many games were in 1885? | Did  you  also  requre  the   \"ties\" is '1' | how many games had ties?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from postseason where ties = 1"
  },
  {
    "db_id": "baseball_1",
    "input": "what was the name of the winning team in 1885? | There  is no  infor  about name of the winning team in 1885 | thanks!",
    "label": "WELCOME",
    "output": "welcome  and  goodbye "
  },
  {
    "db_id": "voter_2",
    "input": "What is the average age of all students. | select avg ( age ) from student | Which student is older than the average age.",
    "label": "CLARIFY",
    "output": "Do you want their id or last name or first name?"
  },
  {
    "db_id": "voter_2",
    "input": "The first name for the student older than the average age. | select fname from student where age > ( select avg ( age ) from student ) | Give me the count for the students older than the average age.",
    "label": "CONFIRM_SQL",
    "output": "select count ( fname ) from student where age > ( select avg ( age ) from student )"
  },
  {
    "db_id": "voter_2",
    "input": "Give me the count for the students younger than the average age. | select count ( fname ) from student where age < ( select avg ( age ) from student ) | Give me the count for all students",
    "label": "CONFIRM_SQL",
    "output": "select count ( fname ) from student"
  },
  {
    "db_id": "wine_1",
    "input": "Which wine has the highest price?  | select * from wine order by price desc limit 1 | Which wine has the highest score? ",
    "label": "CONFIRM_SQL",
    "output": "select * from wine order by score desc limit 1"
  },
  {
    "db_id": "wine_1",
    "input": "Which wine has the most cases available? | select * from wine order by cases desc limit 1 | How about winery with the least cases? ",
    "label": "CONFIRM_SQL",
    "output": "select winery from wine order by cases asc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "Hi there!  Whew!  That was a long wait to join the chat!  Can you please show me what the largest single payment amount is? | select amount from payment order by amount desc limit 1 | Great!  Can you provide me with the associated customer ID and payment ID?",
    "label": "CONFIRM_SQL",
    "output": "select amount , payment_id , customer_id from payment order by amount desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "Perfect!  Could you tell me which payment ID over $5.00 has the most recent payment date? | select payment_id from payment where amount > 5 order by last_update desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "flight_1",
    "input": "Hi can you tell me what is the average salary? | select avg ( salary ) from employee | What is the name of employees with three lowest salaries?",
    "label": "CONFIRM_SQL",
    "output": "select name from employee order by salary asc limit 3"
  },
  {
    "db_id": "flight_1",
    "input": "Great, in what departments do they work? | Sorry we do not have information about departments. Can you ask something else? | What is the highest salary in the company?",
    "label": "CONFIRM_SQL",
    "output": "select max ( salary ) from employee"
  },
  {
    "db_id": "journal_committee",
    "input": "Show average sales of the journals that have an editor whose work type is photo | select avg ( journal.sales ) from journal join journal_committee on journal.journal_id = journal_committee.journal_id where journal_committee.work_type = 'Photo' | Show names of the journal IDs",
    "label": "REQUEST_MORE",
    "output": "You mean the IDs of all the journals? or the journal you asked before?"
  },
  {
    "db_id": "journal_committee",
    "input": "The one I asked before  | select journal.journal_id from journal join journal_committee on journal.journal_id = journal_committee.journal_id where journal_committee.work_type = 'Photo' | Thanks! ",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "Show me the list of cmi cross reference ids please! | select cmi_cross_ref_id from cmi_cross_references | Which of those cmi cross reference ids are related to parking taxes?",
    "label": "CONFIRM_SQL",
    "output": "select cmi_cross_references.cmi_cross_ref_id from cmi_cross_references join parking_fines on cmi_cross_references.cmi_cross_ref_id = parking_fines.cmi_cross_ref_id"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Does customer 252 have a deputy policy? | select policies.policy_type_code from policies join customers on policies.customer_id = customers.customer_id where customers.customer_id = 252 | Does Ellsworth Paucek have a deputy policy?",
    "label": "CONFIRM_SQL",
    "output": "select policies.policy_type_code from policies join customers on policies.customer_id = customers.customer_id where customers.customer_details = 'Ellsworth Paucek'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Who does have a deputy policy? | select distinct customers.customer_details from policies join customers on policies.customer_id = customers.customer_id where policies.policy_type_code = 'Deputy' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "I was wondering what the maximum number of circulation history documents is for a single employee? | select count ( * ) from employees join circulation_history on circulation_history.employee_id = employees.employee_id group by employees.employee_id order by count ( * ) desc limit 1 | Which employee are those documents associated with?\n",
    "label": "CONFIRM_SQL",
    "output": "select employees.employee_name from employees join circulation_history on circulation_history.employee_id = employees.employee_id group by employees.employee_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "Ok, and how many drafts are associated with Kenyon? | select count ( * ) from employees join circulation_history on circulation_history.employee_id = employees.employee_id where employee_name = 'Kenyon' | And how many copies?",
    "label": "CONFIRM_SQL",
    "output": "select count ( copy_number ) from employees join circulation_history on circulation_history.employee_id = employees.employee_id where employee_name = 'Kenyon'"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "Thanks! | Thank you, would you like to know anything else?  | No, that's all\n",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye"
  },
  {
    "db_id": "icfp_1",
    "input": "What is the title of the paper that has the largest number of authors? | select papers.title from authorship join papers on authorship.paperid = papers.paperid where authorship.authorder = ( select max ( authorder ) from authorship ) | How many authors are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct authid ) from authorship"
  },
  {
    "db_id": "icfp_1",
    "input": "What is the title of the paper that has the smallest number of authors? | select papers.title from authorship join papers on authorship.paperid = papers.paperid where authorship.authorder = ( select min ( authorder ) from authorship ) | What is the average number of authors for all titles?",
    "label": "CONFIRM_SQL",
    "output": "select paperid , avg ( authorder ) from authorship group by paperid"
  },
  {
    "db_id": "wedding",
    "input": "How many churches are there? | select count ( * ) from church | How many churches had weddings in 2015?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from church join wedding on church.church_id = wedding.church_id where wedding.year = 2015"
  },
  {
    "db_id": "wedding",
    "input": "Show all church names except or those that had a wedding in year 2015. | select name from church except select church.name from church join wedding on church.church_id = wedding.church_id where wedding.year = 2015 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "candidate_poll",
    "input": "What are the current average age of all males | I do not have information about age in the table. | what is the current height of Hubert Henno",
    "label": "CONFIRM_SQL",
    "output": "select height from people where name = 'Hubert Henno'"
  },
  {
    "db_id": "candidate_poll",
    "input": "How many male sex are there | select count ( * ) from people where sex = 'M' | which of the male has he highest weight",
    "label": "CLARIFY",
    "output": "Would you like to know the name of the person who has the highest weight among sex M?"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "The column \"customer_id \" in Table: \"Accounts\" refers to column \"customer_id\" in Table: \" Customers\" | Sorry I don't understand. Could you ask something else? | Show the account name and other account detail for all accounts by the customer with first name Meaghan and last name Keeling?",
    "label": "CONFIRM_SQL",
    "output": "select accounts.account_name , accounts.other_account_details from accounts join customers on accounts.customer_id = customers.customer_id where customers.customer_first_name = 'Meaghan' and customers.customer_last_name = 'Keeling'"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "what is the total number of customers?\n | select count ( * ) from customers | ok .Who is the number one customer?",
    "label": "CLARIFY",
    "output": "Do you mean the customer with id 1"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "yes | select * from customers where customer_id = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "What are names of customers who have both mailshots in \"order\" outcome? | Do you want the names of customers who have mailshot with an outcome code \"Order\"? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id where mailshot_customers.outcome_code = 'Order'"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "What are the payment methods of those customers? | select customers.payment_method from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id where mailshot_customers.outcome_code = 'Order' | Show me names and payment methods of customers who have mailshot with an outcome code \"No Response\"",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , customers.payment_method from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id where mailshot_customers.outcome_code = 'No Response'"
  },
  {
    "db_id": "city_record",
    "input": "Hello, can you tell me which city hosted events in the most recent year? | Which attribute of the city do you want? | How about, what is the most recent year?",
    "label": "CONFIRM_SQL",
    "output": "select year from hosting_city order by year desc limit 1"
  },
  {
    "db_id": "city_record",
    "input": "What was the match id in 2013? | select match_id from hosting_city where year = 2013 | What is the city id that is associated with match id 6 in 2013?",
    "label": "CONFIRM_SQL",
    "output": "select host_city from hosting_city where year = 2013"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "How many services has each resident requested | select residents.resident_id , count ( * ) from residents join residents_services on residents.resident_id = residents_services.resident_id group by residents.resident_id | List the resident_id,details, and the count in descending order of the count",
    "label": "CONFIRM_SQL",
    "output": "select residents.resident_id , residents.other_details , count ( * ) from residents join residents_services on residents.resident_id = residents_services.resident_id group by residents.resident_id order by count ( * ) desc"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Tell me the count of total number of residents | select count ( * ) from residents | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "entertainment_awards",
    "input": "Show the number of audience in year 2008 or 2010. | select num_of_audience from festival_detail where year = 2008 or year = 2010 | How about the chair name for those years?",
    "label": "CONFIRM_SQL",
    "output": "select chair_name from festival_detail where year = 2008 or year = 2010"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Are those chairs also the chairs for any years except 2008 and 2010? If so, give me their name and the other years they also were chair for. | select chair_name where chair_name in ( select chair_name from festival_detail where year = 2008 or year = 2010 ) and year != 2008 and year != 2010 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "bike_1",
    "input": "Show me the start station id for all trips. | select start_station_id from trip | How many of these occur at least 200 times?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct start_station_id ) from trip where start_station_id in ( select start_station_id from trip group by start_station_name having count ( * ) >= 200 )"
  },
  {
    "db_id": "bike_1",
    "input": "Show me the ids and names of these stations. | select start_station_id , start_station_name from trip group by start_station_name having count ( * ) >= 200 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "How Many Students have Behavior Incident reports with recommendations? | select count ( * ) from ( select * from behavior_incident join students on behavior_incident.student_id = students.student_id group by behavior_incident.student_id ) | How many of those Recommendations required the students to leave the university?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from behavior_incident join students on behavior_incident.student_id = students.student_id where recommendations = 'Transfer schools' group by behavior_incident.student_id )"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What was the students last name and ID that had the most behavior incidents? | select behavior_incident.student_id , students.last_name from behavior_incident join students on behavior_incident.student_id = students.student_id group by behavior_incident.student_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "swimming",
    "input": "Find the names of stadiums that the least swimmers have been to? | select stadium.name from record join event on record.event_id = event.id join stadium on stadium.id = event.stadium_id group by event.stadium_id order by count ( * ) desc limit 1 | How many events in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( name ) from event"
  },
  {
    "db_id": "swimming",
    "input": "How many stadiums in this table? | select count ( name ) from stadium | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "machine_repair",
    "input": "What are the names of technicians from \"CLE\"? | select name from technician where team = 'CLE' | What about names from \"CWS\"?",
    "label": "CONFIRM_SQL",
    "output": "select name from technician where team = 'CWS'"
  },
  {
    "db_id": "machine_repair",
    "input": "And what are starting years shared by technicians from both teams?  | select starting_year from technician where team = 'CLE' intersect select starting_year from technician where team = 'CWS' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "bike_1",
    "input": "What is the average latitude of stations located in San Jose city? | select avg ( lat ) from station where city = 'San Jose' | What is the average longitude of stations located in San Jose city?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( long ) from station where city = 'San Jose'"
  },
  {
    "db_id": "bike_1",
    "input": "What are the installation dates for all stations in San Jose city? | select installation_date from station where city = 'San Jose' | What are the names of each of those?",
    "label": "CONFIRM_SQL",
    "output": "select name , installation_date from station where city = 'San Jose'"
  },
  {
    "db_id": "bike_1",
    "input": "What are the dock counts of each of those? | select name , dock_count from station where city = 'San Jose' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "student_assessment",
    "input": "Hello, how are you!  Can you provide me with a list of all of the email addresses in this database? | select email_address from people | Perfect!  Can you update the list to include all of the candidate IDs in addition to these email addresses?",
    "label": "CONFIRM_SQL",
    "output": "select candidates.candidate_id , people.email_address from people join candidates on people.person_id = candidates.candidate_id"
  },
  {
    "db_id": "student_assessment",
    "input": "Can you filter this list to show only the row that contains the email address of stanley.monahan@example.org? | select candidates.candidate_id , people.email_address from people join candidates on people.person_id = candidates.candidate_id where people.email_address = 'stanley.monahan@example.org' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye, you are very nice!"
  },
  {
    "db_id": "store_product",
    "input": "what are the districts that have city mall. | select district.district_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where store.type = 'City Mall' | what are the names of the districts where both city mall and village store type stores.",
    "label": "CONFIRM_SQL",
    "output": "select district.district_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where store.type = 'City Mall' intersect select district.district_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where store.type = 'Village Store'"
  },
  {
    "db_id": "wine_1",
    "input": "Which kinds of grapes are white? | select grape from grapes where color = 'White' | List all the wines that use color white grapes.",
    "label": "CLARIFY",
    "output": "What kinds of attributes of wines do you want?"
  },
  {
    "db_id": "wine_1",
    "input": "List wines made with white grapes. | select * from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White' | Excellent. What is their average score?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( score ) from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White'"
  },
  {
    "db_id": "wine_1",
    "input": "What is the average score of wines not made with white grapes? | select avg ( score ) from grapes join wine on grapes.grape = wine.grape where grapes.color != 'White' | List only the names and scores of wines made with white grapes.",
    "label": "CONFIRM_SQL",
    "output": "select wine.name , wine.score from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White'"
  },
  {
    "db_id": "wine_1",
    "input": "What is the maximum, minimum, and average price of these wines? | select max ( price ) , min ( price ) , avg ( price ) from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "phone_market",
    "input": "State the phone name which has the least price on the list? | select name from phone order by price asc limit 1 | Which phone id has the highest stock on the list?",
    "label": "CONFIRM_SQL",
    "output": "select phone_id from phone_market order by num_of_stock desc limit 1"
  },
  {
    "db_id": "phone_market",
    "input": "For each phone, show its names and total number of stocks? | select phone.name , sum ( phone_market.num_of_stock ) from phone_market join phone on phone_market.phone_id = phone.phone_id group by phone.name | State the name of the Carrier of Iphone 6s?",
    "label": "CONFIRM_SQL",
    "output": "select carrier from phone where name = 'IPhone 6s'"
  },
  {
    "db_id": "department_store",
    "input": "how many customers are presented on the table | select count ( * ) from customers | please list out the customers name",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers"
  },
  {
    "db_id": "department_store",
    "input": "what is the highest customer code on the table | select max ( customer_code ) from customers | what is the address of Ahmed",
    "label": "CONFIRM_SQL",
    "output": "select customer_address from customers where customer_name = 'Ahmed'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Can you tell me the location code with the most documents? | select location_code from document_locations group by location_code order by count ( * ) desc limit 1 | Can you also tell me how many documents are there for that location?\n",
    "label": "CLARIFY",
    "output": "Do you mean the number of documents in the location with code x?"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Yes, please. | select count ( * ) from document_locations where location_code = 'x' | How about the location code with the least documents?",
    "label": "CONFIRM_SQL",
    "output": "select location_code from document_locations group by location_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Can you also tell me the average number of documents per location? | select avg ( c ) from ( select count ( * ) as c from document_locations group by location_code ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "what is the average elevation of the routes from the United States to Canada | Sorry, that information is not in the database. | find the shortest route from the United States to Canada",
    "label": "REJECT",
    "output": "Sorry, that information is also not in the database."
  },
  {
    "db_id": "flight_4",
    "input": "what is the elevation of goroka airport | select elevation from airports where name = 'Goroka Airport' | which country is madang",
    "label": "CONFIRM_SQL",
    "output": "select country from airports where city = 'Madang'"
  },
  {
    "db_id": "flight_4",
    "input": "thanks | Anything you'd like to know more? | find the number of routes from the United States to Canada",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from routes where dst_apid in ( select apid from airports where country = 'Canada' ) and src_apid in ( select apid from airports where country = 'United States' )"
  },
  {
    "db_id": "student_assessment",
    "input": "tell me course name for course id 301 and 302? | select course_name from courses where course_id = 301 or course_id = 302 | Tell me the date of attendance for the student id 111 and 121?\n",
    "label": "CONFIRM_SQL",
    "output": "select date_of_attendance from student_course_attendance where student_id = 111 or student_id = 121"
  },
  {
    "db_id": "student_assessment",
    "input": "How many students attend course English ? | select count ( * ) from courses join student_course_attendance on courses.course_id = student_course_attendance.course_id where courses.course_name = 'English' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "product_catalog",
    "input": "Could you please tell me all the catalog publishers whose name contains \"Murray\"? | select distinct ( catalog_publisher ) from catalogs where catalog_publisher like '%Murray%' | What is the name of that catalog?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_name from catalogs where catalog_publisher like '%Murray%'"
  },
  {
    "db_id": "product_catalog",
    "input": "What are the dates of latest revision for those? | select date_of_latest_revision from catalogs where catalog_publisher like '%Murray%' | Could you please tell me all the catalog publishers whose name contains \"chocolate\"?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_publisher from catalogs where catalog_publisher like '%chocolate%'"
  },
  {
    "db_id": "product_catalog",
    "input": "How many catalogs do they publish? | select count ( * ) from catalogs where catalog_publisher in ( select distinct ( catalog_publisher ) from catalogs where catalog_publisher like '%chocolate%' ) | What's the name of that catalog and its date of publication?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_name , date_of_publication from catalogs where catalog_publisher in ( select distinct ( catalog_publisher ) from catalogs where catalog_publisher like '%chocolate%' )"
  },
  {
    "db_id": "music_1",
    "input": "What are the names of all the songs that have a lower rating than some song of the blues genre? | select song_name from song where rating < ( select max ( rating ) from song where genre_is = 'blues' ) | What are the names of all the songs that have a higher rating than some song of the blues genre?",
    "label": "CONFIRM_SQL",
    "output": "select song_name from song where rating > ( select max ( rating ) from song where genre_is = 'blues' )"
  },
  {
    "db_id": "music_1",
    "input": "What are the names and ratings of all songs of the blues genre? | select song_name , rating from song where genre_is = 'blues' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "store_1",
    "input": "Show the albums of Billy Cobham.\n | select albums.* from albums join artists on albums.artist_id = artists.id where artists.name = 'Billy Cobham' | Count the albums of Billy Colham.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from albums join artists on albums.artist_id = artists.id where artists.name = 'Billy Cobham'"
  },
  {
    "db_id": "store_1",
    "input": "Show the album details. | There is no details attribute for albums, which attribute do you want to return instead? | Name of the album.",
    "label": "CONFIRM_SQL",
    "output": "select albums.title from albums join artists on albums.artist_id = artists.id where artists.name = 'Billy Cobham'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "How many different product categories are there?\n | select distinct product_category_code from products | select count(distinct product_category_code) from Products",
    "label": "AMBIGUOUS",
    "output": "What units of measurement are used?"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "can you give more information about you question? | What unit of measurement is used for seeds category? | select unit_of_measure from ref_product_categories where product_category_code = 'Seeds'",
    "label": "INFORM_SQL",
    "output": "What category is chervil in?"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "select product_category_code from products where product_name = 'chervil' | What is the measurement used for chervil? | select ref_product_categories.unit_of_measure from products join ref_product_categories on products.product_category_code = ref_product_categories.product_category_code where products.product_name = 'chervil'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "How many products do you have? | select count ( * ) from products | Find the number of characteristics that the product \"caraway\" has.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'caraway'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Finally, can you provide the number of characteristics of the product with the name \"flax\"? | select count ( * ) from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'flax' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "party_people",
    "input": "Hello, can you please provide me with a list of all Event IDs and Event names? | select event_id , event_name from party_events | Can you please filter this list to include only the rows that have 'Annual Meeting' as the Event Name?",
    "label": "CONFIRM_SQL",
    "output": "select event_id , event_name from party_events where event_name = 'Annaual Meeting'"
  },
  {
    "db_id": "party_people",
    "input": "Can you show me which of the Events on this list took place in the United Kingdom? | select party_events.event_id , party_events.event_name from region join party on region.region_id = party.region_id join party_events on party.party_id = party_events.party_id where region.region_name = 'United Kingdom' and party_events.event_name = 'Annaual Meeting' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "assets_maintenance",
    "input": "How many engineer visits are required at most for a single fault log? List the number and the log entry id. | select count ( * ) , fault_log.fault_log_entry_id from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 | What is the engineer visit id of that fault log entry id?",
    "label": "CONFIRM_SQL",
    "output": "select engineer_visits.engineer_visit_id from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id where engineer_visits.fault_log_entry_id = ( select fault_log.fault_log_entry_id from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the contact staff id for that? | select engineer_visits.contact_staff_id from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id where engineer_visits.fault_log_entry_id = ( select fault_log.fault_log_entry_id from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 ) | What is the fault status of that?",
    "label": "CONFIRM_SQL",
    "output": "select engineer_visits.fault_status from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id where engineer_visits.fault_log_entry_id = ( select fault_log.fault_log_entry_id from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What's the fault description for that? | select fault_log.fault_description from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1 | Tell me what the other fault details for that are, please?",
    "label": "CONFIRM_SQL",
    "output": "select fault_log.other_fault_details from fault_log join engineer_visits on fault_log.fault_log_entry_id = engineer_visits.fault_log_entry_id group by fault_log.fault_log_entry_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "how many Document Sections on the table?\n  | select count ( * ) from document_sections | what are the different type of document on the table?",
    "label": "CLARIFY",
    "output": "What do you mean by \"different type of document\"?"
  },
  {
    "db_id": "document_management",
    "input": "what are highest access count on the table? | select access_count from documents order by access_count desc limit 1 | how many type of section title on the table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct section_title ) from document_sections"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "What is the tax source system code for benefits and overpayments? | select cmi_cross_references.source_system_code from cmi_cross_references join benefits_overpayments on cmi_cross_references.cmi_cross_ref_id = benefits_overpayments.cmi_cross_ref_id | List benefit ID, please.",
    "label": "CONFIRM_SQL",
    "output": "select cmi_cross_references.source_system_code , benefits_overpayments.council_tax_id from cmi_cross_references join benefits_overpayments on cmi_cross_references.cmi_cross_ref_id = benefits_overpayments.cmi_cross_ref_id"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "Order them by benefit ID, Please. | select cmi_cross_references.source_system_code , benefits_overpayments.council_tax_id from cmi_cross_references join benefits_overpayments on cmi_cross_references.cmi_cross_ref_id = benefits_overpayments.cmi_cross_ref_id order by benefits_overpayments.council_tax_id asc | Ok, can you show me the list of the source system codes?",
    "label": "CONFIRM_SQL",
    "output": "select source_system_code from cmi_cross_references"
  },
  {
    "db_id": "wine_1",
    "input": "What grapes have a score higher than 93? | select distinct grape from wine where score > 93 | What are the appellations whose score is higher than 93? ",
    "label": "CONFIRM_SQL",
    "output": "select distinct appelation from wine where score > 93"
  },
  {
    "db_id": "wine_1",
    "input": "What are the names of wines whose score is higher than 93? | select name from wine where score > 93 | Can you please list the grapes, appellations, and names of wines whose score is higher than 93?",
    "label": "CONFIRM_SQL",
    "output": "select grape , appelation , name from wine where score > 93"
  },
  {
    "db_id": "store_product",
    "input": "what is the average of city populations? | select avg ( city_population ) from district | what is the highest city population?",
    "label": "CONFIRM_SQL",
    "output": "select max ( city_population ) from district"
  },
  {
    "db_id": "store_product",
    "input": "which district has the least area? | select district_name from district order by city_area asc limit 1 | thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "club_1",
    "input": "Which club has the most students? | Do you want the name of that club? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select club.clubname from club join member_of_club on club.clubid = member_of_club.clubid group by member_of_club.clubid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "club_1",
    "input": "How many members are in theat club? | select count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid group by member_of_club.clubid order by count ( * ) desc limit 1 | How many roles are in that club?",
    "label": "CONFIRM_SQL",
    "output": "select count ( position ) from member_of_club where clubid = ( select member_of_club.clubid from club join member_of_club on club.clubid = member_of_club.clubid group by member_of_club.clubid order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "farm",
    "input": "Did you mean the population of the city with id 1? | Yes! | Did you mean the census ranking of the city whose official name is Plaster Rock?",
    "label": "AFFIRM",
    "output": "Yes!"
  },
  {
    "db_id": "farm",
    "input": "Did you mean the status of the city whose official name is Perth-Andover? | Yes. | what is population of city 1",
    "label": "CONFIRM_SQL",
    "output": "select population from city where city_id = 1"
  },
  {
    "db_id": "farm",
    "input": "what is the census ranking for plaster rock | select census_ranking from city where official_name = 'Plaster Rock' | what is the status of Perth-Andover",
    "label": "CONFIRM_SQL",
    "output": "select status from city where official_name = 'Perth-Andover'"
  },
  {
    "db_id": "farm",
    "input": "what is the name of the city that is top in area km 2. | select official_name from city order by area_km_2 desc limit 1 | thanks",
    "label": "WELCOME",
    "output": "Of course!"
  },
  {
    "db_id": "shop_membership",
    "input": "What is the total number of purchases for members with level 6? | select count ( * ) from purchase join member on purchase.member_id = member.member_id where member.level = 6 | Which 2 members have the highest number of purchases?",
    "label": "CONFIRM_SQL",
    "output": "select member.name from purchase join member on purchase.member_id = member.member_id group by purchase.member_id order by count ( * ) desc limit 2"
  },
  {
    "db_id": "shop_membership",
    "input": "What is the hometown of Myron Pryor? | select hometown from member where name = 'Myron Pryor' | What is the branch ID associated with Myron Pryor?",
    "label": "CONFIRM_SQL",
    "output": "select purchase.branch_id from member join purchase on member.member_id = purchase.member_id where name = 'Myron Pryor'"
  },
  {
    "db_id": "solvency_ii",
    "input": "hi. are there any products that are not in any events? | select product_name from products where product_id not in ( select product_id from products_in_events ) | how many products in total are not in any event?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products where product_id not in ( select product_id from products_in_events )"
  },
  {
    "db_id": "solvency_ii",
    "input": "and can you tell me the names of those 5 products? | select product_name from products where product_id not in ( select product_id from products_in_events ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks bye"
  },
  {
    "db_id": "loan_1",
    "input": "Can you list the loan types, branch names and ids, and loan amounts? | Did you mean the Ids of the branches? | Yes, please.",
    "label": "CONFIRM_SQL",
    "output": "select loan.loan_type , bank.bname , loan.branch_id , loan.amount from bank join loan on bank.branch_id = loan.branch_id group by bank.bname"
  },
  {
    "db_id": "loan_1",
    "input": "Hmm, I want to know the number of customers each bank branch has.  | Would you like both the branch name and the branch ID? | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select branch_id , bname , no_of_customers from bank"
  },
  {
    "db_id": "loan_1",
    "input": "Please find out the total amount of loans offered by each bank branch. | select sum ( amount ) , bank.bname from bank join loan on bank.branch_id = loan.branch_id group by bank.bname | Thanks!",
    "label": "WELCOME",
    "output": "Welcome Bye!"
  },
  {
    "db_id": "roller_coaster",
    "input": "HOW MANY COUNTRIES DO NOT HAVE AN ROLLER COASTER LONGER THAN 3000? | select count ( * ) from country where country_id not in ( select country_id from roller_coaster where length > 3000 ) | WHICH COUNTRY HAVE A ROLLER COASTER LONGER THAN 5000",
    "label": "CONFIRM_SQL",
    "output": "select country.name from roller_coaster join country on roller_coaster.country_id = country.country_id where roller_coaster.length > 5000"
  },
  {
    "db_id": "roller_coaster",
    "input": "WHAT IS THE HIGHEST LENGTH OF ROLL COASTER | select max ( length ) from roller_coaster | WHICH PARK HAS HIGHEST SPEED OF ROLL COASTER",
    "label": "CONFIRM_SQL",
    "output": "select park from roller_coaster order by speed desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "What is the product ID for food? | select product_id from products where product_name = 'food' | What are the order IDs that have those product IDs?",
    "label": "CONFIRM_SQL",
    "output": "select order_items.order_id from products join order_items where products.product_id = order_items.product_id and products.product_name = 'food'"
  },
  {
    "db_id": "tracking_orders",
    "input": "What customer IDs have those order IDs? | select orders.customer_id from products join order_items join orders where products.product_id = order_items.product_id and products.product_name = 'food' and orders.order_id = order_items.order_id | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "protein_institute",
    "input": "Show institution names along with the number of proteins for each institution | select institution.institution , count ( * ) from institution join protein on institution.institution_id = protein.institution_id group by institution.institution_id | What proteins are associated with Lindenwood University-Belleville?",
    "label": "CONFIRM_SQL",
    "output": "select protein.protein_name from institution join protein on institution.institution_id = protein.institution_id where institution.institution = 'Lindenwood University–Belleville'"
  },
  {
    "db_id": "protein_institute",
    "input": "The protein names associated with the institute Lindenwood University-Belleville are here. | Between Centromeric protein E, putative and conserved hypothetical protein, which has the highest divergence from human lineage? | select divergence_from_human_lineage from protein where protein_name = 'Centromeric protein E, putative' or protein_name = 'conserved hypothetical protein'",
    "label": null,
    "output": "Here shows the divergence from human lineage for Centromeric protein E, putative and conserved hypothetical protein. They have the same divergence from human lineage of 782.7"
  },
  {
    "db_id": "protein_institute",
    "input": "What is the accession number for Centromeric protein E? | select accession_number from protein where protein_name = 'Centromeric protein E, putative' | What is the sequence identity to human protein value associated with accession number XP_002429877.1",
    "label": "CONFIRM_SQL",
    "output": "select sequence_identity_to_human_protein from protein where accession_number = 'XP_002429877.1'"
  },
  {
    "db_id": "small_bank_1",
    "input": "Do you want the id of that customer? | Yes! | Can you show me the number of customers?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct custid ) from accounts"
  },
  {
    "db_id": "small_bank_1",
    "input": "how about the number of checking accounts? | select count ( * ) from checking | what's the lowest balance of a savings account?",
    "label": "CONFIRM_SQL",
    "output": "select min ( balance ) from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "who owns that account? | select savings.custid from accounts join savings on accounts.custid = savings.custid order by savings.balance asc limit 1 | what's the checking balance of that person?",
    "label": "CONFIRM_SQL",
    "output": "select checking.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by savings.balance asc limit 1"
  },
  {
    "db_id": "bike_1",
    "input": "What is the station name for the id's 1 and  2 ? | select name , id from station where id = 1 or id = 2 | Which station has dock count higher than 15...",
    "label": "CLARIFY",
    "output": "Would you like to know the station name or all the information? "
  },
  {
    "db_id": "bike_1",
    "input": "What are the ids of station that have latitude above 37.4 and never had bike availability below 7 ? | select id from station where lat > 37.4 except select station_id from status group by station_id having min ( bikes_available ) < 7 | Tell me the installation date for the station id 4 ?",
    "label": "CONFIRM_SQL",
    "output": "select installation_date from station where id = 4"
  },
  {
    "db_id": "wedding",
    "input": "How many women are there? | select count ( * ) from people where is_male = 'F' | And men?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where is_male = 'T'"
  },
  {
    "db_id": "wedding",
    "input": "There are 6 males? | select count ( * ) from people where is_male = 'T' | How many people are there over the age of 30?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where age > 30"
  },
  {
    "db_id": "wedding",
    "input": "How many of them are women? | select count ( * ) from people where is_male = 'F' and age > 30 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "customer_deliveries",
    "input": "Find the name of route that has the lowest number of deliveries? | select delivery_routes.route_name from delivery_routes join delivery_route_locations on delivery_routes.route_id = delivery_route_locations.route_id group by delivery_routes.route_id order by count ( * ) desc limit 1 | How many location names in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct location_code ) from delivery_route_locations"
  },
  {
    "db_id": "customer_deliveries",
    "input": "How many route names in this table? | select count ( route_name ) from delivery_routes | How many delivery route location in this table?",
    "label": "CONFIRM_SQL",
    "output": "select delivery_route_locations.location_code , count ( * ) from delivery_routes join delivery_route_locations on delivery_routes.route_id = delivery_route_locations.route_id"
  },
  {
    "db_id": "game_1",
    "input": "which students are female? | Do you want the ids of students who are female? | yes",
    "label": "CONFIRM_SQL",
    "output": "select stuid from student where sex = 'F'"
  },
  {
    "db_id": "game_1",
    "input": "now give me the student ids of people who play football | select stuid from sportsinfo where sportname = 'Football' | show me the ids of the students that are both female and play football",
    "label": "CONFIRM_SQL",
    "output": "select stuid from student where sex = 'F' intersect select stuid from sportsinfo where sportname = 'Football'"
  },
  {
    "db_id": "store_1",
    "input": "What are all the tracks? | select * from tracks | Which tracks are on the Movies Playlist?\n",
    "label": "CONFIRM_SQL",
    "output": "select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlist_tracks.playlist_id = playlists.id where playlists.name = 'Movies'"
  },
  {
    "db_id": "store_1",
    "input": "Which tracks are not in the music playlist? | select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlist_tracks.playlist_id = playlists.id where playlists.name != 'Music' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "school_bus",
    "input": "what are the names of all drivers?  | select name from driver | also give me their driver ids",
    "label": "CONFIRM_SQL",
    "output": "select name , driver_id from driver"
  },
  {
    "db_id": "school_bus",
    "input": "what are the number of years for working for each driver and their names?  | select driver.name , school_bus.years_working from driver join school_bus where driver.driver_id = school_bus.driver_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "sakila_1",
    "input": "Show me the name of the film with film id 1? | Do  you  mean  the title in the  table  file | yes",
    "label": "CONFIRM_SQL",
    "output": "select title from film where film_id = 1"
  },
  {
    "db_id": "sakila_1",
    "input": "Show all the films longer than 100 minutes? | do  you  mean  the films id  ? | yes",
    "label": "CONFIRM_SQL",
    "output": "select film_id from film where length > 100"
  },
  {
    "db_id": "sakila_1",
    "input": "SELECT film_id\t FROM film  WHERE LENGTH > 100 | Show me the name of all the films with release year 2006? | select title from film where release_year = 2006",
    "label": "INFORM_SQL",
    "output": "Show the names of all films except those who cost more than 200 for replacement?"
  },
  {
    "db_id": "student_assessment",
    "input": "How many students are there? | select count ( student_id ) from student_course_registrations | what about courses?",
    "label": "CONFIRM_SQL",
    "output": "select count ( course_id ) from student_course_registrations"
  },
  {
    "db_id": "student_assessment",
    "input": "How many students registered the least number of courses? | Sorry I cannot answer this question. | how many students registered for just one course",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select student_id from student_course_registrations group by student_id having count ( * ) = 1 )"
  },
  {
    "db_id": "student_assessment",
    "input": "what are their ids? | select student_id from student_course_registrations group by student_id having count ( * ) = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "soccer_2",
    "input": "How many different positions are there? | select count ( distinct ppos ) from tryout | How many students have more than 1000 hours of training?",
    "label": "CONFIRM_SQL",
    "output": "select * from player where hs > 1000"
  },
  {
    "db_id": "soccer_2",
    "input": "How many hours of training has the student with the most hours completed? | select hs from player order by hs desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "store_1",
    "input": "what is the id of balls to the walls | select distinct tracks.id from albums join tracks on albums.id = tracks.genre_id where albums.title = 'Balls to the Wall' | what is the name of all tracks in balls to wall",
    "label": "CONFIRM_SQL",
    "output": "select tracks.name from albums join tracks on albums.id = tracks.genre_id where albums.title = 'Balls to the Wall'"
  },
  {
    "db_id": "store_1",
    "input": "name the composer of balls to wall | * I have left the chat * | select distinct tracks.composer from albums join tracks on albums.id = tracks.genre_id where albums.title = 'Balls to the Wall'",
    "label": "THANK_YOU",
    "output": "thanks"
  },
  {
    "db_id": "match_season",
    "input": "Show the players and years played for players from team \"Columbus Crew\". | select player.player , player.years_played from player join team on player.team = team.team_id where team.name = 'Columbus Crew' | What is Hong's singles record?",
    "label": "CONFIRM_SQL",
    "output": "select singles_wl from player where player like '%Hong%'"
  },
  {
    "db_id": "match_season",
    "input": "Is Hong the only player with a 0-0 singles record? | select player from player where singles_wl like '%0–0%' | No. Seol Jae-Min also has a 0-0 singles record",
    "label": null,
    "output": "Has Seol Jae-Min played any doubles matches?"
  },
  {
    "db_id": "match_season",
    "input": "SELECT doubles_WL from player where player like \"%Seol Jae-Min%\" | Yes. Here is his double match record, which is  2–2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks! Bye"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Add a column for monthly rental to the table Addresses | i cannot understand your question, can you give more information? thanks | What's the highest monthly rental in the table Student Addresses?",
    "label": "CONFIRM_SQL",
    "output": "select monthly_rental from student_addresses order by monthly_rental desc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "And what is the zip postcode of the address with monthly rental 1297.807? | select addresses.zip_postcode from addresses join student_addresses on addresses.address_id = student_addresses.address_id where student_addresses.monthly_rental = 1297.807 | And can you also tell me the line 1 value from the table Addresses for the same property?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.line_1 from addresses join student_addresses on addresses.address_id = student_addresses.address_id where student_addresses.monthly_rental = 1297.807"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Hmmm...can you also please tell me the address id for this same property? | select addresses.address_id from addresses join student_addresses on addresses.address_id = student_addresses.address_id where student_addresses.monthly_rental = 1297.807 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "program_share",
    "input": "how many broadcast are presented on the table | select count ( * ) from broadcast | what are all the channel are presented on the table",
    "label": "CONFIRM_SQL",
    "output": "select * from channel"
  },
  {
    "db_id": "program_share",
    "input": "what is the owner name of CCTV-1 | select owner from channel where name = 'CCTV-1' | which channel are highest rating percent on the table",
    "label": "CONFIRM_SQL",
    "output": "select name from channel where rating_in_percent = ( select max ( rating_in_percent ) from channel )"
  },
  {
    "db_id": "bike_1",
    "input": "how many statuses are there | select count ( * ) from status | what is the city of San Jose Civic Center",
    "label": "CONFIRM_SQL",
    "output": "select city from station where name = 'San Jose Civic Center'"
  },
  {
    "db_id": "bike_1",
    "input": "how many stations there | select count ( * ) from station | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "storm_record",
    "input": "What is the region id for region name Denmark? | select region_id from region where region_name = 'Denmark' | Show me all storm ids affecting a region id of 12.",
    "label": "CONFIRM_SQL",
    "output": "select storm.storm_id from affected_region join region on affected_region.region_id = region.region_id join storm on affected_region.storm_id = storm.storm_id where region.region_name = 'Denmark'"
  },
  {
    "db_id": "storm_record",
    "input": "What is the name of this storm? | select storm.name from affected_region join region on affected_region.region_id = region.region_id join storm on affected_region.storm_id = storm.storm_id where region.region_name = 'Denmark' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "hr_1",
    "input": "HoW MANY employees have the letter z in their first name? | select count ( * ) from employees where first_name like '%z%' | What are their first names?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from employees where first_name like '%z%'"
  },
  {
    "db_id": "hr_1",
    "input": "What about their last names?\n | select first_name , last_name from employees where first_name like '%z%' | Can you also show their cities?",
    "label": "CONFIRM_SQL",
    "output": "select employees.first_name , employees.last_name , locations.city from employees join departments on employees.department_id = departments.department_id join locations on departments.location_id = locations.location_id where employees.first_name like '%z%'"
  },
  {
    "db_id": "farm",
    "input": "Out of all the farms, what are the maximum and minimum numbers of cows? | select max ( cows ) , min ( cows ) from farm | And for horses?",
    "label": "CLARIFY",
    "output": "Do you mean total horses or working horses?"
  },
  {
    "db_id": "farm",
    "input": "total horses\n | select max ( total_horses ) , min ( total_horses ) from farm | Are there more horses than cows on farm id 2 ",
    "label": "CONFIRM_SQL",
    "output": "select total_horses , cows from farm where farm_id = 2"
  },
  {
    "db_id": "farm",
    "input": "How many more oxen are there than cattle on farm id 1 | select oxen , total_cattle from farm where farm_id = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "sports_competition",
    "input": "Find the countries that have never participated in any competition with Friendly type | select country from competition except select country from competition where competition_type = 'Friendly' | Thanks!",
    "label": "WELCOME",
    "output": "welcome"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How many employees have the role name Editor? | select employees.employee_name from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Editor' | Can you list their names in this chat box?",
    "label": "CONFIRM_SQL",
    "output": "select employees.employee_name from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Editor'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How many have a DOB after 1978? | select count ( * ) from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Editor' and employees.date_of_birth > 1978 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Do you have any more questions?"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What percentage of total employees are editors? | select ( count ( * ) * 100 / ( select count ( * ) from employees ) ) from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Editor' | Ok, that's all. Thanks!",
    "label": "GOOD_BYE",
    "output": "Good bye!"
  },
  {
    "db_id": "loan_1",
    "input": "hello. Can you tell me the number of states in which there are customers? | select count ( state ) from bank where no_of_customers > 0 | and what states are they, please?",
    "label": "CLARIFY",
    "output": "Do you mean the states of all the branches?"
  },
  {
    "db_id": "loan_1",
    "input": "what are the four states in which there are customers ? | select state from bank where no_of_customers > 0 | and which of those states has the most number of customers?",
    "label": "CONFIRM_SQL",
    "output": "select state from bank group by state order by sum ( no_of_customers ) desc limit 1"
  },
  {
    "db_id": "swimming",
    "input": "Can you list the swimmer names and their times? | select name , time from swimmer | Hmm, I also want to know their record times and the related events.",
    "label": "CONFIRM_SQL",
    "output": "select swimmer.time , record.event_id from swimmer join record on swimmer.id = record.swimmer_id"
  },
  {
    "db_id": "swimming",
    "input": "Please tell me the name of the swimmer who has at least 2 records. | select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id group by record.swimmer_id having count ( * ) >= 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "movie_1",
    "input": "How many movies are in the list?\n | select count ( * ) from movie | How many directors are on the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( director ) from movie"
  },
  {
    "db_id": "movie_1",
    "input": "How many of the directors have more than 1 film? | select count ( distinct movie.director ) from movie join movie on movie.director = movie.director where movie.title != movie.title | What are the titles from those 2 directors?\n",
    "label": "CONFIRM_SQL",
    "output": "select movie.title from movie join movie on movie.director = movie.director where movie.title != movie.title"
  },
  {
    "db_id": "movie_1",
    "input": "What are the years each of these movies were produced? | select movie.year from movie join movie on movie.director = movie.director where movie.title != movie.title | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Would you show the transaction type descriptions if the share count is smaller than 10? | select ref_transaction_types.transaction_type_description from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count < 10 | What are the dates of those?",
    "label": "CONFIRM_SQL",
    "output": "select transactions.date_of_transaction from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count < 10"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What were the amounts of those transactions? | select transactions.amount_of_transaction from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count < 10 | Would you show the transaction type descriptions if the share count is equal to or larger than 10?",
    "label": "CONFIRM_SQL",
    "output": "select ref_transaction_types.transaction_type_description from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count >= 10"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What were the dates of those transactions? | Do you mean the transactions with share count equal to or larger than 10? | Yes please, if you don't mind?",
    "label": "CONFIRM_SQL",
    "output": "select transactions.date_of_transaction from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count >= 10"
  },
  {
    "db_id": "small_bank_1",
    "input": "Can you tell me the average checking balance of all checking accounts? | select avg ( balance ) from checking | Hmm, I also want to know the average savings balance of all savings accounts.",
    "label": "CONFIRM_SQL",
    "output": "select avg ( balance ) from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "Can you list the names of accounts whose checking balance is above the average checking balance, but savings balance is below the average savings balance? | select accounts.name from accounts join checking on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from checking ) intersect select accounts.name from accounts join savings on accounts.custid = savings.custid where savings.balance < ( select avg ( balance ) from savings ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "aircraft",
    "input": "Tell me the Location and Country of the Round 1 ? | select location , country from match where round = '1.0' | What is the pilot id of Prof. Zackery Collins ?",
    "label": "CONFIRM_SQL",
    "output": "select pilot_id from pilot where name = 'Prof. Zackery Collins'"
  },
  {
    "db_id": "aircraft",
    "input": "What is the name and age of the youngest winning pilot... | select pilot.name , pilot.age from pilot join match on pilot.pilot_id = match.winning_pilot order by pilot.age asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "storm_record",
    "input": "What is the storm name of the storm that affected the greatest number of regions? | select storm.name , storm.max_speed from storm join affected_region on storm.storm_id = affected_region.storm_id group by storm.storm_id order by count ( * ) desc limit 1 | What is the name of the storm with the lowest speed?",
    "label": "CONFIRM_SQL",
    "output": "select storm.name from storm join affected_region on storm.storm_id = affected_region.storm_id order by max_speed asc limit 1"
  },
  {
    "db_id": "storm_record",
    "input": "What were its dates active? | select storm.dates_active from storm join affected_region on storm.storm_id = affected_region.storm_id where storm.name = 'Four' | What is the average speed of all the storms?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( max_speed ) from storm"
  },
  {
    "db_id": "storm_record",
    "input": "What's the average damage in millions usd for all storms? | select avg ( damage_millions_usd ) from storm join affected_region on storm.storm_id = affected_region.storm_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "Hello. What is the name of the employee that has showed up the most in circulation history documents? | select employees.employee_name from employees join circulation_history on circulation_history.employee_id = employees.employee_id group by employees.employee_name order by count ( * ) desc limit 1 | How many drafts have they shown up in?",
    "label": "CONFIRM_SQL",
    "output": "select employees.employee_name , sum ( circulation_history.draft_number ) from employees join circulation_history on circulation_history.employee_id = employees.employee_id group by circulation_history.document_id , circulation_history.draft_number , circulation_history.copy_number order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "How many copies have they shown up in? | select sum ( circulation_history.copy_number ) from employees join circulation_history on circulation_history.employee_id = employees.employee_id group by circulation_history.document_id , circulation_history.draft_number , circulation_history.copy_number order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you list the apartment type code for each entry? | select apt_type_code from apartments | Can you add to the table the room count for each entry?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code , room_count from apartments"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you find the entries with the highest room count and only keep those in the table? | And still return the apartment type code and the room count? | Yes, only for those entries with the highest room count.",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code , room_count from apartments order by room_count desc limit 1"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Sorry, I think I misunderstood the question. Can you display only the apartment type codes again for each entry? | select apt_type_code from apartments | Can you add up the room counts for each distinct apartment type code and display those values along with their respective department type codes?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code , sum ( room_count ) from apartments group by apt_type_code"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Amazing! Can you do add up the bathroom counts and bedroom counts for the department type Flat and add those to the table? | select apt_type_code , sum ( room_count ) , sum ( bathroom_count ) , sum ( bedroom_count ) from apartments where apt_type_code = 'Flat' | Yes! Thanks!",
    "label": "WELCOME",
    "output": "You're welcome! Goodbye."
  },
  {
    "db_id": "customer_complaints",
    "input": "Who has filed the least amounts of complaints? | select distinct customers.customer_id from products join complaints on products.product_id = complaints.product_id join customers group by customers.customer_id order by count ( * ) asc limit 1 | Which product have they complained about?",
    "label": "CLARIFY",
    "output": "Who do you mean by \"they\"?"
  },
  {
    "db_id": "customer_complaints",
    "input": "Customer, 113. | select distinct products.product_name from products join complaints on products.product_id = complaints.product_id join customers group by customers.customer_id having customers.customer_id = '113' | Is the complaint closed?",
    "label": "CONFIRM_SQL",
    "output": "select distinct products.product_name , complaints.complaint_status_code from products join complaints on products.product_id = complaints.product_id join customers group by customers.customer_id having customers.customer_id = '113'"
  },
  {
    "db_id": "store_1",
    "input": "Can you list the top 8 countries for me? | sorry I have no answer to this. Could you give more info? | What are the names of the 8 countries with the greatest gross invoice size?",
    "label": "CLARIFY",
    "output": "Can  you  give details  about the countries? Do you mean billing country?"
  },
  {
    "db_id": "store_1",
    "input": "Yes | select billing_country from invoices group by billing_country order by sum ( total ) desc limit 8 | Can you tell me which billing city has the letter \"O\" in its name please?",
    "label": "CONFIRM_SQL",
    "output": "select billing_city from invoices where billing_city like '%O%'"
  },
  {
    "db_id": "store_1",
    "input": "Can you tell me the billing addresses located in the billing city Boston? | select distinct billing_address from invoices where billing_city = 'Boston' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome and goodbye"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "list the name of the claim processing stage that most of the claims are on | select claims_processing_stages.claim_status_name from claims_processing join claims_processing_stages on claims_processing.claim_stage_id = claims_processing_stages.claim_stage_id group by claims_processing.claim_stage_id order by count ( * ) desc limit 1 | what is the claim id of open",
    "label": "CONFIRM_SQL",
    "output": "select claim_id from claims_processing_stages join claims_processing on claims_processing_stages.claim_stage_id = claims_processing.claim_stage_id where claim_status_name = 'Open'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "include claim stage id in the table | Do you wanna see all the claim stage ids? | yes please",
    "label": "CONFIRM_SQL",
    "output": "select distinct claim_stage_id from claims_processing"
  },
  {
    "db_id": "tracking_orders",
    "input": "show a list of the invoice numbers | select invoice_number from shipments | add a column for order id",
    "label": "CONFIRM_SQL",
    "output": "select invoice_number , order_id from shipments"
  },
  {
    "db_id": "tracking_orders",
    "input": "show the date order placed for order id 9 | select date_order_placed from orders where order_id = 9 | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and bye "
  },
  {
    "db_id": "store_product",
    "input": "Do we have any products that do not use A4 page size? | select count ( product ) from product where max_page_size != 'A4' | What are the names of those products?",
    "label": "CONFIRM_SQL",
    "output": "select product from product where max_page_size != 'A4'"
  },
  {
    "db_id": "store_product",
    "input": "What page size do those products use? | select max_page_size from product where max_page_size != 'A4' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "phone_1",
    "input": "List the name of the company that produces more than one phone model. | select company_name from phone group by company_name having count ( * ) > 1 | Hmmm. Please list the name of the company that produces only one phone model.\n",
    "label": "CONFIRM_SQL",
    "output": "select company_name from phone group by company_name having count ( * ) = 1"
  },
  {
    "db_id": "phone_1",
    "input": "Ok. Can you show me the models produced by Nokia Corporation? | select hardware_model_name from phone where company_name = 'Nokia Corporation' | Can you also show me the phone models produced by Samsung?",
    "label": "CONFIRM_SQL",
    "output": "select hardware_model_name from phone where company_name = 'Nokia Corporation' or company_name = 'Samsung Electronics Co Ltd'"
  },
  {
    "db_id": "loan_1",
    "input": "What are the names of the bank branches? | select bname from bank | Which bank branches provide business loans?",
    "label": "CLARIFY",
    "output": "do you want the id or the name of the bank branches?"
  },
  {
    "db_id": "loan_1",
    "input": "Names of the bank branches please. | select bank.bname from bank join loan on bank.branch_id = loan.branch_id where loan.loan_type = 'Business' | What is the city of the bank branch that provides business loans?",
    "label": "CONFIRM_SQL",
    "output": "select bank.city from bank join loan on bank.branch_id = loan.branch_id where loan.loan_type = 'Business'"
  },
  {
    "db_id": "party_host",
    "input": "Show me a list of party themes | select party_theme from party | Can you show me the corresponding party id and host id to each theme?",
    "label": "CONFIRM_SQL",
    "output": "select party_host.party_id , party_host.host_id , party.party_theme from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id"
  },
  {
    "db_id": "party_host",
    "input": "Can you add host names to that table? | select host.name , party_host.party_id , party_host.host_id , party.party_theme from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "icfp_1",
    "input": "Which country published the least papers? | select inst.country from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.country order by count ( * ) asc limit 1 | How about country with most papers?",
    "label": "CONFIRM_SQL",
    "output": "select inst.country from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.country order by count ( * ) desc limit 1"
  },
  {
    "db_id": "icfp_1",
    "input": "How many papers did it publish? | select count ( papers.paperid ) from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.country order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "store_product",
    "input": "Hi there!  Can you show me a list of all store IDs along with the associated store names? | select store_id , store_name from store | Thanks for that!  Can you filter this list to show only the Store ID and Store Name for stores with a district name of Khanewal District?",
    "label": "CONFIRM_SQL",
    "output": "select store.store_id , store.store_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where district.district_name = 'Khanewal District'"
  },
  {
    "db_id": "store_product",
    "input": "Awesome!  Can you update this list to show the ratings of these two stores as well? | I don't have ratings for these two stores. Do you mean by ranking instead? | Yes please!  That's what I meant!",
    "label": "CONFIRM_SQL",
    "output": "select store.store_id , store.store_name , store.ranking from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where district.district_name = 'Khanewal District'"
  },
  {
    "db_id": "store_product",
    "input": "Thanks! | No problem! | Thanks again!  Is there anything else that I am supposed to do?",
    "label": "WELCOME",
    "output": "No problem! If you have more questions you can keep asking, if no you can just say bye and leave."
  },
  {
    "db_id": "game_injury",
    "input": "Did you mean the injury associated with the player Maicon? | Yes | how many game are there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from game"
  },
  {
    "db_id": "game_injury",
    "input": "What injury had maicon | select injury from injury_accident where player = 'Maicon' | how may total attendance have fedexfield",
    "label": "CONFIRM_SQL",
    "output": "select total_attendance from stadium where name = 'FedExField'"
  },
  {
    "db_id": "voter_2",
    "input": "Find the distinct last names of all the students who have president votes and whose advisor is 8741 | select distinct student.lname from student join voting_record on student.stuid = president_vote intersect select distinct lname from student where advisor = '8741' | Give me the name for the student 1001",
    "label": "CLARIFY",
    "output": "Do you want the last name or first name?"
  },
  {
    "db_id": "voter_2",
    "input": "first name and the last name please | select lname , fname from student where stuid = '1001' | can you give me the students with president vote 1004",
    "label": "CLARIFY",
    "output": "What attributes of that student do you want?"
  },
  {
    "db_id": "voter_2",
    "input": "first and last names please | select student.lname , student.fname from student join voting_record on student.stuid = voting_record.stuid where voting_record.president_vote = '1004' | Can you give me the first and last names for students with Vice President vote 1017",
    "label": "CONFIRM_SQL",
    "output": "select student.lname , student.fname from student join voting_record on student.stuid = voting_record.stuid where voting_record.vice_president_vote = '1007'"
  },
  {
    "db_id": "voter_2",
    "input": "Give me the age for Linda Smith  | select age from student where lname = 'Smith' and fname = 'Linda' | Give me the names of all the students",
    "label": "CONFIRM_SQL",
    "output": "select lname , fname from student"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "How are you!  Can you provide me with a list of all of the \nmaster customer ids and corresponding cmi details? | select master_customer_id , cmi_details from customer_master_index | This is great!  Can you update this list to also show the corresponding  cmi cross reference ids for each line of this list?",
    "label": "CONFIRM_SQL",
    "output": "select customer_master_index.master_customer_id , customer_master_index.cmi_details , cmi_cross_references.cmi_cross_ref_id from customer_master_index join cmi_cross_references on customer_master_index.master_customer_id = cmi_cross_references.master_customer_id"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "Can you filter this list so that the only rows that are displayed are those containing \"Gottlieb, Becker and Wyman\"? | select customer_master_index.master_customer_id , customer_master_index.cmi_details , cmi_cross_references.cmi_cross_ref_id from customer_master_index join cmi_cross_references on customer_master_index.master_customer_id = cmi_cross_references.master_customer_id where customer_master_index.cmi_details = 'Gottlieb, Becker and Wyman' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "browser_web",
    "input": "What is the maximum market share of the browsers? | select max ( market_share ) from browser | What is the minimum market share of all browsers?",
    "label": "CONFIRM_SQL",
    "output": "select min ( market_share ) from browser"
  },
  {
    "db_id": "browser_web",
    "input": "What is the average market share of all browsers? | select avg ( market_share ) from browser | Can you list the names of all browsers that have market shares above the average?",
    "label": "CONFIRM_SQL",
    "output": "select name from browser where market_share > ( select avg ( market_share ) from browser )"
  },
  {
    "db_id": "gas_company",
    "input": "What is the profits billion of Company ExonMobil? | select profits_billion from company where company = 'ExxonMobil' | What is the name of the company which has market value 213.7?",
    "label": "CONFIRM_SQL",
    "output": "select company from company where market_value = 213.7"
  },
  {
    "db_id": "gas_company",
    "input": "Where is the headquarters  of the company general electric? | select headquarters from company where company = 'General Electric' | What is the assets billion of Royal Dutch shell?",
    "label": "CONFIRM_SQL",
    "output": "select assets_billion from company where company = 'Royal Dutch Shell'"
  },
  {
    "db_id": "store_1",
    "input": "Find me the 5 customers who most recently purchased something. | What information about the customer do you need? | I need the first name and last name please",
    "label": "CONFIRM_SQL",
    "output": "select customers.first_name , customers.last_name from customers join invoices on invoices.customer_id = customers.id order by invoices.invoice_date desc limit 5"
  },
  {
    "db_id": "store_1",
    "input": "How about their cities and states? | select customers.first_name , customers.last_name , customers.city , customers.state from customers join invoices on invoices.customer_id = customers.id order by invoices.invoice_date desc limit 5 | Can you also give me the countries?",
    "label": "CONFIRM_SQL",
    "output": "select customers.first_name , customers.last_name , customers.city , customers.state , customers.country from customers join invoices on invoices.customer_id = customers.id order by invoices.invoice_date desc limit 5"
  },
  {
    "db_id": "store_1",
    "input": "How about their e-mail addresses? | select customers.email from customers join invoices on invoices.customer_id = customers.id order by invoices.invoice_date desc limit 5 | Thanks!\n",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Do you mean the first name and last name of the person who reported a problem on 1976-12-18 23:54:41? | Yes | Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
    "label": "CONFIRM_SQL",
    "output": "select problems.problem_description from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_first_name = 'Christop'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the date date problem reported of w? | Sorry, what is date date problem? | What is the date problem reported of w?",
    "label": "CONFIRM_SQL",
    "output": "select problems.date_problem_reported from problems join problems where problems.problem_description = 'w'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the name of the person who reported a problem on 1976-12-18 23:54:41? | select problems.staff_first_name , problems.staff_last_name from problems join problems where problems.date_problem_reported = '1976-12-18 23:54:41' and problems.reported_by_staff_id = problems.staff_id | What are her other staff details?",
    "label": "CONFIRM_SQL",
    "output": "select staff.other_staff_details from problems join staff where problems.date_problem_reported = '1976-12-18 23:54:41' and problems.reported_by_staff_id = staff.staff_id"
  },
  {
    "db_id": "college_2",
    "input": "Which department has the highest amount of students? | select dept_name from student group by dept_name order by count ( * ) desc limit 1 | What is the average GPA?",
    "label": "REJECT",
    "output": "Sorry, I cannot answer that question."
  },
  {
    "db_id": "college_2",
    "input": "Do you know the total credits for the Civil Eng. Department? | Did you want the sum of total credits across all students in the Civil Eng. department? | Sure.",
    "label": "CONFIRM_SQL",
    "output": "select sum ( tot_cred ) from student where dept_name = 'Civil Eng.'"
  },
  {
    "db_id": "college_2",
    "input": "Who is the department head? | Sorry, I cannot answer that question.  | Ok, do you know the ID number for the department?",
    "label": "CLARIFY",
    "output": "Did you want the ID numbers for the students in the Civil Eng. department?"
  },
  {
    "db_id": "college_2",
    "input": "please\n | select id from student where dept_name = 'Civil Eng.' | Thanks!!!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "store_1",
    "input": "How many albums are there | select count ( * ) from albums | How many have fewer than ten tracks?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select count ( * ) from albums join tracks on albums.id = tracks.album_id group by albums.id having count ( albums.id ) < 10 )"
  },
  {
    "db_id": "phone_1",
    "input": "How many phones are on the list? | select count ( * ) from phone | How many different chip models are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from chip_model"
  },
  {
    "db_id": "phone_1",
    "input": "Do all phones models have full accreditation? | select * from phone where accreditation_type != 'Full' | How many chip models are not being used in phones with full accreditation?",
    "label": "CONFIRM_SQL",
    "output": "select model_name from chip_model except select chip_model from phone where accreditation_type = 'Full'"
  },
  {
    "db_id": "phone_1",
    "input": "What are the names of the chip models not used in full accreditation phones? | select model_name from chip_model except select chip_model from phone where accreditation_type = 'Full' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "department_store",
    "input": "Can you find the name of the most expensive hardware product please? | select product_name from products where product_type_code = 'Hardware' order by product_price desc limit 1 | What is its product price?",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_type_code = 'Hardware' order by product_price desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "What is the product name and price for the least expensive hardware product? | select product_name , product_price from products where product_type_code = 'Hardware' order by product_price asc limit 1 | What is the average price of all hardware products?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( product_price ) from products where product_type_code = 'Hardware'"
  },
  {
    "db_id": "department_store",
    "input": "What is the average price of all clothes products? | select avg ( product_price ) from products where product_type_code = 'Clothes' | Thanks!",
    "label": "WELCOME",
    "output": "Sure. You are welcome! Bye!"
  },
  {
    "db_id": "shop_membership",
    "input": "Show member names with a registered branch? | select name from member where member_id in ( select member_id from membership_register_branch ) | Show member names without any registered branch?",
    "label": "CONFIRM_SQL",
    "output": "select name from member where member_id not in ( select member_id from membership_register_branch )"
  },
  {
    "db_id": "shop_membership",
    "input": "What is the total number of branches? | select count ( distinct branch_id ) from membership_register_branch | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "riding_club",
    "input": "What are the names of all players? | select player_name from player | What are the names of their coaches?",
    "label": "CLARIFY",
    "output": "Do you mean list the names of players and names of their coaches together?"
  },
  {
    "db_id": "riding_club",
    "input": "Yes | select player.player_name , coach.coach_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id | What are their sponsor names?",
    "label": "CONFIRM_SQL",
    "output": "select player.sponsor_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id"
  },
  {
    "db_id": "riding_club",
    "input": "What is the gender of the sponsors? | select player.gender from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id | Thanks",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "allergy_1",
    "input": "Most number of students affected by which allergy? | select allergy from has_allergy group by allergy order by count ( * ) desc limit 1 | Which allergy affects student ID 1001",
    "label": "CONFIRM_SQL",
    "output": "select allergy from has_allergy where stuid = 1001"
  },
  {
    "db_id": "allergy_1",
    "input": "Which allergy affects student ID 1002 | select allergy from has_allergy where stuid = 1002 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what are the sale?\n | select * from transactions | How many purchase in this above the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from transactions"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what is the purchase investor Id? | select investor_id from transactions | thanks!\n",
    "label": "WELCOME",
    "output": "you are welcome."
  },
  {
    "db_id": "manufactory_1",
    "input": "can you show me Manufacturers' name that starting with 'S'? | Sorry, I cannot answer. Please change\n | can you show me a list of headquarters?",
    "label": "CONFIRM_SQL",
    "output": "select headquarter from manufacturers"
  },
  {
    "db_id": "manufactory_1",
    "input": "can you show me list of founders? | select founder from manufacturers | can you show me an average of revenue?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( revenue ) from manufacturers"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "how many employees there | select count ( * ) from employees | what is the planned destruction date of document ID 11",
    "label": "CONFIRM_SQL",
    "output": "select planned_destruction_date from documents_to_be_destroyed where document_id = 11"
  },
  {
    "db_id": "network_2",
    "input": "Who is the person that has no friend? | select name from person except select name from personfriend | What is the job occupation of Zach?",
    "label": "CONFIRM_SQL",
    "output": "select job from person where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "What is difference between person table and person friend table? | I cannot answer this question using SQL.  Would you like to ask anything else? | Thanks",
    "label": "GOOD_BYE",
    "output": "Thank you!  Goodbye."
  },
  {
    "db_id": "university_basketball",
    "input": "what location are the clemson teams? | select university.location from university join basketball_match on university.school_id = basketball_match.school_id where team_name = 'Clemson' | what scores were Clemson's home games?",
    "label": "CONFIRM_SQL",
    "output": "select basketball_match.all_home from university join basketball_match on university.school_id = basketball_match.school_id where team_name = 'Clemson'"
  },
  {
    "db_id": "university_basketball",
    "input": "How about the road game scores for Clemson? | select basketball_match.all_road from university join basketball_match on university.school_id = basketball_match.school_id where team_name = 'Clemson' | What about all games score for the Clemson school?",
    "label": "CONFIRM_SQL",
    "output": "select basketball_match.all_games from university join basketball_match on university.school_id = basketball_match.school_id where team_name = 'Clemson'"
  },
  {
    "db_id": "university_basketball",
    "input": "How about for the Duke school? | select basketball_match.all_games from university join basketball_match on university.school_id = basketball_match.school_id where team_name = 'Duke' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "e_government",
    "input": "Find the name of all the cities and states. | you want the columns of town_city and state_province_county,right? | Umm. Give me the names and the states please",
    "label": "CONFIRM_SQL",
    "output": "select town_city from addresses union select state_province_county from addresses"
  },
  {
    "db_id": "e_government",
    "input": "Can you give me the zip_postcode for Colorado | select zip_postcode from addresses where state_province_county = 'Colorado' | Give me the cities where the state is Colorado",
    "label": "CONFIRM_SQL",
    "output": "select town_city from addresses where state_province_county = 'Colorado'"
  },
  {
    "db_id": "e_government",
    "input": "Ok. Can you give me the cities where the state is NorthCarolina | select town_city from addresses where state_province_county = 'NorthCarolina' | Give me all the zipcodes",
    "label": "CONFIRM_SQL",
    "output": "select zip_postcode from addresses"
  },
  {
    "db_id": "election",
    "input": "Which committees have delegates from the democratic party? | select election.committee from election join party on election.party = party.party_id where party.party = 'Democratic' | Which committees have delegates from the liberal party?",
    "label": "CONFIRM_SQL",
    "output": "select election.committee from election join party on election.party = party.party_id where party.party = 'Liberal'"
  },
  {
    "db_id": "election",
    "input": "Which committees have delegates from both parties, please? | select election.committee from election join party on election.party = party.party_id where party.party = 'Democratic' intersect select election.committee from election join party on election.party = party.party_id where party.party = 'Liberal' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "college_2",
    "input": "List all instructors who taught a class in Fall 2009 | Did you  mean the  instructor IDs who taught a class in Fall 2009 | yes",
    "label": "CONFIRM_SQL",
    "output": "select id from teaches where semester = 'Fall' and year = 2009"
  },
  {
    "db_id": "college_2",
    "input": "Remove all instructor IDs who did not teach in Spring 2010 from the list. | Did  you  mean  retain  the instructor IDs who  both teach in Spring 2010   and  in Fall 2009 | Retain the instructor IDs who did not teach in Spring 2010 but did teach in Fall 2009",
    "label": "CONFIRM_SQL",
    "output": "select id from teaches where semester = 'Fall' and year = 2009 except select id from teaches where semester = 'Spring' and year = 2010"
  },
  {
    "db_id": "college_2",
    "input": "Thanks! | Do  you  have  more  question? | no",
    "label": "WELCOME",
    "output": "you are welcome  and bye "
  },
  {
    "db_id": "loan_1",
    "input": "How many customers in this table? | select count ( cust_name ) from customer | How many loan types in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( loan_type ) from loan"
  },
  {
    "db_id": "loan_1",
    "input": "How many account types in this table? | select count ( distinct acc_type ) from customer | Find average account balance?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( acc_bal ) from customer"
  },
  {
    "db_id": "train_station",
    "input": "what is the highest annual interchanges\t? | select annual_interchanges from station order by annual_interchanges desc limit 1 | what is stations' total passengers?",
    "label": "INFORM_SQL",
    "output": "yes"
  },
  {
    "db_id": "activity_1",
    "input": "Hello, what are the names of the faculty members who don't participate in any activity? | select lname , fname from faculty except select facid from faculty_participates_in | Which faculty members participate in activities?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.lname , faculty.fname from faculty_participates_in join faculty on faculty_participates_in.facid = faculty.facid"
  },
  {
    "db_id": "activity_1",
    "input": "What activities do Michael Goodrich and Gerald Masson participate in?  | select actid from faculty_participates_in join faculty on faculty_participates_in.facid = faculty.facid where faculty.lname = 'Goodrich' and faculty.fname = 'Michael' union select actid from faculty_participates_in join faculty on faculty_participates_in.facid = faculty.facid where faculty.lname = 'Masson' and faculty.fname = 'Gerald' | In total, how many faculty members are there? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty"
  },
  {
    "db_id": "activity_1",
    "input": "Just to confirm, all 58 members participate in an activity?  | Sorry which activity do you mean? | Activity 790",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct facid ) from faculty_participates_in where actid = 790"
  },
  {
    "db_id": "college_3",
    "input": "Hi, can you tell me how many instructors there are? | select count ( distinct instructor ) from course | Can you tell me which instructor teaches the most number of courses?",
    "label": "CONFIRM_SQL",
    "output": "select instructor from course group by instructor order by count ( * ) desc limit 1"
  },
  {
    "db_id": "college_3",
    "input": "Can you tell me if Instructor 4432 lives in a building? | select building from faculty where facid = 4432 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Which organization hired the most research staff? | select organisations.* from organisations join research_staff on organisations.organisation_id = research_staff.employer_organisation_id group by organisations.organisation_id order by count ( * ) desc limit 1 | Can you give me just the organization id?\n",
    "label": "CONFIRM_SQL",
    "output": "select organisations.organisation_id from organisations join research_staff on organisations.organisation_id = research_staff.employer_organisation_id group by organisations.organisation_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "great, can you give me the organization type and detail too? | select organisations.organisation_id , organisations.organisation_type , organisations.organisation_details from organisations join research_staff on organisations.organisation_id = research_staff.employer_organisation_id group by organisations.organisation_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye!"
  },
  {
    "db_id": "match_season",
    "input": "how many countries are participated? | select count ( distinct country ) from match_season | how many players are participated?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct player ) from match_season"
  },
  {
    "db_id": "match_season",
    "input": "how many colleges are participated? | select count ( distinct college ) from match_season | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to ask anything else? "
  },
  {
    "db_id": "assets_maintenance",
    "input": "Did you want the count and corresponding company id? | Yes | How many assets does each third party company supply?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) , third_party_companies.company_id from third_party_companies join assets on third_party_companies.company_id = assets.supplier_company_id group by third_party_companies.company_id"
  },
  {
    "db_id": "assets_maintenance",
    "input": "How many total assets are there? | select count ( * ) from assets | How many third party companies are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from third_party_companies"
  },
  {
    "db_id": "insurance_policies",
    "input": "Which kind of policy type was chosen by the most customers? | select policy_type_code from customer_policies group by policy_type_code order by count ( * ) desc limit 1 | what about the least?\n",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from customer_policies group by policy_type_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "insurance_policies",
    "input": "What is Policy_Type_Code of Customer_ID 3? | select policy_type_code from customer_policies where customer_id = '3' | What is the Start Date of Policy ID 143?\n",
    "label": "CONFIRM_SQL",
    "output": "select start_date from customer_policies where policy_id = '143'"
  },
  {
    "db_id": "voter_2",
    "input": "Which major has the most students? | select major from student group by major order by count ( * ) desc limit 1 | How many students are in that major?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student group by major order by count ( * ) desc limit 1"
  },
  {
    "db_id": "voter_2",
    "input": "What are their names, please? | select lname , fname from student where major in ( select major from student group by major order by count ( * ) desc limit 1 ) | Who is the advisor for that major?",
    "label": "CONFIRM_SQL",
    "output": "select advisor from student where major = ( select major from student group by major order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "voter_2",
    "input": "Who is the advisor for the major with the second most number of students? | select advisor from student where major in ( select major from student group by major order by count ( * ) desc limit 2 ) and major != ( select major from student group by major order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "REQUEST_MORE",
    "output": "No problem. Anything else?"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "How many documents are there? | select count ( * ) from documents | How many of them have expenses?",
    "label": "CONFIRM_SQL",
    "output": "select count ( document_id ) from documents_with_expenses"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What are the different document types? | select distinct document_type_code from documents | What do the codes stand for?",
    "label": "REJECT",
    "output": "Sorry, I cannot answer this."
  },
  {
    "db_id": "company_employee",
    "input": "Hello!  Can you show me a list of all company IDs, with their names and headquarters locations? | select company_id , name , headquarters from company | Could you filter this same list to list only the Headquarter countries that have more than one company in them?",
    "label": "CONFIRM_SQL",
    "output": "select headquarters from company group by headquarters having count ( * ) >= 2"
  },
  {
    "db_id": "company_employee",
    "input": "Thank you!  Can you update this list to show how many companies are located in each of these 3 countries? | select count ( headquarters = 'USA' or null ) as usa , count ( headquarters = 'China' or null ) as china , count ( headquarters = 'UK' or null ) as uk from company | I think that's think information I'm looking for.  Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Project details of project ID 1? | select project_details from projects where project_id = 1 | Which project have no outcome?",
    "label": "CLARIFY",
    "output": "so  what would  you  want  to  know about the project have no outcome"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "List the project details of above? | select project_details from projects where project_id not in ( select project_id from project_outcomes ) | Organisation ID of project ID 2?",
    "label": "CONFIRM_SQL",
    "output": "select organisation_id from projects where project_id = 2"
  },
  {
    "db_id": "company_employee",
    "input": "What are some companies with more than 200 sales? | select name from company where sales_in_billion > 200 | Can you sort the list in descending order of sales and profits",
    "label": "CONFIRM_SQL",
    "output": "select name from company where sales_in_billion > 200 order by sales_in_billion , profits_in_billion desc"
  },
  {
    "db_id": "company_employee",
    "input": "How many companies are in the list? | select count ( * ) from company where sales_in_billion > 200 order by sales_in_billion , profits_in_billion desc | Can you show me the list in descending order of sales and profits again?",
    "label": "CONFIRM_SQL",
    "output": "select name from company where sales_in_billion > 200 order by sales_in_billion , profits_in_billion desc"
  },
  {
    "db_id": "college_1",
    "input": "Did you want the codes of schools? | Yes | Can you list all the schools that have less than 5 different departments?",
    "label": "CONFIRM_SQL",
    "output": "select school_code from department group by school_code having count ( distinct dept_name ) < 5"
  },
  {
    "db_id": "college_1",
    "input": "Can you list the number of departments with school code BUS? | select count ( distinct dept_name ) from department where school_code = 'BUS' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "music_1",
    "input": "What are the resolutions of all songs with a rating lower than 8? | select resolution from song where rating < 8 | What are the IDs and resolutions of all the songs with resolutions higher than those?",
    "label": "CONFIRM_SQL",
    "output": "select f_id , resolution from song where resolution > ( select max ( resolution ) from song where rating < 8 )"
  },
  {
    "db_id": "music_1",
    "input": "What are the IDs and resolutions of all the songs with resolutions higher than or equal to 1080? | select f_id , resolution from song where resolution >= 1080 | What are the song names and ratings of those songs?",
    "label": "CONFIRM_SQL",
    "output": "select song_name , rating from song where resolution >= 1080"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What are the account details with the largest value? | select account_details from accounts order by account_details desc limit 1 | What about the account details with the value having the character '5' in it, please?",
    "label": "CONFIRM_SQL",
    "output": "select account_details from accounts where account_details like '%5%'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What are the statement ids of those accounts, please? | select statement_id from accounts where account_details like '%5%' | What about the account details with the value having the character '9' in it, please?",
    "label": "CONFIRM_SQL",
    "output": "select account_details from accounts where account_details like '%9%'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Could you tell me the account ids of those accounts too? | select account_id from accounts where account_details like '%9%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "scientist_1",
    "input": "What is the name of the project with the highest hours? | select name from projects order by hours desc limit 1 | What are the names of the scientists assigned to that project?",
    "label": "CONFIRM_SQL",
    "output": " SELECT T3.name FROM AssignedTo AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.Name = 'A Magnetic Primer Designer'"
  },
  {
    "db_id": "scientist_1",
    "input": "There is no record of the names of the scientists assigned to that project.  | What is the code of the project A Magnetic Primer Designer? | select code from projects where name = 'A Magnetic Primer Designer'",
    "label": "INFORM_SQL",
    "output": "What are the scientist codes assigned to the project Bte2?"
  },
  {
    "db_id": "scientist_1",
    "input": "select scientist from assignedto where project = 'Bte2' | Who are the scientists who are not assigned to the project Bte2? | select scientist from assignedto where project != 'Bte2'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "farm",
    "input": "Show me the official names of the cities that have hosted more than one competition? | select city.official_name from city join farm_competition on city.city_id = farm_competition.host_city_id group by farm_competition.host_city_id having count ( * ) > 1 | Show me the official names of the cities that have hosted only one competition?",
    "label": "CONFIRM_SQL",
    "output": "select city.official_name from city join farm_competition on city.city_id = farm_competition.host_city_id group by farm_competition.host_city_id having count ( * ) = 1"
  },
  {
    "db_id": "farm",
    "input": "What were the themes of each of those competitions? | select city.official_name , farm_competition.theme from city join farm_competition on city.city_id = farm_competition.host_city_id group by farm_competition.host_city_id having count ( * ) = 1 | What is the census rating of the city with the official name \"Plaster Rock\"?",
    "label": "CONFIRM_SQL",
    "output": "select city.census_ranking from city join farm_competition on city.city_id = farm_competition.host_city_id where city.official_name = 'Plaster Rock'"
  },
  {
    "db_id": "farm",
    "input": "What is the census rating of the city that hosted the competition with the theme \"Carnival M is back!\"? | select city.census_ranking from city join farm_competition on city.city_id = farm_competition.host_city_id where farm_competition.theme = 'Carnival M is back!' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "phone_1",
    "input": "what are all the pixels are presented on the table | select pixels from screen_mode | how many screen modes on the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from screen_mode"
  },
  {
    "db_id": "phone_1",
    "input": "which phone has the highest screen mode on the table | select * from phone where screen_mode = ( select max ( screen_mode ) from phone ) | list out the chip models on the table",
    "label": "CONFIRM_SQL",
    "output": "select chip_model from phone"
  },
  {
    "db_id": "flight_4",
    "input": "Show me the destination details of John F Kennedy International Airport | select dst_apid , dst_ap from airports join routes on airports.apid = routes.dst_apid where airports.name = 'John F Kennedy International Airport' | Show me the routes details",
    "label": "CONFIRM_SQL",
    "output": "select * from airports join routes on airports.apid = routes.dst_apid where airports.name = 'John F Kennedy International Airport'"
  },
  {
    "db_id": "flight_4",
    "input": "do you mean the  routes details of John F Kennedy International Airport? | Yes | select * from airports join routes on airports.apid = routes.dst_apid where airports.name = 'John F Kennedy International Airport'",
    "label": "INFORM_SQL",
    "output": "Show me the number of routes that have destination John F Kennedy International Airport"
  },
  {
    "db_id": "solvency_ii",
    "input": "Tell me the prices of Dining Policy | I cannot find a product called \"Dining Policy\" in the table. Did you mean \"Dining\"? | Tell me the prices of Dining",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_name = 'Dining'"
  },
  {
    "db_id": "solvency_ii",
    "input": "Sorry, there is no product named \"Dining\". There is, however, a product named \"Dinning\". This might be a typo. Do you want to know the prices of \"Dinning\"? | Tell me the prices of Dinning | select product_price from products where product_name = 'Dinning'",
    "label": "INFORM_SQL",
    "output": "Show me the prices of Trading Policy"
  },
  {
    "db_id": "solvency_ii",
    "input": "select product_price from products where product_name = 'Trading Policy' | Show me the prices of Business Policy\n | select product_price from products where product_name = 'Business Policy'",
    "label": "THANK_YOU",
    "output": "Thanks"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Do you mean the part id for the part fault that requires the most skills? | Yes | What is the highest number of skills needed to fix a part fault?",
    "label": "CLARIFY",
    "output": "what  did  you want  to get  about the highest number of skills needed to fix a part fault"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the name of the part that requires the most amount of skills to fix? | select parts.part_name from parts join part_faults on parts.part_id = part_faults.part_id join skills_required_to_fix on part_faults.part_fault_id = skills_required_to_fix.part_fault_id group by parts.part_id order by count ( * ) desc limit 1 | How many skills does it need?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from parts join part_faults on parts.part_id = part_faults.part_id join skills_required_to_fix on part_faults.part_fault_id = skills_required_to_fix.part_fault_id group by parts.part_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the part id for the top part fault? | select parts.part_id from parts join part_faults on parts.part_id = part_faults.part_id join skills_required_to_fix on part_faults.part_fault_id = skills_required_to_fix.part_fault_id group by parts.part_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  bye "
  },
  {
    "db_id": "performance_attendance",
    "input": "Hello, how many members are there? | select count ( * ) from member | And what is the date range of the dates that they attended? That is: what is the earliest date and what is the latest date?",
    "label": "SORRY",
    "output": "Sorry I cannot answer this question."
  },
  {
    "db_id": "performance_attendance",
    "input": "What is the Nationality of the id number 4. | select nationality from member where member_id = 4 | What is the most common nationality?",
    "label": "CONFIRM_SQL",
    "output": "select nationality from member group by nationality order by count ( * ) desc limit 1"
  },
  {
    "db_id": "college_3",
    "input": "Do you mean the first name and last name of student with the highest grade? | Yes | Do you mean the first name and last name of student who got D- ?",
    "label": "AFFIRM",
    "output": "Yes."
  },
  {
    "db_id": "college_3",
    "input": "which student had highest grade | select distinct student.fname , student.lname from enrolled_in join gradeconversion join student on enrolled_in.grade = gradeconversion.lettergrade and enrolled_in.stuid = student.stuid order by gradeconversion.gradepoint desc limit 1 | which letter grade has the lowest grade point?",
    "label": "CONFIRM_SQL",
    "output": "select distinct gradeconversion.lettergrade from enrolled_in join gradeconversion join student on enrolled_in.grade = gradeconversion.lettergrade and enrolled_in.stuid = student.stuid order by gradeconversion.gradepoint asc limit 1"
  },
  {
    "db_id": "college_3",
    "input": "which student get low grade | * I have left the chat * | select distinct student.lname , student.fname from enrolled_in join gradeconversion join student on enrolled_in.grade = gradeconversion.lettergrade and enrolled_in.stuid = student.stuid where gradeconversion.lettergrade = 'D-'",
    "label": "THANK_YOU",
    "output": "THANKS!"
  },
  {
    "db_id": "baseball_1",
    "input": "Do you mean the names of parks in Anaheim city? | Yes | how many park there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from park"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the city of Riverside Park | select city from park where park_name = 'Riverside Park' | what is the park name of Anaheim city",
    "label": "CONFIRM_SQL",
    "output": "select park_name from park where city = 'Anaheim'"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the state of Columbia Park | select state from park where park_name = 'Columbia Park' | how many home game there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from home_game"
  },
  {
    "db_id": "baseball_1",
    "input": "how many games in 1871 | Do you mean the number of home games in year 1871? | yes sir\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from home_game where year = 1871"
  },
  {
    "db_id": "e_learning",
    "input": "How many courses are there in Computer Science? | select count ( * ) from courses join subjects on courses.subject_id = subjects.subject_id where subjects.subject_name = 'Computer Science' | Great, and how many courses are there in Arts?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from courses join subjects on courses.subject_id = subjects.subject_id where subjects.subject_name = 'Arts'"
  },
  {
    "db_id": "e_learning",
    "input": "Wonderful. And how many courses in Language? | select count ( * ) from courses join subjects on courses.subject_id = subjects.subject_id where subjects.subject_name = 'Language' | Great, can you sort a list of Computer Science, Arts, and Language by the number of courses, in ascending order?",
    "label": "CONFIRM_SQL",
    "output": "select subjects.subject_name from courses join subjects on courses.subject_id = subjects.subject_id group by courses.subject_id order by count ( * ) asc"
  },
  {
    "db_id": "county_public_safety",
    "input": "Did you mean the total number of police officers in the police force RCMP? | Yes | What is the police force of counties on the east side?",
    "label": "CONFIRM_SQL",
    "output": "select police_force from county_public_safety where location = 'East'"
  },
  {
    "db_id": "county_public_safety",
    "input": "What is the police force of counties on the west side?\n | select police_force from county_public_safety where location = 'West' | What is the police force shared by county on both sides?",
    "label": "CONFIRM_SQL",
    "output": "select police_force from county_public_safety where location = 'East' intersect select police_force from county_public_safety where location = 'West'"
  },
  {
    "db_id": "county_public_safety",
    "input": "How many police officers are in the police force shared by county on both sides? | select count ( * ) from ( select police_force from county_public_safety where location = 'East' intersect select police_force from county_public_safety where location = 'West' ) | What is the number of police officers in RCMP?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( police_officers ) from county_public_safety where police_force = 'RCMP'"
  },
  {
    "db_id": "store_product",
    "input": "Which district has the largest population? | select district_name from district order by city_population desc limit 1 | What is its headquartered city?",
    "label": "CONFIRM_SQL",
    "output": "select headquartered_city from district order by city_population desc limit 1"
  },
  {
    "db_id": "store_product",
    "input": "What is that city's area? | select city_area from district order by city_population desc limit 1 | How many cities have a population over 500,000?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from district where city_population > 500000"
  },
  {
    "db_id": "store_product",
    "input": "What are the names of those cities? | select headquartered_city from district where city_population > 500000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "music_1",
    "input": "what are the shortest duration and lowest rating of songs grouped by genre and ordered by genre? | select min ( files.duration ) , min ( song.rating ) , song.genre_is from files join song on files.f_id = song.f_id group by song.genre_is order by song.genre_is asc | WHICH ARTISTS SUNG THE SONGS?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from song"
  },
  {
    "db_id": "music_1",
    "input": "how many songs has Enrique produced? | select count ( * ) from song where artist_name = 'Enrique' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "architecture",
    "input": "What is the most common mill type? | select type from mill group by type order by count ( * ) desc limit 1 | How many of those are there?",
    "label": "CONFIRM_SQL",
    "output": "select type , count ( * ) from mill group by type order by count ( * ) desc limit 1"
  },
  {
    "db_id": "architecture",
    "input": "What years were each of those built? | select built_year from mill where type = ( select type from mill group by type order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "theme_gallery",
    "input": "how many exhibition are presented on the table | select count ( * ) from exhibition | list out the exhibition name",
    "label": "REJECT",
    "output": "There are no records of exhibition names."
  },
  {
    "db_id": "theme_gallery",
    "input": "ok fine then list out the artists name | select name from artist | what is the age of Vijay Singh",
    "label": "CONFIRM_SQL",
    "output": "select age from artist where name = 'Vijay Singh'"
  },
  {
    "db_id": "theme_gallery",
    "input": "what is the highest ticket price on the table | select ticket_price from exhibition order by ticket_price desc limit 1 | What is the theme and artist name for the exhibition with a ticket price higher than the average?\"",
    "label": "CONFIRM_SQL",
    "output": "select exhibition.theme , artist.name from exhibition join artist on exhibition.artist_id = artist.artist_id where exhibition.ticket_price > ( select avg ( ticket_price ) from exhibition )"
  },
  {
    "db_id": "riding_club",
    "input": "What are the names of the players?\n | select player_name from player | Who are their coaches?",
    "label": "CONFIRM_SQL",
    "output": "select player.player_name , coach.coach_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id"
  },
  {
    "db_id": "riding_club",
    "input": "Show me these names in descending order based on number of player votes. | select player.player_name , coach.coach_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id order by player.votes desc | also Show me the gender of the coaches and players.\n",
    "label": "CONFIRM_SQL",
    "output": "select player.player_name , player.gender , coach.coach_name , coach.gender from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id order by player.votes desc"
  },
  {
    "db_id": "riding_club",
    "input": "How many votes did each player receive?\n | select player_name , votes from player | Please list this in descending order.",
    "label": "CONFIRM_SQL",
    "output": "select player_name , votes from player order by votes desc"
  },
  {
    "db_id": "activity_1",
    "input": "How many professors do you have in buildings? | Can you clarify your question? | Total number of professors in NEB building?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty where rank = 'Professor' and building = 'NEB'"
  },
  {
    "db_id": "activity_1",
    "input": "What of instructors? | select count ( * ) from faculty where rank = 'Instructor' and building = 'NEB' | What of total number of faculty?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty where building = 'NEB'"
  },
  {
    "db_id": "activity_1",
    "input": "What fraction of this total is professors? | Sorry I cannot answer this question. | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the average salary for all teams? | select avg ( salary ) from salary | ok, which team offering the highest salary?",
    "label": "CLARIFY",
    "output": "OK, do you want me to show the team name or id? Also, are you asking about average salary?"
  },
  {
    "db_id": "baseball_1",
    "input": "please give me the name. Yes! | select team.name from team join salary on team.team_id = salary.team_id group by team.team_id order by avg ( salary.salary ) desc limit 1 | Great! How about the lowest salary?",
    "label": "CONFIRM_SQL",
    "output": "select team.name from team join salary on team.team_id = salary.team_id group by team.team_id order by avg ( salary.salary ) asc limit 1"
  },
  {
    "db_id": "game_1",
    "input": "Show all student IDs with more than a total of 10 hours per week on all sports played please. | select stuid from sportsinfo group by stuid having sum ( hoursperweek ) > 10 | Which of those were just football?",
    "label": "CONFIRM_SQL",
    "output": "select stuid from sportsinfo where sportname = 'Football'"
  },
  {
    "db_id": "game_1",
    "input": "* I have left the chat * | What's the average hours per week all students played football? | select avg ( hoursperweek ) from sportsinfo where sportname = 'Football'",
    "label": "INFORM_SQL",
    "output": "What's the average hours per week all students played athletics?"
  },
  {
    "db_id": "game_1",
    "input": "select avg ( hoursperweek ) from sportsinfo | What are all sports names? | select distinct sportname from sportsinfo",
    "label": "INFORM_SQL",
    "output": "What's the average hours per week all students played Lacrosse?"
  },
  {
    "db_id": "game_1",
    "input": "select avg ( hoursperweek ) from sportsinfo where sportname = 'Lacrosse' | What are the student IDs of those students? | select stuid from sportsinfo",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Can you show me all the tourist attractions' names? | select distinct name from tourist_attractions | Can you show me the ids for all these attractions?",
    "label": "CLARIFY",
    "output": "Do you mean Tourist Attraction IDs?"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "yes | select name , tourist_attraction_id from tourist_attractions | In addition, can you also show me the corresponding number of visits in the same list?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name , visits.tourist_attraction_id , count ( * ) from tourist_attractions join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id group by visits.tourist_attraction_id"
  },
  {
    "db_id": "restaurant_1",
    "input": "show me the name of the restaurant with  ResID 1? | select resname from restaurant where resid = 1 | can you show me the address of the restaurant with ResID 1?",
    "label": "CONFIRM_SQL",
    "output": "select address from restaurant where resid = 1"
  },
  {
    "db_id": "restaurant_1",
    "input": "Can you show me the rating of the restaurant with ResID 1? | select rating from restaurant where resid = 1 | Can you show me how many restaurant is the sandwich type restaurant?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from restaurant join type_of_restaurant on restaurant.resid = type_of_restaurant.resid join restaurant_type on type_of_restaurant.restypeid = restaurant_type.restypeid group by type_of_restaurant.restypeid having restaurant_type.restypename = 'Sandwich'"
  },
  {
    "db_id": "protein_institute",
    "input": "What buildings were founded in 2003? | Do you mean the institutions founded in 2003? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select institution from institution where founded = 2003"
  },
  {
    "db_id": "protein_institute",
    "input": "what are the names of the buildings with institutions founded after 2003? | select building.name from building join institution on building.building_id = institution.building_id where institution.founded > 2003 | what are the names of the buildings with institutions founded before\n 2003?",
    "label": "CONFIRM_SQL",
    "output": "select building.name from building join institution on building.building_id = institution.building_id where institution.founded < 2003"
  },
  {
    "db_id": "college_3",
    "input": "How many students are there? | select count ( * ) from student | What are the first names of these students? \n",
    "label": "CONFIRM_SQL",
    "output": "select fname from student"
  },
  {
    "db_id": "college_3",
    "input": "Out of these names, which names contain the letter a? | select fname from student where fname like '%a%' | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "store_1",
    "input": "what is the billing address of germany | Billing address is associated with each customer, not country. Please clarify your question. | what is the address of state sp",
    "label": "CONFIRM_SQL",
    "output": "select address from customers where state = 'SP'"
  },
  {
    "db_id": "store_1",
    "input": "what is the country of support rep id 5 | select country from customers where support_rep_id = 5 | what is the name of album id 3",
    "label": "CONFIRM_SQL",
    "output": "select name from tracks where album_id = 3"
  },
  {
    "db_id": "store_1",
    "input": "what is the unit price of track id 6 | select unit_price from tracks where id = 6 | what is the composer of genre id 1",
    "label": "CONFIRM_SQL",
    "output": "select composer from tracks where genre_id = 1"
  },
  {
    "db_id": "baseball_1",
    "input": "hey, which 3 players won the most player awards? list their full name and id | select player.name_first , player.name_last , player.player_id from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3 | who among the three players is the youngest?",
    "label": "CLARIFY",
    "output": "Do you want the name of the youngest player of these 3?"
  },
  {
    "db_id": "baseball_1",
    "input": "yes, the youngest. | select name_first , name_last from player where player_id in ( select player.player_id from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3 ) order by birth_year , birth_month , birth_day desc limit 1 | what are the ages of the other two?",
    "label": "CONFIRM_SQL",
    "output": "select name_first , name_last , birth_year , birth_month , birth_day from player where player_id in ( select player.player_id from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3 ) order by birth_year desc"
  },
  {
    "db_id": "baseball_1",
    "input": "which teams did the three play for? | select player.player_id , player_award.league_id from player join player_award on player.player_id = player_award.player_id group by player.player_id order by count ( * ) desc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "book_2",
    "input": "what's the highest price of book published on this list? | select max ( publication.price ) from book join publication on book.book_id = publication.book_id | who's the writer of The Black Lamb?",
    "label": "CONFIRM_SQL",
    "output": "select book.writer from book join publication on book.book_id = publication.book_id where book.title = 'The Black Lamb'"
  },
  {
    "db_id": "book_2",
    "input": "what's the price for Wiley's publication? | Which of Wiley's publications do you want to know the price for? | the one of june 2006",
    "label": "CONFIRM_SQL",
    "output": "select publication.price from book join publication on book.book_id = publication.book_id where publication.publisher = 'Wiley' and publication.publication_date = 'June 2006'"
  },
  {
    "db_id": "book_2",
    "input": "who's the writer of Bloody Mary? | Did you mean Bloody Mary or Bloody Mary : Lady Liberty? | Bloody Mary",
    "label": "CONFIRM_SQL",
    "output": "select writer from book where title = 'Bloody Mary'"
  },
  {
    "db_id": "match_season",
    "input": "Hi, could you please let me know the country name of ID which has Dublin as its capital? | Sorry. Do you mean the country name and ID of the country which has Dublin as its capital? | Yes, sorry that I didn't make it clear. I meant the corresponding name and ID of the country for Dublin as capital, in the \"country\" table.",
    "label": "CONFIRM_SQL",
    "output": "select country_name , country_id from country where capital = 'Dublin'"
  },
  {
    "db_id": "match_season",
    "input": "Thank you. Then could you please show me the positions of players from Ireland? So country ID 4 | select position from match_season where country = 4 | Great, thank you. What about their names?",
    "label": "CONFIRM_SQL",
    "output": "select player from match_season where country = 4"
  },
  {
    "db_id": "match_season",
    "input": "Thank you. Then could you please show me the players from Iraq? | Do you want their names? | yes, the 'player' field, so names.",
    "label": "CONFIRM_SQL",
    "output": "select match_season.player from match_season join country on match_season.country = country.country_id where country.country_name = 'Iraq'"
  },
  {
    "db_id": "college_1",
    "input": "Tell me class code for class room BUS311 ? | select class_code from class where class_room = 'BUS311' | Tell me professor employee number for course code ACCT-211 ?",
    "label": "CONFIRM_SQL",
    "output": "select prof_num from class where crs_code = 'ACCT-211'"
  },
  {
    "db_id": "college_1",
    "input": "Tell me the class time for class section 3 ? | select class_time from class where class_section = 3 | Find the number of classes offered for all class rooms that held at least 2 classes ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) , class_room from class group by class_room having count ( * ) >= 2"
  },
  {
    "db_id": "college_2",
    "input": "What are the names of the different departments? | select distinct dept_name from course | Are any courses taught by multiple departments ?",
    "label": "CONFIRM_SQL",
    "output": "select title , dept_name from course"
  },
  {
    "db_id": "college_2",
    "input": "What are the names of all Statistics courses ? | select title from course where dept_name = 'Statistics' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "film_rank",
    "input": "please list the years of film market estimations in descending order. | select year from film_market_estimation order by year desc | please list the years of film market estimations from Japan.",
    "label": "CONFIRM_SQL",
    "output": "select film_market_estimation.year from film_market_estimation join market on film_market_estimation.market_id = market.market_id where market.country = 'Japan'"
  },
  {
    "db_id": "film_rank",
    "input": "please list the years of film market estimations when the market is in country \"Japan\" in descending order. | select film_market_estimation.year from film_market_estimation join market on film_market_estimation.market_id = market.market_id where market.country = 'Japan' order by film_market_estimation.year desc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks! Bye"
  },
  {
    "db_id": "wrestler",
    "input": "Show the teams that have wrestlers eliminated by \"Orton\". | select team from elimination where eliminated_by = 'Orton' | Show me the teams that have wrestlers eliminated by \"Benjamin\".",
    "label": "CONFIRM_SQL",
    "output": "select team from elimination where eliminated_by = 'Benjamin'"
  },
  {
    "db_id": "wrestler",
    "input": "What was the elimination move when the wrestlers in team Batista were eliminated by \"Benjamin\". | select elimination_move from elimination where eliminated_by = 'Benjamin' and team = 'Team Batista' | And what was the time duration in this case?",
    "label": "CONFIRM_SQL",
    "output": "select time from elimination where eliminated_by = 'Benjamin' and team = 'Team Batista'"
  },
  {
    "db_id": "wrestler",
    "input": "Show me the teams that have wrestlers eliminated by \"Punk\". | select team from elimination where eliminated_by = 'Punk' | Hmmm. And what was the elimination move used?",
    "label": "CONFIRM_SQL",
    "output": "select elimination_move from elimination where eliminated_by = 'Punk'"
  },
  {
    "db_id": "e_learning",
    "input": "How many students have the family name \"Zieme\"? | select count ( student_id ) from students where family_name = 'Zieme' | What is that student's personal name?",
    "label": "CONFIRM_SQL",
    "output": "select personal_name from students where family_name = 'Zieme'"
  },
  {
    "db_id": "e_learning",
    "input": "Great! What was his enrollment date? | select student_course_enrolment.date_of_enrolment from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id where students.family_name = 'Zieme' and students.personal_name = 'Bernie' | And the completion date?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_enrolment.date_of_completion from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id where students.family_name = 'Zieme' and students.personal_name = 'Bernie'"
  },
  {
    "db_id": "e_learning",
    "input": "Okay. When was his latest logon? | select date_of_latest_logon from students where personal_name = 'Bernie' and family_name = 'Zieme' | Great! I appreciate your help. Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "What is the name of the shipping agent that shipped the largest number of documents? | select ref_shipping_agents.shipping_agent_name from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) desc limit 1 | What is the name of the shipping agent that shipped the smallest number of documents?",
    "label": "CONFIRM_SQL",
    "output": "select ref_shipping_agents.shipping_agent_name from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code group by ref_shipping_agents.shipping_agent_code order by count ( documents.document_id ) asc limit 1"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "What are the receipt dates of all of the documents Airline shipped? | select documents.receipt_date from ref_shipping_agents join documents on documents.shipping_agent_code = ref_shipping_agents.shipping_agent_code where ref_shipping_agents.shipping_agent_name = 'Airline' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "loan_1",
    "input": "Can i get the customer name who has low credit score\n | Did you mean the lowest credit score? | Yeah\n",
    "label": "CONFIRM_SQL",
    "output": "select cust_name from customer order by credit_score asc limit 1"
  },
  {
    "db_id": "loan_1",
    "input": "From which state he was ? | select state from customer order by credit_score asc limit 1 | Wow ! What was his account type?\n",
    "label": "CONFIRM_SQL",
    "output": "select acc_type from customer order by credit_score asc limit 1"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Did you mean the average of amounts of all transactions? | Yes | What is the transaction type code that occurs most often?",
    "label": "CONFIRM_SQL",
    "output": "select transaction_type_code from transactions group by transaction_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the transaction type code that occurs least often? | select transaction_type_code from transactions group by transaction_type_code order by count ( * ) asc limit 1 | What is the average of all transactions?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( amount_of_transaction ) from transactions where transaction_type_code = 'SALE'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the average of all transactions with the transaction type code \"PUR\"? | select avg ( amount_of_transaction ) from transactions where transaction_type_code = 'PUR' | What is the average of all transactions with the transaction type code \"SALE\"?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( amount_of_transaction ) from transactions where transaction_type_code = 'SALE'"
  },
  {
    "db_id": "loan_1",
    "input": "Hi there!  How are you?  Can you show a list of all customer IDs for customers who have loans in the amount of 5000 or more? | select customer.cust_id from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having sum ( loan.amount ) >= 5000 | Excellent!  Can you update that list to include the customer names and their account balances?",
    "label": "CONFIRM_SQL",
    "output": "select customer.cust_id , customer.cust_name , customer.acc_bal from customer join loan on customer.cust_id = loan.cust_id group by customer.cust_name having sum ( loan.amount ) >= 5000"
  },
  {
    "db_id": "loan_1",
    "input": "Awesome!  Finally, can you show me the number of loans and credit score for Owen? | select customer.credit_score , count ( * ) from customer join loan on customer.cust_id = loan.cust_id where customer.cust_name = 'Owen' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "sakila_1",
    "input": "What movies contain the words \"deleted scenes\" in the column Special Features? | select * from film where special_features like '%Deleted Scenes%' | How many movies contain the words \"Deleted scenes\" in the Special Features column?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from film where special_features like '%Deleted Scenes%'"
  },
  {
    "db_id": "sakila_1",
    "input": "What are their names? | select title from film where special_features like '%Deleted Scenes%' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "game_1",
    "input": "Which students play video games? | select distinct stuid from plays_games | How about students who play sports?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct stuid from sportsinfo"
  },
  {
    "db_id": "game_1",
    "input": "Show ids of students who play video games and sports?\n | select stuid from sportsinfo intersect select stuid from plays_games | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "roller_coaster",
    "input": "Hi I was wondering if you could tell me what the fastest roller coaster is? | select name from roller_coaster order by speed desc limit 1 | cool can you tell me what that roller coaster's height is too?",
    "label": "CONFIRM_SQL",
    "output": "select height from roller_coaster order by speed desc limit 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "great - do you know what its status is? | select status from roller_coaster order by speed desc limit 1 | can you tell me the status that is shared by more than two roller coasters?",
    "label": "CONFIRM_SQL",
    "output": "select status from roller_coaster group by status having count ( * ) > 2"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "What organization id Denesik and Sons Party? | select organization_id from organizations where organization_details = 'Denesik and Sons Party' | What are the service type code of service id 10?",
    "label": "CONFIRM_SQL",
    "output": "select service_type_code from services where service_id = '10'"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "What organization details of service id 11? | select organizations.organization_details from services join organizations on services.organization_id = organizations.organization_id where services.service_id = '11' | What is the distinct service type that are provided by the organization which has detail 'Denesik and Sons Party'?",
    "label": "CONFIRM_SQL",
    "output": "select distinct services.service_type_code from services join organizations on services.organization_id = organizations.organization_id where organizations.organization_details = 'Denesik and Sons Party'"
  },
  {
    "db_id": "small_bank_1",
    "input": "Hello!  Can you display a list of all of the Savings Account customer IDs and the associated balances? | select custid , balance from savings | Thanks!  Can you also update that list to show the checking balance for each customer?",
    "label": "CONFIRM_SQL",
    "output": "select balance from checking"
  },
  {
    "db_id": "small_bank_1",
    "input": "Okay!  Can you show me the customer name that is associate with the lowest savings account balance? | select accounts.name from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by savings.balance asc limit 1 | Alright!  Can you now show me his checking account balance?",
    "label": "CONFIRM_SQL",
    "output": "select checking.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where accounts.name = 'Weeks'"
  },
  {
    "db_id": "election",
    "input": "What is the average population across the counties? | select avg ( population ) from county | Which county has a population closest to that?",
    "label": "REJECT",
    "output": "Sorry the question cannot be answered by a simple query."
  },
  {
    "db_id": "election",
    "input": "Which county's population is lowest? | select county_name from county order by population asc limit 1 | What is the difference between Manning's population and the average population?",
    "label": "CONFIRM_SQL",
    "output": "select population from county where county_name = 'Manning' union select avg ( population ) as population from county"
  },
  {
    "db_id": "election",
    "input": "What county has the highest population? | select county_name from county order by population desc limit 1 | And what is its zip code?",
    "label": "CONFIRM_SQL",
    "output": "select zip_code from county order by population desc limit 1"
  },
  {
    "db_id": "manufactory_1",
    "input": "What is the name of the manufacturer that has the highest revenue? | select name from manufacturers order by revenue desc limit 1 | What is the name of the manufacturer that has the third lowest revenue?",
    "label": "CONFIRM_SQL",
    "output": "select name from manufacturers order by revenue asc limit 2 , 1"
  },
  {
    "db_id": "manufactory_1",
    "input": "Who is the founder of Creative Labs? | select founder from manufacturers where name = 'Creative Labs' | What is the average revenue of all manufacturers?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( revenue ) from manufacturers"
  },
  {
    "db_id": "manufactory_1",
    "input": "What is the name of the founder of the manufacturer that has the highest revenue? | select founder from manufacturers order by revenue desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "solvency_ii",
    "input": "What is the most common type code of all the products? | select product_type_code from products group by product_type_code order by count ( * ) desc limit 1 | What are the product names of all products with the type code \"Food\"?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products where product_type_code = 'Food'"
  },
  {
    "db_id": "solvency_ii",
    "input": "What are the prices of those? | select product_price from products where product_type_code = 'Food' | What are the names and prices of all products with the type code books?",
    "label": "CONFIRM_SQL",
    "output": "select product_name , product_price from products where product_type_code = 'Books'"
  },
  {
    "db_id": "solvency_ii",
    "input": "What are the name and type code of the product with the highest price? | select product_name , product_type_code from products order by product_price desc limit 1 | Can you list all product names and their corresponding type codes of the products with prices below the average price?",
    "label": "CONFIRM_SQL",
    "output": "select product_name , product_type_code from products where product_price < ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "college_3",
    "input": "What is the maximum grade point of all students who live in NYC? | select max ( gradeconversion.gradepoint ) from enrolled_in join gradeconversion join student on enrolled_in.grade = gradeconversion.lettergrade and enrolled_in.stuid = student.stuid where student.city_code = 'NYC' | What is the minimum grade point of all students who live in NYC?",
    "label": "CONFIRM_SQL",
    "output": "select min ( gradeconversion.gradepoint ) from enrolled_in join gradeconversion join student on enrolled_in.grade = gradeconversion.lettergrade and enrolled_in.stuid = student.stuid where student.city_code = 'NYC'"
  },
  {
    "db_id": "college_3",
    "input": "What about for students who live in HKG? | select min ( gradeconversion.gradepoint ) from enrolled_in join gradeconversion join student on enrolled_in.grade = gradeconversion.lettergrade and enrolled_in.stuid = student.stuid where student.city_code = 'HKG' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "how many Invoices there | select count ( * ) from invoices | how many master card there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from invoices where payment_method_code = 'MasterCard'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "how many visa card use to payment | select count ( * ) from invoices where payment_method_code = 'Visa' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "restaurant_1",
    "input": "Hello, how many students are over 18? | select count ( * ) from student where age > 18 | Perfect, and how many of those students are majoring in 600?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where major = 600"
  },
  {
    "db_id": "restaurant_1",
    "input": "Can you list each student's first and last name? | Students majoring in 600? | Yes that are over 18 as well.",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where age > 18 and major = 600"
  },
  {
    "db_id": "loan_1",
    "input": "can you show me average of credit scores? | select avg ( credit_score ) from customer | what is the highest credit score?",
    "label": "CONFIRM_SQL",
    "output": "select max ( credit_score ) from customer"
  },
  {
    "db_id": "loan_1",
    "input": "what is the highest account balance? | select max ( acc_bal ) from customer | thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "store_product",
    "input": "how many store are presented on the table | select count ( * ) from store | list out the store name",
    "label": "CONFIRM_SQL",
    "output": "select store_name from store"
  },
  {
    "db_id": "store_product",
    "input": "what is the city population of Attock District | select city_population from district where headquartered_city = 'Attock City' | what is the area size of Neguac",
    "label": "CONFIRM_SQL",
    "output": "select area_size from store where store_name = 'Neguac'"
  },
  {
    "db_id": "wine_1",
    "input": "Please show me the names of wines by Brander winery.  | select name from wine where winery = 'Brander' | Hmm, can you add the production years?",
    "label": "CONFIRM_SQL",
    "output": "select name , year from wine where winery = 'Brander'"
  },
  {
    "db_id": "wine_1",
    "input": "What are the names of wines whose production year are before the year of all wines by Brander winery? | select name from wine where year < ( select min ( year ) from wine where winery = 'Brander' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "university_basketball",
    "input": "what is the acc percent of each team? | select team_id , acc_percent from basketball_match | can you tell me what the lowest acc percent score is?",
    "label": "CONFIRM_SQL",
    "output": "select acc_percent from basketball_match order by acc_percent asc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "what's the highest acc percent score? | select acc_percent from basketball_match order by acc_percent desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "can you show me the document date? | select document_date from documents | can you show me the document name?",
    "label": "CONFIRM_SQL",
    "output": "select document_name from documents"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "can you show me document type code? | select document_type_code from documents | thanks",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "machine_repair",
    "input": "List out the all technician name | select name from technician | list out the all machine id ",
    "label": "CONFIRM_SQL",
    "output": "select machine_id from repair_assignment"
  },
  {
    "db_id": "machine_repair",
    "input": "list out the all technician age | select technician_id , age from technician | list the name of technician who have not been assigned to repair machines",
    "label": "CONFIRM_SQL",
    "output": "select name from technician where technician_id not in ( select technician_id from repair_assignment )"
  },
  {
    "db_id": "document_management",
    "input": "Is there a document named \"David CV\"? | select * from documents where document_name = 'David CV' | How many section titles are there for the document \"David CV\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( document_sections.section_title ) from documents join document_sections on documents.document_code = document_sections.document_code where documents.document_name = 'David CV'"
  },
  {
    "db_id": "document_management",
    "input": "Please list the section titles for the document \"David CV\" | select document_sections.section_title from documents join document_sections on documents.document_code = document_sections.document_code where documents.document_name = 'David CV' | what is the section code for the section title \"after\" for the document \"David CV\"?\n",
    "label": "CONFIRM_SQL",
    "output": "select document_sections.section_code from documents join document_sections on documents.document_code = document_sections.document_code where documents.document_name = 'David CV' and document_sections.section_title = 'after'"
  },
  {
    "db_id": "document_management",
    "input": "what is the document code for the section title \"after\" for the document \"David CV\"? | select document_sections.document_code from documents join document_sections on documents.document_code = document_sections.document_code where documents.document_name = 'David CV' and document_sections.section_title = 'after' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Tell me the document date of the project id 30? | select document_type_code from documents where project_id = 30 | Tell me the statement details of the statement id 197?",
    "label": "CONFIRM_SQL",
    "output": "select statement_details from statements where statement_id = 197"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Tell me the document name of the document id 42 ? | select document_name from documents where document_id = 42 | Show the statement detail and the corresponding document name for the statement with detail 'Private Project' ?",
    "label": "CONFIRM_SQL",
    "output": "select statements.statement_details , documents.document_name from statements join documents on statements.statement_id = documents.document_id where statements.statement_details = 'Private Project'"
  },
  {
    "db_id": "epinions_1",
    "input": "can you show me useracct name? | Would you like a list of the names of the users? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select name from useracct"
  },
  {
    "db_id": "epinions_1",
    "input": "can you show me target user id\t | Would you like a list of all the target user id? | yes",
    "label": "CONFIRM_SQL",
    "output": "select target_u_id from trust"
  },
  {
    "db_id": "epinions_1",
    "input": "can you show me a list of the users' names that starting with 'A' | select name from useracct where name like 'A%' | thanks!\n",
    "label": "GOOD_BYE",
    "output": "Welcome. Bye!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Find the start and end  dates of behavior incidents of students with last name \"Rohan\"? | select behavior_incident.date_incident_start , behavior_incident.date_incident_end from behavior_incident join students on behavior_incident.student_id = students.student_id where students.last_name = 'Rohan' | Find the start and end dates of behavior incidents of students with last name \"Bergnaum\"?",
    "label": "CONFIRM_SQL",
    "output": "select behavior_incident.date_incident_start , date_incident_end from behavior_incident join students on behavior_incident.student_id = students.student_id where students.last_name = 'Bergnaum'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "How many students in this table? | select count ( student_id ) from students | Find the start and end dates of behavior incidents of students with last name \"Hansen\"?",
    "label": "CONFIRM_SQL",
    "output": "select students.last_name from behavior_incident join students on behavior_incident.student_id = students.student_id where students.last_name = 'Hansen'"
  },
  {
    "db_id": "school_player",
    "input": "Which team of players has the smallest age? | Did you mean to ask for the team of the player with the smallest age? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select team from player order by age asc limit 1"
  },
  {
    "db_id": "school_player",
    "input": "Which team does Timothy Beckham play for? | select team from player where player = 'Timothy Beckham' | How old is he and what position does he play?",
    "label": "CONFIRM_SQL",
    "output": "select age , position from player where player = 'Timothy Beckham'"
  },
  {
    "db_id": "school_player",
    "input": "What position does Eric Hosmer play? | select position from player where player = 'Eric Hosmer' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "sakila_1",
    "input": "Hello!  Can you list the film ID of the film with the most copies in the inventory? | select film.film_id from film join inventory on film.film_id = inventory.film_id group by film.film_id order by count ( * ) desc limit 1 | Thank you!  Can you show include the flim's title to that list?",
    "label": "CONFIRM_SQL",
    "output": "select film.title , film.film_id from film join inventory on film.film_id = inventory.film_id group by film.film_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "Great!  Can I see the description for that movie, in addition to its rating and special features? | select film.description , film.rating , film.special_features from film join inventory on film.film_id = inventory.film_id group by film.film_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "perpetrator",
    "input": "I want to know how many perpetrators are taller than 1.84 | So do you mean the kills of perpetrators with height more than 1.84? | Yes, that's exactly what I mean",
    "label": "CONFIRM_SQL",
    "output": "select sum ( perpetrator.killed ) from people join perpetrator on people.people_id = perpetrator.people_id where people.height > 1.84"
  },
  {
    "db_id": "perpetrator",
    "input": "How many perpetrators does that include? | select count ( perpetrator.perpetrator_id ) from people join perpetrator on people.people_id = perpetrator.people_id where people.height > 1.84 | Are they all in the same country?",
    "label": "CONFIRM_SQL",
    "output": "select perpetrator.country from people join perpetrator on people.people_id = perpetrator.people_id where people.height > 1.84"
  },
  {
    "db_id": "perpetrator",
    "input": "When did the earliest killing take place? | select date from perpetrator order by date asc limit 1 | Can you tell me how many people were injured for the most recent date?",
    "label": "CONFIRM_SQL",
    "output": "select injured from perpetrator order by date desc limit 1"
  },
  {
    "db_id": "perpetrator",
    "input": "Which country had the most killings and injuries? | Do you mean killings plus injuries together? | Yes, that is what I mean.",
    "label": "CONFIRM_SQL",
    "output": "select country from perpetrator group by country order by sum ( killed ) + sum ( injured ) desc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "what's the zip code of Lyla address of where she lives? | Do you mean the zip code of the teacher with first name Lyla's address? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select addresses.zip_postcode from addresses join teachers on addresses.address_id = teachers.address_id where teachers.first_name = 'Lyla'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "where is the city where Lyla stays? | do you mean the first name? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select addresses.city from addresses join teachers on addresses.address_id = teachers.address_id where teachers.first_name = 'Lyla'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "what's Lyla last name? | select last_name from teachers where first_name = 'Lyla' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks! Bye"
  },
  {
    "db_id": "college_2",
    "input": "I'd like to know about the prerequisites for courses\n | select course_id , prereq_id from prereq | What courses have more than one prerequisite?",
    "label": "CONFIRM_SQL",
    "output": "select course_id from prereq group by course_id having count ( * ) > 1"
  },
  {
    "db_id": "college_2",
    "input": "What are the title, credit and department of these courses? | select course.title , course.credits , course.dept_name from course join prereq on course.course_id = prereq.course_id group by prereq.course_id having count ( * ) > 1 | what is the average prerequisite credits for these courses?",
    "label": "SORRY",
    "output": "Sorry, I cannot answer this."
  },
  {
    "db_id": "college_2",
    "input": "how many prerequisite credits are needed? | Which course? | Game programming",
    "label": "CONFIRM_SQL",
    "output": "select sum ( course.credits ) from course join prereq on course.course_id = prereq.course_id join course on course.course_id = prereq.prereq_id where course.title = 'Game Programming'"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "What are the first and last names of all customers who don't have an account? | select customer_first_name , customer_last_name from customers except select customers.customer_first_name , customers.customer_last_name from customers join accounts on customers.customer_id = accounts.customer_id | Can you list the addresses of all customers that have VIP as their other account details?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_address from customers join accounts on customers.customer_id = accounts.customer_id where accounts.other_account_details = 'VIP'"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "COuld you list the account names of all customers with the letter G or A in their first or last names? | select accounts.account_name from customers join accounts on customers.customer_id = accounts.customer_id where customers.customer_first_name like '%G%' or customers.customer_first_name like '%A%' or customers.customer_last_name like '%G%' or customers.customer_last_name like '%A%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "department_store",
    "input": "What is the name and gender of the staff who has been assigned the job of Sales Person but never Clerical Staff? | select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person' except select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Clerical Staff' | What's the name and gender of the staff with the job of Sales Person?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person'"
  },
  {
    "db_id": "department_store",
    "input": "What's the name and gender of the staff who was never assigned to Clerical Staff. | select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id except select staff.staff_name , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Clerical Staff' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "phone_1",
    "input": "how many phones are presented on the table | Did you mean to ask for the number of entries in the table phone? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from phone"
  },
  {
    "db_id": "phone_1",
    "input": "list out the company name | select company_name from phone | list the hardware model name",
    "label": "CONFIRM_SQL",
    "output": "select hardware_model_name from phone"
  },
  {
    "db_id": "phone_1",
    "input": "what is the chip model of XPERIA T, XPERIA J | select chip_model from phone where hardware_model_name = 'XPERIA T, XPERIA J' | thanks",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "sakila_1",
    "input": "What are the districts of the addresses? | select district from address | OK, which of them have more than 3 districts?",
    "label": "CLARIFY",
    "output": "What do you mean for a district to have more than 3 districts?"
  },
  {
    "db_id": "sakila_1",
    "input": "How about the district which has at least two addresses? | select district from address group by district having count ( * ) >= 2 | Thanks",
    "label": "GOOD_BYE",
    "output": "Anytime."
  },
  {
    "db_id": "race_track",
    "input": "count the number of records for each track id | do you mean count the number of race ids for each track id? | How about this--list all track Ids",
    "label": "CONFIRM_SQL",
    "output": "select track_id from track"
  },
  {
    "db_id": "race_track",
    "input": "add a column for track name | select track_id , name from track | add a column showing the total number of rows in the table race that contain each of the Track_IDs",
    "label": "CONFIRM_SQL",
    "output": "select track.track_id , track.name , count ( * ) from race join track on race.track_id = track.track_id group by race.track_id"
  },
  {
    "db_id": "race_track",
    "input": "Filter the list to show only those rows with a number in the count column that is greater than 1 | select track.track_id , track.name , count ( * ) from race join track on race.track_id = track.track_id group by race.track_id having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "station_weather",
    "input": "How many trains are there per station? | select route.station_id , count ( * ) from station join route on station.id = route.station_id group by route.station_id | What are the station network names?",
    "label": "CONFIRM_SQL",
    "output": "select network_name from station"
  },
  {
    "db_id": "station_weather",
    "input": "What services do they offer? | select services from station | Thanks",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "department_store",
    "input": "List all staff names with their gender... | select staff_name , staff_gender from staff | List all department id's with their corresponding job title code.",
    "label": "CONFIRM_SQL",
    "output": "select department_id , job_title_code from staff_department_assignments"
  },
  {
    "db_id": "department_store",
    "input": "How many staffs are working as Sales Person or Clerical Staff? | select count ( * ) from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Sales Person' or staff_department_assignments.job_title_code = 'Clerical Staff' | Find the id and name of the staff who has been assigned for the shortest period.",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_id , staff.staff_name from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id order by date_assigned_to - date_assigned_from asc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Do you mean the email of the student with a last name Rohan? | Yes! | Do you mean the first, middle, and last names?",
    "label": "AFFIRM",
    "output": "Yes!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the emails of the students with the first name Emma? | select email_address from students where first_name = 'Emma' | What about last name Rohan?",
    "label": "CONFIRM_SQL",
    "output": "select email_address from students where last_name = 'Rohan'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is that person's student id? | select student_id from students where last_name = 'Rohan' | What is the name of the student with id 4?",
    "label": "CONFIRM_SQL",
    "output": "select first_name , middle_name , last_name from students where student_id = 4"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is their email address? | select email_address from students where student_id = 4 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "formula_1",
    "input": "Hello!  Can you give me a list of all of the forenames and surnames of the various drivers? | select forename , surname from drivers | Great!  Can you filter this list to show just the forename and surname of the driver who has the smallest lap time?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.forename , drivers.surname from drivers join laptimes on drivers.driverid = laptimes.driverid order by laptimes.milliseconds asc limit 1"
  },
  {
    "db_id": "formula_1",
    "input": "Perfect!  Can you tell me what the nationality or country of origin of Lewis and Hamilton is? | select nationality from drivers where forename = 'Lewis' and surname = 'Hamilton' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem. Bye!"
  },
  {
    "db_id": "network_2",
    "input": "What is the average age of all males? | select avg ( age ) from person where gender = 'male' | What are all the jobs of males?",
    "label": "CONFIRM_SQL",
    "output": "select job from person where gender = 'male'"
  },
  {
    "db_id": "network_2",
    "input": "What are the average ages of male engineers and male doctors? | select avg ( age ) , job from person where gender = 'male' group by job | Thanks!",
    "label": "GOOD_BYE",
    "output": "Goodbye."
  },
  {
    "db_id": "store_1",
    "input": "What are the top 5 genres? | Do you mean sort by the id number? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select id , name from genres order by id desc limit 5"
  },
  {
    "db_id": "store_1",
    "input": "Could you please provide the total tracks on each top 5 genres by number of tracks? | select genres.id , count ( * ) from genres join tracks on tracks.genre_id = genres.id group by genres.id order by count ( * ) desc limit 5 | Do you have the best composer of each top 5 genre by number of tracks?",
    "label": "CONFIRM_SQL",
    "output": "select genres.id , tracks.composer from genres join tracks on tracks.genre_id = genres.id group by genres.id order by count ( * ) desc limit 5"
  },
  {
    "db_id": "store_1",
    "input": "Overall, do you have the best ranked composer? | I do not quite understand what you mean. Do you mean rank by milliseconds? | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select composer from tracks order by milliseconds asc"
  },
  {
    "db_id": "hr_1",
    "input": "Could you please display the first name and last name of each employee? | select first_name , last_name from employees | Could you add in their departments please?",
    "label": "CONFIRM_SQL",
    "output": "select employees.first_name , employees.last_name , departments.department_name from employees join departments on employees.department_id = departments.department_id"
  },
  {
    "db_id": "hr_1",
    "input": "Could you also list their cities and state provinces? | select employees.first_name , employees.last_name , departments.department_name , locations.city , locations.state_province from employees join departments on employees.department_id = departments.department_id join locations on departments.location_id = locations.location_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "flight_4",
    "input": "WHAT IS THE AIRPORT NAME OF GORKA CITY IN AIRPORT TABLE? | select name from airports where city = 'Goroka' | MADANG CITY SITUATED IN WHICH COUNTRY? IN AIRPORT TABLE",
    "label": "CONFIRM_SQL",
    "output": "select country from airports where city = 'Madang'"
  },
  {
    "db_id": "flight_4",
    "input": "WHAT IS THE ROUTE ID OF AIRLINE 410? IN ROUTE TABLE? | * I have left the chat * | select distinct rid from routes where alid = '410'",
    "label": "THANK_YOU",
    "output": "THANKS!"
  },
  {
    "db_id": "ship_1",
    "input": "When is the soonest to be captains in different class?\n | What do you mean by soonest? | the minimum age?\n",
    "label": "INFORM_SQL",
    "output": "Who is the oldest in the list?\n"
  },
  {
    "db_id": "ship_1",
    "input": "select name from captain order by age desc limit 1 | what is the rank of Captain Gilbert Pears?\n | select rank from captain where name = 'Captain Gilbert Pears'",
    "label": "INFORM_SQL",
    "output": "What's about Captain Sir Henry Langford?"
  },
  {
    "db_id": "ship_1",
    "input": "select rank from captain where name = 'Captain Henry Dumaresq' | Is Captain Sir Henry Langford the youngest in third-rate ship of the line class? | select name from captain where class = 'Third-rate ship of the line' order by age asc limit 1",
    "label": "THANK_YOU",
    "output": "Thanks!\n"
  },
  {
    "db_id": "voter_2",
    "input": "How many students are voting in the spring election cycle?\n | select count ( * ) from student join voting_record on student.stuid = secretary_vote where voting_record.election_cycle = 'Spring' | How many are females that are voting in the election cycle ?",
    "label": "CLARIFY",
    "output": "Did you want the number of females that are voting in the spring election cycle?"
  },
  {
    "db_id": "voter_2",
    "input": "Yes | select count ( * ) from student join voting_record on student.stuid = secretary_vote where student.sex = 'F' and voting_record.election_cycle = 'Spring' | What are the ages of everyone voting in the Spring election cycle ?",
    "label": "CONFIRM_SQL",
    "output": "select student.age from student join voting_record on student.stuid = secretary_vote where voting_record.election_cycle = 'Spring'"
  },
  {
    "db_id": "sakila_1",
    "input": "Can you show me the first names of customers who have a rental date on or before 2005-08-23? | select first_name from customer where customer_id in ( select customer_id from rental where rental_date <= '2005-08-23 00:00:00' ) | Hmm, I want to know the customer ids who have not rented any films after '2005-08-23 02:06:01' please.",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from customer where customer_id not in ( select customer_id from rental where rental_date > '2005-08-23 02:06:01' )"
  },
  {
    "db_id": "sakila_1",
    "input": "Can you just show me the first names of those customers? | select first_name from customer where customer_id not in ( select customer_id from rental where rental_date > '2005-08-23 02:06:01' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "college_2",
    "input": "How many courses are there? | select count ( * ) from course | How many courses are in Mech. eng?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from course where dept_name = 'Mech. Eng.'"
  },
  {
    "db_id": "college_2",
    "input": "Out of those 12 how many of them are more than 3 credits? | select count ( * ) from course where dept_name = 'Mech. Eng.' and credits > 3 | Are any of these courses offered by more than one department?",
    "label": "CLARIFY",
    "output": "Did you mean the same course titles?"
  },
  {
    "db_id": "college_2",
    "input": "Yes are there any courses \"same title\" in the list that are offered by more than one department? | select distinct ( dept_name ) from course where title in ( select title from course where dept_name = 'Mech. Eng.' and credits > 3 ) and dept_name != 'Mech. Eng.' | How many of those courses are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from course where title in ( select title from course where dept_name = 'Mech. Eng.' and credits > 3 ) and dept_name != 'Mech. Eng.'"
  },
  {
    "db_id": "sakila_1",
    "input": "How many stores are there? | select count ( distinct store_id ) from inventory | Which store owns the fewest items?",
    "label": "CONFIRM_SQL",
    "output": "select * from inventory group by store_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "And which stores owns the most items? | select * from inventory group by store_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "body_builder",
    "input": "What are the birth places that are shared by at least two people? | select birth_place from people group by birth_place having count ( * ) >= 2 | what is the name of the person who weighs the most?",
    "label": "CONFIRM_SQL",
    "output": "select name from people order by weight desc limit 1"
  },
  {
    "db_id": "body_builder",
    "input": "what is the name of the person who weighs the least? | select name from people order by weight asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "wine_1",
    "input": "Hi, could you find the appellations that produce wines after the year of 2008 but not in Central Coast area. | select appelation from wine where year > 2008 except select appelation from appellations where area = 'Central Coast' | How many produce in the sierra foothills?",
    "label": "CLARIFY",
    "output": "Did you want the number of appelations that produce wine in the Sierra Foothills?"
  },
  {
    "db_id": "wine_1",
    "input": "yes | select count ( * ) from appellations where area = 'Sierra Foothills' | How many appellations produce wine in Napa Valley?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from appellations where county = 'Napa'"
  },
  {
    "db_id": "wine_1",
    "input": "How many appellations produce wine in St. Helena? | select count ( * ) from wine where appelation = 'St. Helena' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "train_station",
    "input": "Hello there!  Can you show me a list of all of the train station names? | select name from station | Great!  Can you update this list to show the main services and total number of passengers that are associated with each name?",
    "label": "CONFIRM_SQL",
    "output": "select main_services , total_passengers , name from station"
  },
  {
    "db_id": "train_station",
    "input": "Thank you!  Can you filter that list to show the contents of the rows which are have the top three highest number of passengers? | select * from station order by total_passengers desc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Goodbye!"
  },
  {
    "db_id": "station_weather",
    "input": "Which station has the highest average high temperature? | Which attributes of this station do you want? | The station name.",
    "label": "CONFIRM_SQL",
    "output": "select station.network_name from weekly_weather join station on weekly_weather.station_id = station.id group by weekly_weather.station_id order by avg ( high_temperature ) desc limit 1"
  },
  {
    "db_id": "station_weather",
    "input": "What is Charleywood's ID? | select id from station where network_name = 'Chorleywood' | What is the local authority of Chorleywood, ID 10?",
    "label": "CONFIRM_SQL",
    "output": "select local_authority from station where network_name = 'Chorleywood'"
  },
  {
    "db_id": "college_3",
    "input": "Can you please list the full names of all male faculty members and the buildings they live in? | select fname , lname , building from faculty where sex = 'M' | Could you narrow that down to just male faculty members in the NEB building?",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from faculty where sex = 'M' and building = 'NEB'"
  },
  {
    "db_id": "college_3",
    "input": "What rooms do they live in? Please add it to the table. | select fname , lname , room from faculty where sex = 'M' and building = 'NEB' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "soccer_2",
    "input": "How many colleges have enrollment greater than 18000? | select count ( * ) from college where enr > 18000 | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college where enr > 18000"
  },
  {
    "db_id": "soccer_2",
    "input": "Which one has the higher enrollment? | select cname from college where enr > 18000 order by enr desc limit 1 | What is the enrollment for OU?",
    "label": "CONFIRM_SQL",
    "output": "select enr from college where cname = 'OU'"
  },
  {
    "db_id": "soccer_2",
    "input": "And for LSU? | Would you like to know the enrollment for the college named LSU? | Yes I would.",
    "label": "CONFIRM_SQL",
    "output": "select enr from college where cname = 'LSU'"
  },
  {
    "db_id": "soccer_2",
    "input": "In which state is LSU located? | select state from college where cname = 'LSU' | And the state for OU?",
    "label": "CONFIRM_SQL",
    "output": "select state from college where cname = 'OU'"
  },
  {
    "db_id": "department_management",
    "input": "Which department has more than 1 head at a time? List the ID, Name  and the number of heads. | select department.department_id , department.name , count ( * ) from management join department on department.department_id = management.department_id group by department.department_id having count ( * ) > 1 | Which Department has the most number of employee? tell me the rank and creation year.",
    "label": "CONFIRM_SQL",
    "output": "select ranking , creation from department where num_employees = ( select max ( num_employees ) from department )"
  },
  {
    "db_id": "department_management",
    "input": "Which Department has the least number of employee? tell me the rank and creation year. | select ranking , creation from department where num_employees = ( select min ( num_employees ) from department ) | Which Department has the highest Budget value? tell me the rank and creation year.",
    "label": "CONFIRM_SQL",
    "output": "select ranking , creation from department where budget_in_billions = ( select max ( budget_in_billions ) from department )"
  },
  {
    "db_id": "e_learning",
    "input": "Can you list the IDs and middle names of all students who have no more than 2 enrollments? | select student_course_enrolment.student_id , students.middle_name from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id having count ( * ) <= 2 | What are the dates of enrollment and completion for each of those students? Please list it in the table.",
    "label": "CONFIRM_SQL",
    "output": "select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id having count ( * ) <= 2"
  },
  {
    "db_id": "e_learning",
    "input": "What is the full name of the student with the latest date of completion? | select students.personal_name , students.middle_name , students.family_name from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id order by student_course_enrolment.date_of_completion desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! bye"
  },
  {
    "db_id": "department_store",
    "input": "What are the names of all the products supplied by supplier id 3, please? | select products.product_name from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 3 | What are the product types of those?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_type_code from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 3"
  },
  {
    "db_id": "department_store",
    "input": "What are the prices of those? | select products.product_price from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 3 | What are the prices of those?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_price from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 3"
  },
  {
    "db_id": "department_store",
    "input": "What supplier id carries the product name red jeans? | select product_suppliers.supplier_id from product_suppliers join products on product_suppliers.product_id = products.product_id where products.product_name = 'red jeans' | What is the total amount purchased of those?",
    "label": "CONFIRM_SQL",
    "output": "select product_suppliers.supplier_id , product_suppliers.total_amount_purchased from product_suppliers join products on product_suppliers.product_id = products.product_id where products.product_name = 'red jeans'"
  },
  {
    "db_id": "department_store",
    "input": "Thanks! | You are welcome! Anything else? | Oh, awesome! That's all, thank you! Have a great day!",
    "label": "WELCOME",
    "output": "Thank you too! Have a nice day! Bye!"
  },
  {
    "db_id": "storm_record",
    "input": "Hi can you tell me the name of the regions not affected by storms? | select region_name from region where region_id not in ( select region_id from affected_region ) | Can you tell me the names of the cities affected by storm?",
    "label": "CONFIRM_SQL",
    "output": "select region_name from region where region_id in ( select region_id from affected_region )"
  },
  {
    "db_id": "storm_record",
    "input": "Was Afghanistan affected by storm? | select affected_region.storm_id from region join affected_region on region.region_id = affected_region.region_id where region.region_name = 'Afghanistan' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many apartments in this table? | select count ( * ) from apartments | How many flats in this table?",
    "label": "CLARIFY",
    "output": "Do you mean the number of apartments whose type code is Flat?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Yes. | select count ( * ) from apartments where apt_type_code = 'Flat' | What is the number of apartments whose type code is studio?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartments where apt_type_code = 'Studio'"
  },
  {
    "db_id": "customer_complaints",
    "input": "How many customers are there? | select count ( * ) from customers | How many complaints did each customer file?",
    "label": "CLARIFY",
    "output": "Did you want the customer ids and number of complaints fold for each customer?"
  },
  {
    "db_id": "customer_complaints",
    "input": "Yes, please. | select customer_id , count ( * ) from complaints group by customer_id | Can you tell me the id of the product with most complaints?",
    "label": "CONFIRM_SQL",
    "output": "select product_id from complaints group by product_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "customer_complaints",
    "input": "What are the emails of the customers who filed a complaint of this product? | select customers.email_address from customers join complaints on customers.customer_id = complaints.customer_id where complaints.product_id = 117 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "voter_2",
    "input": "how many females have president votes? | select count ( * ) from student join voting_record on student.stuid = voting_record.president_vote where student.sex = 'F' | what are there first and last names?",
    "label": "CONFIRM_SQL",
    "output": "select distinct student.fname , student.lname from student join voting_record on student.stuid = voting_record.president_vote where student.sex = 'F'"
  },
  {
    "db_id": "voter_2",
    "input": "how many votes did she get? | Do you mean the total votes in four election or list them separately? | the total votes",
    "label": "CONFIRM_SQL",
    "output": "select sum ( voting_record.president_vote ) from student join voting_record on student.stuid = voting_record.president_vote where student.sex = 'F'"
  },
  {
    "db_id": "voter_2",
    "input": "how many of those votes were from the secretary? | select sum ( voting_record.secretary_vote ) from student join voting_record on student.stuid = voting_record.president_vote where student.sex = 'F' | how many were from the vice president?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( voting_record.vice_president_vote ) from student join voting_record on student.stuid = voting_record.president_vote where student.sex = 'F'"
  },
  {
    "db_id": "department_management",
    "input": "In which year were most departments established? | select creation from department group by creation order by count ( * ) desc limit 1 | How many different departments were created in 1789?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from department group by creation order by count ( * ) desc limit 1"
  },
  {
    "db_id": "department_management",
    "input": "What are the names of those two departments? | select name from department group by creation order by count ( * ) desc limit 1 | How many employees does the Treasury Department have?",
    "label": "CONFIRM_SQL",
    "output": "select num_employees from department where name = 'Treasury'"
  },
  {
    "db_id": "department_management",
    "input": "What is the budget in billions of the Treasury Department? | select budget_in_billions from department where name = 'Treasury' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Show me the project id | Do you mean you wanna see the whole project id of the table \"Projects\"? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select project_id from projects"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Show me the details for the whole project id of the table \"projects\" | select project_id , project_details from projects | Show me the project id and details for the project with at least two documents",
    "label": "CONFIRM_SQL",
    "output": "select projects.project_id , projects.project_details from projects join documents on projects.project_id = documents.project_id group by projects.project_id having count ( * ) > 2"
  },
  {
    "db_id": "sports_competition",
    "input": "Show me all the types of competitions? | select distinct ( competition_type ) from competition | list the types of most five competitions?",
    "label": "CLARIFY",
    "output": "What do you mean by \"most five?\""
  },
  {
    "db_id": "sports_competition",
    "input": "show me the types of competition that have atleast five competition of that type | select competition_type from competition group by competition_type having count ( * ) >= 5 | show me the types of competition that has at most competitions of that type",
    "label": "CONFIRM_SQL",
    "output": "select competition_type from competition group by competition_type having count ( * ) <= 5"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "List the order cancelled customer id from the table? | select order_id , customer_id from customer_orders where order_status = 'Cancelled' | Which order id has the least quantity on the list?",
    "label": "CONFIRM_SQL",
    "output": "select order_id from order_items order by order_quantity asc limit 1"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What is the total number of products that are in orders with status \"Cancelled\"? | select sum ( order_items.order_quantity ) from customer_orders join order_items on customer_orders.order_id = order_items.order_id where customer_orders.order_status = 'Cancelled' | How many customer ids has the \"delivered\" status on the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( customer_id ) from customer_orders where order_status = 'Delivered'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the visit date of the visitor whose detail is \"Vincent\"? | select visits.visit_date from visitors join visits on visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' | What is his tourist ID?",
    "label": "CONFIRM_SQL",
    "output": "select visitors.tourist_id from visitors join visits on visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What is his visit details? | select visits.visit_details from visitors join visits on visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "department_store",
    "input": "What product id was ordered most often?\n | select product_id from order_items group by product_id order by count ( * ) desc limit 1 | and the product ID that was ordered least often?",
    "label": "CONFIRM_SQL",
    "output": "select product_id from order_items group by product_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "How many times was product id 2 ordered? | select count ( * ) from order_items group by product_id having product_id = '2' | How many times was product id 13 ordered?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from order_items group by product_id having product_id = '13'"
  },
  {
    "db_id": "department_store",
    "input": "What was the last order id for product id 13? | Sorry, I cannot answer this question. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Hello There! Can you provide me with a list of all customer names? | select customer_name from customers | Thank you for that!  Can you filter that list to show only the customers living in Colorado?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id where addresses.state_province_county = 'Colorado'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Great!  Can you update this list to show their address content, city, and zip code? | select customers.customer_name , addresses.address_content , addresses.city , addresses.zip_postcode from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id where addresses.state_province_county = 'Colorado' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks, good bye"
  },
  {
    "db_id": "pilot_record",
    "input": "Can you please show the names of all pilots and fleet series of the aircrafts they have flown in ascending order of the rank of the pilot? | select pilot.pilot_name , aircraft.fleet_series from pilot_record join aircraft on pilot_record.aircraft_id = aircraft.aircraft_id join pilot on pilot_record.pilot_id = pilot.pilot_id order by pilot.rank asc | Can you add the pilot ranks into the table please?",
    "label": "CONFIRM_SQL",
    "output": "select pilot.pilot_name , aircraft.fleet_series , pilot.rank from pilot_record join aircraft on pilot_record.aircraft_id = aircraft.aircraft_id join pilot on pilot_record.pilot_id = pilot.pilot_id order by pilot.rank asc"
  },
  {
    "db_id": "pilot_record",
    "input": "What are each of those pilots' nationalities? | Do  you  want  to  konw  Pilot name and related pilots' nationalities? | Yes, please.",
    "label": "CONFIRM_SQL",
    "output": "select pilot_name , nationality from pilot"
  },
  {
    "db_id": "pilot_record",
    "input": "Can you tell me their positions too please? | select pilot_name , nationality , position from pilot | What kind of fuel propulsion do these pilots' aircrafts use?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( fuel_propulsion ) from aircraft"
  },
  {
    "db_id": "aircraft",
    "input": "What are the total number of domestic passengers of airports that contain the word \"London\"? | select sum ( domestic_passengers ) from airport where airport_name like '%London%' | What about with a name like 'Heathrow'?\n",
    "label": "CONFIRM_SQL",
    "output": "select sum ( domestic_passengers ) from airport where airport_name like '%Heathrow%'"
  },
  {
    "db_id": "aircraft",
    "input": "what about international passengers?\n | select sum ( international_passengers ) from airport where airport_name like '%Heathrow%' | what percentage of the total passengers at airports with a name like 'heathrow' are international? ",
    "label": "CONFIRM_SQL",
    "output": "select 100 * sum ( international_passengers ) / sum ( total_passengers ) from airport where airport_name like '%Heathrow%'"
  },
  {
    "db_id": "news_report",
    "input": "Can you please list the names of the journalists in a table with the number of events they each reported? | select journalist.name , count ( * ) from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id group by journalist.name | Can you add their ages and nationalities to the table please?",
    "label": "CONFIRM_SQL",
    "output": "select journalist.name , journalist.age , journalist.nationality , count ( * ) from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id group by journalist.name"
  },
  {
    "db_id": "news_report",
    "input": "What is the name of the event that the oldest journalist reported on? | select journalist.name , event.name from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id where journalist.age = ( select max ( age ) from journalist ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "network_2",
    "input": "Hi, how many people have friends with ages above 40?\n | select count ( * ) from person join personfriend on person.name = personfriend.name where personfriend.friend in ( select name from person where age > 40 ) | Great. What is that person's name?",
    "label": "CONFIRM_SQL",
    "output": "select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend in ( select name from person where age > 40 )"
  },
  {
    "db_id": "network_2",
    "input": "Ok. Does Bob have any friends under 30? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.name = 'BOB' and personfriend.friend in ( select name from person where age < 30 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome. bye!"
  },
  {
    "db_id": "music_1",
    "input": "How many artists have recorded at least one song in English? | select count ( * ) from ( select * from artist join song on artist.artist_name = song.artist_name where song.languages = 'english' group by song.artist_name having count ( * ) >= 1 ) | What are the names of the artists?",
    "label": "CONFIRM_SQL",
    "output": "select artist.artist_name from artist join song on artist.artist_name = song.artist_name where song.languages = 'english' group by song.artist_name having count ( * ) >= 1"
  },
  {
    "db_id": "music_1",
    "input": "How many songs has Enrique recorded? | select count ( * ) from artist join song on artist.artist_name = song.artist_name where artist.artist_name = 'Enrique' | What about the other artist?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from artist join song on artist.artist_name = song.artist_name where artist.artist_name = ( select artist.artist_name from artist join song on artist.artist_name = song.artist_name where song.languages = 'english' and artist.artist_name != 'Enrique' group by song.artist_name having count ( * ) >= 1 )"
  },
  {
    "db_id": "student_1",
    "input": "Which classroom has the most students? | select classroom from list group by classroom order by count ( * ) desc limit 1 | How many boys are in that classroom?",
    "label": "REJECT",
    "output": "I do not have information about gender in the table."
  },
  {
    "db_id": "student_1",
    "input": "what grade is that classroom? | select grade from list group by classroom order by count ( * ) desc limit 1 | What is the teacher's last name?",
    "label": "CONFIRM_SQL",
    "output": "select lastname from list group by classroom order by count ( * ) desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "Who placed order after having order cancelled?\n | select distinct customer_id from customer_orders where order_date > ( select min ( order_date ) from customer_orders where order_status_code = 'Cancelled' ) | What is the order status for order 3",
    "label": "CONFIRM_SQL",
    "output": "select order_status_code from customer_orders where order_id = 3"
  },
  {
    "db_id": "activity_1",
    "input": "Can you rank the faculty for me by ID | what  ID  did  you  want  to  order by ? | How many students were advised by professors?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty join student on faculty.facid = student.advisor where faculty.rank = 'Professor'"
  },
  {
    "db_id": "activity_1",
    "input": "How many students were advised by instructors ?\n | select count ( * ) from faculty join student on faculty.facid = student.advisor where faculty.rank = 'Instructor' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  goodbye "
  },
  {
    "db_id": "storm_record",
    "input": "Were Afghanistan and Albania affected by the same storm at anytime?  | select storm.name from affected_region join region on affected_region.region_id = region.region_id join storm on affected_region.storm_id = storm.storm_id where region.region_name = 'Afghanistan' intersect select storm.name from affected_region join region on affected_region.region_id = region.region_id join storm on affected_region.storm_id = storm.storm_id where region.region_name = 'Albania' | What was the name of the storm that affected Afghanistan and Albania between May 19 and May 25?",
    "label": "CONFIRM_SQL",
    "output": "select storm.name from affected_region join region on affected_region.region_id = region.region_id join storm on affected_region.storm_id = storm.storm_id where region.region_name = 'Afghanistan' and storm.dates_active = 'May19–May25' intersect select storm.name from affected_region join region on affected_region.region_id = region.region_id join storm on affected_region.storm_id = storm.storm_id where region.region_name = 'Albania' and storm.dates_active = 'May19–May25'"
  },
  {
    "db_id": "storm_record",
    "input": "What storm affected city 10.0 and 15.0? | do you mean the name of storm that affected city 10 and 15? | Yes\n",
    "label": "CONFIRM_SQL",
    "output": "select storm.name from storm join affected_region on storm.storm_id = affected_region.storm_id where affected_region.number_city_affected = 10.0 or affected_region.number_city_affected = 15.0"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the most expensive procedure? | Do you mean the name of the procedure with the highest cost? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select name from procedures order by cost desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "How many physicians are trained in Complete Walletectomy? | select count ( * ) from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where procedures.name = 'Complete Walletectomy' | What is that physician's name?",
    "label": "CONFIRM_SQL",
    "output": "select physician.name from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where procedures.name = 'Complete Walletectomy'"
  },
  {
    "db_id": "hospital_1",
    "input": "When were they trained in that procedure? | Do you mean the certification date and the expired date of the procedure named Complete Walletectomy? | The certification date.",
    "label": "CONFIRM_SQL",
    "output": "select trained_in.certificationdate from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where procedures.name = 'Complete Walletectomy'"
  },
  {
    "db_id": "department_store",
    "input": "Can you please list the product which has the lowest value for product price? | select * from products order by product_price asc limit 1 | Can you list only the product id and the product type please?",
    "label": "CONFIRM_SQL",
    "output": "select product_id , product_type_code from products order by product_price asc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "Please find the names of the dorms that do not have any amenities? | select dorm_name from dorm where dormid not in ( select dormid from has_amenity ) | Which dorm has the highest student capacity?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_name from dorm order by student_capacity desc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "What about the lowest student capacity? | select dorm_name from dorm order by student_capacity asc limit 1 | What is the average student capacity of all dorms?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( student_capacity ) from dorm"
  },
  {
    "db_id": "dorm_1",
    "input": "What is the dorm ID of the dorm with the lowest student capacity? | select dormid from dorm order by student_capacity asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Bye!"
  },
  {
    "db_id": "e_learning",
    "input": "What is the name of the course that has the most student enrollment?\n | select courses.course_name from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id group by courses.course_name order by count ( * ) desc limit 1 | How many students are enrolled in French?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student_course_enrolment join courses on courses.course_id = student_course_enrolment.course_id where course_name = 'French'"
  },
  {
    "db_id": "e_learning",
    "input": "What is the name of the course that has the least student enrollment? | select courses.course_name from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id group by courses.course_name order by count ( * ) asc limit 1 | How many students are enrolled in Chinese Painting?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student_course_enrolment join courses on courses.course_id = student_course_enrolment.course_id where course_name = 'Chinese Painting'"
  },
  {
    "db_id": "e_learning",
    "input": "What is this student's name? | There no info about the name of the student. How about the id of the student? | What is the ID of this student?",
    "label": "CONFIRM_SQL",
    "output": "select student_id from student_course_enrolment join courses on courses.course_id = student_course_enrolment.course_id where course_name = 'Chinese Painting'"
  },
  {
    "db_id": "e_learning",
    "input": "What other classes is this student taking? | select distinct course_name from student_course_enrolment join courses on courses.course_id = student_course_enrolment.course_id where student_id = '15' and course_name != 'Chinese Painting' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "soccer_1",
    "input": "Hello!  Can you tell me how many left footed players there are? | select count ( * ) from player_attributes where preferred_foot = 'left' | Holy smokes that's a lot!  Okay, let's narrow that down.  How many left footed players have a height between 180cm and 190cm?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select player_api_id from player where height >= 180 and height <= 190 intersect select player_api_id from player_attributes where preferred_foot = 'left' )"
  },
  {
    "db_id": "soccer_1",
    "input": "Thank you!  Can you please list player ids for all of the left-footed players with heights between 180cm and 190cm? | select player_api_id from player where height >= 180 and height <= 190 intersect select player_api_id from player_attributes where preferred_foot = 'left' | Great!  Can you tell me the name of the player who is the tallest left-footed player?",
    "label": "CONFIRM_SQL",
    "output": "select player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.preferred_foot = 'left' order by height desc limit 1"
  },
  {
    "db_id": "company_employee",
    "input": "Show the most common headquarter for companies. | select headquarters from company group by headquarters order by count ( * ) desc limit 1 | Which company have a higher sales?",
    "label": "CLARIFY",
    "output": "do you mean which company have a highest sales?"
  },
  {
    "db_id": "company_employee",
    "input": "yes | select name from company order by sales_in_billion desc limit 1 | What are the kinds of industries in the table?",
    "label": "CONFIRM_SQL",
    "output": "select distinct industry from company"
  },
  {
    "db_id": "musical",
    "input": "Which musician has the most number of actors who have appeared in the musicals? | Did you want the name of the musical? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select musical.name from actor join musical on actor.musical_id = musical.musical_id group by actor.musical_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "musical",
    "input": "From which year is it? | select musical.year from actor join musical on actor.musical_id = musical.musical_id group by actor.musical_id order by count ( * ) desc limit 1 | What is the musical id of  Lou Carpenter?",
    "label": "CONFIRM_SQL",
    "output": "select musical.musical_id from actor join musical on actor.musical_id = musical.musical_id where actor.character = 'Lou Carpenter'"
  },
  {
    "db_id": "county_public_safety",
    "input": "Show the name of cities in the county that has the largest number of police officers. | select name from city where county_id = ( select county_id from county_public_safety order by police_officers desc limit 1 ) | How many police officers are in Albonito?",
    "label": "CLARIFY",
    "output": "Do you mean 'Aibonito' not 'Albonito'?"
  },
  {
    "db_id": "county_public_safety",
    "input": "Yes Aibonito, my mistake | select police_officers from county_public_safety where county_id = ( select county_id from city where name = 'Aibonito' ) | What is the population of Aibonito?",
    "label": "CONFIRM_SQL",
    "output": "select population from county_public_safety where county_id = ( select county_id from city where name = 'Aibonito' )"
  },
  {
    "db_id": "county_public_safety",
    "input": "What is the crime rate in Aibonito? | select crime_rate from county_public_safety where county_id = ( select county_id from city where name = 'Aibonito' ) | How many residents per officer are there in Aibonito?",
    "label": "CONFIRM_SQL",
    "output": "select residents_per_officer from county_public_safety where county_id = ( select county_id from city where name = 'Aibonito' )"
  },
  {
    "db_id": "storm_record",
    "input": "what is the average of high speed? | Did you mean to ask for the average max speed of the storms? | yes",
    "label": "CONFIRM_SQL",
    "output": "select avg ( max_speed ) from storm"
  },
  {
    "db_id": "storm_record",
    "input": "what is the highest speed of the storms? | select max ( max_speed ) from storm | what is the total number of deaths? ",
    "label": "CONFIRM_SQL",
    "output": "select sum ( number_deaths ) from storm"
  },
  {
    "db_id": "flight_4",
    "input": "What are all the source airports? | select routes.src_apid , routes.src_ap , airports.name from airports join routes on airports.apid = routes.src_apid group by airports.name | What are all of the routes for each source airport?",
    "label": "CLARIFY",
    "output": "do you mean the number of all of the routes?"
  },
  {
    "db_id": "flight_4",
    "input": "Yes please. | select count ( * ) from airports join routes on airports.apid = routes.src_apid group by airports.name | What are the names of the airports associated with each number of routes?",
    "label": "CONFIRM_SQL",
    "output": "select airports.name , count ( * ) from airports join routes on airports.apid = routes.src_apid group by airports.name"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "can you list the products that have problems  | Did you mean to ask for the product names of products that have problems? | yes",
    "label": "CONFIRM_SQL",
    "output": "select product.product_name from problems join product on problems.product_id = product.product_id"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "give me all the problem ids | select product.product_id from problems join product on problems.product_id = product.product_id | list all product details ",
    "label": "CONFIRM_SQL",
    "output": "select product.product_details from problems join product on problems.product_id = product.product_id"
  },
  {
    "db_id": "news_report",
    "input": "Did you mean in ascending order of event attendance? | Yes | Show the names of journalists and the names of the events they reported in ascending order",
    "label": "CONFIRM_SQL",
    "output": "select journalist.name , event.name from news_report join event on news_report.event_id = event.event_id join journalist on news_report.journalist_id = journalist.journalist_id order by event.event_attendance asc"
  },
  {
    "db_id": "news_report",
    "input": "Hmm, interesting. What is the nationality of Jackie Waring? | Do you mean the journalist Jackie Waring? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select nationality from journalist where name = 'Jackie Waring'"
  },
  {
    "db_id": "news_report",
    "input": "What other Journalists have England as their nationality?  | select * from journalist where name != 'Jackie Waring' and nationality = 'England' | How old is Herbert Swindells?",
    "label": "CONFIRM_SQL",
    "output": "select age from journalist where name = 'Herbert Swindells'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Hello there!  Can you provide me with a list of all of the customer names and their corresponding payment methods? | select customer_name , payment_method from customers | Can you filter the list to show only the row that corresponds with the most popular payment method?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers where payment_method = ( select payment_method from customers group by payment_method order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Thank you for that!  Can you tell me what the most popular payment method is? | select payment_method from customers group by payment_method order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome. If you don't have any more questions, good bye."
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the name of the customer who was involved in the most policies, please? | select customers.customer_details from policies join customers on policies.customer_id = customers.customer_id group by customers.customer_details order by count ( * ) desc limit 1 | What is her customer id?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_id , customers.customer_details from policies join customers on policies.customer_id = customers.customer_id group by customers.customer_details order by count ( * ) desc limit 1"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What are her customer details, please? | select customers.customer_id , customers.customer_details from policies join customers on policies.customer_id = customers.customer_id group by customers.customer_details order by count ( * ) desc limit 1 | What is her policy type code?",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from policies where customer_id = 380"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is her start date for each of those? | select policy_type_code , start_date from policies where customer_id = 380 | How about the end date, please?",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code , start_date , end_date from policies where customer_id = 380"
  },
  {
    "db_id": "shop_membership",
    "input": "How many cities have a branch with 100 membership? | select count ( distinct city ) from branch where membership_amount > 100 | show all the branches opened in 2000?",
    "label": "CONFIRM_SQL",
    "output": "select branch_id from branch where open_year = 2000"
  },
  {
    "db_id": "shop_membership",
    "input": "Which year was Stanley open? | select open_year from branch where name = 'Stanley' | What is the address road of Stanley?",
    "label": "CONFIRM_SQL",
    "output": "select address_road from branch where name = 'Stanley'"
  },
  {
    "db_id": "customer_complaints",
    "input": "What date was the most recent complaint raised? | select date_complaint_raised from complaints order by date_complaint_raised desc limit 1 | Was this complaint closed?",
    "label": "CLARIFY",
    "output": "Do you mean whether the complaint which raised at 2007-10-14 21:50:43 was closed?"
  },
  {
    "db_id": "customer_complaints",
    "input": "Correct. Has the complaint raised at 2007-10-14 21:50:43 been closed? | select date_complaint_closed from complaints where date_complaint_raised = '2007-10-14 21:50:43' | What is the customer id for that complaint?",
    "label": "CLARIFY",
    "output": "Do you mean the customer id for the complaint which raised at 2007-10-14 21:50:43?"
  },
  {
    "db_id": "customer_complaints",
    "input": "Correct. What is the customer id for the complaint raised at 2007-10-14 21:50:43?\n | select customer_id from complaints where date_complaint_raised = '2007-10-14 21:50:43' | What is the phone number for customer id 118?\n",
    "label": "CONFIRM_SQL",
    "output": "select phone_number from customers where customer_id = 118"
  },
  {
    "db_id": "restaurant_1",
    "input": "How many Restaurants are there? | select count ( * ) from restaurant | How many of these are sandwich restaurants?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from restaurant join type_of_restaurant on restaurant.resid = type_of_restaurant.resid join restaurant_type on type_of_restaurant.restypeid = restaurant_type.restypeid group by type_of_restaurant.restypeid having restaurant_type.restypename = 'Sandwich'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What is the name of this restaurant?\n | select resname from restaurant join type_of_restaurant on restaurant.resid = type_of_restaurant.resid join restaurant_type on type_of_restaurant.restypeid = restaurant_type.restypeid group by type_of_restaurant.restypeid having restaurant_type.restypename = 'Sandwich' | Where is Subway located?\n",
    "label": "CONFIRM_SQL",
    "output": "select address from restaurant where resname = 'Subway'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What is Subway's rating? | select rating from restaurant where resname = 'Subway' | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "e_learning",
    "input": "What are the names of the courses | select course_name from courses | What are the student enrollment numbers for those courses",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the course names and respective student enrolment numbers?"
  },
  {
    "db_id": "e_learning",
    "input": "Yes please | select courses.course_name , count ( * ) from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id group by courses.course_name | Thank yoo.",
    "label": "GOOD_BYE",
    "output": "Thank you. Goodbye!"
  },
  {
    "db_id": "inn_1",
    "input": "what is the last name of room id IBS? | Do mean the last name of the reservation for the room with id IBS? | yes",
    "label": "CONFIRM_SQL",
    "output": "select reservations.lastname from reservations join rooms on reservations.room = rooms.roomid where rooms.roomid = 'IBS'"
  },
  {
    "db_id": "inn_1",
    "input": "what is the bed type of the column \"room in HBB ? | Do you mean the bed type for the room with id HBB? | yes",
    "label": "CONFIRM_SQL",
    "output": "select bedtype from rooms where roomid = 'HBB'"
  },
  {
    "db_id": "inn_1",
    "input": "what is the check in and check out of the room id RND ? | select reservations.checkin , reservations.checkout from reservations join rooms on reservations.room = rooms.roomid where rooms.roomid = 'RND' | Find the most popular room in the hotel. The most popular room is the room that had seen the largest number of reservations.",
    "label": "CONFIRM_SQL",
    "output": "select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid group by reservations.room order by count ( * ) desc limit 1"
  },
  {
    "db_id": "company_employee",
    "input": "Show the name of the company with company_id 1.0? | select name from company where company_id = 1.0 | Show the names of companies and that of employees in descending order of number of years working for that employee?",
    "label": "CONFIRM_SQL",
    "output": "select company.name , people.name from employment join people on employment.people_id = people.people_id join company on employment.company_id = company.company_id order by employment.year_working asc"
  },
  {
    "db_id": "company_employee",
    "input": "Show all companies with Headquarters USA? | Did  you  mean   to show the company IDs? | yes",
    "label": "CONFIRM_SQL",
    "output": "select company_id from company where headquarters = 'USA'"
  },
  {
    "db_id": "inn_1",
    "input": "what is the average of rates? | select avg ( rate ) from reservations | show me a list of check outs?",
    "label": "CONFIRM_SQL",
    "output": "select checkout from reservations"
  },
  {
    "db_id": "inn_1",
    "input": "show me a list of check in? | select checkin from reservations | thanks!",
    "label": "REQUEST_MORE",
    "output": "Anything more you would like to know?"
  },
  {
    "db_id": "inn_1",
    "input": "how many adults stay in the room contad selbig checked in on oct 23, 2010? | select count ( adults ) from reservations where checkin = '2010-10-23' and firstname = 'CONRAD' and lastname = 'SELBIG' | thanks!",
    "label": "WELCOME",
    "output": "You're welcome."
  },
  {
    "db_id": "game_injury",
    "input": "how many stadium are presented on the table | select count ( * ) from stadium | list out the stadium names",
    "label": "CONFIRM_SQL",
    "output": "select name from stadium"
  },
  {
    "db_id": "game_injury",
    "input": "what is the average attendance of Cowboys Stadium | select average_attendance from stadium where name = 'Cowboys Stadium' | what is the capacity percentage of FedExField",
    "label": "CONFIRM_SQL",
    "output": "select capacity_percentage from stadium where name = 'FedExField'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "FIND THE CUSTOMER NAME AND DATE OF THE ORDERS THAT HAVE THE STATUS \"DELIVERED\" | select customers.customer_name , customer_orders.order_date from customers join customer_orders on customers.customer_id = customer_orders.customer_id where order_status = 'Delivered' | WHAT ARE THE CUSTOMER ID FOR ALL THE CUSTOMERS WHOSE ORDERS WERE CANCELLED?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct customer_id from customer_orders where order_status = 'Cancelled'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "what are the names of the customers whose customer details are null?\n | select distinct customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id where order_details = 'NULL' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,good_bye"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Did you want the name and trade name of the medicines that cannot interact with the enzyme with the product Heme? | Yes | Hello",
    "label": "GREETING",
    "output": "Hello, how can I help you? "
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "What are medicine names and trade names? | select name , trade_name from medicine | Are these products able to interact with enzymes?",
    "label": "CONFIRM_SQL",
    "output": "select medicine.* from medicine join medicine_enzyme_interaction on medicine.id = medicine_enzyme_interaction.medicine_id"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Will you please tell me which of these can not interact with the product 'Heme'? | select name , trade_name from medicine except select medicine.name , medicine.trade_name from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id join enzyme on enzyme.id = medicine_enzyme_interaction.enzyme_id where enzyme.product = 'Heme' | Thanks",
    "label": "GOOD_BYE",
    "output": "Thank you. good bye!"
  },
  {
    "db_id": "body_builder",
    "input": "how many body builder id are there | select count ( * ) from body_builder | ok,list out the body builder name",
    "label": "CONFIRM_SQL",
    "output": "select people.name from body_builder join people on body_builder.people_id = people.people_id"
  },
  {
    "db_id": "body_builder",
    "input": "ok, name the body builders whose total score is higher than 250 | select people.name from body_builder join people on body_builder.people_id = people.people_id where body_builder.total > 250 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "music_1",
    "input": "how many artist are there in total? | select count ( * ) from artist | How about the total number of songs?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from song"
  },
  {
    "db_id": "music_1",
    "input": "Can you list the songs' names? | select song_name from song | Who was the singer for the song My love?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from song where song_name = 'My love'"
  },
  {
    "db_id": "music_1",
    "input": "Where was the singer from? | Do you mean Enrique? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select country from song where artist_name = 'Enrique'"
  },
  {
    "db_id": "railway",
    "input": "Hi, Can you tell me the most common builder of railways? | select builder from railway group by builder order by count ( * ) desc limit 1 | Can you tell me the last railways this builder has build?",
    "label": "CONFIRM_SQL",
    "output": "select railway from railway group by builder having builder = 'GWR Swindon' order by built desc limit 1"
  },
  {
    "db_id": "railway",
    "input": "In what year was GWRSn build? | select built from railway group by builder having builder = 'GWR Swindon' order  by built desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "manufactory_1",
    "input": "What manufacturer has the highest revenue? | select name from manufacturers order by revenue desc limit 1 | Where is Iomega located?",
    "label": "CONFIRM_SQL",
    "output": "select headquarter from manufacturers where name = 'Iomega'"
  },
  {
    "db_id": "manufactory_1",
    "input": "Are there manufacturers on the list located in the United States?\n | Sorry, I cannot answer this. | What manufacturers on the list are located in Austin?",
    "label": "CONFIRM_SQL",
    "output": "select name from manufacturers where headquarter = 'Austin'"
  },
  {
    "db_id": "manufactory_1",
    "input": "What is Creative labs revenue? | select revenue from manufacturers where name = 'Creative Labs' | How many companies have a revenue greater than 100.0?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from manufacturers where revenue > 100.0"
  },
  {
    "db_id": "manufactory_1",
    "input": "What is the total revue of those 3 companies? | select sum ( revenue ) from manufacturers where revenue > 100.0 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Bye!"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Did you want the part name and the number? | Yes | How many assets can each part be used in?",
    "label": "CONFIRM_SQL",
    "output": "select parts.part_name , count ( * ) from parts join asset_parts on parts.part_id = asset_parts.part_id group by parts.part_name"
  },
  {
    "db_id": "assets_maintenance",
    "input": "what is the part ID's for these? | select parts.part_id from parts join asset_parts on parts.part_id = asset_parts.part_id group by parts.part_name | and the chargeable amount for these?",
    "label": "CONFIRM_SQL",
    "output": "select chargeable_amount from parts join asset_parts on parts.part_id = asset_parts.part_id group by parts.part_name"
  },
  {
    "db_id": "csu_1",
    "input": "hi I was wondering how many counties you have information for? | select count ( distinct campuses.county ) from campuses join degrees on campuses.id = degrees.campus | how many schools are in Orange county?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from campuses join degrees on campuses.id = degrees.campus where campuses.county = 'Orange'"
  },
  {
    "db_id": "csu_1",
    "input": "can you tell me how many degrees have been granted for each Orange county campus since the year 2000? | select campuses.campus , sum ( degrees.degrees ) from campuses join degrees on campuses.id = degrees.campus where campuses.county = 'Orange' and degrees.year >= 2000 group by campuses.campus | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "show the outcome code in the Table Name: Project Outcomes | select distinct outcome_code from project_outcomes | Show the outcome description of the Table Name: Research Outcomes",
    "label": "CONFIRM_SQL",
    "output": "select outcome_description from research_outcomes"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Show the project details of the Table Name: Projects | select project_details from projects | Show the\toutcome details of the Table Name: Project Outcomes",
    "label": "CONFIRM_SQL",
    "output": "select outcome_details from project_outcomes"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "List the project details of the projects with the research outcome described with substring 'published'. | select projects.project_details from projects join project_outcomes on projects.project_id = project_outcomes.project_id join research_outcomes on project_outcomes.outcome_code = research_outcomes.outcome_code where research_outcomes.outcome_description like '%Published%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem. Bye!"
  },
  {
    "db_id": "college_1",
    "input": "How many courses does the Computer Info. Systems department offer? | select count ( * ) from department join course on department.dept_code = course.dept_code where dept_name = 'Computer Info. Systems' | What are the descriptions of those courses?",
    "label": "CONFIRM_SQL",
    "output": "select crs_description from department join course on department.dept_code = course.dept_code where dept_name = 'Computer Info. Systems'"
  },
  {
    "db_id": "college_1",
    "input": "How many courses does the Biology department offer? | select count ( * ) from department join course on department.dept_code = course.dept_code where dept_name = 'Biology' | What about the Accounting department?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from department join course on department.dept_code = course.dept_code where dept_name = 'Accounting'"
  },
  {
    "db_id": "college_1",
    "input": "What are the course credits of those courses? | select course.crs_credit from department join course on department.dept_code = course.dept_code where dept_name = 'Accounting' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "swimming",
    "input": "how many names in the event table | select count ( name ) from event | how many capacity in the stadium table",
    "label": "CLARIFY",
    "output": "Do you  mean  the  sum  of   capacity in the stadium table ?"
  },
  {
    "db_id": "swimming",
    "input": "how many opening year in the stadium table | Do  you  want  to  konw  the different  year    | thanks",
    "label": "REQUEST_MORE",
    "output": "Do  you  have other  question"
  },
  {
    "db_id": "swimming",
    "input": "how many capacity in the stadium table | select count ( distinct capacity ) from stadium | thanks",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "flight_4",
    "input": "Can you please tell me the number of routes with the destination airport Italy? | select count ( * ) from routes join airports on routes.dst_apid = airports.apid where airports.country = 'Italy' | Can you please tell me the number of routes with the destination airport in Italy operated by the airline with the name 'American Airlines'?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from routes join airports on routes.dst_apid = airports.apid join airlines on routes.alid = airlines.alid where airports.country = 'Italy' and airlines.name = 'American Airlines'"
  },
  {
    "db_id": "flight_4",
    "input": "What are the source airports of those routes? | select routes.src_ap from routes join airports on routes.dst_apid = airports.apid join airlines on routes.alid = airlines.alid where airports.country = 'Italy' and airlines.name = 'American Airlines' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "hospital_1",
    "input": "What are the names of the patients who had more than one appointment? | select name from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) > 1 | What are their phone numbers, please?",
    "label": "CONFIRM_SQL",
    "output": "select phone from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) > 1"
  },
  {
    "db_id": "hospital_1",
    "input": "What are the pcp's of those patients? | select pcp from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) > 1 | What are the names of the patients who only had one appointment?",
    "label": "CONFIRM_SQL",
    "output": "select name from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) = 1"
  },
  {
    "db_id": "hospital_1",
    "input": "When did his appointment start and end? | select appointment.start , appointment.end from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "student_assessment",
    "input": "Did you mean the student details and their associated addresses line 1 and cities? | Yes | Hello!  Can you show me a list of all of the student names and their associated addresses and cities?",
    "label": "CONFIRM_SQL",
    "output": "select students.student_details , addresses.city , addresses.line_1 from addresses join people_addresses on addresses.address_id = people_addresses.address_id join students on people_addresses.person_id = students.student_id"
  },
  {
    "db_id": "student_assessment",
    "input": "Thank you!  Can you filter the list to show just the rows that correspond with the 3 most recent \"date from\" values? | select students.student_details , addresses.city , addresses.line_1 from addresses join people_addresses on addresses.address_id = people_addresses.address_id join students on people_addresses.person_id = students.student_id order by date_from desc limit 3 | Thank you!  Which of these 3 individuals has the most recent \"date to\" value, and can you tell what the value (or date) is?",
    "label": "CONFIRM_SQL",
    "output": "select * from ( select students.student_details , people_addresses.date_to from addresses join people_addresses on addresses.address_id = people_addresses.address_id join students on people_addresses.person_id = students.student_id order by people_addresses.date_from desc limit 3 ) order by date_to desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "What is the id of the department store that has both marketing and managing department? | select department_stores.dept_store_id from departments join department_stores on departments.dept_store_id = department_stores.dept_store_id where departments.department_name = 'marketing' intersect select department_stores.dept_store_id from departments join department_stores on departments.dept_store_id = department_stores.dept_store_id where departments.department_name = 'managing' | What is the name of the department store that has both marketing and managing department?",
    "label": "CONFIRM_SQL",
    "output": "select department_stores.store_name from departments join department_stores on departments.dept_store_id = department_stores.dept_store_id where departments.department_name = 'marketing' intersect select department_stores.store_name from departments join department_stores on departments.dept_store_id = department_stores.dept_store_id where departments.department_name = 'managing'"
  },
  {
    "db_id": "department_store",
    "input": "Can you show me all the id of the department store that has both marketing and managing department?  | select department_stores.dept_store_id , department_stores.store_name from departments join department_stores on departments.dept_store_id = department_stores.dept_store_id where departments.department_name = 'marketing' intersect select department_stores.dept_store_id , department_stores.store_name from departments join department_stores on departments.dept_store_id = department_stores.dept_store_id where departments.department_name = 'managing' | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome and bye!"
  },
  {
    "db_id": "bike_1",
    "input": "what city has the shortest trip? | sorry, there is no  feature about distance of a trip | What is the latitude of the shortest trip?",
    "label": "CLARIFY",
    "output": "there is no feature of distance in trip "
  },
  {
    "db_id": "bike_1",
    "input": "what is the city of the station from which the shortest trip started? | trip cannot be described by distance | what is the latitude of San Jose Diridon Caltrain Station?",
    "label": "CONFIRM_SQL",
    "output": "select distinct station.lat from station join trip where station.name = 'San Jose Diridon Caltrain Station'"
  },
  {
    "db_id": "bike_1",
    "input": "what is the longitude of Santa Clara at Almaden? | select distinct station.long from station join trip where station.name = 'Santa Clara at Almaden' | what is the latitude of San Jose Civic Center?",
    "label": "CONFIRM_SQL",
    "output": "select distinct station.lat from station join trip where station.name = 'San Jose Civic Center'"
  },
  {
    "db_id": "movie_1",
    "input": "How many reviewers are there? | select count ( distinct rid ) from rating | What are their id numbers?",
    "label": "CONFIRM_SQL",
    "output": "select distinct rid from rating"
  },
  {
    "db_id": "movie_1",
    "input": "What is the average rating of the reviewers?\n | select avg ( stars ) from rating | How many raters gave reviews less than 4 stars?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct rid ) from rating where stars < 4"
  },
  {
    "db_id": "movie_1",
    "input": "What are their ids? | select distinct rid from rating where stars < 4 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "election_representative",
    "input": "what is the minimum vote percent of elections? | select min ( vote_percent ) from election | what is the maximum vote percent of elections?",
    "label": "CONFIRM_SQL",
    "output": "select max ( vote_percent ) from election"
  },
  {
    "db_id": "election_representative",
    "input": "Which election had the most votes? | select election_id from election where votes = ( select max ( votes ) from election ) | Which election had the least votes?",
    "label": "CONFIRM_SQL",
    "output": "select election_id from election where votes = ( select min ( votes ) from election )"
  },
  {
    "db_id": "gymnast",
    "input": "Do you mean list the hometowns that more than 1 person comes from and the number of people from there? | Yes | how many people are there \n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people"
  },
  {
    "db_id": "gymnast",
    "input": "how many are under age 21  | select count ( * ) from people where age < 21 | how many are from same hometown",
    "label": "CONFIRM_SQL",
    "output": "select hometown , count ( * ) as num from people group by hometown having count ( * ) > 1"
  },
  {
    "db_id": "gymnast",
    "input": "what is the name of people ID 2 | select name from people where people_id = 2 | thanks",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Hello!  Can you provide me with the first and last name of the customer who has account name 900? | select customers.customer_first_name , customers.customer_last_name from accounts join customers on accounts.customer_id = customers.customer_id where accounts.account_name = '900' | Great!  Could you update this list to show me Meaghan's email address and phone number as well?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_first_name , customers.customer_last_name , customers.email_address , customers.phone_number from accounts join customers on accounts.customer_id = customers.customer_id where accounts.account_name = '900'"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Great! Finally, can you show me all other customers names (first and last) who have the same \"other account details\" details as Meaghan? | select distinct customers.customer_first_name , customers.customer_last_name from accounts join customers on accounts.customer_id = customers.customer_id where accounts.other_account_details = ( select other_account_details from accounts where account_name = 900 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Hello, I was wondering how many accounts are listed under the first name of John? | select count ( distinct account_id ) from customers join accounts on accounts.customer_id = customers.customer_id where customer_first_name = 'John' | How about Meaghan or Jessica?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct account_id ) from customers join accounts on accounts.customer_id = customers.customer_id where customer_first_name = 'Meaghan' or customer_first_name = 'Jessica'"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Okay, could you just give me the account names listed under Meaghan first? | select account_name from customers join accounts on accounts.customer_id = customers.customer_id where customer_first_name = 'Meaghan' | And what are the id's for those accounts?",
    "label": "CONFIRM_SQL",
    "output": "select account_id from customers join accounts on accounts.customer_id = customers.customer_id where customer_first_name = 'Meaghan'"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Are there any other pertinent details for accounts listed under Meaghan? | select other_account_details from customers join accounts on accounts.customer_id = customers.customer_id where customer_first_name = 'Meaghan' | Thank you so much, now back to the accounts listed for Jessica.  What are the account names of those?",
    "label": "CONFIRM_SQL",
    "output": "select account_name from customers join accounts on accounts.customer_id = customers.customer_id where customer_first_name = 'Jessica'"
  },
  {
    "db_id": "solvency_ii",
    "input": "Show me the prices of the products named \"Dining\" | select product_price from products where product_name = 'Dinning' | Show me the prices of the products named Trading Policy",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_name = 'Trading Policy'"
  },
  {
    "db_id": "solvency_ii",
    "input": "Show me the product type code of products named \"Dining\" | select distinct product_type_code from products where product_name = 'Dinning' | Thanks!",
    "label": "THANK_YOU",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "baseball_1",
    "input": "What are the names of some public parks in the United States? | select park_name from park where country = 'US' | Thank you. Which states have at least two parks in them?\n",
    "label": "CONFIRM_SQL",
    "output": "select state from park group by state having count ( * ) > 2"
  },
  {
    "db_id": "baseball_1",
    "input": "What are the names of such parks in California?\n | select california from park where city = 'California' | Are there any parks in Albany, NY?",
    "label": "CONFIRM_SQL",
    "output": "select park_name from park where city = 'Albany' and state = 'NY'"
  },
  {
    "db_id": "baseball_1",
    "input": "Great. How about Altoona, Pennsylvania?\n | select park_name from park where city = 'Altoona' and state = 'PA' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "network_2",
    "input": "How old is the student? | A better question is, how many students are there?\n | select count ( * ) from person where job = 'student'",
    "label": "AMBIGUOUS",
    "output": "What about the number of people with occupations? "
  },
  {
    "db_id": "network_2",
    "input": "By occupations, do you mean people who are not students? | Yes | select count ( * ) from person where job != 'student'",
    "label": "INFORM_SQL",
    "output": "What are their names?"
  },
  {
    "db_id": "network_2",
    "input": "select name from person where job != 'student' | And the names of the people who are not students? | select name from person where job != 'student'",
    "label": "INFORM_SQL",
    "output": "I need to know how many people there are whose age is greater than 30 and job is an engineer."
  },
  {
    "db_id": "apartment_rentals",
    "input": "Did you mean the total bathroom count of the building with id 809? | Yes | How many bathroom count those building 809 has?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( bathroom_count ) from apartments where building_id = 809"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How about building 808? | select sum ( bathroom_count ) from apartments where building_id = 808 | How about the total number of rooms it has?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( room_count ) from apartments where building_id = 808"
  },
  {
    "db_id": "ship_mission",
    "input": "Hello!  How are you!  Can you tell me how many missions there are in total? | select count ( * ) from mission | Great! Can you filter this list to show only the mission that involved ships from the United States?",
    "label": "CONFIRM_SQL",
    "output": "select mission.fate from mission join ship on mission.ship_id = ship.ship_id where ship.nationality = 'United States'"
  },
  {
    "db_id": "ship_mission",
    "input": "Great! Could you update this list to show all of the mission IDs? | select mission.fate , mission.mission_id from mission join ship on mission.ship_id = ship.ship_id where ship.nationality = 'United States' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "soccer_2",
    "input": "how many hours does each player get to be active for? | select pid , hs from player | what position requires the least playing time?",
    "label": "CONFIRM_SQL",
    "output": "select ppos from tryout join player on tryout.pid = player.pid group by tryout.ppos order by min ( player.hs ) asc limit 1"
  },
  {
    "db_id": "soccer_2",
    "input": "what is the the playing time of the mid player ? | select min ( player.hs ) , tryout.ppos from tryout join player on tryout.pid = player.pid where ppos = 'mid' group by tryout.ppos | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "protein_institute",
    "input": "show the institute type with lowest number of institutions | select type from institution group by type order by count ( * ) asc limit 1 | show the institute type with highest number of institutions",
    "label": "CONFIRM_SQL",
    "output": "select type from institution group by type order by count ( * ) desc limit 1"
  },
  {
    "db_id": "protein_institute",
    "input": "which university is founded first | select institution from institution order by founded asc limit 1 | thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "formula_1",
    "input": "How many drivers are there, total? | select count ( * ) from drivers | of these total drivers, how many countries are represented?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct nationality ) from drivers"
  },
  {
    "db_id": "formula_1",
    "input": "and of those 41 countries, which one has the most drivers?\n | select nationality from drivers group by nationality order by count ( * ) desc limit 1 | which british driver is the fastest?",
    "label": "CLARIFY",
    "output": "Do you want the name of the british driver that has the fastest speed among all the races? or just 1 race with a specific race id?"
  },
  {
    "db_id": "formula_1",
    "input": "please give me the name of the driver | select drivers.forename , drivers.surname from drivers join results on drivers.driverid = results.driverid where drivers.nationality = 'British' order by fastestlapspeed desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "aircraft",
    "input": "Which Airport has the largest number of international passengers?  | select airport_name from airport order by international_passengers desc limit 1 | How many international passengers in that airport?",
    "label": "CONFIRM_SQL",
    "output": "select international_passengers from airport order by international_passengers desc limit 1"
  },
  {
    "db_id": "aircraft",
    "input": "Show all information on that airport  | select * from airport order by international_passengers desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "gas_company",
    "input": "Show the name of the company with company id 1? | select company from company where company_id = '1' | Show all company name and main industry with gas station?",
    "label": "CONFIRM_SQL",
    "output": "select company , main_industry from company where company_id in ( select company_id from station_company )"
  },
  {
    "db_id": "gas_company",
    "input": "Show all company name and main industry without a gas station? | select company , main_industry from company where company_id not in ( select company_id from station_company ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Bye."
  },
  {
    "db_id": "company_employee",
    "input": "What companies are in the banking or retailing industry?\n | Do you want their company id or name? | What are the names of the companies in the banking or retail industries?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from company where industry = 'Banking' or industry = 'Retailing'"
  },
  {
    "db_id": "company_employee",
    "input": "What are the total sales in billions of all of these companies combined? | select sum ( sales_in_billion ) from company where industry = 'Banking' or industry = 'Retailing' | and what is their total market value in billions?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( market_value_in_billion ) from company where industry = 'Banking' or industry = 'Retailing'"
  },
  {
    "db_id": "soccer_2",
    "input": "How many players are there? | select count ( * ) from player | What is the max of those players?",
    "label": "CLARIFY",
    "output": "what  did  you  mean  the  max  ?"
  },
  {
    "db_id": "soccer_2",
    "input": "Sorry, the max training hours of those players. | select max ( hs ) from player | And the min training hours of those players?",
    "label": "CONFIRM_SQL",
    "output": "select min ( hs ) from player"
  },
  {
    "db_id": "soccer_2",
    "input": "How about the average? | select avg ( hs ) from player | Thanks!",
    "label": "WELCOME",
    "output": "welcome  goodbye!"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "show the number of all customers without an account | select count ( * ) from customers where customer_id not in ( select customer_id from accounts ) | can you show their name?",
    "label": "CLARIFY",
    "output": "Do you want their first and last names?"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "first name\n | select customer_first_name from customers where customer_id not in ( select customer_id from accounts ) | what is Armani's customer address?",
    "label": "CLARIFY",
    "output": "Do you mean the address of the customer with a first name Armani?"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "yes | select customer_address from customers where customer_first_name = 'Armani' | thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "music_1",
    "input": "Which are the male artists?\n | select * from artist where gender = 'Male' | And which of them are from the UK?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from artist where country = 'UK' and gender = 'Male'"
  },
  {
    "db_id": "music_1",
    "input": "Okay, and what genre does Michel prefer? | select preferred_genre from artist where artist_name = 'Michel' | Alright, and how many male artists who prefer pop are there in the entire world, according to the table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from artist where preferred_genre = 'pop' and gender = 'Male'"
  },
  {
    "db_id": "music_1",
    "input": "How many female artists prefer pop? | select count ( * ) from artist where preferred_genre = 'pop' and gender = 'Female' | Finally, what is the most preferred genre in the entire world?",
    "label": "CONFIRM_SQL",
    "output": "select preferred_genre from artist group by preferred_genre order by count ( * ) desc limit 1"
  },
  {
    "db_id": "icfp_1",
    "input": "can you give me the last names of the authors? | select lname from authors | who authored the paper Binders Unbound?",
    "label": "CLARIFY",
    "output": "What information do you want about the author of the paper Binders Unbound? "
  },
  {
    "db_id": "icfp_1",
    "input": "i want their names | select authors.fname , authors.lname from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid where papers.title = 'Binders Unbound' | can you just show me their last names?",
    "label": "CONFIRM_SQL",
    "output": "select authors.lname from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid where papers.title = 'Binders Unbound'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what is the transaction type code for the investor with id 18 | select transaction_type_code from transactions where investor_id = 18 | is NULL the other details for date of transaction 1982-06-06 17:19:00",
    "label": "CONFIRM_SQL",
    "output": "select other_details from transactions where date_of_transaction = '1982-06-06 17:19:00'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "How much is the amount of transaction for transaction with id 3 | select amount_of_transaction from transactions where transaction_id = 3 | thanks",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "network_2",
    "input": "Who is the youngest male? | select name from person where gender = 'male' and age = ( select min ( age ) from person where gender = 'male' ) | What is his age?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where gender = 'male' and age = ( select min ( age ) from person where gender = 'male' )"
  },
  {
    "db_id": "network_2",
    "input": "What is his job? | select job from person where gender = 'male' and age = ( select min ( age ) from person where gender = 'male' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "train_station",
    "input": "what is the \tNumber_of_Platforms does Main_Services South Western Main Line West of England Main Line have? | select number_of_platforms from station where main_services = 'South Western Main Line West of England Main Line' | how many passengers are in the London Waterloo?",
    "label": "CONFIRM_SQL",
    "output": "select total_passengers from station where name = 'London Waterloo'"
  },
  {
    "db_id": "train_station",
    "input": "can you help me with the Annual interchanges for London Bridge | select annual_interchanges from station where name = 'London Bridge' | Thnaks",
    "label": "GOOD_BYE",
    "output": "Thanks! Bye!"
  },
  {
    "db_id": "scientist_1",
    "input": "What are the names of scientists that worked on 'A matter of time' project ? | select scientists.name from assignedto join projects on assignedto.project = projects.code join scientists on assignedto.scientist = scientists.ssn where projects.name = 'A Matter of Time' | What about the names of scientists that worked on the project named 'A Puzzling Parallax'?",
    "label": "CONFIRM_SQL",
    "output": "select scientists.name from assignedto join projects on assignedto.project = projects.code join scientists on assignedto.scientist = scientists.ssn where projects.name = 'A Puzzling Parallax'"
  },
  {
    "db_id": "scientist_1",
    "input": "Could you give the list of all projects along with the names of scientists that worked on them? | Do you mean a list of the names of all the projects and the names of scientists that worked on them? | Yes Please!",
    "label": "CONFIRM_SQL",
    "output": "select scientists.name , projects.name from assignedto join projects on assignedto.project = projects.code join scientists on assignedto.scientist = scientists.ssn"
  },
  {
    "db_id": "scientist_1",
    "input": "Is there a scientist that worked for more than one project?  | select count ( project ) from assignedto group by scientist having count ( project ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Goodbye."
  },
  {
    "db_id": "hr_1",
    "input": "hi! how many employees are there that get a commission percentage? | select count ( distinct employee_id ) from employees where commission_pct > 0 | How many departments have more than ten employees who got a commission?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select department_id from employees group by department_id having count ( commission_pct ) > 10 )"
  },
  {
    "db_id": "hr_1",
    "input": "What are those names? | Sorry, I cannot give you the names. Did you mean to ask for the department ids? | Yes please ",
    "label": "CONFIRM_SQL",
    "output": "select department_id from employees group by department_id having count ( commission_pct ) > 10"
  },
  {
    "db_id": "epinions_1",
    "input": "What is item number 4? | select * from item where i_id = 4 | What is the avocado's rating?",
    "label": "CONFIRM_SQL",
    "output": "select rating from review where i_id = ( select i_id from item where title = 'avocado' )"
  },
  {
    "db_id": "epinions_1",
    "input": "And what about the avocado's rank? | select rank from review where i_id = ( select i_id from item where title = 'avocado' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Which places did Alison visit | select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Alison' | And which of those did Rosalind not visit",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Alison' except select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Rosalind'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Are they the same | Sorry, I cannot help you with that. | Thanks",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "formula_1",
    "input": "Hi, how many years has the Monaco Grand Prix been held? | Would you like the number of distinct years found for races? | yes please!",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct year ) from races"
  },
  {
    "db_id": "formula_1",
    "input": "oh wow that's a lot.. was the Monaco Grand Prix held in 2008 specifically? | select * from races where year = 2008 | okay great - can you tell me the maximum fastest lap speed during this race?",
    "label": "CONFIRM_SQL",
    "output": "select max ( results.fastestlapspeed ) from races join results on races.raceid = results.raceid where races.year = 2008 and races.name = 'Monaco Grand Prix'"
  },
  {
    "db_id": "soccer_2",
    "input": "How many student in total participate in the tryout? | select count ( * ) from tryout | For which colleges? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) , cname from tryout group by cname"
  },
  {
    "db_id": "soccer_2",
    "input": "Can I see that list in a descending order based on student count?  | select count ( * ) , cname from tryout group by cname order by count ( * ) desc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye."
  },
  {
    "db_id": "performance_attendance",
    "input": "How many performances are listed? | Did you mean the count of Performance ID in the member attendance table ？ | Yes",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct performance_id ) from member_attendance"
  },
  {
    "db_id": "performance_attendance",
    "input": "What are the roles for each performance? | select member_attendance.performance_id , member.role from member join member_attendance on member.member_id = member_attendance.member_id group  by member_attendance.performance_id | What country is each member from?",
    "label": "CLARIFY",
    "output": "Did  you  mean  show  the name of member  and the related\tNationality?"
  },
  {
    "db_id": "performance_attendance",
    "input": "yes | select name , nationality from member | What are the names of members who did not attend any performance?",
    "label": "CONFIRM_SQL",
    "output": "select name from member where member_id not in ( select member_id from member_attendance )"
  },
  {
    "db_id": "chinook_1",
    "input": "find the name of the Track 2? | select name from track where trackid = '2' | what is the unit price of the Fast as a shark?",
    "label": "CONFIRM_SQL",
    "output": "select unitprice from track where name = 'Fast As a Shark'"
  },
  {
    "db_id": "chinook_1",
    "input": "Find the milliseconds of Track id 1? | select milliseconds from track where trackid = 1 | how many genre in the list?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from genre"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "For the documents with the description \"Regular\", what are all of their response received dates? | select documents.response_received_date from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where document_types.document_description = 'Regular' | What are the grant amounts for those?",
    "label": "CONFIRM_SQL",
    "output": "select grants.grant_amount from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where document_types.document_description = 'Regular'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you find the response received dates for all grants that were over 100? | select documents.response_received_date from documents join grants on documents.grant_id = grants.grant_id where grants.grant_amount > 100 | Would you list the grant amounts for all grants with a sent date after 1995?",
    "label": "REJECT",
    "output": "Sorry we cannot answer this question."
  },
  {
    "db_id": "student_assessment",
    "input": "Can you tell me the id of the students who registered for course 301? | select student_id from student_course_attendance where course_id = 301 | Which one of them registered the earliest?",
    "label": "CONFIRM_SQL",
    "output": "select student_id from student_course_attendance where course_id = 301 order by date_of_attendance asc limit 1"
  },
  {
    "db_id": "student_assessment",
    "input": "Which one registered most recently for that course? | select student_id from student_course_attendance where course_id = 301 order by date_of_attendance desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "small_bank_1",
    "input": "what is the Balance Amount of the custid 2 | Do you need the checking balance, saving balance, or the sum of both? | yes\n",
    "label": "CLARIFY",
    "output": "Please clarify which one do you need"
  },
  {
    "db_id": "small_bank_1",
    "input": "I need the Checking balance | select balance from checking where custid = 2 | what is the name of the custid 2 in Table  name: ACCOUNTS",
    "label": "CONFIRM_SQL",
    "output": "select name from accounts where custid = 2"
  },
  {
    "db_id": "small_bank_1",
    "input": "what is the saving Balance Amount of the custid 2 | select balance from savings where custid = 2 | Finding the checking balance and saving balance in the Brown's account",
    "label": "CONFIRM_SQL",
    "output": "select checking.balance , savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where accounts.name = 'Brown'"
  },
  {
    "db_id": "hr_1",
    "input": "Could you tell me how many employees have the job title PU_MAN? | select count ( * ) from employees where job_id = 'PU_MAN' | What is the salary of that employee?",
    "label": "CONFIRM_SQL",
    "output": "select salary from employees where job_id = 'PU_MAN'"
  },
  {
    "db_id": "hr_1",
    "input": "How many employees have a higher salary than that? | select count ( * ) from employees where salary > ( select salary from employees where job_id = 'PU_MAN' ) | Tell me their employee numbers, first and last names, and job titles, please.",
    "label": "CONFIRM_SQL",
    "output": "select employee_id , first_name , last_name , job_id from employees where salary > ( select max ( salary ) from employees where job_id = 'PU_MAN' )"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "How many employees are there? | select count ( * ) from employees | How many employees are in the circulation history with the document id 1?",
    "label": "CONFIRM_SQL",
    "output": "select count ( employee_id ) from circulation_history where document_id = 1"
  },
  {
    "db_id": "cre_Doc_Control_Systems",
    "input": "Can you tell me the name of the employee that is in the circulation history with document id 1? | select employees.employee_name from employees join circulation_history on employees.employee_id = circulation_history.employee_id where circulation_history.document_id = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "news_report",
    "input": "Hi, what journalist had worked the most amount of years? | select journalist_id from journalist order by years_working desc limit 1 | Which journalist has worked the 2nd most amount of years?",
    "label": "CONFIRM_SQL",
    "output": "select journalist_id from journalist where journalist_id not in ( select journalist_id from journalist order by years_working desc limit 1 ) order by years_working desc limit 1"
  },
  {
    "db_id": "news_report",
    "input": "Thank you, for the journalist with the ID of 4, what is his name? | select name from journalist where journalist_id = 4 | Wonderful! What is her nationality?",
    "label": "CONFIRM_SQL",
    "output": "select nationality from journalist where journalist_id = 4"
  },
  {
    "db_id": "news_report",
    "input": "Thank you! That's all I needed, but I'm also curious, how many journalists are from England? | select count ( journalist_id ) from journalist where nationality = 'England' | Which one has the least amount of years worked?",
    "label": "CONFIRM_SQL",
    "output": "select journalist_id from journalist where nationality = 'England' order by years_working asc limit 1"
  },
  {
    "db_id": "news_report",
    "input": "Awesome, Im almost done, but can you tell me overall who worked the least amount of years as well? | select journalist_id from journalist order by years_working asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome, goodbye"
  },
  {
    "db_id": "flight_1",
    "input": "Which employees don't have certificates? | select eid from employee except select eid from certificate | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select name from employee except select eid from certificate"
  },
  {
    "db_id": "flight_1",
    "input": "What are their airline ids? | Sorry, I don't have the answer to that question. Only employees with certificates have airline ID's. | How many employees don't have certificates?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employee except select aid from certificate"
  },
  {
    "db_id": "college_2",
    "input": "Hello!  Can you provide me with a list of Instructor IDs for those who did not teach any courses? | select id from instructor where id not in ( select id from teaches ) | Thank you!  Can you update that list with the professors' names?",
    "label": "CONFIRM_SQL",
    "output": "select id , name from instructor where id not in ( select id from teaches )"
  },
  {
    "db_id": "college_2",
    "input": "Thank you!  Can you update that list to include the instructor names and which departments they are in? | select name , dept_name from instructor where id not in ( select id from teaches ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "protein_institute",
    "input": "which team performed in Ave Maria university ? | select team from institution where institution = 'Ave Maria University' | How many number of floors are in Tampa City Hall ? ",
    "label": "CONFIRM_SQL",
    "output": "select floors from building where name = 'Tampa City Hall'"
  },
  {
    "db_id": "protein_institute",
    "input": "How can i reach at Tampa city Hall can you send me the address ?  | select street_address from building where name = 'Tampa City Hall' | which type of university is Ave Maria University ?\n",
    "label": "CONFIRM_SQL",
    "output": "select type from institution where institution = 'Ave Maria University'"
  },
  {
    "db_id": "protein_institute",
    "input": "where is Dakota State University situated ? | Did you mean the location or the street address of its building? | yes, location of Dakota state University?\n",
    "label": "CONFIRM_SQL",
    "output": "select location from institution where institution = 'Dakota State University'"
  },
  {
    "db_id": "college_2",
    "input": "how many credit  scores does Schrefl have? | select tot_cred from student where name = 'Schrefl' | in what department is Rumat?\n",
    "label": "CLARIFY",
    "output": "Do you want the name of the department?"
  },
  {
    "db_id": "college_2",
    "input": "Yes! | select dept_name from student where name = 'Rumat' | Thanks!",
    "label": "AMBIGUOUS",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Find the state and country of all cities with post code starting with 4. | select state_province_county , country from addresses where zip_postcode like '4%' | What are the cities in Colorado that have post codes starting with 4.",
    "label": "CONFIRM_SQL",
    "output": "select city from addresses where zip_postcode like '4%' and state_province_county = 'Colorado'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "How about cities in Texas that have post codes starting with 4?\n | select city from addresses where zip_postcode like '4%' and state_province_county = 'Texas' | How many cities in total with post code starting with 4?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct city ) from addresses where zip_postcode like '4%'"
  },
  {
    "db_id": "company_employee",
    "input": "Which company has the largest sales? | Did you mean the name of the company with the largest sales? | Yes thr name of the company that has the largest sales",
    "label": "CONFIRM_SQL",
    "output": "select name from company order by sales_in_billion desc limit 1"
  },
  {
    "db_id": "company_employee",
    "input": "Where is the headquarters of royal dutch shell? | select headquarters from company where name = 'Royal Dutch Shell' | What kind of industry does royal dutch shell belongs to?",
    "label": "CONFIRM_SQL",
    "output": "select industry from company where name = 'Royal Dutch Shell'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Could you show me the employee IDs for all employees with the role name \"Manager\"? | select employees.employee_id from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Manager' | How about for all employees with the role name \"Human Resource\"?",
    "label": "CONFIRM_SQL",
    "output": "select employees.employee_id from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Human Resource'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What is that employee's name? | select employees.employee_name from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Human Resource' | What is the name of the employee whose role name is Manager?",
    "label": "CONFIRM_SQL",
    "output": "select employees.employee_name from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Manager'"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What is the name of the employee whose role name is Human Resources? | select employees.employee_name from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Human Resource' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "college_1",
    "input": "Hi - Can you tell me which department has the most students? | select department.dept_name from student join department on student.dept_code = department.dept_code group by student.dept_code order by count ( * ) desc limit 1 | How many students are in the Accounting department?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student join department on student.dept_code = department.dept_code group by student.dept_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "Please tell me the address of the Accounting department. | select dept_address from department where dept_name = 'Accounting' | Great - can you tell me the names of students in the Accounting department with a GPA above 3.0?",
    "label": "CONFIRM_SQL",
    "output": "select student.stu_fname , student.stu_lname from department join student on department.dept_code = student.dept_code where department.dept_name = 'Accounting' and student.stu_gpa > 3.0"
  },
  {
    "db_id": "college_1",
    "input": "What is the total number of transfer students in all departments? | select sum ( stu_transfer ) from student | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "browser_web",
    "input": "What is the market share of Internet explorer | select market_share from browser where name = 'Internet Explorer' | What about Firefox's Market share",
    "label": "CONFIRM_SQL",
    "output": "select market_share from browser where name = 'Firefox'"
  },
  {
    "db_id": "browser_web",
    "input": "What about Safari? | select market_share from browser where name = 'Safari' | Thanks",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "architecture",
    "input": "What is the nationality of Zaha Hadid? | select nationality from architect where name = 'Zaha Hadid' | Which person has American nationality?",
    "label": "CLARIFY",
    "output": "Please clarify what information you would like about the entries where the nationality is American."
  },
  {
    "db_id": "architecture",
    "input": "yes | I cannot understand your question.  Would you like to ask me anything else? | What is the gender of Frank Gehry?",
    "label": "CONFIRM_SQL",
    "output": "select gender from architect where name = 'Frank Gehry'"
  },
  {
    "db_id": "architecture",
    "input": "What is the built year of architect id 2? | select built_year from mill where architect_id = 2 | What is the location of id 3?",
    "label": "CONFIRM_SQL",
    "output": "select location from mill where id = 3"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Give me the details of the organizations described as \"Sponsor\" in alphabetical order | select organisation_details from organisations join organisation_types on organisations.organisation_type = organisation_types.organisation_type where organisation_types.organisation_type_description = 'Sponsor' order by organisation_details | What about their IDs?",
    "label": "CONFIRM_SQL",
    "output": "select organisation_id from organisations join organisation_types on organisations.organisation_type = organisation_types.organisation_type where organisation_types.organisation_type_description = 'Sponsor' order by organisation_details"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "How many are there? | select count ( organisation_id ) from organisations join organisation_types on organisations.organisation_type = organisation_types.organisation_type where organisation_types.organisation_type_description = 'Sponsor' order by organisation_details | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "e_learning",
    "input": "What is the highest number of enrollments?\n | do you mean the highest number of course enrollments of student? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "e_learning",
    "input": "What is the student ID with the most course enrollments | select student_course_enrolment.student_id from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id order by count ( * ) desc limit 1 | what is the login name of the student with the most course enrollments?",
    "label": "CONFIRM_SQL",
    "output": "select students.login_name from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id group by student_course_enrolment.student_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "Show me the location details | select location from university | Show me the details of the schools",
    "label": "CONFIRM_SQL",
    "output": "select school from university"
  },
  {
    "db_id": "university_basketball",
    "input": "Show me how many school locations have the word 'NY' | select count ( * ) from university where location like '%NY%' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "department_store",
    "input": "what product Id has the highest price?  | Do you mean the id of the product which has the highest price? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select product_id from products order by product_price desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "what is the product name?  | Do you mean the product name of the product which has the highest price? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products order by product_price desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "what is the name of the product with the lowest price? | select product_name from products order by product_price asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_invoices",
    "input": "What are first and last names of all customers? | select customer_first_name , customer_last_name from customers | What are their ids?",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from customers"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "And what are their number of accounts?  | select count ( * ) from accounts join customers on accounts.customer_id = customers.customer_id group by accounts.customer_id | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Do you want to know more?"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "Yes, what type of accounts are there? | select distinct other_account_details from accounts | Thanks!",
    "label": "WELCOME",
    "output": "Sure. Bye!"
  },
  {
    "db_id": "architecture",
    "input": "CAN YOU GIVE ME THE LIST OF architect NAME | select name from architect | GREAT, CAN YOU GIVE ME THE DETAILS OF AMERICAN ARCHITECT NAMES",
    "label": "CONFIRM_SQL",
    "output": "select * from architect where nationality = 'American'"
  },
  {
    "db_id": "architecture",
    "input": "THANKS | You are welcome. Anything else? | NO THANKS",
    "label": "GOOD_BYE",
    "output": "OK. Bye!"
  },
  {
    "db_id": "network_2",
    "input": "What is the name that only has one friend pairing? | select name from personfriend group by name having count ( * ) = 1 | How many times does Alice show up in the friend column?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from personfriend where friend = 'Alice'"
  },
  {
    "db_id": "network_2",
    "input": "How many times does Bob show up in the friend column? | select count ( * ) from personfriend where friend = 'Bob' | who is Bob's friend?",
    "label": "CONFIRM_SQL",
    "output": "select friend from personfriend where name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "who is Zach's friend? | select friend from personfriend where name = 'Zach' | Are you sure?",
    "label": "CLARIFY",
    "output": "yes, I'm sure"
  },
  {
    "db_id": "network_2",
    "input": "How many names are in the name column? | select count ( distinct name ) from personfriend | how many names are in the friends column?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct friend ) from personfriend"
  },
  {
    "db_id": "department_store",
    "input": "How many department stores does the store chain South have? | select count ( * ) from department_stores join department_store_chain on department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id where department_store_chain.dept_store_chain_name = 'South' | How many department stores does the store chain West have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from department_stores join department_store_chain on department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id where department_store_chain.dept_store_chain_name = 'West'"
  },
  {
    "db_id": "department_store",
    "input": "What is the store address of the store chain East? | select department_stores.store_address from department_stores join department_store_chain on department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id where department_store_chain.dept_store_chain_name = 'East' | What is the store phone of the store chain West?",
    "label": "CONFIRM_SQL",
    "output": "select department_stores.store_phone from department_stores join department_store_chain on department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id where department_store_chain.dept_store_chain_name = 'West'"
  },
  {
    "db_id": "department_store",
    "input": "What is the store email of the store chain South? | select department_stores.store_email from department_stores join department_store_chain on department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id where department_store_chain.dept_store_chain_name = 'West' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "sports_competition",
    "input": "What is the name of the country that participated in the greatest number of tournaments? | select country from competition where competition_type = 'Tournament' group by country order by count ( * ) desc limit 1 | What about the name of the country that participated in the least number of tournaments?",
    "label": "CONFIRM_SQL",
    "output": "select country from competition where competition_type = 'Tournament' group by country order by count ( * ) asc limit 1"
  },
  {
    "db_id": "sports_competition",
    "input": "What were the competition types of all the competitions Russia participated in? | select competition_type from competition where country = 'Russia' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Please show me all the information about each apartment | select * from apartments | Now just the info for Suite 634",
    "label": "CONFIRM_SQL",
    "output": "select * from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.apt_number = 'Suite 634'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "and now just show the booking status code for that suite | select apartment_bookings.booking_status_code from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartments.apt_number = 'Suite 634' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Find the first and last name of the staff members who reported problems from the product \"rem\" but not \"aut\"? | select staff.staff_first_name , staff.staff_last_name from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where product.product_name = 'rem' except select staff.staff_first_name , staff.staff_last_name from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where product.product_name = 'aut' | What about staff members who reported problems for the product \"rem\"?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_first_name , staff.staff_last_name from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where product.product_name = 'rem'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What about staff members who reported problems for the product \"aut\"? | select staff.staff_first_name , staff.staff_last_name from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where product.product_name = 'aut' | What is the name of the staff member who reported problem id 1?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_first_name , staff.staff_last_name from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where problems.problem_id = 1"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the staff id of that person? | select staff.staff_id from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where problems.problem_id = 1 | Are there any other staff details of that person?",
    "label": "CONFIRM_SQL",
    "output": "select staff.other_staff_details from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where problems.problem_id = 1"
  },
  {
    "db_id": "school_finance",
    "input": "What location of school name Bremen? | select location from school where school_name = 'Bremen' | How many enrollment of school id 2?",
    "label": "CONFIRM_SQL",
    "output": "select enrollment from school where school_id = '2'"
  },
  {
    "db_id": "school_finance",
    "input": "How many invested in the school with mascot Falcons? | select invested from school join budget on school.school_id = budget.school_id where school.mascot = 'Falcons' | List the name, IHSAA Football Class, and Mascot of the schools that have more than 6000 of budgeted amount or were founded before 2003, in the order of percent of total invested budget and total budgeted budget.",
    "label": "CONFIRM_SQL",
    "output": "select school.school_name , school.mascot , school.ihsaa_football_class from school join budget on school.school_id = budget.school_id where budgeted > 6000 or year < 2003 order by budget.total_budget_percent_invested , budget.total_budget_percent_budgeted"
  },
  {
    "db_id": "network_2",
    "input": "find the average age | select avg ( age ) from person | how many are female",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person where gender = 'female'"
  },
  {
    "db_id": "network_2",
    "input": "find the number of people whose age is greater than all engineers | select count ( * ) from person where age > ( select max ( age ) from person where job = 'engineer' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "flight_4",
    "input": "How many airlines are there? | select count ( * ) from airlines | Is there any airline whose name starts with 'private'?",
    "label": "INFORM_SQL",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "network_2",
    "input": "who are Dan's friends? | select distinct person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Dan' | is Zach also a friend of Alice?",
    "label": "CONFIRM_SQL",
    "output": "select distinct person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "what is Dan's friend's name and age? | select distinct person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Dan' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "assets_maintenance",
    "input": "How many assets have fault logs? | select count ( * ) from ( select * from assets join fault_log on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) >= 1 ) | How many of those 9 assets have 2 parts?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select assets.asset_id , assets.asset_details from assets join asset_parts on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) = 2 intersect select assets.asset_id , assets.asset_details from assets join fault_log on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) >= 1 )"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Out of those 2 which has less than 2 fault logs? | select assets.asset_id , assets.asset_details from assets join asset_parts on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) = 2 intersect select assets.asset_id , assets.asset_details from assets join fault_log on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) < 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "news_report",
    "input": "how many journalist there | select count ( * ) from journalist | what is the name of journalist ID 2",
    "label": "CONFIRM_SQL",
    "output": "select name from journalist where journalist_id = 2"
  },
  {
    "db_id": "news_report",
    "input": "what is the nationality of journalist ID 1 | select nationality from journalist where journalist_id = 1 | thanks",
    "label": "WELCOME",
    "output": "you are welcome good bye"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "What source system code includes the sub string 'en'? | select distinct source_system_code from cmi_cross_references where source_system_code like '%en%' | What are the other sub strings, that do not contain 'en'?",
    "label": "CONFIRM_SQL",
    "output": "select distinct source_system_code from cmi_cross_references where source_system_code not  like '%en%'"
  },
  {
    "db_id": "local_govt_mdm",
    "input": "what is the ID for electoral code? | which columns return? | What is the master id please.",
    "label": "CONFIRM_SQL",
    "output": "select master_customer_id from cmi_cross_references where source_system_code = 'Electoral'"
  },
  {
    "db_id": "ship_1",
    "input": "List name of ships? | select name from ship | Show flags of ships?",
    "label": "CONFIRM_SQL",
    "output": "select name , flag from ship"
  },
  {
    "db_id": "ship_1",
    "input": "Name of ships not steered by by any captain with Midshipman rank? | select name from ship where ship_id not in ( select ship_id from captain where rank = 'Midshipman' ) | Flags of ships not steered by any captain with Midshipman rank?",
    "label": "CONFIRM_SQL",
    "output": "select flag from ship where ship_id not in ( select ship_id from captain where rank = 'Midshipman' )"
  },
  {
    "db_id": "ship_1",
    "input": "Okay. Name and flags of ships not steered by any captain of Midshipman rank? | select name , flag from ship where ship_id not in ( select ship_id from captain where rank = 'Midshipman' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "ship_mission",
    "input": "How many ships does United Kingdom have? | select nationality , count ( * ) from ship where nationality = 'United Kingdom' group by nationality | Which other country has more than 2 ships?",
    "label": "CONFIRM_SQL",
    "output": "select nationality from ship where nationality != 'United Kingdom' group by nationality having count ( * ) > 2"
  },
  {
    "db_id": "ship_mission",
    "input": "What type of ships does United States have? | select distinct type from ship where nationality = 'United States' | What about United Kingdom's type of ships?",
    "label": "CONFIRM_SQL",
    "output": "select distinct type from ship where nationality = 'United Kingdom'"
  },
  {
    "db_id": "college_2",
    "input": "Show the average salary of all departments. | Would you like to the know the average  salary grouped over each department name? | Yes show average salary grouped over each department name.",
    "label": "CONFIRM_SQL",
    "output": "select dept_name , avg ( salary ) from instructor group by dept_name"
  },
  {
    "db_id": "college_2",
    "input": "Show the department with the lowest average salary.  | select dept_name from instructor group by dept_name order by avg ( salary ) asc limit 1 | Who is the instructor of the department with the lowest average salary. ",
    "label": "CLARIFY",
    "output": "Would you like to know the name corresponding to the department with the lowest average salary?"
  },
  {
    "db_id": "wine_1",
    "input": "What is the average price of all wine products? | select avg ( price ) from wine | Which wine product has the highest price?",
    "label": "CONFIRM_SQL",
    "output": "select * from wine where price = ( select max ( price ) from wine )"
  },
  {
    "db_id": "wine_1",
    "input": "Which wine products have the highest average price? | Do you mean which grape whose wine products has the highest average price? | Yes, Which grapes are in the wine products that have the highest average price?",
    "label": "CONFIRM_SQL",
    "output": "select grapes.grape from grapes join wine on grapes.grape = wine.grape group by wine.grape order by avg ( price ) desc limit 1"
  },
  {
    "db_id": "wine_1",
    "input": "What is the average price of the products that Roussanne is in? | select avg ( price ) from grapes join wine on grapes.grape = wine.grape group by wine.grape order by avg ( price ) desc limit 1 | What color of grape is Roussanne?",
    "label": "CONFIRM_SQL",
    "output": "select color from grapes where grape = 'Roussanne'"
  },
  {
    "db_id": "store_1",
    "input": "What is employee named Nancy Andrews phone number? | select phone from employees where first_name = 'Nancy' and last_name = 'Andrews' | OK. What is it for Nancy Edwards?",
    "label": "CONFIRM_SQL",
    "output": "select phone from employees where first_name = 'Nancy' and last_name = 'Edwards'"
  },
  {
    "db_id": "store_1",
    "input": "Great! And her fax number? | select fax from employees where first_name = 'Nancy' and last_name = 'Edwards' | Okay. What is her job title?",
    "label": "CONFIRM_SQL",
    "output": "select title from employees where first_name = 'Nancy' and last_name = 'Edwards'"
  },
  {
    "db_id": "store_1",
    "input": "How many employees have that job title? | select count ( * ) from employees where title = 'Sales Manager' | OK. I appreciate your help. Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye."
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Can you tell me which statement has the most number of accounts?\n | Do you want to know its statement id? | Yes, what is its statement id?\n",
    "label": "CONFIRM_SQL",
    "output": "select accounts.statement_id from accounts join statements on accounts.statement_id = statements.statement_id group by accounts.statement_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Thank you. Can you also show me the statement detail for the statement with the most number of accounts? | select accounts.statement_id , statements.statement_details from accounts join statements on accounts.statement_id = statements.statement_id group by accounts.statement_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you. Good bye!"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Hello!  Can you provide me with a list of all the names and ids for all tourist attractions? | select name , tourist_attraction_id from tourist_attractions | Great!  Can you filter this list to show only the names and ids for tourist attractions that were visited 2 or more times?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name , visits.tourist_attraction_id from tourist_attractions join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id group by visits.tourist_attraction_id having count ( * ) >= 2"
  },
  {
    "db_id": "manufacturer",
    "input": "Return the name and ID of the furniture with the highest market rate | select name , furniture_id from furniture order by market_rate desc limit 1 | which furniture are of highest quality?",
    "label": "REJECT",
    "output": "Sorry, we don't have the information about the quarlity of furnitures in this table."
  },
  {
    "db_id": "manufacturer",
    "input": "rank the furniture according to the number of pieces available | Do you want a list of furniture name sorted by its corresponding number of component? | Yes, Name and corresponding number of components.",
    "label": "CONFIRM_SQL",
    "output": "select name , num_of_component from furniture order by num_of_component asc"
  },
  {
    "db_id": "small_bank_1",
    "input": "FIND THE all CHECKING BALANCE OF ALL ACCOUNTS | select balance from checking | FIND THE SAVING BALANCE OF ALL ACCOUNTS",
    "label": "CONFIRM_SQL",
    "output": "select balance from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "SORT ALL THE TOTAL BALANCE OF CHECKING AND SAVING ACCOUNT IN ASCENDING ORDER | select checking.balance + savings.balance from checking join savings on checking.custid = savings.custid order by checking.balance + savings.balance asc | THANKS",
    "label": "GOOD_BYE",
    "output": "No problem. bye"
  },
  {
    "db_id": "hospital_1",
    "input": "What are the number of rooms for block code 1? | select count ( * ) from block join room on block.blockfloor = room.blockfloor and block.blockcode = room.blockcode where block.blockcode = 1 | What are the room numbers for Block Code 1?",
    "label": "CONFIRM_SQL",
    "output": "select room.roomnumber from block join room on block.blockfloor = room.blockfloor and block.blockcode = room.blockcode where block.blockcode = 1"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the block code for room 201? | select block.blockcode from block join room on block.blockfloor = room.blockfloor and block.blockcode = room.blockcode where room.roomnumber = 201 | What is the room type for room 101?",
    "label": "CONFIRM_SQL",
    "output": "select roomtype from room where roomnumber = 101"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Can you tell me which customers do not have a first notification of loss record?\n | What attributes of the customers that do not have a first notification of loss record would you like to know?  | Can you tell me their names?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers except select customers.customer_name from customers join first_notification_of_loss on customers.customer_id = first_notification_of_loss.customer_id"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Can you tell me America Jaskolski's policy id?\n | select first_notification_of_loss.policy_id from customers join first_notification_of_loss on customers.customer_id = first_notification_of_loss.customer_id where customers.customer_name = 'America Jaskolski' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "school_finance",
    "input": "Show the names of schools | select school_name from school | Show the names of schools with a total budget amount greater than 100 or a total endowment greater than 10",
    "label": "CONFIRM_SQL",
    "output": "select school.school_name from budget join school on budget.school_id = school.school_id join endowment on school.school_id = endowment.school_id group by school.school_name having sum ( budget.budgeted ) > 100 or sum ( endowment.amount ) > 10"
  },
  {
    "db_id": "school_finance",
    "input": "Thanks | welcome goodbye | Thanks!",
    "label": "GOOD_BYE",
    "output": " goodbye"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "How many organizations are there? | select count ( organization_id ) from organizations | How many of those organizations are parent organizations?",
    "label": "CONFIRM_SQL",
    "output": "select organization_id from organizations where organization_id in ( select parent_organization_id from organizations )"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Could you tell me how many organizations are not parent organizations of others? | select count ( organization_id ) from organizations where organization_id not in ( select parent_organization_id from organizations ) | What is the full name of that organization?",
    "label": "CONFIRM_SQL",
    "output": "select organization_id from organizations except select parent_organization_id from organizations"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "What about its organization ID? | select organization_id from organizations except select parent_organization_id from organizations | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What is the location code that has the largest number of documents? | select location_code from document_locations group by location_code order by count ( * ) desc limit 1 | What about the least number of documents?",
    "label": "CONFIRM_SQL",
    "output": "select location_code from document_locations group by location_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What is the location code of the document with the latest date? | do you mean the latest Date that the document was in the location from or to? | Either, whichever has the latest date",
    "label": "REJECT",
    "output": "Sorry you need to specify one. Otherwise, I cannot answer this question using SQL"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "How about date in location from, then? | select location_code from document_locations order by date_in_location_from desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! bye"
  },
  {
    "db_id": "wine_1",
    "input": "hello,\nwhat are the maximum price and score of wines in each year? | select max ( price ) , max ( score ) , year from wine group by year | which of those is best liked?",
    "label": "CLARIFY",
    "output": "what  did  you mean the one  which  has  the max score?"
  },
  {
    "db_id": "wine_1",
    "input": "yes | Did  you  mean  the No  in  the wine  table which  is  best liked? | yes that is what i meant",
    "label": "CONFIRM_SQL",
    "output": "select no from wine order  by score desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "Which cities have more than one airport? | select city from airports group by city having count ( * ) > 1 | Now show the number of airports in each of those cities",
    "label": "CONFIRM_SQL",
    "output": "select city , count ( * ) from airports group by city having count ( * ) > 1"
  },
  {
    "db_id": "flight_4",
    "input": "Which cities have three airports | select city from airports group by city having count ( * ) = 3 | Which cities have 4 or more airports",
    "label": "CONFIRM_SQL",
    "output": "select city from airports group by city having count ( * ) >= 4"
  },
  {
    "db_id": "flight_4",
    "input": "Show the number of airports in those cities | select city , count ( * ) from airports group by city having count ( * ) >= 4 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "formula_1",
    "input": "what is the name id of the person with the longest laptime?  | Do you mean driver id? | yes",
    "label": "CONFIRM_SQL",
    "output": "select drivers.driverid from drivers join laptimes on drivers.driverid = laptimes.driverid order by laptimes.milliseconds desc limit 1"
  },
  {
    "db_id": "formula_1",
    "input": "what is his status id | Sorry, the table does not contain any content about status id. | what is the date of birth?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.driverid , drivers.dob from drivers join laptimes on drivers.driverid = laptimes.driverid order by laptimes.milliseconds desc limit 1"
  },
  {
    "db_id": "restaurant_1",
    "input": "List major and number of students for majors with 2 to 30 number of students | select major , count ( * ) from student group by major having count ( major ) between 2 and 30 | Which majors have between 2 and 20 students? Show me major and number of students",
    "label": "CONFIRM_SQL",
    "output": "select major , count ( * ) from student group by major having count ( major ) between 2 and 20"
  },
  {
    "db_id": "small_bank_1",
    "input": "Which bank has the lowest savings balance? | Sorry. The balance is some customer's balance not bank's balance. You can ask for customer id or customer name. There's no bank information on these tables. | What is the customer name with the highest bank balance?",
    "label": "CLARIFY",
    "output": "Do you mean his savings balance?"
  },
  {
    "db_id": "small_bank_1",
    "input": "yes savings balance? | select accounts.name from accounts join savings on accounts.custid = savings.custid order by savings.balance desc limit 1 | What is his customer id?",
    "label": "CONFIRM_SQL",
    "output": "select accounts.custid from accounts join savings on accounts.custid = savings.custid order by savings.balance desc limit 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the customer ID with lowest saving balance? | select custid from savings order by balance asc limit 1 | How many customers have a minimum balance of atleast 30, 000?",
    "label": "CLARIFY",
    "output": "Do you mean the saving balance or the checking balance or the sum of the two?"
  },
  {
    "db_id": "small_bank_1",
    "input": "I want saving balance. | select count ( * ) from savings where balance >= 30000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you. Bye"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "how many staffs are on the table | select count ( staff_id ) from staff | how many members are on the table?",
    "label": "CLARIFY",
    "output": "do you mean the customers?"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "how many customers are on the table? | select count ( customer_id ) from customers | Find the names for all the customers and staff members",
    "label": "CONFIRM_SQL",
    "output": "select customer_details from customers union select staff_details from staff"
  },
  {
    "db_id": "baseball_1",
    "input": "WHICH COUNTRIES HAS THE ORIGINS OF THE LEAST PLAYERS | select birth_country from player group by birth_country order by count ( * ) asc limit 1 | LIST ALL THE COUNTRIES WITH ORIGINS OF LEAST PLAYERS",
    "label": "CLARIFY",
    "output": "Isn't it the same question as the last one?"
  },
  {
    "db_id": "baseball_1",
    "input": "NO, LIST THREE COUNTRIES WHICH ARE THE ORIGINS OF THE LEAST PLAYERS | select birth_country from player group by birth_country order by count ( * ) asc limit 3 | THANKS",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "twitter_1",
    "input": "You are welcome. | you're welcome | What is the name of uid 1 ?",
    "label": "CONFIRM_SQL",
    "output": "select name from user_profiles where uid = 1"
  },
  {
    "db_id": "twitter_1",
    "input": "How many followers does Mary have ? | select followers from user_profiles where name = 'Mary' | Find the name and partition id for users who tweeted less than twice ?",
    "label": "CONFIRM_SQL",
    "output": "select user_profiles.partitionid , user_profiles.name from user_profiles join tweets where user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) < 2"
  },
  {
    "db_id": "inn_1",
    "input": "how many times does ROY SWEAZY has reserved a room | select count ( * ) from reservations where firstname = 'ROY' and lastname = 'SWEAZY' | ok,show the count of all room",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct room ) from reservations"
  },
  {
    "db_id": "inn_1",
    "input": "show the count of all adults and kids | select count ( adults ) , count ( kids ) from reservations | find the check in and out for the code 10105",
    "label": "CONFIRM_SQL",
    "output": "select checkin , checkout from reservations where code = 10105"
  },
  {
    "db_id": "flight_4",
    "input": "How many routes have a destination airport in Canada, please? | select count ( * ) from airports join routes on airports.apid = routes.dst_apid where country = 'Canada' | How many routes have a destination airport in the United States, please?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from airports join routes on airports.apid = routes.dst_apid where country = 'United States'"
  },
  {
    "db_id": "flight_4",
    "input": "How many routes have a source airport in Canada and a destination airport in the United States, please? | select count ( * ) from ( select rid from airports join routes on airports.apid = routes.dst_apid where airports.country = 'United States' intersect select rid from airports join routes on airports.apid = routes.src_apid where airports.country = 'Canada' ) | What are the names of those source airports that begin with the letter A?",
    "label": "CONFIRM_SQL",
    "output": "select airports.name from airports join routes on airports.apid = routes.src_apid where airports.name like 'A%'"
  },
  {
    "db_id": "flight_4",
    "input": "select distinct(t1.name) from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.name like 'A%' | What are the ones that are in Canada only? | select distinct ( airports.name ) from airports join routes on airports.apid = routes.src_apid where airports.name like 'A%' and airports.country = 'Canada'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "train_station",
    "input": "Show the station name with the greatest number of trains, please. | select station.name from train_station join station on train_station.station_id = station.station_id group by train_station.station_id order by count ( * ) desc limit 1 | What is the location of that station?",
    "label": "CONFIRM_SQL",
    "output": "select station.location from train_station join station on train_station.station_id = station.station_id group by train_station.station_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "train_station",
    "input": "What are the main services of that station? | select station.main_services from train_station join station on train_station.station_id = station.station_id group by train_station.station_id order by count ( * ) desc limit 1 | What is the station id of that station?",
    "label": "CONFIRM_SQL",
    "output": "select station.station_id from train_station join station on train_station.station_id = station.station_id group by train_station.station_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "train_station",
    "input": "How many annual interchanges are at that station? | select station.annual_interchanges from train_station join station on train_station.station_id = station.station_id group by train_station.station_id order by count ( * ) desc limit 1 | What is the name of the station with station id 3?",
    "label": "CONFIRM_SQL",
    "output": "select name from station where station_id = 3"
  },
  {
    "db_id": "machine_repair",
    "input": "Show the names of all technicians. | select name from technician | Show the names of all technicians and the machines they are assigned to. ",
    "label": "CONFIRM_SQL",
    "output": "select technician.name , repair_assignment.machine_id from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id"
  },
  {
    "db_id": "machine_repair",
    "input": "Show the names of all technicians assigned to the machine with ID 2.  | select technician.name , repair_assignment.machine_id from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id and repair_assignment.machine_id = 2 | Show the names of all technicians in ascending order of quality rank assigned to the machine with ID 2.\n",
    "label": "CONFIRM_SQL",
    "output": "select technician.name , repair_assignment.machine_id , quality_rank from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id and repair_assignment.machine_id = 2 order by quality_rank asc"
  },
  {
    "db_id": "machine_repair",
    "input": "Show the names of all technicians in ascending order of quality rank assigned to the machine with ID 1. | select technician.name , repair_assignment.machine_id , quality_rank from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id and repair_assignment.machine_id = 1 order by quality_rank asc | Show the names of technicians in ascending order of quality rank of the machine they are assigned. ",
    "label": "CONFIRM_SQL",
    "output": "select technician.name from repair_assignment join machine on repair_assignment.machine_id = machine.machine_id join technician on repair_assignment.technician_id = technician.technician_id order by machine.quality_rank asc"
  },
  {
    "db_id": "soccer_1",
    "input": "List all player names who have an overall rating higher than the average. | select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating > ( select avg ( overall_rating ) from player_attributes ) | List all player names who have an overall rating lower than the average.",
    "label": "CONFIRM_SQL",
    "output": "select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating < ( select avg ( overall_rating ) from player_attributes )"
  },
  {
    "db_id": "soccer_1",
    "input": "How many players have an overall rating lower than the average? | select count ( distinct player.id ) from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating < ( select avg ( overall_rating ) from player_attributes ) | What is the average height of players that have an overall rating lower than the average?\n",
    "label": "CONFIRM_SQL",
    "output": "select avg ( player.height ) from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating < ( select avg ( overall_rating ) from player_attributes )"
  },
  {
    "db_id": "soccer_1",
    "input": "What is their average weight? | select avg ( player.weight ) from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating < ( select avg ( overall_rating ) from player_attributes ) | What is the average height of players that have an overall rating higher than the average? ",
    "label": "CONFIRM_SQL",
    "output": "select avg ( player.height ) from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating > ( select avg ( overall_rating ) from player_attributes )"
  },
  {
    "db_id": "soccer_1",
    "input": "What is their average weight? | select avg ( player.weight ) from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating > ( select avg ( overall_rating ) from player_attributes ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Show the names of employees with role name Editor. | select employees.employee_name from employees join roles on employees.role_code = roles.role_code where roles.role_name = 'Editor' | Show the names of roles with role code..",
    "label": "CONFIRM_SQL",
    "output": "select role_code , role_name from roles"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Show the id of employees with role Role_Code | select employee_id , role_code from employees | Show the Role_Code of roles with Role_Description.",
    "label": "CONFIRM_SQL",
    "output": "select role_code , role_description from roles"
  },
  {
    "db_id": "activity_1",
    "input": "Find the first names of the faculty members who participate in Caonoeing and Kayaking. | select faculty.lname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = faculty_participates_in.actid where activity.activity_name = 'Canoeing' intersect select faculty.lname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = faculty_participates_in.actid where activity.activity_name = 'Kayaking' | What about faculty members who participate in Mountain Climbing?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.fname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = faculty_participates_in.actid where activity.activity_name = 'Mountain Climbing'"
  },
  {
    "db_id": "activity_1",
    "input": "What about Mountain Climbing and Kayaking? | select faculty.fname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = faculty_participates_in.actid where activity.activity_name = 'Mountain Climbing' intersect select faculty.fname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on faculty_participates_in.actid = faculty_participates_in.actid where activity.activity_name = 'Kayaking' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "entertainment_awards",
    "input": "Can you list the names of the festivals that had two or more nominations for artwork? | select festival_detail.festival_name from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id group by nomination.festival_id having count ( * ) >= 2 | Can you list their IDs in the table too?",
    "label": "CONFIRM_SQL",
    "output": "select festival_detail.festival_id , festival_detail.festival_name from nomination join artwork on nomination.artwork_id = artwork.artwork_id join festival_detail on nomination.festival_id = festival_detail.festival_id group by nomination.festival_id having count ( * ) >= 2"
  },
  {
    "db_id": "entertainment_awards",
    "input": "What are the names of all the artworks that won? | select artwork.name from nomination join artwork on nomination.artwork_id = artwork.artwork_id where nomination.result = 'Won' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "candidate_poll",
    "input": "How many females are there? | select count ( * ) from people where sex = 'F' | How about males?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where sex = 'M'"
  },
  {
    "db_id": "candidate_poll",
    "input": "What is the lowest oppose rate that male candidates have? | select min ( oppose_rate ) from people join candidate on people.people_id = candidate.people_id where people.sex = 'M' | What's the name of the male candidate that has an oppose rate of 0.32?",
    "label": "CONFIRM_SQL",
    "output": "select name from people join candidate on people.people_id = candidate.people_id where people.sex = 'M' and oppose_rate = 0.32"
  },
  {
    "db_id": "candidate_poll",
    "input": "Can you also show me the lowest oppose rate that female candidates have? | select min ( oppose_rate ) from people join candidate on people.people_id = candidate.people_id where people.sex = 'F' | Can you show me the name of that female candidate?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from people join candidate on people.people_id = candidate.people_id where people.sex = 'F' order by oppose_rate asc limit 1"
  },
  {
    "db_id": "customer_deliveries",
    "input": "Did you mean the number of orders for product named \"dvds\"? | Yes | I want to know what product has been ordered the greatest number of times.",
    "label": "CONFIRM_SQL",
    "output": "select * from products join regular_order_products on products.product_id = regular_order_products.product_id group by regular_order_products.product_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "customer_deliveries",
    "input": "How many dvd orders are there? | select count ( * ) from products join regular_order_products on products.product_id = regular_order_products.product_id where products.product_name = 'dvds' | What products have less orders than dvds?",
    "label": "CLARIFY",
    "output": "Did you want to return all info of the products or just their names?"
  },
  {
    "db_id": "customer_deliveries",
    "input": "What is the total cost of the dvd orders? | select sum ( product_price ) from products join regular_order_products on products.product_id = regular_order_products.product_id where products.product_name = 'dvds' | And what about electronics?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( product_price ) from products join regular_order_products on products.product_id = regular_order_products.product_id where products.product_name = 'electronics'"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "what is the name of customer id 1? | select customer_first_name , customer_last_name from customers where customer_id = 1 |   what type of card is used by customer id 6?",
    "label": "CONFIRM_SQL",
    "output": "select card_type_code from customers_cards where customer_id = 6"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "what  is the  address of customer id 2? | select customer_address from customers where customer_id = 2 | Show id,first and last names for all customers with at least two cards?",
    "label": "CONFIRM_SQL",
    "output": "select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards join customers on customers_cards.customer_id = customers.customer_id group by customers_cards.customer_id having count ( * ) >= 2"
  },
  {
    "db_id": "soccer_1",
    "input": "What are the names of people with overall rating between 85 and 90? | by people did you mean players? | yes",
    "label": "CONFIRM_SQL",
    "output": "select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.overall_rating >= 85 and player_attributes.overall_rating <= 90"
  },
  {
    "db_id": "soccer_1",
    "input": "Of them which are left footed?  | select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.preferred_foot = 'left' and player_attributes.overall_rating >= 85 and player_attributes.overall_rating <= 90 | What about the names of right-footed players?",
    "label": "CONFIRM_SQL",
    "output": "select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id where player_attributes.preferred_foot = 'right'"
  },
  {
    "db_id": "chinook_1",
    "input": "How many employees serve at least 10 customers? | select count ( * ) from customer join employee on customer.supportrepid = employee.employeeid group by customer.supportrepid having count ( * ) >= 10 | What are the first names of employees that serve at least 10 customers?",
    "label": "CONFIRM_SQL",
    "output": "select customer.firstname from customer join employee on customer.supportrepid = employee.employeeid group by customer.supportrepid having count ( * ) >= 10"
  },
  {
    "db_id": "chinook_1",
    "input": "What is diego  work title? |  is Diego the employee first name? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select company from customer where firstname = 'Diego'"
  },
  {
    "db_id": "film_rank",
    "input": "Hello, which films where made in 1995? | select film.* from film join film_market_estimation on film.film_id = film_market_estimation.film_id where film_market_estimation.year = 1995 | Who was the distinct director of ET the Extra-Terrestrial?",
    "label": "CONFIRM_SQL",
    "output": "select director from film where title = 'ET the Extra-Terrestrial'"
  },
  {
    "db_id": "film_rank",
    "input": "Can you show me Market estimation for the year 1995? | select low_estimate , high_estimate from film_market_estimation where year = 1995 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "how many orders did the person with the most orders have? | select count ( * ) from orders group by customer_id order by count ( * ) desc limit 1 | who was that person? Give me the id.",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from orders group by customer_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "can you give me the last name, id, and phone number of the person with the most order? | select customers.customer_last_name , customers.customer_id , customers.phone_number from customers join orders on customers.customer_id = orders.customer_id group by orders.customer_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the total home game attandance in 1871? | select sum ( home_game.attendance ) from home_game join team on home_game.team_id = team.team_id_br where home_game.year = 1871 | how many games played by BS1?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from home_game where team_id = 'BS1'"
  },
  {
    "db_id": "baseball_1",
    "input": "WHAT IS THE RANK OF TEAM BS1? IN TEAM TABLE? | select rank from team where team_id = 'BS1' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "soccer_1",
    "input": "Which 5 players have the highest potential? | Do you want the names of those players? | Yes, please.",
    "label": "CONFIRM_SQL",
    "output": "select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id order by potential desc limit 5"
  },
  {
    "db_id": "soccer_1",
    "input": "What are their birthdays? | select distinct player.birthday from player join player_attributes on player.player_api_id = player_attributes.player_api_id order by potential desc limit 5 | What are their weights?",
    "label": "CONFIRM_SQL",
    "output": "select distinct player.weight from player join player_attributes on player.player_api_id = player_attributes.player_api_id order by potential desc limit 5"
  },
  {
    "db_id": "train_station",
    "input": "bye | Which location has the most number of train stations? | select location , count ( * ) from station group by location order by count ( * ) desc limit 1",
    "label": "INFORM_SQL",
    "output": "What is the total number of passengers do train station in london has ?"
  },
  {
    "db_id": "train_station",
    "input": "select sum ( total_passengers ) from station where location = 'London' | How many number of platforms do they have? | could you give more info of your problem? it the \"they\" station id or location?",
    "label": "INFORM_SQL",
    "output": "What is the number of platforms does train station in london has?"
  },
  {
    "db_id": "train_station",
    "input": "select sum ( number_of_platforms ) from station where location = 'London' | What is the name of the train station in londom? | select name from station where location = 'London'",
    "label": "INFORM_SQL",
    "output": "What is the main service of  train station in london?"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Show the name of the product with product id 1? | select product_name from products where product_id = '1' | show the number of products with category Spices?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products where product_category_code = 'Spices'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Show the number of products with category Spices and typically sold above 1000? | select count ( * ) from products where product_category_code = 'Spices' and typical_buying_price > 1000 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "twitter_1",
    "input": "What are the names of all the individuals in the table?\n | select name from user_profiles | How many followers does Celine Dion have?",
    "label": "CONFIRM_SQL",
    "output": "select followers from user_profiles where name = 'Celine Dion'"
  },
  {
    "db_id": "twitter_1",
    "input": "How about Tyler Swift? | select followers from user_profiles where name = 'Tyler Swift' | What is Tyler Swift's email?",
    "label": "CONFIRM_SQL",
    "output": "select email from user_profiles where name = 'Tyler Swift'"
  },
  {
    "db_id": "protein_institute",
    "input": "Do you mean the number of different types of institutions in the table? | YES | How many institutions in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from institution"
  },
  {
    "db_id": "protein_institute",
    "input": "How many buildings in this table? | select count ( * ) from building | How many type of institutions in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct type ) from institution"
  },
  {
    "db_id": "protein_institute",
    "input": "How many different teams in this institution table? | select count ( distinct team ) from institution | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Show the date of transaction where share count is larger than 100 | select date_of_transaction from transactions where share_count > 100 | What are the transaction IDs of those results?",
    "label": "CONFIRM_SQL",
    "output": "select transaction_id from transactions where share_count > 100"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Show date of transaction where amount of transaction larger than 1000 | select date_of_transaction from transactions where amount_of_transaction > 1000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "epinions_1",
    "input": "How many users did not leave a review? | select name from useracct where u_id not in ( select u_id from review ) | Can you list out their names?",
    "label": "CONFIRM_SQL",
    "output": "select name from useracct where u_id not in ( select u_id from review )"
  },
  {
    "db_id": "epinions_1",
    "input": "And the users who did not? | select name from useracct where u_id not in ( select u_id from review ) | How many reviews did we receive?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from review"
  },
  {
    "db_id": "epinions_1",
    "input": "How many of the reviews have a rating greater than or equal to 5? | select count ( * ) from review where rating >= 5 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "club_1",
    "input": "Did you want their first and last names? | Yes | Who are the members of  Bootup Baltimore? ",
    "label": "CONFIRM_SQL",
    "output": "select student.fname , student.lname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore'"
  },
  {
    "db_id": "club_1",
    "input": "What are there major's? | select student.major from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore' | How many members are there total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid"
  },
  {
    "db_id": "club_1",
    "input": "Can you list all of the members?  | select * from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid | How many members are female?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where student.sex = 'F'"
  },
  {
    "db_id": "body_builder",
    "input": "Show me the names of all body builders | select people.name from body_builder join people on body_builder.people_id = people.people_id | Show me the details of weight of the all body builders",
    "label": "CONFIRM_SQL",
    "output": "select people.weight from body_builder join people on body_builder.people_id = people.people_id"
  },
  {
    "db_id": "body_builder",
    "input": "Show me the greatest weight of the body builder\n | select people.weight from body_builder join people on body_builder.people_id = people.people_id order by people.weight desc limit 1 | Show me the name of the body builder with the most weight",
    "label": "CONFIRM_SQL",
    "output": "select people.name from body_builder join people on body_builder.people_id = people.people_id order by people.weight desc limit 1"
  },
  {
    "db_id": "manufacturer",
    "input": "Did you mean the id of the furniture with the highest price? | Yes | Which furniture has the highest price?",
    "label": "CONFIRM_SQL",
    "output": "select furniture_id from furniture_manufacte order by price_in_dollar desc limit 1"
  },
  {
    "db_id": "manufacturer",
    "input": "What is the name of the manufacturer that sells that furniture? | select manufacturer.name from manufacturer join furniture_manufacte on manufacturer.manufacturer_id = furniture_manufacte.manufacturer_id order by furniture_manufacte.price_in_dollar desc limit 1 | What is the manufacturer ID for Tomorrow?",
    "label": "CONFIRM_SQL",
    "output": "select manufacturer_id from manufacturer where name = 'Tomorrow'"
  },
  {
    "db_id": "manufacturer",
    "input": "How many shops does Tomorrow have? | select num_of_shops from manufacturer where name = 'Tomorrow' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "music_1",
    "input": "What language is used most often in songs?\n | select languages from song group by languages order by count ( * ) desc limit 1 | And what is the range of resolution in songs?\n",
    "label": "CONFIRM_SQL",
    "output": "select min ( resolution ) , max ( resolution ) from song"
  },
  {
    "db_id": "music_1",
    "input": "What is the range of ratings for those songs? | select min ( rating ) , max ( rating ) from song | What is the language most often used in songs with resolution below 500?",
    "label": "CONFIRM_SQL",
    "output": "select languages from song where resolution < 500 group by languages order by count ( * ) desc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "And what language is most often used in songs with resolution above 500? | select languages from song where resolution > 500 group by languages order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome. Bye!"
  },
  {
    "db_id": "customer_deliveries",
    "input": "What is the most frequently used payment method? | select payment_method from customers group by payment_method order by count ( * ) desc limit 1 | How many customers used Visa to pay?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers group by payment_method having payment_method = 'Visa'"
  },
  {
    "db_id": "customer_deliveries",
    "input": "Can you show me the email addresses of all the customers who paid with Visa? | select customer_email from customers where payment_method = 'Visa' | How about their phone numbers?",
    "label": "CONFIRM_SQL",
    "output": "select customer_phone from customers where payment_method = 'Visa'"
  },
  {
    "db_id": "customer_deliveries",
    "input": "Who is the newest customer of that group? | select customer_name from customers where payment_method = 'Visa' order by date_became_customer asc limit 1 | When did that customer become a customer?",
    "label": "CONFIRM_SQL",
    "output": "select date_became_customer from customers where payment_method = 'Visa' order by date_became_customer asc limit 1"
  },
  {
    "db_id": "customer_deliveries",
    "input": "What was the second most common payment method? | select payment_method from customers group by payment_method order by count ( * ) desc limit 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "What are the location codes of all the documents? | select distinct location_code from document_locations | What are the document id of all the location code?",
    "label": "CLARIFY",
    "output": "Do you mean you wanna see the whole document ids or see the document id and its location codes at the same time."
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "Whole document ids | select distinct document_id from document_locations | What is the date in location from of document id 81?",
    "label": "CONFIRM_SQL",
    "output": "select date_in_location_from from document_locations where document_id = '81'"
  },
  {
    "db_id": "sakila_1",
    "input": "Can i have the list of the names of film that was rented | select film.title from film join inventory on film.film_id = inventory.film_id join rental on inventory.inventory_id = rental.inventory_id group by inventory.inventory_id | Give me the inventory id and title of the film that was most frequently rented",
    "label": "CONFIRM_SQL",
    "output": "select film.title , inventory.inventory_id from film join inventory on film.film_id = inventory.film_id join rental on inventory.inventory_id = rental.inventory_id group by inventory.inventory_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "what are the special features of ACADEMY DINOSAUR | select special_features from film where title = 'ACADEMY DINOSAUR' | Thanks",
    "label": "GOOD_BYE",
    "output": "bye!"
  },
  {
    "db_id": "company_office",
    "input": "Show the names of the buildings that have more than one company offices. | select buildings.name from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id group by office_locations.building_id having count ( * ) > 1 | Can you tell me which companies are located at the Torre KOI building?",
    "label": "CLARIFY",
    "output": "What attributes of these companies do you want to know? "
  },
  {
    "db_id": "company_office",
    "input": "The names of the companies that are present in that building. | select companies.name from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where buildings.name = 'Torre KOI' | What other buildings is JPMorgan Chase also located in?",
    "label": "CONFIRM_SQL",
    "output": "select buildings.name from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where companies.name = 'JPMorgan Chase' and buildings.name != 'Torre KOI'"
  },
  {
    "db_id": "company_office",
    "input": "Does Torre Mitkah have an HSBC located in it? | select * from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where companies.name = 'HSBC' and buildings.name = 'Torre Mitikah' | What is the name of company with the company id 4?",
    "label": "CONFIRM_SQL",
    "output": "select name from companies where id = 4"
  },
  {
    "db_id": "company_office",
    "input": "ExxonMobil is located in Punto Chapultepec, correct? | select * from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where companies.name = 'ExxonMobil' and buildings.name = 'Punto Chapultepec' | Is General Electric also located in Punto Chapultepec ?",
    "label": "CONFIRM_SQL",
    "output": "select * from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where companies.name = 'General Electric' and buildings.name = 'Punto Chapultepec'"
  },
  {
    "db_id": "company_office",
    "input": "Which buildings have a General Electric then? | select buildings.name from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where companies.name = 'General Electric' | What other companies are located in Corporativo BBVA Bancomer?",
    "label": "CONFIRM_SQL",
    "output": "select companies.name from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id where buildings.name = 'Corporativo BBVA Bancomer' and companies.name != 'General Electric'"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Hello! Can you please provide me with a list of all of customer IDs in the Customer Address History table? | select customer_id from customer_address_history | Thank you for that!  Can you update this list to include the associated customer names, customer address city and the date from and date to for each row?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , addresses.city , customer_address_history.date_from , customer_address_history.date_to from customer_address_history join customers on customer_address_history.customer_id = customers.customer_id join addresses on customer_address_history.address_id = addresses.address_id"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Great! Can you tell me which, if any, customers on this list appear more than once? | select customers.customer_name from customer_address_history join customers on customer_address_history.customer_id = customers.customer_id join addresses on customer_address_history.address_id = addresses.address_id group by customers.customer_name having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "wine_1",
    "input": "Which wines were produced before 2000? | select distinct name from wine where year < 2000 | What is the most common year of production?",
    "label": "CONFIRM_SQL",
    "output": "select year from wine group by year order by count ( * ) desc limit 1"
  },
  {
    "db_id": "wine_1",
    "input": "Which wines were produced in 2007? | select winery from wine where year = 2007 | What about the ones after the year 2010?",
    "label": "CONFIRM_SQL",
    "output": "select distinct name from wine where year > 2010"
  },
  {
    "db_id": "student_1",
    "input": "how many classrooms are available? | select count ( distinct classroom ) from list | how many grades are available?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct grade ) from list"
  },
  {
    "db_id": "student_1",
    "input": "how many names are available? | did you mean how many LastName or FirstName  are available  | yes",
    "label": "CLARIFY",
    "output": " LastName or FirstName?\n"
  },
  {
    "db_id": "student_1",
    "input": "lastname | select count ( distinct lastname ) from list | how many firstnames are available?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct firstname ) from list"
  },
  {
    "db_id": "student_1",
    "input": "what was the car grade? | select grade from list where lastname = 'CAR' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "game_1",
    "input": "Which game names were played by Linda Smith? | select gname from plays_games join video_games on plays_games.gameid = video_games.gameid join student on student.stuid = plays_games.stuid where student.lname = 'Smith' and student.fname = 'Linda' | What is the Gtype of RGN Stone?",
    "label": "CONFIRM_SQL",
    "output": "select gtype from video_games where gname = 'RNG Stone'"
  },
  {
    "db_id": "game_1",
    "input": "What is the city code of Student Shiela Jones?\t | select city_code from student where lname = 'Jones' and fname = 'Shiela' | How many Hours Played do The Vanishing of Eric Calde hasr?",
    "label": "CONFIRM_SQL",
    "output": "select plays_games.hours_played from plays_games join video_games on plays_games.gameid = video_games.gameid where gname = 'The Vanishing of Eric Calder'"
  },
  {
    "db_id": "game_1",
    "input": "What are the Student names who have played Gname The Vanishing of Eric Calder. | select student.fname , student.lname from plays_games join video_games on plays_games.gameid = video_games.gameid join student on student.stuid = plays_games.stuid where video_games.gname = 'The Vanishing of Eric Calder' | What is the total Hours Played of all Students?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( hours_played ) from plays_games"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Hello, can you tell me the tourist attraction id for the photo name \"game1\"? | select tourist_attractions.tourist_attraction_id from photos join tourist_attractions on photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id where photos.name = 'game1' | Can you tell me the name for this attraction as well?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name from photos join tourist_attractions on photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id where photos.name = 'game1'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How about how to get there? | select tourist_attractions.how_to_get_there from photos join tourist_attractions on photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id where photos.name = 'game1' | I need the opening hours as well please.",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.opening_hours from photos join tourist_attractions on photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id where photos.name = 'game1'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What about the other details? | select tourist_attractions.other_details from photos join tourist_attractions on photos.tourist_attraction_id = tourist_attractions.tourist_attraction_id where photos.name = 'game1' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "company_employee",
    "input": "Do you have the list of all the unemployed people | select * from people where people_id not in ( select people_id from employment ) | Give me the nationality of the unemployed people",
    "label": "CONFIRM_SQL",
    "output": "select nationality from people where people_id not in ( select people_id from employment )"
  },
  {
    "db_id": "company_employee",
    "input": "Which college did Reggie Lewis graduated from | select graduation_college from people where name = 'Reggie Lewis' | Thanks",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "How many detentions are there? | select distinct count ( * ) from detention | How many teachers are not involved in any of them?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select last_name from teachers except select teachers.last_name from teachers join detention on teachers.teacher_id = detention.teacher_id )"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the last names of those teachers? | select last_name from teachers except select teachers.last_name from teachers join detention on teachers.teacher_id = detention.teacher_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "soccer_2",
    "input": "I want to know the states and the college names which have some college students in tryout. | select college.state , college.cname from college join tryout on college.cname = tryout.cname | Hmm, can you show me the college names with players whose decisions are yes?",
    "label": "CONFIRM_SQL",
    "output": "select cname from tryout where decision = 'yes'"
  },
  {
    "db_id": "soccer_2",
    "input": "Can you list just the states which have college students in tryout and their decisions are yes? | select distinct college.state from college join tryout on college.cname = tryout.cname where tryout.decision = 'yes' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "sakila_1",
    "input": "How many cities have 3 cities? | Sorry, I cannot answer that question. | How many countries have more than 1 city?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from city join country on city.country_id = country.country_id group by country.country_id having count ( * ) > 1 )"
  },
  {
    "db_id": "sakila_1",
    "input": "How many countries have at least 3 cities? | select count ( * ) from ( select * from city join country on city.country_id = country.country_id group by country.country_id having count ( * ) >= 3 ) | Show these countries",
    "label": "CONFIRM_SQL",
    "output": "select country.country from city join country on city.country_id = country.country_id group by country.country_id having count ( * ) >= 3"
  },
  {
    "db_id": "match_season",
    "input": "What are the different colleges this season? | select distinct college from match_season | How many players are playing for the listed colleges?",
    "label": "CONFIRM_SQL",
    "output": "select college , count ( * ) from match_season group by college"
  },
  {
    "db_id": "match_season",
    "input": "What are the draft classes for the players from UCLA and Duke? | select distinct draft_class from match_season where college = 'UCLA' or college = 'Duke' | Could you tell me the draft pick numbers of the players from those draft classes?",
    "label": "CONFIRM_SQL",
    "output": "select draft_pick_number from match_season where draft_class in ( select distinct draft_class from match_season where college = 'UCLA' or college = 'Duke' )"
  },
  {
    "db_id": "match_season",
    "input": "What players were those draft pick numbers for? | do you want to see both the players and the draft pick numbers?  | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select player , draft_pick_number from match_season where draft_class in ( select distinct draft_class from match_season where college = 'UCLA' or college = 'Duke' )"
  },
  {
    "db_id": "match_season",
    "input": "What are the positions of each of those players? | select position , player , draft_pick_number from match_season where draft_class in ( select distinct draft_class from match_season where college = 'UCLA' or college = 'Duke' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye."
  },
  {
    "db_id": "county_public_safety",
    "input": "How many counties are there? | select count ( * ) from county_public_safety | Which county has the lowest crime rate?\n",
    "label": "CLARIFY",
    "output": "Would you like the county name corresponding to the lowest crime rate?"
  },
  {
    "db_id": "county_public_safety",
    "input": "yes | select name from county_public_safety order by crime_rate asc limit 1 | which county has the highest crime rate?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from county_public_safety order by crime_rate desc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "list together, the crime rate for Central Saanich and Campbell River counties | Would you like me to list the crime rates for counties with the name Central Saanich or Campbell River? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select name , crime_rate from county_public_safety where name = 'Campbell River' or name = 'Central Saanich'"
  },
  {
    "db_id": "county_public_safety",
    "input": "please list by crime rate in ascending order | Would you like the crime rates for all counties in ascending order of crime rate? | no, just for the 2 counties from the previous query\n",
    "label": "CLARIFY",
    "output": "Would you like the crime rates corresponding to name Central Saanich and Campbell River listed in ascending order of crime rates?"
  },
  {
    "db_id": "county_public_safety",
    "input": "yes\n | select name , crime_rate from county_public_safety where name = 'Campbell River' or name = 'Central Saanich' order by crime_rate asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "sakila_1",
    "input": "What is the name of the city with the most addresses? | select city.city from address join city on address.city_id = city.city_id group by address.city_id order by count ( * ) desc limit 1 | How many addresses does it have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from address join city on address.city_id = city.city_id group by address.city_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "What is its city id? | select city.city_id from address join city on address.city_id = city.city_id group by address.city_id order by count ( * ) desc limit 1 | Can you list the all addresses that have the letter S in them?",
    "label": "CONFIRM_SQL",
    "output": "select address from address where address like '%S%'"
  },
  {
    "db_id": "storm_record",
    "input": "how many cities were affected? | select sum ( number_city_affected ) from affected_region | what are the name for the regions?",
    "label": "CONFIRM_SQL",
    "output": "select region_name from region"
  },
  {
    "db_id": "storm_record",
    "input": "how many number of storms for each region? | select region.region_name , count ( * ) from region join affected_region on region.region_id = affected_region.region_id group by region.region_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye"
  },
  {
    "db_id": "wedding",
    "input": "Show me the country with people younger than 30, | select distinct country from people where age < 30 | Show me a list of countries with people over the age of 30.",
    "label": "CONFIRM_SQL",
    "output": "select distinct country from people where age > 30"
  },
  {
    "db_id": "wedding",
    "input": "How many males 30 or older are in the Canada | select count ( * ) from people where age >= 30 and is_male = 'T' and country = 'Canada' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the average salary of Boston Red Stockings? | select avg ( salary.salary ) from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings' | what is the league id of Boston Red Stocking?",
    "label": "CONFIRM_SQL",
    "output": "select league_id from team where name = 'Boston Red Stockings'"
  },
  {
    "db_id": "baseball_1",
    "input": "what is their rank?  | do you mean all their ranks in every year? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select year , rank from team where name = 'Boston Red Stockings'"
  },
  {
    "db_id": "twitter_1",
    "input": "show me the name of the users. | select name from user_profiles | show me the tweets tweeted by them.",
    "label": "CLARIFY",
    "output": "do you want to show all the info of the tweets?"
  },
  {
    "db_id": "twitter_1",
    "input": "yes | select tweets.* from user_profiles join tweets on user_profiles.uid = tweets.uid | show me the number of tweets of each user",
    "label": "CONFIRM_SQL",
    "output": "select user_profiles.name , count ( * ) from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "list the canceled product customer id? | select product_id from customer_orders join order_items on customer_orders.order_id = order_items.order_id where order_status = 'Cancelled' | Do you mean the product ids and customer ids of the orders whose status is cancelled?",
    "label": "INFORM_SQL",
    "output": "which is the order date of customer id 5?"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "select order_date from customer_orders where customer_id = 5 | what the average order quantity for all the order items? | select avg ( order_quantity ) from order_items",
    "label": "THANK_YOU",
    "output": "thanks"
  },
  {
    "db_id": "hr_1",
    "input": "show me the first and last names of employees whose first name does not contain letter M | select first_name , last_name from employees where first_name not like '%M%' | show me the full name, hire date, salary and department number of these employees",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name , hire_date , salary , department_id from employees where first_name not like '%M%'"
  },
  {
    "db_id": "hr_1",
    "input": "Set this result in ascending order of department number | select first_name , last_name , hire_date , salary , department_id from employees where first_name not like '%M%' order by department_id asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "department_store",
    "input": "Can you show me the phone numbers of all customers? | select customer_phone from customers | Hmm, I also want to know the phone numbers of all suppliers please.",
    "label": "CONFIRM_SQL",
    "output": "select supplier_phone from suppliers"
  },
  {
    "db_id": "department_store",
    "input": "Here is the list of the phone number of all supplies.  | Please list the phone numbers of all customers and suppliers.  | select customer_phone from customers union select supplier_phone from suppliers",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "aircraft",
    "input": "Please show the location of the airport with name \"London Gatwick\". | The location of the airport cannot be found in the table. | please show the name of all the aircrafts.",
    "label": "CONFIRM_SQL",
    "output": "select aircraft from aircraft"
  },
  {
    "db_id": "aircraft",
    "input": "please show the description of the Aircraft Robinson R-22 | select description from aircraft where aircraft = 'Robinson R-22' | Please show the names of aircrafts associated with airport with name \"London Gatwick\".",
    "label": "CONFIRM_SQL",
    "output": "select aircraft.aircraft from aircraft join airport_aircraft on aircraft.aircraft_id = airport_aircraft.aircraft_id join airport on airport_aircraft.airport_id = airport.airport_id where airport.airport_name = 'London Gatwick'"
  },
  {
    "db_id": "ship_mission",
    "input": "How many ships are there? | select count ( * ) from ship | What are their nationalities?  ",
    "label": "CONFIRM_SQL",
    "output": "select nationality from ship"
  },
  {
    "db_id": "ship_mission",
    "input": "What is the name of the ship with the largest tonnage? | select name from ship order by tonnage desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "school_player",
    "input": "What schools were founded before 1890? | select school from school where founded < 1890 | What was its denomination?",
    "label": "CONFIRM_SQL",
    "output": "select denomination from school where founded < 1890"
  },
  {
    "db_id": "school_player",
    "input": "What schools were founded after 1900? | select school from school where founded > 1900 | What were their denominations?",
    "label": "CONFIRM_SQL",
    "output": "select denomination from school where founded > 1900"
  },
  {
    "db_id": "soccer_2",
    "input": "find the state of the college which player Charles is attending | select college.state from college join tryout on college.cname = tryout.cname join player on tryout.pid = player.pid where player.pname = 'Charles' | OK,List out the all player id and college name",
    "label": "CONFIRM_SQL",
    "output": "select college.cname , player.pid from college join tryout on college.cname = tryout.cname join player on tryout.pid = player.pid"
  },
  {
    "db_id": "soccer_2",
    "input": "find the training hours of the player Charles | select hs from player where pname = 'Charles' | ok, list out all college name",
    "label": "CONFIRM_SQL",
    "output": "select cname from college"
  },
  {
    "db_id": "college_1",
    "input": "Can you list all schools with less than 5 different departments? | select school_code from department group by school_code having count ( distinct dept_name ) < 5 | Can you list all the departments with the school code BUS?",
    "label": "CONFIRM_SQL",
    "output": "select * from department where school_code = 'BUS'"
  },
  {
    "db_id": "college_1",
    "input": "Thanks, can you just show the number of different departments in the table? | select count ( distinct dept_name ) , school_code from department group by school_code having count ( distinct dept_name ) < 5 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Good bye!"
  },
  {
    "db_id": "student_assessment",
    "input": "Hello! How many students are there in total? | select count ( * ) from students | Great!  Can you list the ids of these students, and filter the list by only the students who are registered for one or more courses?",
    "label": "CONFIRM_SQL",
    "output": "select distinct students.student_id from students join student_course_registrations on students.student_id = student_course_registrations.student_id"
  },
  {
    "db_id": "student_assessment",
    "input": "Awesome!  Can you also add to this list the number of registered courses for each of these students? | select students.student_id , count ( * ) from students join student_course_registrations on students.student_id = student_course_registrations.student_id group by students.student_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What is the name of the customer who has been involved in most policies? | select customers.customer_details from policies join customers on policies.customer_id = customers.customer_id group by customers.customer_details order by count ( * ) desc limit 1 | What is her ID?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_id from policies join customers on policies.customer_id = customers.customer_id group by customers.customer_details order by count ( * ) desc limit 1"
  },
  {
    "db_id": "device",
    "input": "List the software platform shared by the greatest number of devices. | select software_platform from device group by software_platform order by count ( * ) desc limit 1 | How many devices from the list use the Android platform?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from device where software_platform = 'Android'"
  },
  {
    "db_id": "device",
    "input": "And how many devices from the list use the iOS platform? | select count ( * ) from device where software_platform = 'iOS' | Could you please list the devices that use the Android platform?",
    "label": "CONFIRM_SQL",
    "output": "select device from device where software_platform = 'Android'"
  },
  {
    "db_id": "device",
    "input": "How many different carriers are there on the list? | select count ( distinct carrier ) from device | What is the carrier for the Samsung device?",
    "label": "CONFIRM_SQL",
    "output": "select carrier from device where device = 'Samsung'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Could you list the project details of the projects launched by the most popular organization? | select project_details from projects where organisation_id in ( select organisation_id from projects group by organisation_id order by count ( * ) desc limit 1 ) | What are the ids of those?",
    "label": "CONFIRM_SQL",
    "output": "select project_id from projects where organisation_id in ( select organisation_id from projects group by organisation_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are their organization ids? | select organisation_id from projects group by organisation_id order by count ( * ) desc limit 1 | Can you tell me the project details of the highest numbered project id?",
    "label": "CONFIRM_SQL",
    "output": "select project_details from projects order by project_id desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you tell me the project details of the lowest numbered project id? | select project_details from projects order by project_id asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "music_1",
    "input": "Which songs are in mp3 format?  | select song.song_name from files join song on files.f_id = song.f_id where files.formats = 'mp3' | Of the which have resolution below 1000?",
    "label": "CONFIRM_SQL",
    "output": "select song.song_name from files join song on files.f_id = song.f_id where files.formats = 'mp3' intersect select song_name from song where resolution < 1000"
  },
  {
    "db_id": "music_1",
    "input": "What is their actual resolution?  | select song_name , resolution from song where song_name in ( select song.song_name from files join song on files.f_id = song.f_id where files.formats = 'mp3' intersect select song_name from song where resolution < 1000 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "activity_1",
    "input": "Show the names of all the activities Mark Giuliano participates in. | select activity.activity_name from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid join activity on activity.actid = faculty_participates_in.actid where faculty.fname = 'Mark' and faculty.lname = 'Giuliano' | What rank does Mark Giuliano have?",
    "label": "CONFIRM_SQL",
    "output": "select rank from faculty where lname = 'Giuliano' and fname = 'Mark'"
  },
  {
    "db_id": "activity_1",
    "input": "Give me names of all faculty members in alphabetical order | Do you want to rank by first name or last name? | first name",
    "label": "CONFIRM_SQL",
    "output": "select fname from faculty order by fname asc"
  },
  {
    "db_id": "debate",
    "input": "What are all the names of the people? | select name from people | What are the names of the people who are in the affirmative side?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from debate_people join debate on debate_people.debate_id = debate.debate_id join people on debate_people.affirmative = people.people_id"
  },
  {
    "db_id": "debate",
    "input": "What are the venues of debates on the affirmative side? | select debate.venue from debate_people join debate on debate_people.debate_id = debate.debate_id join people on debate_people.affirmative = people.people_id | What are the dates of the debates on the affirmative side?",
    "label": "CONFIRM_SQL",
    "output": "select debate.date from debate_people join debate on debate_people.debate_id = debate.debate_id join people on debate_people.affirmative = people.people_id"
  },
  {
    "db_id": "debate",
    "input": "Thanks! | Do  you  have  more  questions? | No.",
    "label": "WELCOME",
    "output": "you are welcome  and bye"
  },
  {
    "db_id": "city_record",
    "input": "How many regional population of match id 1? | select city.regional_population from city join hosting_city on city.city_id = hosting_city.host_city where hosting_city.match_id = 1 | Find the gdp of host city 2.",
    "label": "CONFIRM_SQL",
    "output": "select gdp from city where city_id = 2"
  },
  {
    "db_id": "city_record",
    "input": "How many number of hosting_city in china? | Sorry we don't have information about country in  the table | Ok, What are the hanyu pinyin of Nanjing ( Jiangsu ) ?",
    "label": "CONFIRM_SQL",
    "output": "select hanyu_pinyin from city where city = 'Nanjing ( Jiangsu )'"
  },
  {
    "db_id": "city_record",
    "input": "What is the host year of city \"Taizhou (Zhejiang)\"? | select hosting_city.year from city join hosting_city on city.city_id = hosting_city.host_city where city.city = 'Taizhou ( Zhejiang )' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "browser_web",
    "input": "Names of browsers that are compartable with cachebox? | select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'CACHEbox' | Names of browsers that are compartable with fasterfox?",
    "label": "CONFIRM_SQL",
    "output": "select browser.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where web_client_accelerator.name = 'Fasterfox'"
  },
  {
    "db_id": "browser_web",
    "input": "What is firefox  market ahare? | do you mean the market share of the firefox? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select market_share from browser where name = 'Firefox'"
  },
  {
    "db_id": "browser_web",
    "input": "Tell me the market share of safari? | the market share of the safari? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select market_share from browser where name = 'Safari'"
  },
  {
    "db_id": "swimming",
    "input": "What is the name of the swimmer who has the greatest number of records? | select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id group by record.swimmer_id order by count ( * ) desc limit 1 | What about the least number of records?",
    "label": "CONFIRM_SQL",
    "output": "select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id group by record.swimmer_id order by count ( * ) asc limit 1"
  },
  {
    "db_id": "swimming",
    "input": "What are the nationalities of swimmers \"Grant Hackett\" and \"Craig Stevens\"? | select nationality from swimmer where name = 'Grant Hackett' or name = 'Craig Stevens' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "allergy_1",
    "input": "Can you list all student IDs that have any kind of allergy? | select stuid from has_allergy | Can you filter the list to only show student IDs that have food and animal type allergies?",
    "label": "CONFIRM_SQL",
    "output": "select has_allergy.stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'food' intersect select has_allergy.stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'animal'"
  },
  {
    "db_id": "allergy_1",
    "input": "Can you display the ages associated with those student IDs? | select age from student where stuid in ( select has_allergy.stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'food' intersect select has_allergy.stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'animal' ) | What is the average of those 3 ages?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) from student where stuid in ( select has_allergy.stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'food' intersect select has_allergy.stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'animal' )"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the salary of 1985?\n | select salary from salary where year = 1985 | who is get the high salary?\n",
    "label": "CLARIFY",
    "output": "Do you mean the id of the player who gets the highest salary?"
  },
  {
    "db_id": "baseball_1",
    "input": "Yes. | select player_id from salary order by salary desc limit 1 | Ok I saw that. thank !\n",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "manufacturer",
    "input": "Hello, can you find me the names of the furniture with less then 6 components? | select name from furniture where num_of_component < 6 | Thanks can you find me the names of the furniture with more then 10 components?",
    "label": "CONFIRM_SQL",
    "output": "select name from furniture where num_of_component > 10"
  },
  {
    "db_id": "manufacturer",
    "input": "Is there a company that makes furniture with less then 6 components and furniture with more then 10 components? | select manufacturer.name from furniture join furniture_manufacte on furniture.furniture_id = furniture_manufacte.furniture_id join manufacturer on furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id where furniture.num_of_component < 6 intersect select manufacturer.name from furniture join furniture_manufacte on furniture.furniture_id = furniture_manufacte.furniture_id join manufacturer on furniture_manufacte.manufacturer_id = manufacturer.manufacturer_id where furniture.num_of_component > 10 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "hospital_1",
    "input": "how many physicians are presented on the table | select count ( * ) from physician | show all the procedures on the table",
    "label": "CLARIFY",
    "output": "Did you want all the procedure names?"
  },
  {
    "db_id": "hospital_1",
    "input": "exactly | select name from procedures | what is the position of John Dorian",
    "label": "CONFIRM_SQL",
    "output": "select position from physician where name = 'John Dorian'"
  },
  {
    "db_id": "hospital_1",
    "input": "what is the cost of Reverse Rhinopodoplasty  | select cost from procedures where name = 'Reverse Rhinopodoplasty' | thanks",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "inn_1",
    "input": "Did you mean the average price of the rooms with the king size bed? | Exactly | How many rooms with the King Size bed are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from rooms where bedtype = 'King'"
  },
  {
    "db_id": "inn_1",
    "input": "How much does one room with the King size bed cost per night?\n | select avg ( baseprice ) from rooms where bedtype = 'King' | Is it possible that i book a room with King Size bed for two for a week?\n",
    "label": "REJECT",
    "output": "Sorry, there is no info related to the maximum booking duration. Could you please ask other questions related to the table. "
  },
  {
    "db_id": "music_1",
    "input": "How many file formats are supported? | select count ( distinct formats ) from files | How many songs are available in each format?",
    "label": "CONFIRM_SQL",
    "output": "select formats , count ( * ) from files group by formats"
  },
  {
    "db_id": "music_1",
    "input": "Is MP4 the most popular format? | select formats from files group by formats order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "customers_and_addresses",
    "input": "List the countries having more than 4 addresses listed. | select country from addresses group by country having count ( address_id ) > 4 | What is zip postcode of the lucasville city?",
    "label": "CONFIRM_SQL",
    "output": "select zip_postcode from addresses where city = 'Lucasville'"
  },
  {
    "db_id": "soccer_2",
    "input": "list the name of college in az? | select cname from college where state = 'AZ' | list the name of the colleges whose enrollment is lesser than 18000 sorted by the college's name?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college where enr > 18000 order by cname asc"
  },
  {
    "db_id": "soccer_2",
    "input": "which college enrollment is 22000? | select cname from college where enr = 22000 | list the name of the colleges whose enrollment is greater than 12000 sorted by the college's name and state?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college where enr > 12000 order by cname asc , state"
  },
  {
    "db_id": "swimming",
    "input": "Do you mean the times in the meter 300 of swimmers who have both win and loss record? | Yes | Can you find me the names of all the swimmers who have \"win\" results in the record?",
    "label": "CONFIRM_SQL",
    "output": "select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win'"
  },
  {
    "db_id": "swimming",
    "input": "Can you find me the names of all the swimmers who have \"loss\" results in the record? | select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id where result = 'Loss' | Can you find me the names of all the swimmers who have both \"win\" and \"loss\" results in the record?",
    "label": "CONFIRM_SQL",
    "output": "select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' intersect select swimmer.name from swimmer join record on swimmer.id = record.swimmer_id where result = 'Loss'"
  },
  {
    "db_id": "swimming",
    "input": "What are these three swimmers' nationalities? | select swimmer.name , swimmer.nationality from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' intersect select swimmer.name , swimmer.nationality from swimmer join record on swimmer.id = record.swimmer_id where result = 'Loss' | What were their times in the meter 300?",
    "label": "CONFIRM_SQL",
    "output": "select swimmer.name , swimmer.meter_300 from swimmer join record on swimmer.id = record.swimmer_id where result = 'Win' intersect select swimmer.name , swimmer.meter_300 from swimmer join record on swimmer.id = record.swimmer_id where result = 'Loss'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Could you show me the IDs for the investors who have the top 3 number of transactions? | select transactions.investor_id from investors join transactions on investors.investor_id = transactions.investor_id group by transactions.investor_id order by count ( * ) desc limit 3 | Could you add in the investor details to the table please?",
    "label": "CONFIRM_SQL",
    "output": "select transactions.investor_id , investors.investor_details from investors join transactions on investors.investor_id = transactions.investor_id group by transactions.investor_id order by count ( * ) desc limit 3"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Could you show me the IDs for the investors who have the bottom 3 number of transactions? | select transactions.investor_id from investors join transactions on investors.investor_id = transactions.investor_id group by transactions.investor_id order by count ( * ) asc limit 3 | What are the investor ID and details for the investor who had the earliest transaction date?",
    "label": "CONFIRM_SQL",
    "output": "select transactions.investor_id , investors.investor_details from investors join transactions on investors.investor_id = transactions.investor_id group by transactions.investor_id order by transactions.date_of_transaction asc limit 1"
  },
  {
    "db_id": "ship_1",
    "input": "Who is the oldest captain?  | select name from captain order by age desc limit 1 | What about the youngest captain? ",
    "label": "CONFIRM_SQL",
    "output": "select name from captain order by age asc limit 1"
  },
  {
    "db_id": "ship_1",
    "input": "How many captains are there younger than 50 in each rank? | select count ( * ) , rank from captain where age < 50 group by rank | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "bike_1",
    "input": "how many trips started from howard and ended at san fransisco | select count ( * ) from station join trip join station join trip on station.id = trip.start_station_id and trip.id = trip.id and station.id = trip.end_station_id where station.city = 'Howard' and station.city = 'San Fransisco' | how many trips started from south van ness and ended at san fransisco",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from station join trip join station join trip on station.id = trip.start_station_id and trip.id = trip.id and station.id = trip.end_station_id where station.city = 'South Van Ness' and station.city = 'San Fransisco'"
  },
  {
    "db_id": "bike_1",
    "input": "how many trips started from mountain view city and ended in palo alto city | select count ( * ) from station join trip join station join trip on station.id = trip.start_station_id and trip.id = trip.id and station.id = trip.end_station_id where station.city = 'Mountain View' and station.city = 'Palo Alto' | Thanks!\n",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "restaurant_1",
    "input": "Hi, could you please let me know the list of all female students who are older than 18 and not majoring in 600? | what  did  you  want  to get  about  female students who are older than 18 and not majoring in 600? | Oh sorry for the confusion, it would be great if I can see their first and last name.",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where age > 18 and major != 600 and sex = 'F'"
  },
  {
    "db_id": "restaurant_1",
    "input": "Thank you very much! Then could you please show me the male students' first and last name with the same condition? Meaning older than 18 and not majoring in 600. | select fname , lname from student where age > 18 and major != 600 and sex = 'M' | Thank you again. Could you please let me know who are the oldest among them with his age?",
    "label": "CLARIFY",
    "output": "Did  you mean  base on  the last one question?"
  },
  {
    "db_id": "restaurant_1",
    "input": "yes please, so my question would be about the oldest male student who is not majoring in 600. | select fname , lname from student where major != 600 and sex = 'M' order by age desc limit 1 | Then could you please let me know what is Ian Thornton's major and advisor code?",
    "label": "CONFIRM_SQL",
    "output": "select major , advisor from student where lname = 'Thornton' and fname = 'Ian'"
  },
  {
    "db_id": "restaurant_1",
    "input": "Thank you very much. This will be my last question, could you please show me the name of female students who are majoring in 520, if there are any? | Did  you  mean  the full name about  those ? | yes please, first and last name would be great.",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where sex = 'F' and major = 520"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "What are the interaction types between enzymes and medicine? | select distinct interaction_type from medicine_enzyme_interaction | What is the most common interaction type between enzymes and medicine?",
    "label": "CONFIRM_SQL",
    "output": "select interaction_type from medicine_enzyme_interaction group by interaction_type order by count ( * ) desc limit 1"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "How many types are available? | select count ( distinct interaction_type ) from medicine_enzyme_interaction | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "flight_4",
    "input": "Can you list the number of airports whose names contain the word \"International\"? | select count ( * ) from airports where name like '%International%' | What is the most common country of all of those airports?",
    "label": "CONFIRM_SQL",
    "output": "select country from airports group by country order by count ( * ) desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "What is the greatest elevation of all of those airports? | select max ( elevation ) from airports | What is the minimum elevation?",
    "label": "CONFIRM_SQL",
    "output": "select min ( elevation ) from airports"
  },
  {
    "db_id": "flight_4",
    "input": "What country is the airport with the lowest elevation located in? | select country from airports where elevation = ( select min ( elevation ) from airports ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "flight_4",
    "input": "Show the route id of the destination airport id 2990? | select rid from routes where dst_apid = '2990' | Show the number of different airports which are the destinations of the American Airlines?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct dst_apid ) from airlines join routes on airlines.alid = routes.alid where airlines.name = 'American Airlines'"
  },
  {
    "db_id": "flight_4",
    "input": "Show the destination airport of route id 39? | select dst_apid from routes where rid = 39 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "railway",
    "input": "which object railways that do not have any trains? | Do you mean the object number? | yes, I apologize. Which object number railways that do not have any trains?",
    "label": "CONFIRM_SQL",
    "output": "select objectnumber from railway where railway_id not in ( select railway_id from train )"
  },
  {
    "db_id": "railway",
    "input": "which one is located in New York. | Do you mean York? | sorry, yes. ",
    "label": "CONFIRM_SQL",
    "output": "select objectnumber from railway where railway_id not in ( select railway_id from train ) and location = 'York'"
  },
  {
    "db_id": "railway",
    "input": "which object numbers do have trains?\n | select objectnumber from railway where railway_id in ( select railway_id from train ) | who is the builder of \nObject Number 1975-7006?",
    "label": "CONFIRM_SQL",
    "output": "select builder from railway where objectnumber = '1975-7006'"
  },
  {
    "db_id": "music_1",
    "input": "what is the artist name of india | select artist_name from song where country = 'India' | what is the f id of bangala",
    "label": "CONFIRM_SQL",
    "output": "select f_id from song where languages = 'bangla'"
  },
  {
    "db_id": "music_1",
    "input": "what is the rating of resolution 512 | select rating from song where resolution = 512 | what is the song name of tagore",
    "label": "CONFIRM_SQL",
    "output": "select song_name from song where genre_is = 'tagore'"
  },
  {
    "db_id": "music_1",
    "input": "what is the song name of bangladesh | select song_name from song where country = 'Bangladesh' | thanks",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "hr_1",
    "input": "hi,what is the president min salary?\n | select min_salary from jobs where job_title = 'president' | what is the president max salary?",
    "label": "CONFIRM_SQL",
    "output": "select max_salary from jobs where job_title = 'President'"
  },
  {
    "db_id": "hr_1",
    "input": "what is name of employee id 100? | Did you mean the first name or last name of employee id 100? | first",
    "label": "CONFIRM_SQL",
    "output": "select first_name from employees where employee_id = 100"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "what is the name of the organization with the maximum outcome count?  | Sorry, the table does not have information about their name. | give me the organization id then ",
    "label": "CONFIRM_SQL",
    "output": "select projects.organisation_id from projects join project_outcomes on projects.project_id = project_outcomes.project_id group by projects.organisation_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "give me its project details.  | select projects.organisation_id , projects.project_details from projects join project_outcomes on projects.project_id = project_outcomes.project_id group by projects.organisation_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "SORRY",
    "output": "Sorry, you have to ask one more question to quality the completion."
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "what is the outcome code?  | Whose outcome code do you want? | for `deleniti",
    "label": "CONFIRM_SQL",
    "output": "select project_outcomes.outcome_code from projects join project_outcomes on projects.project_id = project_outcomes.project_id where projects.project_details = 'deleniti'"
  },
  {
    "db_id": "pilot_record",
    "input": "show the pilot positions that have both pilots joining after year 2005 and pilots joining before 2000. | select position from pilot where join_year < 2000 intersect select position from pilot where join_year > 2005 | show me the ages of pilots in the center team position",
    "label": "CONFIRM_SQL",
    "output": "select age from pilot where position = 'Center Team'"
  },
  {
    "db_id": "pilot_record",
    "input": "what is the nationality of the forward-center team? | Do you mean the nationality of the pilot in the forward-center team? | yes",
    "label": "CONFIRM_SQL",
    "output": "select nationality from pilot where position = 'Forward-Center Team'"
  },
  {
    "db_id": "student_1",
    "input": "Did you mean the full names? | Yes | Did you want the full names of students and the full names of teachers who teach them?",
    "label": "AFFIRM",
    "output": "yes"
  },
  {
    "db_id": "student_1",
    "input": "Hi, what are the names of the teachers? | select distinct firstname , lastname from teachers | And what are the students associated with each teacher?",
    "label": "CONFIRM_SQL",
    "output": "select distinct list.firstname , list.lastname , teachers.firstname , teachers.lastname from list join teachers on list.classroom = teachers.classroom"
  },
  {
    "db_id": "student_1",
    "input": "What students aren't taught by Otha Moyer? | Did you want to return their full names? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select distinct list.firstname , list.lastname from list join teachers on list.classroom = teachers.classroom except select list.firstname , list.lastname from list join teachers on list.classroom = teachers.classroom where teachers.firstname = 'OTHA' and teachers.lastname = 'MOYER'"
  },
  {
    "db_id": "student_1",
    "input": "Could you limit it to all first graders? | select distinct list.firstname , list.lastname from list join teachers on list.classroom = teachers.classroom where list.grade = 1 except select list.firstname , list.lastname from list join teachers on list.classroom = teachers.classroom where teachers.firstname = 'OTHA' and teachers.lastname = 'MOYER' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye!"
  },
  {
    "db_id": "mountain_photos",
    "input": "How many distinct kinds of camera lenses are used to take photos of mountain ranges in the country \"Ethiopia\"? | select count ( distinct photos.camera_lens_id ) from mountain join photos on mountain.id = photos.mountain_id where mountain.country = 'Ethiopia' | What about in other countries?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct photos.camera_lens_id ) from mountain join photos on mountain.id = photos.mountain_id where mountain.country != 'Ethiopia'"
  },
  {
    "db_id": "mountain_photos",
    "input": "What are the names of the photographers who used those lenses? | select mountain.name from mountain join photos on mountain.id = photos.mountain_id where mountain.country != 'Ethiopia' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "company_employee",
    "input": "hi, can you show me headquarters that have companies in the banking industry? | select distinct headquarters from company where industry = 'Banking' | and can you also show me headquarters that have companies in the oil and gas industry?",
    "label": "CONFIRM_SQL",
    "output": "select distinct headquarters from company where industry = 'Oil and gas'"
  },
  {
    "db_id": "company_employee",
    "input": "and can you show me only those headquarters that have both companies in oil and gas as well as banking industry? | select headquarters from company where industry = 'Banking' intersect select headquarters from company where industry = 'Oil and gas' | Thanks!\n",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye."
  },
  {
    "db_id": "college_1",
    "input": "how many instructors have taught ACCT-211? | select count ( distinct prof_num ) from class where crs_code = 'ACCT-211' | can you tell me their first names and offices, please? ",
    "label": "CONFIRM_SQL",
    "output": "select emp_fname , prof_office from class join employee on class.prof_num = employee.emp_num join course on class.crs_code = course.crs_code join professor on employee.emp_num = professor.emp_num where class.crs_code = 'ACCT-211'"
  },
  {
    "db_id": "college_1",
    "input": "excellent. can you also give me the course description for ACCT-211?\n | select crs_description from course where crs_code = 'ACCT-211' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "Hi, could you please let me know the name of instructors in Comp. Sci. department whose salary is higher than 80000? | select name from instructor where dept_name = 'Comp. Sci.' and salary > 80000 | Oh only two of them. Thank you :) Then could you please let me  know the name of the instructor whose salary is the highest in the table?",
    "label": "CONFIRM_SQL",
    "output": "select name from instructor order by salary desc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "That was quick, thank you again. Then could you please tell me the department name of instructor Wieland? | select dept_name from instructor where name = 'Wieland' | Thank you :) If it is not too bothersome, could you please let me know the average salary of the instructors in Pol. Sci.?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from instructor where dept_name = 'Pol. Sci.'"
  },
  {
    "db_id": "college_2",
    "input": "Thank you, then could you please tell me what would be the average salary of instructors for Cybernetics? | select avg ( salary ) from instructor where dept_name = 'Cybernetics' | Thank you :) This will be my last question, could you please let me know the name and ID of the instructor whose salary is the lowest?",
    "label": "CONFIRM_SQL",
    "output": "select name , id from instructor order by salary asc limit 1"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Hi who made the latest order? | select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id order by customer_orders.order_date desc limit 1 | How many people canceled their orders\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct customer_id ) from customer_orders where order_status = 'Cancelled'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "How much did Eunice Morar spend? | Sorry, I cannot answer this. | How many times has Eunice Morar placed an order",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customers.customer_name = 'Eunice Morar'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "How did Eunic Morar pay?\n | select payment_method from customers where customer_name = 'Eunice Morar' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Do you want more?"
  },
  {
    "db_id": "university_basketball",
    "input": "What is the name of the school that participated in the basketball match? | select school from university where school_id not in ( select school_id from basketball_match ) | When was university of Rhode island founded?",
    "label": "CONFIRM_SQL",
    "output": "select founded from university where school = 'University of Rhode Island'"
  },
  {
    "db_id": "university_basketball",
    "input": "What is the afflilation of university of rhode island? | select affiliation from university where school = 'University of Rhode Island' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Did you mean the document type code? | Yes | What code has the most number of documents?",
    "label": "CONFIRM_SQL",
    "output": "select document_type_code from documents group by document_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "How many documents are in BK?\n | select count ( * ) from documents where document_type_code = 'BK' | How about in CV?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from documents where document_type_code = 'CV'"
  },
  {
    "db_id": "debate",
    "input": "what is the name of people aged either 35 or 36 | select name from people where age = 35 or age = 36 | how old is Luther C. Carter?\n",
    "label": "CONFIRM_SQL",
    "output": "select age from people where name = 'Luther C. Carter'"
  },
  {
    "db_id": "debate",
    "input": "what is the age of William B. Maclay\n | select age from people where name = 'William B. Maclay' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "election",
    "input": "Could you list the names of all counties in ascending alphabetical order? | select county_name from county order by county_name asc | How many delegates do each of these counties have?",
    "label": "CONFIRM_SQL",
    "output": "select county.county_name , count ( * ) from county join election on county.county_id = election.district group by county.county_id"
  },
  {
    "db_id": "election",
    "input": "Could you only show the counties that have at least two delegates? | select county.county_name from county join election on county.county_id = election.district group by county.county_id having count ( * ) >= 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "protein_institute",
    "input": "Show the names of all the buildings.  | select name from building | Show the names of all buildings that have an institution. ",
    "label": "CONFIRM_SQL",
    "output": "select name from building where building_id in ( select building_id from institution )"
  },
  {
    "db_id": "protein_institute",
    "input": "Show the number of floors for each of the buildings that have an institution.  | select floors from building where building_id in ( select building_id from institution ) | Show the name of buildings that do not have an institution. ",
    "label": "CONFIRM_SQL",
    "output": "select name from building where building_id not in ( select building_id from institution )"
  },
  {
    "db_id": "protein_institute",
    "input": "What is the street address of the Bank of America Tower. | select street_address from building where name = 'Bank of America Tower' | List the buildings that have an institution and their street address. ",
    "label": "CONFIRM_SQL",
    "output": "select name , street_address from building where building_id in ( select building_id from institution )"
  },
  {
    "db_id": "driving_school",
    "input": "Can you list all of the staff first names please? | select first_name from staff | Can you filter that list to show only the staff with the letter 'a' in their names?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from staff where first_name like '%a%'"
  },
  {
    "db_id": "driving_school",
    "input": "Thank you!  Can you list how many lessons each of those individuals taught? | select count ( * ) , staff.first_name from lessons join staff on lessons.staff_id = staff.staff_id where staff.first_name like '%a%' | Thanks!",
    "label": "WELCOME",
    "output": "Sure! "
  },
  {
    "db_id": "college_2",
    "input": "Hi, show me the instructors | select name from instructor | Nice. What is their average salary?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from instructor"
  },
  {
    "db_id": "college_2",
    "input": "Who earns the highest salary? | select name from instructor order by salary desc limit 1 | Thanks",
    "label": "GOOD_BYE",
    "output": "No problem."
  },
  {
    "db_id": "inn_1",
    "input": "What is the first name of Reservations Code 10105? | select firstname from reservations where code = 10105 | What is the last name of Reservations Code 10105?",
    "label": "CONFIRM_SQL",
    "output": "select lastname from reservations where code = 10105"
  },
  {
    "db_id": "inn_1",
    "input": "Can you show the names of rooms that have been reserved for more than 60 times | select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid group by reservations.room having count ( * ) > 60 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "baseball_1",
    "input": "How many players are on a team? | Which team are you referring to? | The Boston Red Stockings.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings'"
  },
  {
    "db_id": "baseball_1",
    "input": "How many in the year 2000? | select count ( * ) from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings' and salary.year = 2000 | What was the total salary of those players?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( salary ) from salary join team on salary.team_id = team.team_id_br where team.name = 'Boston Red Stockings' and salary.year = 2000"
  },
  {
    "db_id": "baseball_1",
    "input": "Did they win the league that year? | Sorry, our database does not contain information on whether the Boston Red Stockings won the league in 2000. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "university_basketball",
    "input": "Did you want to know when the school that has the lowest acc percent score was founded?\n | Yes. | how many schools are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from university"
  },
  {
    "db_id": "university_basketball",
    "input": "Which school has the highest acc percent score? | select university.school from university join basketball_match on university.school_id = basketball_match.school_id order by basketball_match.acc_percent desc limit 1 | How about the lowest?",
    "label": "CONFIRM_SQL",
    "output": "select university.school from university join basketball_match on university.school_id = basketball_match.school_id order by basketball_match.acc_percent asc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "What's its primary conference? | select university.primary_conference from university join basketball_match on university.school_id = basketball_match.school_id order by basketball_match.acc_percent asc limit 1 | Can you also show me when it was founded?",
    "label": "CONFIRM_SQL",
    "output": "select university.primary_conference , university.founded from university join basketball_match on university.school_id = basketball_match.school_id order by basketball_match.acc_percent asc limit 1"
  },
  {
    "db_id": "journal_committee",
    "input": "Show the names of editors of age 24.\n | select name from editor where age = 24 | Please show me the names of editors of age 25.",
    "label": "CONFIRM_SQL",
    "output": "select name from editor where age = 25"
  },
  {
    "db_id": "journal_committee",
    "input": "hmmm. Can you also show me the name and age of the oldest editor? | select name , age from editor where age = ( select max ( age ) from editor ) | ok. can you also please give me the name and age of the youngest editor?",
    "label": "CONFIRM_SQL",
    "output": "select name , age from editor where age = ( select min ( age ) from editor )"
  },
  {
    "db_id": "journal_committee",
    "input": "How many editors are older then 25 and younger than 45? | select count ( * ) from editor where age > 25 and age < 45 | May I have their names please?",
    "label": "CONFIRM_SQL",
    "output": "select name from editor where age > 25 and age < 45"
  },
  {
    "db_id": "decoration_competition",
    "input": "What is the most common college id? | select college_id from member group by college_id order by count ( * ) desc limit 1 | Who went there?",
    "label": "CONFIRM_SQL",
    "output": "select name from member where college_id = 4"
  },
  {
    "db_id": "decoration_competition",
    "input": "What about the most common country? | select country from member group by country order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "loan_1",
    "input": "Who are the customers? | select cust_name from customer | Which of them have mortgage loans?",
    "label": "CONFIRM_SQL",
    "output": "select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id where loan_type = 'Mortgages'"
  },
  {
    "db_id": "loan_1",
    "input": "And which also have auto loans? | select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id where loan_type = 'Mortgages' intersect select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id where loan_type = 'Auto' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "hr_1",
    "input": "Hi what are the first and last name for those employees who works either in department 70 or 90? | select first_name , last_name from employees where department_id = 70 or department_id = 90 | How much is Steven King Salary",
    "label": "CONFIRM_SQL",
    "output": "select salary from employees where first_name = 'Steven' and last_name = 'King'"
  },
  {
    "db_id": "hr_1",
    "input": "How long has Steven King worked here | Sorry, I can't answer this question based on the table. | What is steven king's phone number\n",
    "label": "CONFIRM_SQL",
    "output": "select phone_number from employees where first_name = 'Steven' and last_name = 'King'"
  },
  {
    "db_id": "hr_1",
    "input": "What is Steven King Employee ID number\n | select employee_id from employees where first_name = 'Steven' and last_name = 'King' | thanks\n",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "insurance_policies",
    "input": "What is the average payment method used to process payments?\n | Sorry. Can you clarify your question? | How many payment methods were used to process payments?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct payment_method_code ) from payments"
  },
  {
    "db_id": "insurance_policies",
    "input": "What payment method is used to process payments the most?\n | select payment_method_code from payments group by payment_method_code order by count ( * ) desc limit 1 | And the least used payment method?\n",
    "label": "CONFIRM_SQL",
    "output": "select payment_method_code from payments group by payment_method_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "insurance_policies",
    "input": "How many payment methods has American Express processed? | select payment_method_code , count ( * ) from payments group by payment_method_code having payment_method_code = 'American Express' | What about MasterCard?",
    "label": "CONFIRM_SQL",
    "output": "select payment_method_code , count ( * ) from payments where payment_method_code = 'MasterCard'"
  },
  {
    "db_id": "insurance_policies",
    "input": "Can I get the names of all the payment methods used?\n | select distinct payment_method_code from payments | Thanks!",
    "label": "GOOD_BYE",
    "output": "thank. bye."
  },
  {
    "db_id": "baseball_1",
    "input": "What is the total home game attendance of all teams from 2000 to 2010? | select sum ( home_game.attendance ) from home_game join team on home_game.team_id = team.team_id_br where home_game.year between 2000 and 2010 | What about for just the team Boston Red Stockings?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( home_game.attendance ) from home_game join team on home_game.team_id = team.team_id_br where team.name = 'Boston Red Stockings' and home_game.year between 2000 and 2010"
  },
  {
    "db_id": "baseball_1",
    "input": "What's the average total home game attendance for the Cleveland Forest Citys for all years? | select avg ( home_game.attendance ) from home_game join team on home_game.team_id = team.team_id_br where team.name = 'Cleveland Forest Citys' | What about for the Chicago White Stockings?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( home_game.attendance ) from home_game join team on home_game.team_id = team.team_id_br where team.name = 'Chicago White Stockings'"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the name of the team with the earliest home game date, and what is that date? | select team.name , home_game.span_first from home_game join team on home_game.team_id = team.team_id_br order by home_game.span_first asc limit 1 | What about the latest date?",
    "label": "CONFIRM_SQL",
    "output": "select team.name , home_game.span_first from home_game join team on home_game.team_id = team.team_id_br order by home_game.span_first desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "Show me the name of the store name with dept store id 1? | Do you  mean  dept  store  chain name? | yes",
    "label": "CONFIRM_SQL",
    "output": "select dept_store_chain_name from department_store_chain where dept_store_chain_id = 1"
  },
  {
    "db_id": "department_store",
    "input": "Show me the name of all department stores? | Do  you  mean  the store name ? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select store_name from department_stores"
  },
  {
    "db_id": "department_store",
    "input": "Show how many department stores does the store chain South have? | select count ( * ) from department_stores join department_store_chain on department_stores.dept_store_chain_id = department_store_chain.dept_store_chain_id where department_store_chain.dept_store_chain_name = 'South' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Hello there!  Can you please provide me with a list of all of the different payment method code types? | select distinct payment_method_code from invoices | Awesome!  Of these different codes, can you tell me which individual code was used by the largest number of orders?",
    "label": "CONFIRM_SQL",
    "output": "select payment_method_code from invoices group by payment_method_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Great!  Can you please tell me what is the total number of orders that used MasterCard? | select count ( * ) from invoices where payment_method_code = 'MasterCard' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "game_1",
    "input": "How many students play football? | select count ( * ) from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.sportname = 'Football' | What are their first and last names?",
    "label": "CONFIRM_SQL",
    "output": "select student.lname , student.fname from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.sportname = 'Football'"
  },
  {
    "db_id": "game_1",
    "input": "How many students play Lacrosse? | select count ( * ) from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.sportname = 'Lacrosse' | What are their first and last names?",
    "label": "CONFIRM_SQL",
    "output": "select student.lname , student.fname from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.sportname = 'Lacrosse'"
  },
  {
    "db_id": "game_1",
    "input": "Do any students play both football and lacrosse? | select student.stuid from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.sportname = 'Football' intersect select student.stuid from sportsinfo join student on sportsinfo.stuid = student.stuid where sportsinfo.sportname = 'Lacrosse' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "soccer_2",
    "input": "Can you list all the names of the students who have the position of striker? | select player.pname from player join tryout on player.pid = tryout.pid where tryout.ppos = 'striker' | Can you also list the tryout decision they got please?",
    "label": "CONFIRM_SQL",
    "output": "select player.pname , tryout.decision from player join tryout on player.pid = tryout.pid where tryout.ppos = 'striker'"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the names and positions of all players who got a no for their tryout decision? | select player.pname , tryout.ppos from player join tryout on player.pid = tryout.pid where tryout.decision = 'no' | What are the names and college names of all players who have over 700 training hours?",
    "label": "CONFIRM_SQL",
    "output": "select player.pname , tryout.cname from player join tryout on player.pid = tryout.pid where player.hs > 700"
  },
  {
    "db_id": "soccer_2",
    "input": "Can you add their positions into the table please? | select player.pname , tryout.cname , tryout.ppos from player join tryout on player.pid = tryout.pid where player.hs > 700 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "What ids have more than one participant?\n | Which kind of ID do you mean? | Event ID and Service ID",
    "label": "CONFIRM_SQL",
    "output": "select events.event_id , events.service_id from events join participants_in_events on events.event_id = participants_in_events.event_id group by events.event_id having count ( * ) > 1"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "And which Event Details have more than one participant?\n | Do you mean the Event Details of the event? | I mean the details of the events that have more than one participant.",
    "label": "CONFIRM_SQL",
    "output": "select events.event_details from events join participants_in_events on events.event_id = participants_in_events.event_id group by events.event_id having count ( * ) > 1"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "and how many more fail than have success? | select event_details , count ( * ) from events group by event_details | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "how many on the airport table | select count ( * ) from airports | what is the country of goroka",
    "label": "CONFIRM_SQL",
    "output": "select country from airports where city = 'Goroka'"
  },
  {
    "db_id": "flight_4",
    "input": "find the name and city of the airport which is the destination of the most number of route. | select airports.name , airports.city from airports join routes on airports.apid = routes.dst_apid group by routes.dst_apid order by count ( * ) desc limit 1 | thanks",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "e_learning",
    "input": "LIST THE DATES OF ENROLLMENT AND COMPLETION OF THE STUDENT WITH PERSONAL NAME \"KARSON\"? | select student_course_enrolment.date_of_enrolment , student_course_enrolment.date_of_completion from student_course_enrolment join students on student_course_enrolment.student_id = students.student_id where students.personal_name = 'Karson' | List the name of all students?",
    "label": "CONFIRM_SQL",
    "output": "select personal_name , middle_name , family_name from students"
  },
  {
    "db_id": "company_employee",
    "input": "How many different countries serve as headquarters? | select count ( distinct headquarters ) from company | What is the most popular industry?",
    "label": "CONFIRM_SQL",
    "output": "select industry from company group by industry order by count ( * ) desc limit 1"
  },
  {
    "db_id": "company_employee",
    "input": "What is the largest oil and gas company? | i  have no  infor  about oil and gas | What company has the highest market value?",
    "label": "CLARIFY",
    "output": "Did  you  mean  the max Profits_in_Billion?"
  },
  {
    "db_id": "company_employee",
    "input": "No, I mean Market_Value_in_Billion. | select name from company order  by market_value_in_billion desc limit 1 | Where is it's headquarters?",
    "label": "CONFIRM_SQL",
    "output": "select headquarters from company order  by market_value_in_billion desc limit 1"
  },
  {
    "db_id": "company_employee",
    "input": "The headquarters of the company with the highest market value  is USA | How many other companies have headquarters in the USA? | select count ( * ) -1 from company where headquarters = 'USA'",
    "label": "INFORM_SQL",
    "output": "What headquarter is the most popular?"
  },
  {
    "db_id": "browser_web",
    "input": "which operating system has a connection of Broadband, Satellite, Wireless, Fiber, DSL? | select operating_system from web_client_accelerator where connection = 'Broadband, Satellite, Wireless, Fiber, DSL' | What is the market share of Safari?",
    "label": "CONFIRM_SQL",
    "output": "select market_share from browser where name = 'Safari'"
  },
  {
    "db_id": "browser_web",
    "input": "Since which year has CProxy been compatible? | select accelerator_compatible_browser.compatible_since_year from web_client_accelerator join accelerator_compatible_browser on web_client_accelerator.id = accelerator_compatible_browser.accelerator_id where web_client_accelerator.name = 'CProxy' | What is the total number of browsers are available?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from browser"
  },
  {
    "db_id": "browser_web",
    "input": "what are their names? | select name from browser | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "wine_1",
    "input": "Show me all the wine names made in the year 2006. | select name from wine where year = 2006 | Show me their prices.",
    "label": "CONFIRM_SQL",
    "output": "select price from wine where year = 2006"
  },
  {
    "db_id": "wine_1",
    "input": "What is the maximum of these prices? | select max ( price ) from wine where year = 2006 | Show me all the wine names that have a price higher than 200.",
    "label": "CONFIRM_SQL",
    "output": "select name from wine where price > 200"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the names of the tourist attractions that have only been visited once? | select tourist_attractions.name from tourist_attractions join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id group by visits.tourist_attraction_id having count ( * ) = 1 | What are the ids of those?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.tourist_attraction_id from tourist_attractions join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id group by visits.tourist_attraction_id having count ( * ) = 1"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the opening hours of those attractions? | select tourist_attractions.opening_hours from tourist_attractions join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id group by visits.tourist_attraction_id having count ( * ) = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "small_bank_1",
    "input": "Find the name of account that has the lowest total checking and saving balance. | select accounts.name from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by checking.balance + savings.balance asc limit 1 | Ok!. Can you please give me the names of the accounts where the checking balance is more than 3000",
    "label": "CONFIRM_SQL",
    "output": "select accounts.name from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where checking.balance > 3000"
  },
  {
    "db_id": "small_bank_1",
    "input": "Give me the names of the accounts where the savings balance is more than 20000 | select accounts.name from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid where savings.balance > 20000 | What is the highest balance in the savings account?",
    "label": "CONFIRM_SQL",
    "output": "select balance from savings order  by balance desc limit 1"
  },
  {
    "db_id": "small_bank_1",
    "input": "Hmmm. Please tell me what is the lowest balance in the savings account. | select min ( balance ) from savings | Can you also give me the lowest and the highest balance for checking account.",
    "label": "CONFIRM_SQL",
    "output": "select max ( balance ) , min ( balance ) from checking"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Can you please list all the characteristics of the product named sesame? | select characteristics.characteristic_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'sesame' | Can you please list all the characteristics of the product named sesame with the type code \"Grade\"?",
    "label": "CONFIRM_SQL",
    "output": "select characteristics.characteristic_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id where products.product_name = 'sesame' and characteristics.characteristic_type_code = 'Grade'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What is the characteristic name of the product with the highest typical selling price? | select characteristics.characteristic_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id order by products.typical_selling_price desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "soccer_1",
    "input": "Who are the top 3 players in terms of overall rating? | select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id order by overall_rating desc limit 3 | Which player scored highest in dribbling?",
    "label": "CONFIRM_SQL",
    "output": "select distinct player.player_name from player join player_attributes on player.player_api_id = player_attributes.player_api_id order by dribbling desc limit 1"
  },
  {
    "db_id": "soccer_1",
    "input": "What is Cristiano Ronaldo's birthday? | select birthday from player where player_name = 'Cristiano Ronaldo' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Did you mean the name of the customer who opened a policy on the date of 7-22-16? | Exactly | How many policies are listed for the customer named \"Dayana Robel\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers join customers_policies on customers.customer_id = customers_policies.customer_id where customers.customer_name = 'Dayana Robel'"
  },
  {
    "db_id": "insurance_fnol",
    "input": "And for America Jaskolski? | select count ( * ) from customers join customers_policies on customers.customer_id = customers_policies.customer_id where customers.customer_name = 'America Jaskolski' | Why does the table show two instance of opened policies for Ellsworth Paucek?",
    "label": "SORRY",
    "output": "Sorry, I cannot answer this kind of question."
  },
  {
    "db_id": "insurance_fnol",
    "input": "How many policies does Ellsworth Paucek have listed? | select count ( * ) from customers join customers_policies on customers.customer_id = customers_policies.customer_id where customers.customer_name = 'Ellsworth Paucek' | Which customer opened a policy on 7-22-16?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join customers_policies on customers.customer_id = customers_policies.customer_id where customers_policies.date_opened = '2016-07-22'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What is the number of tourists who didn't make any visit? | select count ( * ) from visitors where tourist_id not in ( select tourist_id from visits ) | What are their details?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_details from visitors where tourist_id not in ( select tourist_id from visits )"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the details of the tourist who had the earliest visit? | select visitors.tourist_details from visitors join visits on visitors.tourist_id = visits.tourist_id order by visit_date asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Which product descriptions contain the letter t? | select products.product_name from ref_product_categories join products on ref_product_categories.product_category_code = products.product_category_code where products.product_description like '%t%' | What are their prices?",
    "label": "CLARIFY",
    "output": "Do you mean typical buying price or typical selling price?"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Buying price. | select products.typical_buying_price from ref_product_categories join products on ref_product_categories.product_category_code = products.product_category_code where products.product_description like '%t%' | What is the average buying price?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( products.typical_buying_price ) from ref_product_categories join products on ref_product_categories.product_category_code = products.product_category_code where products.product_description like '%t%'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Which of those products does not have a buying price? | select products.product_name from ref_product_categories join products on ref_product_categories.product_category_code = products.product_category_code where products.product_description like '%t%' and products.typical_buying_price = '' | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome! GoodBye."
  },
  {
    "db_id": "store_1",
    "input": "Can you tell me how many different purchases Lucas Mancini has made? | select count ( * ) from invoices join customers on customers.id = invoices.customer_id where customers.first_name = 'Lucas' and customers.last_name = 'Mancini' | Great!  How much total money has Lucas Mancini spent in total?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( invoices.total ) from customers join invoices on customers.id = invoices.customer_id where customers.first_name = 'Lucas' and customers.last_name = 'Mancini'"
  },
  {
    "db_id": "store_1",
    "input": "What was the most recent associated invoice date for Lucas Mancini? | select invoices.invoice_date from customers join invoices on customers.id = invoices.customer_id where customers.first_name = 'Lucas' and customers.last_name = 'Mancini' order by invoices.invoice_date desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "store_1",
    "input": "How many invoices are from the US? | select count ( * ) from invoices where billing_country = 'USA' | Could you list them grouped by state?",
    "label": "CONFIRM_SQL",
    "output": "select billing_state , count ( * ) from invoices where billing_country = 'USA' group by billing_state"
  },
  {
    "db_id": "store_1",
    "input": "Could you list the number of invoices grouped by country? | select billing_country , count ( * ) from invoices group by billing_country | Can you list the number of invoices from the US grouped by billing city?",
    "label": "CONFIRM_SQL",
    "output": "select billing_city , count ( * ) from invoices where billing_country = 'USA' group by billing_city"
  },
  {
    "db_id": "store_1",
    "input": "Can you list the number of invoices from all countries except the US grouped by billing city? | select billing_city , count ( * ) from invoices where billing_country != 'USA' group by billing_city | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you!! bye"
  },
  {
    "db_id": "school_bus",
    "input": "Hello!  Can you show me all school names and bus driver names for each of the school buses in this database? | select school.school , driver.name from school_bus join school on school_bus.school_id = school.school_id join driver on school_bus.driver_id = driver.driver_id | Thanks!  Can you filter this list to show only the rows corresponding with the 3 drivers with the most years working?",
    "label": "REJECT",
    "output": "Sorry, there is no \"years working\" column in the table for drivers."
  },
  {
    "db_id": "school_bus",
    "input": "Thank you for that!  I see that the \"years working\" is for the school buses!  Can you filter this list to show only the drivers who are associated with schools in the United States? | select school.school , driver.name from school_bus join school on school_bus.school_id = school.school_id join driver on school_bus.driver_id = driver.driver_id where school.location = 'Honolulu, Hawaii' or school.location = 'Los Angeles, California' or school.location = 'New York City' or school.location = 'Cambridge, Massachusetts' | Thank you!  Can you tell me which of the schools, if any, are associated with more than one grade?",
    "label": "CLARIFY",
    "output": "Do you want to include college as more than one grade?"
  },
  {
    "db_id": "movie_1",
    "input": "How many total movie ratings are there? | select count ( * ) from rating | How many of those movies received less than 2 ratings?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from rating group by mid having count ( * ) < 2 )"
  },
  {
    "db_id": "movie_1",
    "input": "Of the 14 ratings, what was the highest rating? | select stars from rating order by stars desc limit 1 | And the lowest?",
    "label": "CONFIRM_SQL",
    "output": "select stars from rating order by stars asc limit 1"
  },
  {
    "db_id": "movie_1",
    "input": "And the average? | select avg ( stars ) from rating order by stars asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "school_finance",
    "input": "List each donator name and the amount of endowment in descending order of the amount of endorsement. | select donator_name , sum ( amount ) from endowment group by donator_name order by sum ( amount ) desc | which donator has the highest endowment?",
    "label": "CLARIFY",
    "output": "Did you mean endowment id?"
  },
  {
    "db_id": "school_finance",
    "input": "which donator has the highest amount of endowment? | select donator_name , sum ( amount ) from endowment group by donator_name order by sum ( amount ) desc limit 1 | which donator has the lowest endowment amount?",
    "label": "CONFIRM_SQL",
    "output": "select donator_name , sum ( amount ) from endowment group by donator_name order by sum ( amount ) asc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "What are the IDs of the aircrafts with name Airbus A340-300? | select distinct aid from aircraft where name = 'Airbus A340-300' | What distance does aircraft ID fly?",
    "label": "CLARIFY",
    "output": "Do you mean aircraft id 3? And want me to return the sum of all the distances it flew?"
  },
  {
    "db_id": "flight_1",
    "input": "Yes please.  | select sum ( distance ) from flight where aid = ( select distinct aid from aircraft where name = 'Airbus A340-300' ) | WHat flight numbers have that aid?",
    "label": "CONFIRM_SQL",
    "output": "select flight.flno from flight join aircraft on flight.aid = aircraft.aid where aircraft.name = 'Airbus A340-300'"
  },
  {
    "db_id": "network_2",
    "input": "What is Zach age? | select age from person where name = 'Zach' | Who is the doctor works?",
    "label": "CLARIFY",
    "output": "Do you mean whose job is \"doctor\"?"
  },
  {
    "db_id": "network_2",
    "input": "Yes | select name from person where job = 'doctor' | Who is in the town of new york?",
    "label": "CONFIRM_SQL",
    "output": "select name from person where city = 'new york city'"
  },
  {
    "db_id": "network_2",
    "input": "Who has friends that are younger than the average age? | select distinct personfriend.name from person join personfriend on person.name = personfriend.friend where person.age < ( select avg ( age ) from person ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "driving_school",
    "input": "Hello, how many customers are there? | select count ( * ) from customers | Perfect, are there any customer with first name Ray?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers where first_name = 'Ray'"
  },
  {
    "db_id": "driving_school",
    "input": "Perfect, and how many lessons did Ray take? | select * from customers join lessons on customers.customer_id = lessons.customer_id where customers.first_name = 'Ray' and lessons.lesson_status_code = 'Completed' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "game_1",
    "input": "Age and sex of Smith Linda? | select age , sex from student where lname = 'Smith' and fname = 'Linda' | What type of game is 'The Vanishing of Eric Calder'?",
    "label": "CONFIRM_SQL",
    "output": "select gtype from video_games where gname = 'The Vanishing of Eric Calder'"
  },
  {
    "db_id": "game_1",
    "input": "Provide the last name and gender of students who played both Call of Destiny and Works of Widenius games? | select lname , sex from student where stuid in ( select plays_games.stuid from plays_games join video_games on plays_games.gameid = video_games.gameid where video_games.gname = 'Call of Destiny' intersect select plays_games.stuid from plays_games join video_games on plays_games.gameid = video_games.gameid where video_games.gname = 'Works of Widenius' ) | Give the hours played by Kim Tracy?",
    "label": "CONFIRM_SQL",
    "output": "select hours_played from student join plays_games where lname = 'Kim' and fname = 'Tracy'"
  },
  {
    "db_id": "game_1",
    "input": "City code of Jones Shiela? | Do you mean the city code of the student whose first name is Shiela and last name is Jones? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student where fname = 'Shiela' and lname = 'Jones'"
  },
  {
    "db_id": "game_1",
    "input": "Thanks! | You are welcome. | Do you mean the age and sex of the student whose last name is Smith and first name is Linda?",
    "label": "AFFIRM",
    "output": "Yes"
  },
  {
    "db_id": "manufactory_1",
    "input": "What is the number of projects that Sony doesn't manufacture? | select count ( distinct name ) from products where name not in ( select products.name from products join manufacturers on products.manufacturer = manufacturers.code where manufacturers.name = 'Sony' ) | What is the number of products that Creative Labs does manufacture?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct name ) from products where name in ( select products.name from products join manufacturers on products.manufacturer = manufacturers.code where manufacturers.name = 'Creative Labs' )"
  },
  {
    "db_id": "manufactory_1",
    "input": "What are the names of the products that Sony manufactures? | select name from products where name in ( select products.name from products join manufacturers on products.manufacturer = manufacturers.code where manufacturers.name = 'Sony' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "department_store",
    "input": "What is the Job title code of department id 4? | select job_title_code from staff_department_assignments where department_id = 4 | What is the date assigned from and of the staff id 1?",
    "label": "CONFIRM_SQL",
    "output": "select date_assigned_from from staff_department_assignments where staff_id = 1"
  },
  {
    "db_id": "department_store",
    "input": "What is the department Id of sales person? | select distinct department_id from staff_department_assignments where job_title_code = 'Sales Person' | What is the date assigned to clerical staff?",
    "label": "CONFIRM_SQL",
    "output": "select date_assigned_to from staff_department_assignments where job_title_code = 'Clerical Staff'"
  },
  {
    "db_id": "department_store",
    "input": "What is the date assigned from and date assigned to sales person? | select date_assigned_from , date_assigned_to from staff_department_assignments where job_title_code = 'Sales Person' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "theme_gallery",
    "input": "Hello! Can you provide me with a list of all of the artist names? | select name from artist | Excellent!  Can you filter this list to show only the names of artists above the age of 46?",
    "label": "CONFIRM_SQL",
    "output": "select name from artist where age > 46"
  },
  {
    "db_id": "theme_gallery",
    "input": "Great!  Can you tell me how many of these artists above age 46 joined after 1990? | select count ( * ) from artist where age > 46 and year_join > 1990 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "bike_1",
    "input": "show me the names and ids of all stations | select name , id from station | How many stations had more than 14 bikes available on average or were installed in december?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select station.name from station join status on station.id = status.station_id group by status.station_id having avg ( status.bikes_available ) > 14 union select name from station where installation_date like '12/%' )"
  },
  {
    "db_id": "bike_1",
    "input": "show me the name and ids of these stations | select station.name , station.id from station join status on station.id = status.station_id group by status.station_id having avg ( status.bikes_available ) > 14 union select name , id from station where installation_date like '12/%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "driving_school",
    "input": "can you show me a list of nicknames? | select nickname from staff | who is the first joined staff?",
    "label": "CLARIFY",
    "output": "Which information do you want to know about the first joined staff?"
  },
  {
    "db_id": "driving_school",
    "input": "can you show me a list of date joined staff? | select date_joined_staff from staff | can you shoe me customers' phone numbers?",
    "label": "CLARIFY",
    "output": "Do you mean cell mobile phone number or phone number?"
  },
  {
    "db_id": "driving_school",
    "input": "phone number | select phone_number from customers | thanks!",
    "label": "REQUEST_MORE",
    "output": "You're welcome. Anything you'd like to know more?"
  },
  {
    "db_id": "station_weather",
    "input": "list the number of trains in each station | select count ( * ) from station join route on station.id = route.station_id group by route.station_id | what are the station network name and services for  these station",
    "label": "CONFIRM_SQL",
    "output": "select station.network_name , station.services from station join route on station.id = route.station_id group by route.station_id"
  },
  {
    "db_id": "station_weather",
    "input": "include station id in the list | select station.network_name , station.services , station_id from station join route on station.id = route.station_id group by route.station_id | thanks",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "inn_1",
    "input": "Find the names of all modern rooms with a base price below $160 and two beds. | select roomname from rooms where baseprice < 160 and beds = 2 and decor = 'modern' | Which room has highest price value? tell me the name and Room ID",
    "label": "CONFIRM_SQL",
    "output": "select roomname , roomid from rooms where baseprice = ( select max ( baseprice ) from rooms )"
  },
  {
    "db_id": "inn_1",
    "input": "Which room has lowest price value? tell me the price, the name and Room ID | select baseprice , roomname , roomid from rooms where baseprice = ( select min ( baseprice ) from rooms ) | Which room has most number of beds?Tell me the Room ID, Name and decor?",
    "label": "CONFIRM_SQL",
    "output": "select roomid , roomname , decor from rooms where beds = ( select max ( beds ) from rooms )"
  },
  {
    "db_id": "manufactory_1",
    "input": "hi. How many products are there? | select count ( * ) from products | excellent. and how much is the cheapest priced product?",
    "label": "CONFIRM_SQL",
    "output": "select min ( price ) from products"
  },
  {
    "db_id": "manufactory_1",
    "input": "and can you tell me the name of that product? | select name from products where price = ( select min ( price ) from products ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks! Bye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Which buildings are in a studio? | select building_full_name from apartment_buildings where building_description = 'Studio' | What are their managers?\n",
    "label": "CONFIRM_SQL",
    "output": "select building_manager from apartment_buildings where building_description = 'Studio'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Which of the building full names have the word \"court\" in it? | select building_full_name from apartment_buildings where building_full_name like '%Court%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "phone_market",
    "input": "Can you list all market ids and the names of the districts associated with them? | select market_id , district from market | Can you add to the table the phone ids from the table phone market that are associated with each market id?",
    "label": "CONFIRM_SQL",
    "output": "select market.market_id , market.district , phone_market.phone_id from market join phone_market on market.market_id = phone_market.market_id"
  },
  {
    "db_id": "phone_market",
    "input": "Can you add to the table the name of the phones associated with each of the phone ids? | select market.market_id , market.district , phone_market.phone_id , phone.name from phone_market join market on phone_market.market_id = market.market_id join phone on phone_market.phone_id = phone.phone_id | Can you sort the table by phone id, but still retain all information within the table?",
    "label": "CONFIRM_SQL",
    "output": "select market.market_id , market.district , phone_market.phone_id , phone.name from phone_market join market on phone_market.market_id = market.market_id join phone on phone_market.phone_id = phone.phone_id order by phone_market.phone_id asc"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "How many enzymes are there? | select count ( * ) from enzyme | How many have interactions with medicines?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct enzyme_id ) from medicine_enzyme_interaction"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "HOw many don't have interactions? | select count ( * ) from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "riding_club",
    "input": "How many residences are there? | select count ( distinct residence ) from player | What are these residences?",
    "label": "CONFIRM_SQL",
    "output": "select distinct residence from player"
  },
  {
    "db_id": "riding_club",
    "input": "Which residences have more than 1 player? | select residence from player group by residence having count ( * ) >= 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "products_for_hire",
    "input": "Can you list the product ids and the booked amounts? | select products_for_hire.product_id , products_booked.booked_amount from products_for_hire join products_booked on products_for_hire.product_id = products_booked.product_id | What product ids are never booked with amount higher than 200?",
    "label": "CONFIRM_SQL",
    "output": "select product_id from products_for_hire where product_id not in ( select product_id from products_booked where booked_amount > 200 )"
  },
  {
    "db_id": "products_for_hire",
    "input": "Am I correct that only one product is never booked with amount higher than 200? | select count ( * ) from products_for_hire where product_id not in ( select product_id from products_booked where booked_amount > 200 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "game_1",
    "input": "How many game types do you have? | select count ( distinct gtype ) from video_games | What is the average number of games in all game types?",
    "label": "CONFIRM_SQL",
    "output": "select gtype , count ( * ) from video_games group by gtype"
  },
  {
    "db_id": "game_1",
    "input": "Finally, which game type has the least number of games? | select gtype from video_games group by gtype order by count ( * ) asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "product_catalog",
    "input": "Tell the capacity, length, height and width for the catalog entry name cola ? | select capacity , length , height , width from catalog_contents where catalog_entry_name = 'Cola' | Tell me the price of Cream Soda in dollars, euros and pounds.",
    "label": "CONFIRM_SQL",
    "output": "select price_in_dollars , price_in_euros , price_in_pounds from catalog_contents where catalog_entry_name = 'Cream Soda'"
  },
  {
    "db_id": "product_catalog",
    "input": "What is the product with the highest height ? Give me the catalog entry name. | select catalog_entry_name from catalog_contents order by height desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem! Bye"
  },
  {
    "db_id": "college_1",
    "input": "Yes, hi, I'd like to know how many professors are in the history department? | select count ( * ) from professor where dept_code = 'HIST' | Do both of them have doctorates?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where dept_code = 'HIST' and prof_high_degree = 'Ph.D.'"
  },
  {
    "db_id": "college_1",
    "input": "How many departments are there total? | select count ( distinct dept_code ) from professor | Is English one of them?",
    "label": "CONFIRM_SQL",
    "output": "select distinct dept_code from professor where dept_code = 'ENG'"
  },
  {
    "db_id": "college_1",
    "input": "Do any of the English professors have a PhD? | select count ( * ) from professor where dept_code = 'ENG' and prof_high_degree = 'Ph.D.' | How many of the English professors with PhDs are female?",
    "label": "REQUEST_MORE",
    "output": "Sorry, the female information is not available in the table. Please ask something else. "
  },
  {
    "db_id": "college_1",
    "input": "Can you tell me where the history Doctorate's office is? | select prof_office from professor where dept_code = 'HIST' and prof_high_degree = 'Ph.D.' | What is the total number professors with doctorates employed by the 11 departments?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where prof_high_degree = 'Ph.D.'"
  },
  {
    "db_id": "college_1",
    "input": "Of those 18, how many doctorates are employed by the accounting department? | select count ( * ) from professor where prof_high_degree = 'Ph.D.' and dept_code = 'ACCT' | Can you tell me where their offices are?",
    "label": "CONFIRM_SQL",
    "output": "select prof_office from professor where prof_high_degree = 'Ph.D.' and dept_code = 'ACCT'"
  },
  {
    "db_id": "college_1",
    "input": "Can you tell me the extension for the professor in office KLR229D, please?\n | select prof_extension from professor where prof_high_degree = 'Ph.D.' and dept_code = 'ACCT' and prof_office = 'KLR 229D' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "ship_1",
    "input": "let me know the name of the youngest captain\n | select name from captain order by age asc limit 1 | How young is he?\n",
    "label": "CONFIRM_SQL",
    "output": "select age from captain order by age asc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "How many female students (sex is F) live in BAL | select count ( * ) from student where sex = 'F' and city_code = 'BAL' | What are their last names?\n",
    "label": "CONFIRM_SQL",
    "output": "select lname from student where sex = 'F' and city_code = 'BAL'"
  },
  {
    "db_id": "dorm_1",
    "input": "Can you also show me the last names of any male students (sex is M) who are below the age of 20?\n | select lname from student where sex = 'M' and age < 20 | Thanks!\n",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "workshop_paper",
    "input": "how many acceptance are presented on the table | select count ( * ) from acceptance | what is highest score of submission",
    "label": "CONFIRM_SQL",
    "output": "select scores from submission order by scores desc limit 1"
  },
  {
    "db_id": "workshop_paper",
    "input": "list out the authors | select author from submission | what is the college of Steve Niehaus",
    "label": "CONFIRM_SQL",
    "output": "select college from submission where author = 'Steve Niehaus'"
  },
  {
    "db_id": "theme_gallery",
    "input": "What is the highest age of the the Artists from the United States? | select max ( age ) from artist where country = 'United States' | How many artists from the USA joined after 1993?",
    "label": "CONFIRM_SQL",
    "output": "select count ( artist_id ) from artist where country = 'United States' and year_join > 1993"
  },
  {
    "db_id": "theme_gallery",
    "input": "When did Vijay Singh join? | select year_join from artist where name = 'Vijay Singh' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome,goodbye"
  },
  {
    "db_id": "student_1",
    "input": "what is the average of grades? | select avg ( grade ) from list | can you show me a list of teacchers first name?",
    "label": "CONFIRM_SQL",
    "output": "select firstname from teachers"
  },
  {
    "db_id": "student_1",
    "input": "can you show me a list of teachers first name that starting with 'M'? | select firstname from teachers where firstname like 'M%' | find all first-grade students who are not taught by otha moyer.",
    "label": "CLARIFY",
    "output": "Do you mean First or Last names?"
  },
  {
    "db_id": "student_1",
    "input": "first | select distinct list.firstname from list join teachers on list.classroom = teachers.classroom where list.grade = 1 except select list.firstname , list.lastname from list join teachers on list.classroom = teachers.classroom where teachers.firstname = 'OTHA' and teachers.lastname = 'MOYER' | thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "theme_gallery",
    "input": "Show the average ticket prices for exhibitions for all years before 2009? | select avg ( ticket_price ) from exhibition where year < 2009 | Show minimum ticket prices for exhibitions for all years before 2009?",
    "label": "CONFIRM_SQL",
    "output": "select min ( ticket_price ) from exhibition where year < 2009"
  },
  {
    "db_id": "theme_gallery",
    "input": "Show maximum ticket prices for exhibitions for all years before 2009? | select max ( ticket_price ) from exhibition where year < 2009 | Show average ticket price for exhibitions for year 2005?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( ticket_price ) from exhibition where year = 2005"
  },
  {
    "db_id": "theme_gallery",
    "input": "Show average ticket price for exhibitions for all years before 2006? | select avg ( ticket_price ) from exhibition where year < 2006 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "mountain_photos",
    "input": "How many photos use Olympus camera lenses? | select count ( * ) from photos join camera_lens on photos.camera_lens_id = camera_lens.id where camera_lens.brand = 'Olympus' | What are their names?",
    "label": "CLARIFY",
    "output": "Do you mean  the photos name"
  },
  {
    "db_id": "mountain_photos",
    "input": "Yes | select photos.name from photos join camera_lens on photos.camera_lens_id = camera_lens.id group by photos.name having camera_lens.brand = 'Olympus' | What are the names of the photos that use a Sigma lens?",
    "label": "CONFIRM_SQL",
    "output": "select photos.name from camera_lens join photos on photos.camera_lens_id = camera_lens.id where camera_lens.brand = 'Sigma'"
  },
  {
    "db_id": "mountain_photos",
    "input": "How many photos use a Sigma lens? | select count ( * ) from photos join camera_lens on photos.camera_lens_id = camera_lens.id where camera_lens.brand = 'Sigma' | What are their photo names?",
    "label": "CONFIRM_SQL",
    "output": "select photos.name from photos join camera_lens on photos.camera_lens_id = camera_lens.id where camera_lens.brand = 'Sigma'"
  },
  {
    "db_id": "e_government",
    "input": "how many parties are on the table?\n | select count ( * ) from parties | how many of the parties are popular?",
    "label": "CLARIFY",
    "output": "What do you mean by popular?"
  },
  {
    "db_id": "e_government",
    "input": "how many parties have the most popular party form? | select count ( * ) from parties join party_forms on parties.party_id = party_forms.party_id where party_forms.form_id = ( select form_id from party_forms group by form_id order by count ( * ) desc limit 1 ) | can i have their emails?",
    "label": "CONFIRM_SQL",
    "output": "select parties.party_email from parties join party_forms on parties.party_id = party_forms.party_id where party_forms.form_id = ( select form_id from party_forms group by form_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "department_store",
    "input": "how many departments are there | select count ( distinct department_id ) from staff_department_assignments | what is the jobe title code of department id 5",
    "label": "CONFIRM_SQL",
    "output": "select job_title_code from staff_department_assignments where department_id = 5"
  },
  {
    "db_id": "department_store",
    "input": "how many persons in department manger | select count ( * ) from staff_department_assignments where job_title_code = 'Department Manager' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "formula_1",
    "input": "How many races has there been? | select count ( * ) from races | When was the oldest one?",
    "label": "CLARIFY",
    "output": "Did you mean  the date "
  },
  {
    "db_id": "formula_1",
    "input": "Yes | select date from races order by date asc limit 1 | How about the most recent one? ",
    "label": "CLARIFY",
    "output": "Did you just want to know the recent date?"
  },
  {
    "db_id": "formula_1",
    "input": "Yes | select date from races order by date desc limit 1 | Actually, can you also give me the name of that race?",
    "label": "CONFIRM_SQL",
    "output": "select name , date from races order by date desc limit 1"
  },
  {
    "db_id": "student_assessment",
    "input": "What is the name of candidate id 111? | select people.first_name , people.middle_name , people.last_name from candidates join candidate_assessments on candidates.candidate_id = candidate_assessments.candidate_id join people on candidates.candidate_id = people.person_id where candidates.candidate_id = 111 | What is the email address of login id zops?",
    "label": "CONFIRM_SQL",
    "output": "select people.email_address from candidates join candidate_assessments on candidates.candidate_id = candidate_assessments.candidate_id join people on candidates.candidate_id = people.person_id where people.login_name = 'zops'"
  },
  {
    "db_id": "student_assessment",
    "input": "What is the assessment date of candidate id 121? | select candidate_assessments.assessment_date from candidates join candidate_assessments on candidates.candidate_id = candidate_assessments.candidate_id join people on candidates.candidate_id = people.person_id where candidate_assessments.candidate_id = 121 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "perpetrator",
    "input": "Hi - can you please list the names of perpetrators in all countries except for China? | select people.name from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country != 'China' | Great - I forgot to ask, can you please show which countries each of the listed perpetrators are associated with?",
    "label": "CONFIRM_SQL",
    "output": "select people.name , perpetrator.country from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country != 'China'"
  },
  {
    "db_id": "perpetrator",
    "input": "Fantastic - what was the total number of perpetrators in China? | select count ( * ) from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'China' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "gas_company",
    "input": "find the rank, company names, market values of the companies in the banking industry order by their sales and profits in billion. | select rank , company , market_value from company where main_industry = 'Banking' order by sales_billion asc , profits_billion | Which company has the biggest market value in billion?",
    "label": "CONFIRM_SQL",
    "output": "select company from company order by market_value asc limit 1"
  },
  {
    "db_id": "gas_company",
    "input": "what is BP's market value? | select market_value from company where company = 'BP' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Can you show me the total number of problem logs? | select count ( * ) from problem_log | When was the oldest one created?",
    "label": "CONFIRM_SQL",
    "output": "select log_entry_date from problem_log order by log_entry_date asc limit 1"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "How about the most recent one? | select log_entry_date from problem_log order by log_entry_date desc limit 1 | What is its id?",
    "label": "CONFIRM_SQL",
    "output": "select problem_log_id from problem_log order by log_entry_date desc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "Find the title of course that is provided by Statistics but not Psychology departments. | select title from course where dept_name = 'Statistics' except select title from course where dept_name = 'Psychology' | How many credits is Care and Feeding of Cats?",
    "label": "CONFIRM_SQL",
    "output": "select credits from course where title = 'Care and Feeding of Cats'"
  },
  {
    "db_id": "college_2",
    "input": "What is the course id of that? | select course_id from course where title = 'Care and Feeding of Cats' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "riding_club",
    "input": "What are all the residences? | select distinct residence from player | How many people live at each of them?",
    "label": "CONFIRM_SQL",
    "output": "select residence , count ( * ) from player group by residence"
  },
  {
    "db_id": "riding_club",
    "input": "Now remove the residences with less than 2 people | select residence , count ( * ) from player except select residence , count ( * ) from player where count ( * ) < 2 | OK, now list all the people who live in Winnipeg and their gender.",
    "label": "CONFIRM_SQL",
    "output": "select player_name , gender from player where residence = 'Winnipeg'"
  },
  {
    "db_id": "riding_club",
    "input": "Thanks! | No problem. Anything more you'd like to know? | Sure...is Winnipeg the only residence with players of both gender M and gender F?",
    "label": "CONFIRM_SQL",
    "output": "select residence from player where gender = 'M' intersect select residence from player where gender = 'F'"
  },
  {
    "db_id": "device",
    "input": "How many devices are in stock at \tDinas Device? | select count ( device_id ) from stock join shop on stock.shop_id = shop.shop_id where shop_name = 'Dinas Device' | How many devices are at Best Buy?",
    "label": "CONFIRM_SQL",
    "output": "select count ( device_id ) from stock join shop on stock.shop_id = shop.shop_id where shop_name = 'Best Buy'"
  },
  {
    "db_id": "device",
    "input": "Show me the name of the shop that has the most devices in stock?\n | select shop.shop_name from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id order by count ( * ) desc limit 1 | Where are they located?\n",
    "label": "CONFIRM_SQL",
    "output": "select shop.shop_name , location from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "network_2",
    "input": "Can you please tell me who the friends of Alice's friends are? | select distinct personfriend.name from personfriend join person on personfriend.name = person.name join personfriend on personfriend.friend = personfriend.name join personfriend on personfriend.friend = personfriend.name where person.name = 'Alice' and personfriend.name != 'Alice' | What city does Zach live in?",
    "label": "CONFIRM_SQL",
    "output": "select city from person where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "What are the names of everyone else who lives in Austin? | select name from person where city = 'austin' | Who are Zach's friends?",
    "label": "CONFIRM_SQL",
    "output": "select friend from personfriend where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "What are their jobs? | select name , job from person where name in ( select friend from personfriend where name = 'Zach' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the name of players?\n | select name_first , name_last , name_given from player | Show me the name of person who received salary from team Washington nationals?",
    "label": "CONFIRM_SQL",
    "output": "select player.name_first , player.name_last , player.name_given from salary join player on salary.player_id = player.player_id join team on team.team_id_br = salary.team_id where salary.year = 2007 and team.name = 'Washington Nationals'"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the names of players who  received salary in both 2005 and 2007?  | select player.name_first , player.name_last from salary join player on salary.player_id = player.player_id join team on team.team_id_br = salary.team_id where salary.year = 2005 or salary.year = 2007 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "network_2",
    "input": "How many people are from Austin ? | select count ( * ) from person where city = 'austin' | How many friends do Alice and Bob have combined ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from personfriend where name = 'Alice' or name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "Okay, so who has a friend in Austin ?\n | select name from personfriend where friend in ( select name from person where city = 'austin' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "college_1",
    "input": "Can you please give me the names of all of the professors sorted in alphabetical order of their first name? | Do you want to first name of all the professors, or last name or both? | Both, please",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname , employee.emp_lname from professor join employee on professor.emp_num = employee.emp_num order by employee.emp_fname asc"
  },
  {
    "db_id": "college_1",
    "input": "Where are their offices, if you don't mind? | select professor.prof_office from professor join employee on professor.emp_num = employee.emp_num order by employee.emp_fname asc | What are all of their professor high degree?",
    "label": "CONFIRM_SQL",
    "output": "select prof_high_degree from professor"
  },
  {
    "db_id": "election",
    "input": "What is the zip code of county id of 2 | select zip_code from county where county_id = 2 | how much population of zip code D21?",
    "label": "CONFIRM_SQL",
    "output": "select population from county where zip_code = 'D21'"
  },
  {
    "db_id": "election",
    "input": "what is the county name zip code D02? | select county_name from county where zip_code = 'D02' | what is election id of district 2?",
    "label": "CONFIRM_SQL",
    "output": "select election_id from election where district = 2"
  },
  {
    "db_id": "election",
    "input": "how many distinct delegates are from counties with population larger than 50000 | select count ( distinct election.delegate ) from county join election on county.county_id = election.district where county.population > 50000 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "university_basketball",
    "input": "Hello!  Can you show me the top 3 school with the largest enrollment? | select * from university order by enrollment desc limit 3 | Can you filter that list to show only the school with the largest enrollment?",
    "label": "CONFIRM_SQL",
    "output": "select * from university order by enrollment desc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "Thank you!  What athletic conference is Rutgers University in? | select primary_conference from university where school = 'Rutgers University' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "allergy_1",
    "input": "Which students have allergies?  | Do you want to return their first and last names or other info? | Just names\n",
    "label": "CONFIRM_SQL",
    "output": "select student.fname , student.lname from has_allergy join student on has_allergy.stuid = student.stuid"
  },
  {
    "db_id": "allergy_1",
    "input": "How many students don't have any type of allergy? | select count ( * ) from student where stuid not in ( select student.stuid from has_allergy join student on has_allergy.stuid = student.stuid ) | What are their full names?",
    "label": "CONFIRM_SQL",
    "output": "select lname , fname from student where stuid not in ( select student.stuid from has_allergy join student on has_allergy.stuid = student.stuid )"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Hi! Can you show me a list of all of the product part names? | select part_name from parts | Can you now show me the list of all part IDs?",
    "label": "CONFIRM_SQL",
    "output": "select part_id from parts"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Thanks!  Can you please list the part id and the corresponding price of the part with the lowest chargeable amount? | We don't have price. Do you mean want the part ids and corresponding chargeable amount of the part with the lowest chargeable amount? | I'm sorry, yes that is what I meant.  The one with the lower chargeable amount!",
    "label": "CONFIRM_SQL",
    "output": "select part_id , chargeable_amount from parts order by chargeable_amount asc limit 1"
  },
  {
    "db_id": "network_2",
    "input": "How many people are in New York City? | select count ( * ) from person where city = 'new york city' | How many friends does Bob have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select personfriend.friend from person join personfriend on person.name = personfriend.name where person.name = 'Bob' )"
  },
  {
    "db_id": "network_2",
    "input": "What is Bob's friend's name? | select personfriend.friend from person join personfriend on person.name = personfriend.name where person.name = 'Bob' | Thanks",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "body_builder",
    "input": "how many male body builder of there | Sorry the question cannot be answered from the table. | what is the weight of ty conklin",
    "label": "CONFIRM_SQL",
    "output": "select weight from people where name = 'Ty Conklin'"
  },
  {
    "db_id": "body_builder",
    "input": "what is the height of jack campbell | select height from people where name = 'Jack Campbell' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "aircraft",
    "input": "How many total domestic passengers were there? | select sum ( domestic_passengers ) from airport | What about international passengers?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( international_passengers ) from airport"
  },
  {
    "db_id": "aircraft",
    "input": "Which airport had the largest difference between domestic and international passengers? | Sorry I cannot answer this question. Can you change one please? | Which airport had the most domestic passengers?",
    "label": "CONFIRM_SQL",
    "output": "select airport_name from airport order by domestic_passengers desc limit 1"
  },
  {
    "db_id": "aircraft",
    "input": "Thanks! | Do you want to ask anything else? | What are the total number of Domestic Passengers of airports that contain the word \"London.\"",
    "label": "CONFIRM_SQL",
    "output": "select sum ( domestic_passengers ) from airport where airport_name like '%London%'"
  },
  {
    "db_id": "loan_1",
    "input": "Find the name of customers who do not have a saving account. | select cust_name from customer except select cust_name from customer where acc_type = 'saving' | what other types of accounts are available?",
    "label": "CONFIRM_SQL",
    "output": "select acc_type from customer where acc_type != 'saving'"
  },
  {
    "db_id": "loan_1",
    "input": "who has the highest credit score? | select cust_name from customer order by credit_score desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "product_catalog",
    "input": "What were the dates of the latest revisions? | select date_of_latest_revision from catalogs | Which of these appear more than once?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > 1"
  },
  {
    "db_id": "product_catalog",
    "input": "What catalogs were done on these dates? | select catalog_name from catalogs where date_of_latest_revision in ( select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > 1 ) | Great, can you show me the dates these catalogs were revised again?\n",
    "label": "CONFIRM_SQL",
    "output": "select catalog_name , date_of_latest_revision from catalogs where date_of_latest_revision in ( select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > 1 )"
  },
  {
    "db_id": "product_catalog",
    "input": "Can you show me what dates appear more than once again? | select date_of_latest_revision from catalogs group by date_of_latest_revision having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "Sure! Great! Bye!"
  },
  {
    "db_id": "theme_gallery",
    "input": "what is the average of artist ages? | select avg ( age ) from artist | who is the oldest artist?",
    "label": "CLARIFY",
    "output": "do you want to show his/her name?"
  },
  {
    "db_id": "theme_gallery",
    "input": "yes\n | select name from artist order by age desc limit 1 | can you show me artist's countries?",
    "label": "CLARIFY",
    "output": "did you mean the country of the oldest artist or countries of all the artists?"
  },
  {
    "db_id": "theme_gallery",
    "input": "countries of all the artists | select distinct country from artist | thanks!",
    "label": "GOOD_BYE",
    "output": "good bye."
  },
  {
    "db_id": "wine_1",
    "input": "Show the color of Barbera Grape? | select color from grapes where grape = 'Barbera' | Show the grape which scores higher than 90?",
    "label": "CONFIRM_SQL",
    "output": "select distinct grape from wine where score > 90"
  },
  {
    "db_id": "wine_1",
    "input": "Show the grape whose white color grapes are used to produce wines? | select distinct grapes.grape from grapes join wine on grapes.grape = wine.grape where grapes.color = 'White' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "flight_company",
    "input": "how many flights have pilot Thompson flown? | select count ( * ) from flight where pilot = 'Thompson' | Are they all in the same city?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( airport.city ) from airport join flight on airport.id = flight.airport_id where flight.pilot = 'Thompson'"
  },
  {
    "db_id": "flight_company",
    "input": "Are there any airport that pilot Thompson hasn't flown? | select count ( * ) from airport where id not in ( select airport_id from flight where pilot = 'Thompson' ) | What are the names of those airports?",
    "label": "CONFIRM_SQL",
    "output": "select name from airport where id not in ( select airport_id from flight where pilot = 'Thompson' )"
  },
  {
    "db_id": "music_1",
    "input": "Find the distinct names of all the songs that have a higher resolution than some songs in English, please? | select distinct song_name from song where resolution > ( select min ( resolution ) from song where languages = 'english' ) | What countries are those songs from?",
    "label": "CONFIRM_SQL",
    "output": "select country from song where resolution > ( select min ( resolution ) from song where languages = 'english' )"
  },
  {
    "db_id": "music_1",
    "input": "Can you add the songs' names and resolutions to the table? | select country , song_name , resolution from song where resolution > ( select min ( resolution ) from song where languages = 'english' ) | What are the names of the top 3 rated songs?",
    "label": "INFORM_SQL",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "music_1",
    "input": "select song_name from song order by rating desc limit 3 | Could you add the artists' names to the table? | select song_name , artist_name from song order by rating desc limit 3",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "small_bank_1",
    "input": "I need to know the number of checking accounts for each account name. | select count ( * ) , accounts.name from accounts join checking on accounts.custid = checking.custid group by accounts.name | How long have the customers been existent?",
    "label": "REJECT",
    "output": "There is no info about how long the customers have existed"
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the highest account balance of customers with checking accounts? | select max ( balance ) from checking | What about the lowest account balance with customers with checking accounts?",
    "label": "CONFIRM_SQL",
    "output": "select min ( balance ) from checking"
  },
  {
    "db_id": "small_bank_1",
    "input": "can you show me a list of checking balance? | select * from checking | can you show me a list of saving balance?",
    "label": "CONFIRM_SQL",
    "output": "select * from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "can you show me a list of ACCOUNTS name? | select * from accounts | find the saving balance of the account with the highest checking balance?",
    "label": "CONFIRM_SQL",
    "output": "select savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by checking.balance desc limit 1"
  },
  {
    "db_id": "music_4",
    "input": "Hi.Can you show the categories of the music festivals? | select category from music_festival | Thank you.Do all of them have more than one count or no?",
    "label": "CONFIRM_SQL",
    "output": "select category from music_festival group by category having count ( * ) = 1"
  },
  {
    "db_id": "music_4",
    "input": "Ok thank you.Can you please show me the music festivals with counts more than 1? | Did you mean to ask for the categories of the music festivals with counts more than 1? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select category from music_festival group by category having count ( * ) > 1"
  },
  {
    "db_id": "gymnast",
    "input": "Show the ages of gymnasts in descending order of total points. | select people.age from gymnast join people on gymnast.gymnast_id = people.people_id order by gymnast.total_points desc | Show their names.",
    "label": "CONFIRM_SQL",
    "output": "select people.name from gymnast join people on gymnast.gymnast_id = people.people_id order by gymnast.total_points desc"
  },
  {
    "db_id": "gymnast",
    "input": "What is the height of Paul Hamm? | select height from people where name = 'Paul Hamm' | What is his hometown?",
    "label": "CONFIRM_SQL",
    "output": "select hometown from people where name = 'Paul Hamm'"
  },
  {
    "db_id": "gymnast",
    "input": "How many total points does he have? | select sum ( total_points ) from gymnast join people on gymnast.gymnast_id = people.people_id where people.name = 'Paul Hamm' | How many rings points does he have?",
    "label": "CONFIRM_SQL",
    "output": "select rings_points from gymnast join people on gymnast.gymnast_id = people.people_id where people.name = 'Paul Hamm'"
  },
  {
    "db_id": "protein_institute",
    "input": "Do any of these institutions have other institutions? | I don't understand your question. Please rephrase. | Do any of these institutions (universities, college) have any other affiliated institutions (other university locations) ?",
    "label": "SORRY",
    "output": "Sorry the question cannot be answered from the table."
  },
  {
    "db_id": "protein_institute",
    "input": "Which institution type has the largest number of institutions? | select type from institution group by type order by count ( * ) desc limit 1 | Which institution type has the smallest number of institutions?",
    "label": "CONFIRM_SQL",
    "output": "select type from institution group by type order by count ( * ) asc limit 1"
  },
  {
    "db_id": "protein_institute",
    "input": "What is the average number of institutions? | Average number of institutions over what? | What is the institution type with the largest number of institutions?",
    "label": "CONFIRM_SQL",
    "output": "select type from institution group by type order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "how many customers are presented on the table | select count ( * ) from customers | list out the customers name",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers"
  },
  {
    "db_id": "tracking_orders",
    "input": "show all the customer details | select customer_details from customers | what is the order status of George",
    "label": "CONFIRM_SQL",
    "output": "select orders.order_status from customers join orders join order_items join products on customers.customer_id = orders.customer_id and orders.order_id = order_items.order_id and order_items.product_id = products.product_id where customers.customer_name = 'George'"
  },
  {
    "db_id": "baseball_1",
    "input": "what team pays the lowest average salary? | select team.* from team join salary on team.team_id = salary.team_id group by team.team_id order by avg ( salary.salary ) asc limit 1 | how much lower is their average salary compared to the highest salary?",
    "label": "CONFIRM_SQL",
    "output": "select max ( salary.salary ) - avg ( salary.salary ) from team join salary on team.team_id = salary.team_id group by team.team_id order by avg ( salary.salary ) asc limit 1"
  },
  {
    "db_id": "baseball_1",
    "input": "thanks..how about one last one...what is median salary across all teams? | select avg ( salary ) from salary | ok,  how many teams are the total in this data range?",
    "label": "CLARIFY",
    "output": "What data range are you referring to?"
  },
  {
    "db_id": "baseball_1",
    "input": "Team salaries | select count ( distinct team_id ) from salary | thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "customer_deliveries",
    "input": "What is the name of the products? | select product_name from products | What is the highest price for the products?",
    "label": "CONFIRM_SQL",
    "output": "select max ( product_price ) from products"
  },
  {
    "db_id": "customer_deliveries",
    "input": "What product has been ordered the greatest number of times? | select products.product_name from products join regular_order_products on products.product_id = regular_order_products.product_id group by regular_order_products.product_id order by count ( * ) desc limit 1 | What is the price of the dvds?",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_name = 'dvds'"
  },
  {
    "db_id": "college_2",
    "input": "Find the department name of the instructor whose name contains 'Soisalon' | select dept_name from instructor where name like '%Soisalon%' | What is the id number for the psychology department?",
    "label": "REJECT",
    "output": "Sorry we don't have the id of department. We only have id of the instructors. Could you please ask another question? Thanks."
  },
  {
    "db_id": "college_2",
    "input": "Sorry, what is the id number of the instructor for psychology? | select id from instructor where dept_name = 'Psychology' | What is the salary of the instructor with id number 22591?",
    "label": "CONFIRM_SQL",
    "output": "select salary from instructor where id = 22591"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Hi! Which engineer has visited the most times? | What information about the engineer you want? | Which engineer id has visited the most?",
    "label": "CONFIRM_SQL",
    "output": "select maintenance_engineers.engineer_id from maintenance_engineers join engineer_visits group by maintenance_engineers.engineer_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is that engineer's full name, please? | select maintenance_engineers.engineer_id , maintenance_engineers.first_name , maintenance_engineers.last_name from maintenance_engineers join engineer_visits group by maintenance_engineers.engineer_id order by count ( * ) desc limit 1 | What are all of her visit start datetimes and visit end datetimes?",
    "label": "CONFIRM_SQL",
    "output": "select visit_start_datetime , visit_end_datetime from engineer_visits where engineer_id = ( select maintenance_engineers.engineer_id from maintenance_engineers join engineer_visits group by maintenance_engineers.engineer_id order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "customer_deliveries",
    "input": "Which state has the most employees? | select addresses.state_province_county from addresses join employees on addresses.address_id = employees.employee_address_id group by addresses.state_province_county order by count ( * ) desc limit 1 | Which state has the least?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.state_province_county from addresses join employees on addresses.address_id = employees.employee_address_id group by addresses.state_province_county order by count ( * ) asc limit 1"
  },
  {
    "db_id": "customer_deliveries",
    "input": "WHich states have no employees? | select state_province_county from addresses where address_id not in ( select employee_address_id from employees ) | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "ship_1",
    "input": "How many ships are there? | select count ( * ) from ship | Out of them which ship names have more than one captain? ",
    "label": "CONFIRM_SQL",
    "output": "select ship.name from ship join captain on ship.ship_id = captain.ship_id group by captain.ship_id having count ( * ) > 1"
  },
  {
    "db_id": "ship_1",
    "input": "How about ship names with only one captain? | select ship.name from ship join captain on ship.ship_id = captain.ship_id group by captain.ship_id having count ( * ) = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Goodbye!"
  },
  {
    "db_id": "college_1",
    "input": "How many different courses are there? | select count ( distinct crs_code ) from course | How many departments are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( dept_code ) from department"
  },
  {
    "db_id": "college_1",
    "input": "What is the course code for the class named Statistics? | Do you mean the course code for the course whose description is Statistics? | yes.\n",
    "label": "CONFIRM_SQL",
    "output": "select crs_code from course where crs_description = 'Statistics'"
  },
  {
    "db_id": "college_1",
    "input": "Can you show me a list of all the course descriptions? | select crs_description from course | Can you tell me the course code for the class with the Intro. to Statistics description?\n",
    "label": "CONFIRM_SQL",
    "output": "select crs_code from course where crs_description = 'Intro. to Statistics'"
  },
  {
    "db_id": "college_1",
    "input": "What is the name of the department that course is in? | Do you mean the name of the department which the course named 'Intro. to Statistics' is in? | yes.",
    "label": "CONFIRM_SQL",
    "output": "select department.dept_name from course join department on course.dept_code = department.dept_code where course.crs_description = 'Intro. to Statistics'"
  },
  {
    "db_id": "college_2",
    "input": "What are the total number of students in each department? | select count ( distinct student.id ) , instructor.dept_name from department join student on department.dept_name = student.dept_name join instructor on department.dept_name = instructor.dept_name group by instructor.dept_name | And, do you also have information on the total number of instructors in each department?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct student.id ) , count ( distinct instructor.id ) , instructor.dept_name from department join student on department.dept_name = student.dept_name join instructor on department.dept_name = instructor.dept_name group by instructor.dept_name"
  },
  {
    "db_id": "college_2",
    "input": "Do you also have a total enrollment? | What do you mean by enrollment? | Total number of students.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student"
  },
  {
    "db_id": "college_2",
    "input": "Do you know the name of the Astronomy instructor? | select instructor.name from department join instructor on department.dept_name = instructor.dept_name where department.dept_name = 'Astronomy' | Lastly, do you have his salary?",
    "label": "CONFIRM_SQL",
    "output": "select instructor.name , instructor.salary from department join instructor on department.dept_name = instructor.dept_name where department.dept_name = 'Astronomy'"
  },
  {
    "db_id": "college_2",
    "input": "Thanks! | Sure. Anything else? | No.",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye!"
  },
  {
    "db_id": "cinema",
    "input": "can you show me a list of cinema names? | select name from cinema | which one is the opened first?",
    "label": "CONFIRM_SQL",
    "output": "select name from cinema order by openning_year asc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "what is  the average of capacities? | select avg ( capacity ) from cinema | show all the locations where no cinema has capacity over 800.",
    "label": "CONFIRM_SQL",
    "output": "select location from cinema except select location from cinema where capacity > 800"
  },
  {
    "db_id": "shop_membership",
    "input": "Name the branch with least membership amount.? | select name from branch order by membership_amount asc limit 1 | state the open year of branch id 3?",
    "label": "CONFIRM_SQL",
    "output": "select open_year from branch where branch_id = 3"
  },
  {
    "db_id": "city_record",
    "input": "What cities had the lowest temperature in March? | what did  you  want to get ?city ID  or  city name？ | City name please.",
    "label": "CONFIRM_SQL",
    "output": "select city.city from city join temperature on city.city_id = temperature.city_id order by mar asc limit 1"
  },
  {
    "db_id": "city_record",
    "input": "What was the name of the city whose temperature in March was lower than that in July? | select city.city from city join temperature on city.city_id = temperature.city_id where temperature.mar < temperature.jul | What was the name of the city whose temperature in March was higher than that in October?",
    "label": "CONFIRM_SQL",
    "output": "select city.city from city join temperature on city.city_id = temperature.city_id where temperature.mar > temperature.oct"
  },
  {
    "db_id": "customer_complaints",
    "input": "Find the number of complaints with Product Failure type for each complaint status? | select complaint_status_code , count ( * ) from complaints where complaint_type_code = 'Product Failure' group by complaint_status_code | What were the complaint outcome code\tof each of those claims?",
    "label": "CONFIRM_SQL",
    "output": "select complaint_outcome_code from complaints where complaint_type_code = 'Product Failure'"
  },
  {
    "db_id": "customer_complaints",
    "input": "What is the complaint status code of each of those claims? | select complaint_status_code from complaints where complaint_type_code = 'Product Failure' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "How many investors are there? | select count ( * ) from investors | How many investors have at least two transactions?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select transactions.investor_id from investors join transactions on investors.investor_id = transactions.investor_id group by transactions.investor_id having count ( * ) >= 2 )"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Show me their Ids. | select transactions.investor_id from investors join transactions on investors.investor_id = transactions.investor_id group by transactions.investor_id having count ( * ) >= 2 | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "what are all the marketing regions? | Do you mean the names of all the  marketing regions? | yes",
    "label": "CONFIRM_SQL",
    "output": "select marketing_region_name from marketing_regions"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "what is the store Rob Dinning's marketing code? | select marketing_region_code from stores where store_name = 'Rob Dinning' | what is the name of Rob Dinning's marketing region?",
    "label": "CONFIRM_SQL",
    "output": "select marketing_regions.marketing_region_name from marketing_regions join stores on marketing_regions.marketing_region_code = stores.marketing_region_code where stores.store_name = 'Rob Dinning'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "what can you tell me about Rob Dinning? | select * from stores where store_name = 'Rob Dinning' | now tell me Rob Dinning's marketing region?",
    "label": "CONFIRM_SQL",
    "output": "select marketing_regions.marketing_region_name from marketing_regions join stores on marketing_regions.marketing_region_code = stores.marketing_region_code where stores.store_name = 'Rob Dinning'"
  },
  {
    "db_id": "journal_committee",
    "input": "show the names of editors that are on at least two journal committees? | select editor.name from editor join journal_committee on editor.editor_id = journal_committee.editor_id group by editor.name having count ( * ) >= 2 | what is the work type of Kamila Porczyk?",
    "label": "CONFIRM_SQL",
    "output": "select journal_committee.work_type from editor join journal_committee on editor.editor_id = journal_committee.editor_id where editor.name = 'Kamila Porczyk'"
  },
  {
    "db_id": "journal_committee",
    "input": "how much years old is Anna Powierza ? | select editor.age from editor where editor.name = 'Anna Powierza' | what is the work type of Anna Powierza?",
    "label": "CONFIRM_SQL",
    "output": "select journal_committee.work_type from editor join journal_committee on editor.editor_id = journal_committee.editor_id where editor.name = 'Anna Powierza'"
  },
  {
    "db_id": "product_catalog",
    "input": "Could you list the catalog publishers in descending order? | order by what? | Alphabetical order",
    "label": "CONFIRM_SQL",
    "output": "select catalog_publisher from catalogs group by catalog_publisher order by catalog_publisher desc"
  },
  {
    "db_id": "product_catalog",
    "input": "Great! How many catalogs has each publisher published? | select catalog_publisher , count ( * ) from catalogs group by catalog_publisher | Great! Which publishers have the most published catalogues?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_publisher from catalogs group by catalog_publisher order by count ( * ) desc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "The most common amenity in all dorms is what? | select dorm_amenity.amenity_name from dorm_amenity join has_amenity on dorm_amenity.amenid = has_amenity.amenid group by has_amenity.amenid order by count ( * ) desc limit 1 | what's Roof dorm id?",
    "label": "CONFIRM_SQL",
    "output": "select dormid from has_amenity where amenid = ( select dorm_amenity.amenid from dorm_amenity join has_amenity on dorm_amenity.amenid = has_amenity.amenid group by has_amenity.amenid order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "dorm_1",
    "input": "what is TV Lounge amenity id? | select dorm_amenity.amenid from dorm_amenity where dorm_amenity.amenity_name = 'TV Lounge' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "activity_1",
    "input": "What is the first name of faculty partcipating in most activities? | select faculty.fname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid group by faculty.facid order by count ( * ) desc limit 1 | What is the last name of faculty partcipating in most activities?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.lname from faculty join faculty_participates_in on faculty.facid = faculty_participates_in.facid group by faculty.facid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "activity_1",
    "input": "What is the rank of mark? | select rank from faculty where fname = 'Mark' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "college_1",
    "input": "what is the enroll grade of 324257 | select enroll_grade from enroll where stu_num = 324257 | how many class there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from class"
  },
  {
    "db_id": "college_1",
    "input": "how many students there | select count ( * ) from student | what is the dept-code of student number 324257",
    "label": "CONFIRM_SQL",
    "output": "select dept_code from student where stu_num = 324257"
  },
  {
    "db_id": "store_1",
    "input": "Did you mean the country of the customer with full name Eduardo Martins? | Yes | What is country of origin of Eduardo Martins?",
    "label": "CONFIRM_SQL",
    "output": "select country from customers where first_name = 'Eduardo' and last_name = 'Martins'"
  },
  {
    "db_id": "store_1",
    "input": "Of which company is he a customer of? | select company from customers where first_name = 'Eduardo' and last_name = 'Martins' | And what is his phone number?",
    "label": "CONFIRM_SQL",
    "output": "select phone from customers where first_name = 'Eduardo' and last_name = 'Martins'"
  },
  {
    "db_id": "club_1",
    "input": "How many students are members of the club \"Bootup Baltimore\"? | select count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid where club.clubname = 'Bootup Baltimore' | Please provide the ages of the two members.",
    "label": "CONFIRM_SQL",
    "output": "select student.age from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore'"
  },
  {
    "db_id": "club_1",
    "input": "What is the average age of the two members of the club Bootup Baltimore? | select avg ( student.age ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore' | Could you please tell me who is President of the club Bootup Baltimore.",
    "label": "CLARIFY",
    "output": "Do you want the first and last name of him?"
  },
  {
    "db_id": "club_1",
    "input": "Yes, please provide first and last name of the President of the club Bootup Baltimore. | select student.fname , student.lname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore' and member_of_club.position = 'President' | Thanks.  Could you please tell me the Club Location?",
    "label": "CONFIRM_SQL",
    "output": "select clublocation from club where clubname = 'Bootup Baltimore'"
  },
  {
    "db_id": "wine_1",
    "input": "Did you want the names of wines made of Red color grapes? | Yes | Which wines are made of Red color grapes? ",
    "label": "CONFIRM_SQL",
    "output": "select wine.name from grapes join wine on grapes.grape = wine.grape where grapes.color = 'Red'"
  },
  {
    "db_id": "wine_1",
    "input": "Out of them which have prices higher than 50? | select wine.name from grapes join wine on grapes.grape = wine.grape where grapes.color = 'Red' and wine.price > 50 | And where are they located? ",
    "label": "CONFIRM_SQL",
    "output": "select wine.state from grapes join wine on grapes.grape = wine.grape where grapes.color = 'Red' and wine.price > 50"
  },
  {
    "db_id": "hr_1",
    "input": "how many employees there | select count ( * ) from employees | what is the salary of the employee id 101",
    "label": "CONFIRM_SQL",
    "output": "select salary from employees where employee_id = 101"
  },
  {
    "db_id": "hr_1",
    "input": "what is the phone number of 102 | select phone_number from employees where employee_id = 102 | thanks",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "cinema",
    "input": "what is the capacity of Codling? | Did you mean the capacity of the cinema with a name of Coding? | yes",
    "label": "CONFIRM_SQL",
    "output": "select capacity from cinema where name = 'Codling'"
  },
  {
    "db_id": "cinema",
    "input": "Which is the largest capacity of cinema? | select max ( capacity ) from cinema | where is the location of Codling?",
    "label": "CONFIRM_SQL",
    "output": "select location from cinema where name = 'Codling'"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Show the names of customers who use Credit Card payment method | select customer_name from customers where payment_method_code = 'Credit Card' | Which of those customers have more than 2 orders?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customers.payment_method_code = 'Credit Card' group by customers.customer_id having count ( * ) > 2"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Show me their customer addresses | select customers.customer_address from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customers.payment_method_code = 'Credit Card' group by customers.customer_id having count ( * ) > 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "chinook_1",
    "input": "Did you mean the email of the customer with first and last names françois tremblay? | Yes | how many customers are  there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customer"
  },
  {
    "db_id": "chinook_1",
    "input": "what is the email id of françois tremblay | select email from customer where firstname is 'François' and lastname is 'Tremblay' | what is the birth date of Adams Andrew",
    "label": "CONFIRM_SQL",
    "output": "select birthdate from employee where firstname is 'Andrew' and lastname is 'Adams'"
  },
  {
    "db_id": "voter_2",
    "input": "list the name of the city that students live in | select city_code from student | show me the city names too",
    "label": "REJECT",
    "output": "Sorry, I can't answer the question based on the table."
  },
  {
    "db_id": "voter_2",
    "input": "mention the city code of the city that the most students live. | select city_code from student group by city_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "election_representative",
    "input": "What are the names of representatives in descending order of votes please? | select representative.name from election join representative on election.representative_id = representative.representative_id order by votes desc | What are their parties?",
    "label": "CONFIRM_SQL",
    "output": "select representative.name , representative.party from election join representative on election.representative_id = representative.representative_id order by votes desc"
  },
  {
    "db_id": "election_representative",
    "input": "What states are they from, please? | select representative.name , representative.state from election join representative on election.representative_id = representative.representative_id order by votes desc | What are their vote percents?",
    "label": "CONFIRM_SQL",
    "output": "select representative.name , election.vote_percent from election join representative on election.representative_id = representative.representative_id order by votes desc"
  },
  {
    "db_id": "election_representative",
    "input": "What about their dates? | select representative.name , election.date from election join representative on election.representative_id = representative.representative_id order by votes desc | Thanks!",
    "label": "WELCOME",
    "output": "Sure. Bye!"
  },
  {
    "db_id": "college_3",
    "input": "Tell me the last name, age and first name for the student id 1003 and 1004... | select lname , age , fname from student where stuid = 1003 or stuid = 1004 | Tell me the sex of 1005 and 1004 and their city code ..",
    "label": "CONFIRM_SQL",
    "output": "select sex , city_code from student where stuid = 1005 or stuid = 1004"
  },
  {
    "db_id": "college_3",
    "input": "Tell me total number of Male students and total number of female students..... | select sex , count ( * ) from student group by sex | Find the last name of female (Sex as F) students in the descending order of age.",
    "label": "CONFIRM_SQL",
    "output": "select lname from student where sex = 'F' order by age desc"
  },
  {
    "db_id": "architecture",
    "input": "How many bridges was built by Frank Lloyd Wright? | select count ( * ) from architect join bridge on architect.id = bridge.architect_id where architect.name = 'Frank Lloyd Wright' | How many bridges was built by Frank Gehry?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from architect join bridge on architect.id = bridge.architect_id where architect.name = 'Frank Gehry'"
  },
  {
    "db_id": "architecture",
    "input": "Who was the builder of Xian Ren Qiao (Fairy Bridge)? | select architect.name from architect join bridge on architect.id = bridge.architect_id where bridge.name = 'Xian Ren Qiao (Fairy Bridge)' | What is the  name of id 2?",
    "label": "CONFIRM_SQL",
    "output": "select name from architect where id = 2"
  },
  {
    "db_id": "flight_company",
    "input": "what is the date of first flight? | select date from flight order by date asc limit 1 | who is the first flight's pilot?",
    "label": "CONFIRM_SQL",
    "output": "select pilot from flight order by date asc limit 1"
  },
  {
    "db_id": "flight_company",
    "input": "what is the average of altitude? | select avg ( altitude ) from flight | thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "assets_maintenance",
    "input": "can you show me companies name? | select company_name from third_party_companies | can you show me Dooley and Sons's address?",
    "label": "CONFIRM_SQL",
    "output": "select company_address from third_party_companies where company_name = 'Dooley and Sons'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "what is the engineer's first name that starting with 'E'? | select first_name from maintenance_engineers where first_name like 'E%' | thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "game_injury",
    "input": "Hi! May i ask how many total games were played? | select count ( * ) from game | Okay. How many games were without injuries?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from game where id not in ( select game_id from injury_accident )"
  },
  {
    "db_id": "game_injury",
    "input": "How many were with injuries? | select count ( * ) from game where id in ( select game_id from injury_accident ) | What stadiums were played in when injuries were received?",
    "label": "REJECT",
    "output": "sorry  i don't  have an answer because there is no  info about  stadiums"
  },
  {
    "db_id": "game_injury",
    "input": "Okay that's fine. Do you know the stadium ID for games without injuries? | select stadium_id from game where id not in ( select game_id from injury_accident ) | Looks like Stadium 7 is lucky! I appreciate your help. Thanks!",
    "label": "WELCOME",
    "output": "you are welcome  and  bye"
  },
  {
    "db_id": "store_product",
    "input": "Please list the headquarters of the store that is called Blackville? | select district.headquartered_city from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where store.store_name = 'Blackville' | What is the population of that city?",
    "label": "CONFIRM_SQL",
    "output": "select district.city_population from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id where store.store_name = 'Blackville'"
  },
  {
    "db_id": "store_product",
    "input": "What is the name of the store in the city with the greatest population? | select store.store_name from store join store_district on store.store_id = store_district.store_id join district on store_district.district_id = district.district_id order by district.city_population desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "voter_2",
    "input": "Show the name of students | select lname , fname from student | How many of them live in city with code NYC and have secretary votes in the spring election cycle\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct student.stuid ) from student join voting_record on student.stuid = secretary_vote where student.city_code = 'NYC' and voting_record.election_cycle = 'Spring'"
  },
  {
    "db_id": "voter_2",
    "input": "Show the name of this student | select student.lname , student.fname from student join voting_record on student.stuid = secretary_vote where student.city_code = 'NYC' and voting_record.election_cycle = 'Spring' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "activity_1",
    "input": "what is the name of faceid 1082 | select fname , lname from faculty where facid = 1082 | What is the sex of professor",
    "label": "CLARIFY",
    "output": "I am sorry. Which professor are you referring to?"
  },
  {
    "db_id": "activity_1",
    "input": "Rank profeesor | select sex from faculty where rank = 'Professor' | What is the phone of goodrich",
    "label": "CONFIRM_SQL",
    "output": "select phone from faculty where lname = 'Goodrich'"
  },
  {
    "db_id": "activity_1",
    "input": "what is the last name of mark | select lname from faculty where fname = 'Mark' | thanks",
    "label": "WELCOME",
    "output": "Welcome!"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "list out the problem logs\n | select * from problem_log | what is problem status code of  first column",
    "label": "REJECT",
    "output": "I cannot answer this question with SQL. Please provide the title of the column in the table you are interested in."
  },
  {
    "db_id": "tracking_software_problems",
    "input": "show the problem status code on Middleware | select problem_status_code from problem_log where problem_category_code = 'Middleware' | show the other log details",
    "label": "CONFIRM_SQL",
    "output": "select * from problem_log where problem_category_code != 'Middleware'"
  },
  {
    "db_id": "flight_4",
    "input": "How many airlines do you have? | select count ( * ) from airlines | How many routes does each airline have?",
    "label": "CONFIRM_SQL",
    "output": "select airlines.name , count ( * ) from airlines join routes on airlines.alid = routes.alid group by routes.alid"
  },
  {
    "db_id": "flight_4",
    "input": "What are the names of the top 10 airlines with the most number of routes? | select airlines.name from airlines join routes on airlines.alid = routes.alid group by routes.alid order by count ( * ) desc limit 10 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! bye"
  },
  {
    "db_id": "store_1",
    "input": "Full name of of ID 1? | select first_name , last_name from customers where id = 1 | Address of  Luís Köhler?",
    "label": "CLARIFY",
    "output": "Is Luís Köhler  full  name?"
  },
  {
    "db_id": "store_1",
    "input": "Yes | select address from customers where first_name = 'Luís' and last_name = ' Köhler' | Provide address of ID 1?",
    "label": "CONFIRM_SQL",
    "output": "select address from customers where id = 1"
  },
  {
    "db_id": "store_1",
    "input": "Provide email and phone number of Astrid Gruber's? | select email , phone from customers where first_name = 'Astrid' and last_name = 'Gruber' | Postal code of ID 3?",
    "label": "CONFIRM_SQL",
    "output": "select postal_code from customers where id = 3"
  },
  {
    "db_id": "csu_1",
    "input": "Find the id of year 1956? | do you mean the id of the campus that is opened in 1956? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select id from campuses where year = 1956"
  },
  {
    "db_id": "csu_1",
    "input": "How many TotalEnrollment of Campus California State University-Channel Islands? | select enrollments.totalenrollment_ay from campuses join enrollments on campuses.id = enrollments.campus where campuses.campus = 'California State University-Channel Islands' | What are the country of FTE_AY 178?",
    "label": "CONFIRM_SQL",
    "output": "select campuses.county from campuses join enrollments on campuses.id = enrollments.campus where enrollments.fte_ay = 178"
  },
  {
    "db_id": "csu_1",
    "input": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956? | select campuses.campus from campuses join enrollments on campuses.id = enrollments.campus where enrollments.year = 1956 and totalenrollment_ay > 400 and fte_ay > 200 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "how many employees are there? | select count ( * ) from employees | show their names please.",
    "label": "CONFIRM_SQL",
    "output": "select employee_name from employees"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "what is the date of birth of the employee named Ebba? | select date_of_birth from employees where employee_name = 'Ebba' | ok, what are her role name and description?",
    "label": "CONFIRM_SQL",
    "output": "select roles.role_name , roles.role_description from employees join roles on employees.role_code = roles.role_code where employees.employee_name = 'Ebba'"
  },
  {
    "db_id": "allergy_1",
    "input": "Bye! | How many allergies does the food allergy type have? | select count ( allergy ) from allergy_type where allergytype = 'food'",
    "label": "INFORM_SQL",
    "output": "Are there any allergy types with less allergies than 7?"
  },
  {
    "db_id": "allergy_1",
    "input": "select allergytype from allergy_type group by allergytype having count ( * ) < 7 | How many allergies does the animal allergy type have?\n | select count ( allergy ) from allergy_type where allergytype = 'animal'",
    "label": "INFORM_SQL",
    "output": "How many allergies does the environmental allergy type have?"
  },
  {
    "db_id": "document_management",
    "input": "Which users have the most popular role? | Do you mean the user name of the users who have the most popular role? | Yes, can you list all the usernames and passwords of the users who have the most popular role?",
    "label": "CONFIRM_SQL",
    "output": "select user_name , password from users group by role_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "document_management",
    "input": "Can you also tell me the role code? | select role_code from users group by role_code order by count ( * ) desc limit 1 | How many times has this user logged in?",
    "label": "CONFIRM_SQL",
    "output": "select user_login from users group by role_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "school_player",
    "input": "Which schools have more than 1 player? | select school.school from player join school on player.school_id = school.school_id group by player.school_id having count ( * ) > 1 | Okay, and where are the locations of each school?\n",
    "label": "CONFIRM_SQL",
    "output": "select school.school , school.location from player join school on player.school_id = school.school_id group by player.school_id having count ( * ) > 1"
  },
  {
    "db_id": "sports_competition",
    "input": "Who scored more than 20 points? | select * from player where points > 20 | And what positions did those players play?",
    "label": "CONFIRM_SQL",
    "output": "select position from player where points > 20"
  },
  {
    "db_id": "sports_competition",
    "input": "What are their names? | select name from player where points > 20 | And who scored the highest points out of them?",
    "label": "CONFIRM_SQL",
    "output": "select name from player where points = ( select max ( points ) from player )"
  },
  {
    "db_id": "allergy_1",
    "input": "Could you please find the number of male (sex is 'M') students who have some type of food allergy? | select count ( * ) from student where sex = 'M' and stuid in ( select stuid from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy where allergy_type.allergytype = 'food' ) | What are their full names and the names of the food allergies they have?",
    "label": "CONFIRM_SQL",
    "output": "select student.fname , student.lname , allergy_type.allergy from has_allergy join allergy_type on has_allergy.allergy = allergy_type.allergy join student on student.stuid = has_allergy.stuid where allergy_type.allergytype = 'food' and student.sex = 'M'"
  },
  {
    "db_id": "allergy_1",
    "input": "How many female students are allergic to cats? | select count ( * ) from has_allergy join student on student.stuid = has_allergy.stuid where has_allergy.allergy = 'Cat' and student.sex = 'F' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "party_people",
    "input": "show the party names and the number of events for party id 2 | select party.party_name , count ( * ) from party_events join party on party_events.party_id = party.party_id where party_events.party_id = 2 group by party_events.party_id | find the count of the event name took place for the party id 1",
    "label": "CONFIRM_SQL",
    "output": "select party_events.party_id , count ( party.party_name ) from party_events join party on party_events.party_id = party.party_id where party_events.party_id = 1"
  },
  {
    "db_id": "party_people",
    "input": "find the took office and region id for the event id 1 | select party.took_office , party.region_id from party_events join party on party_events.party_id = party.party_id where party_events.party_id = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye! Have a nice day."
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Which events only have 1 note? | select customer_events.customer_event_id from customer_events join customer_event_notes on customer_events.customer_event_id = customer_event_notes.customer_event_id group by customer_events.customer_event_id having count ( * ) = 1 | What about events that have 2 or 3 notes as well? Can you add those to the list.",
    "label": "CONFIRM_SQL",
    "output": "select customer_events.customer_event_id from customer_events join customer_event_notes on customer_events.customer_event_id = customer_event_notes.customer_event_id group by customer_events.customer_event_id having count ( * ) between 1 and 3"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Can you show all the events that have one, two or three notes with their property ids? | select customer_events.customer_event_id , customer_events.property_id from customer_events join customer_event_notes on customer_events.customer_event_id = customer_event_notes.customer_event_id group by customer_events.customer_event_id having count ( * ) between 1 and 3 | Thank you!",
    "label": "WELCOME",
    "output": "You're welcome."
  },
  {
    "db_id": "small_bank_1",
    "input": "how many accounts have a savings balance above the average savings balance? | select count ( * ) from savings where balance > ( select avg ( balance ) from savings ) | what was my savings amount balance?",
    "label": "CLARIFY",
    "output": "Sorry, what is your customer id?"
  },
  {
    "db_id": "small_bank_1",
    "input": "1339\n | select * from savings where custid = 1339 | thanks!",
    "label": "REQUEST_MORE",
    "output": "You are welcome. do you want to check more?"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "hi! How many transactions have greater than 10 share count? | select count ( * ) from transactions where share_count > 10 | What about less than 10?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from transactions where share_count < 10"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are their transaction type descriptions? | select ref_transaction_types.transaction_type_description from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count < 10 | What about their date?\n",
    "label": "CONFIRM_SQL",
    "output": "select transactions.date_of_transaction from ref_transaction_types join transactions on ref_transaction_types.transaction_type_code = transactions.transaction_type_code where transactions.share_count < 10"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "how many orders does the customer with the most orders have? | select count ( * ) from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id order by count ( * ) desc limit 1 | who has the second most orders?",
    "label": "CLARIFY",
    "output": "Do you want the customer first name or something else?"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "something else, that was a typo. What I meant to say was, how many orders does the person with the second most orders have? | select count ( * ) from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id order by count ( * ) desc limit 2 | What is his/her last name, phone number, and id?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_last_name , customers.phone_number , orders.customer_id from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id order by count ( * ) desc limit 2"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "when is the customer with the most order's register date? | sorry, I cannot answer this. | when was the customer with the most order's last order placed?",
    "label": "CONFIRM_SQL",
    "output": "select date_order_placed from orders where customer_id in ( select orders.customer_id from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id order by count ( * ) desc limit 1 ) order by date_order_placed desc limit 1"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "what is that customer's gender? | select customers.gender from orders join customers on orders.customer_id = customers.customer_id group by orders.customer_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "music_1",
    "input": "What are the maximum duration and resolution of songs grouped and ordered by languages? | select max ( files.duration ) , max ( song.resolution ) , song.languages from files join song on files.f_id = song.f_id group by song.languages order by song.languages asc | What are the file size and formats of songs grouped and ordered by languages?",
    "label": "CONFIRM_SQL",
    "output": "select file_size , formats from files join song on files.f_id = song.f_id group by song.languages order by song.languages asc"
  },
  {
    "db_id": "music_1",
    "input": "What are the maximum duration and resolution of songs grouped and ordered by country? | select max ( files.duration ) , max ( song.resolution ) from files join song on files.f_id = song.f_id group by song.country order by song.country asc | What are the the file size and fomats of songs grouped and ordered by country for each file?",
    "label": "CONFIRM_SQL",
    "output": "select file_size , formats from files join song on files.f_id = song.f_id group by song.country order by song.country asc"
  },
  {
    "db_id": "entrepreneur",
    "input": "What is the largest weight that appears in the people table? | select weight from people order by weight desc limit 1 | Can you add the people id associated with that weight into the table?",
    "label": "CONFIRM_SQL",
    "output": "select people_id , weight from people order by weight desc limit 1"
  },
  {
    "db_id": "entrepreneur",
    "input": "Can you also add the name associated with that people id into the table? | select people_id , name , weight from people order by weight desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "How many customer ids are on the list? | select count ( distinct customer_id ) from customers | Find the details of customers which contain \"Diana\"?",
    "label": "CONFIRM_SQL",
    "output": "select * from customers where customer_details like '%Diana%'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "State the customer details of customer id 263? | select customer_details from customers where customer_id = 263 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "college_1",
    "input": "How many professors are there? | select count ( * ) from professor | which department has the most professors?",
    "label": "CONFIRM_SQL",
    "output": "select department.* from professor join department on professor.dept_code = department.dept_code group by professor.dept_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "What about the smallest? | select department.* from professor join department on professor.dept_code = department.dept_code group by professor.dept_code order by count ( * ) asc limit 1 | THanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "coffee_shop",
    "input": "Find the ids and names of members who are under age 30 | select name , member_id from member where age < 30 | Please find the ids and names of members with black membership card.",
    "label": "CONFIRM_SQL",
    "output": "select name , member_id from member where membership_card = 'Black'"
  },
  {
    "db_id": "coffee_shop",
    "input": "Hmmm. Can you also show me the ids and names of members who are over age 30? | select name , member_id from member where membership_card = 'Black' or age > 30 | How many of these members have a black membership card?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from member where membership_card = 'Black' or age > 30"
  },
  {
    "db_id": "store_product",
    "input": "how many district there | select count ( * ) from district | what is the city area of Bahawalnagar District",
    "label": "CONFIRM_SQL",
    "output": "select city_area from district where district_name = 'Bahawalnagar District'"
  },
  {
    "db_id": "store_product",
    "input": "what is the City Population of Attock District | select city_population from district where district_name = 'Attock District' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "products_for_hire",
    "input": "Hello!  Can you show me a list of all of the coupon IDs and coupon amounts? | select coupon_id , coupon_amount from discount_coupons | Great!  Can you filter this list to show just the rows the coupons and coupon amounts that are associated with both values of good and bad in the  \"good or bad customer\" category.",
    "label": "CONFIRM_SQL",
    "output": "select discount_coupons.coupon_id , discount_coupons.coupon_amount from discount_coupons join customers on discount_coupons.coupon_id = customers.coupon_id where customers.good_or_bad_customer = 'good' intersect select discount_coupons.coupon_id , discount_coupons.coupon_amount from discount_coupons join customers on discount_coupons.coupon_id = customers.coupon_id where customers.good_or_bad_customer = 'bad'"
  },
  {
    "db_id": "products_for_hire",
    "input": "Awesome!  Can you tell me what the date issued is for each of these two coupon_ids? | select date_issued from discount_coupons where coupon_id in ( select discount_coupons.coupon_id from discount_coupons join customers on discount_coupons.coupon_id = customers.coupon_id where customers.good_or_bad_customer = 'good' intersect select discount_coupons.coupon_id from discount_coupons join customers on discount_coupons.coupon_id = customers.coupon_id where customers.good_or_bad_customer = 'bad' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the highest balance? | select max ( balance ) from savings | How about the lowest?",
    "label": "CONFIRM_SQL",
    "output": "select min ( balance ) from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "List all the people with accounts | select name from accounts | And how much money does each one have saved?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( savings.balance ) , accounts.name from accounts join savings on accounts.custid = savings.custid group by accounts.name"
  },
  {
    "db_id": "activity_1",
    "input": "Show all faculty ids | select facid from faculty | faculty Ids  who have at least 2 students",
    "label": "CONFIRM_SQL",
    "output": "select faculty.facid from faculty join student on faculty.facid = student.advisor group by faculty.facid having count ( * ) >= 2"
  },
  {
    "db_id": "activity_1",
    "input": "now what are their major | Do you mean the major of the students whose faculty have at least 2 students? | yes",
    "label": "CONFIRM_SQL",
    "output": "select student.major from faculty join student on faculty.facid = student.advisor group by faculty.facid having count ( * ) >= 2"
  },
  {
    "db_id": "wrestler",
    "input": "what is the average number of days | did you mean the average days held by all wrestlers? | yes",
    "label": "CONFIRM_SQL",
    "output": "select avg ( days_held ) from wrestler"
  },
  {
    "db_id": "wrestler",
    "input": "what is the name of the wrestler with the fewest days held | select name from wrestler order by days_held asc limit 1 | what is the name of the first wrestler id",
    "label": "CLARIFY",
    "output": "did you mean the name of the wrestler with id 1?"
  },
  {
    "db_id": "wrestler",
    "input": "first wrestler | select name from wrestler where wrestler_id = 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "college_2",
    "input": "What are the names of all of the instructors who are advisors? | select instructor.name from advisor join instructor on advisor.i_id = instructor.id | Could you narrow it down to just the names of instructors who are advisors to students from the Math department?",
    "label": "CONFIRM_SQL",
    "output": "select instructor.name from advisor join instructor on advisor.i_id = instructor.id join student on advisor.s_id = student.id where student.dept_name = 'Math'"
  },
  {
    "db_id": "college_2",
    "input": "What are all of their salaries? | select instructor.name , instructor.salary from advisor join instructor on advisor.i_id = instructor.id join student on advisor.s_id = student.id where student.dept_name = 'Math' | What are the names and salaries of the instructors who are advisors to students from the History department?",
    "label": "CONFIRM_SQL",
    "output": "select instructor.name , instructor.salary from advisor join instructor on advisor.i_id = instructor.id join student on advisor.s_id = student.id where student.dept_name = 'History'"
  },
  {
    "db_id": "department_store",
    "input": "can you show a list of customer address? | select customer_address from customers | can you show a list of order date?\n",
    "label": "CONFIRM_SQL",
    "output": "select order_date from customer_orders"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Could you tell me the name of the customer that made the order that had the largest quantity of items in it? | select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id where order_items.order_quantity = ( select max ( order_quantity ) from order_items ) | What dates did they become customers?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , customers.date_became_customer from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id where order_items.order_quantity = ( select max ( order_quantity ) from order_items )"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Can you list the names of all customers who cancelled at least one order as well as the order dates of those cancelled orders? | select customers.customer_name , customer_orders.order_date from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customer_orders.order_status = 'Cancelled' | What are the order quantities and dates for all orders that were paid for with cash?",
    "label": "CONFIRM_SQL",
    "output": "select order_items.order_quantity , customer_orders.order_date from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id where customers.payment_method = 'Cash'"
  },
  {
    "db_id": "club_1",
    "input": "where is the location of club \"Hopkins Student Enterprises\"? | select clublocation from club where clubname = 'Hopkins Student Enterprises' | Show the first name of the \"CTO\" of club \"Hopkins Student Enterprises\" ",
    "label": "CONFIRM_SQL",
    "output": "select student.fname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Hopkins Student Enterprises' and member_of_club.position = 'CTO'"
  },
  {
    "db_id": "club_1",
    "input": "Who is the \"CTO\" of club \"Hopkins Student Enterprises\"? show the first name and the last name. | select student.fname , student.lname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Hopkins Student Enterprises' and member_of_club.position = 'CTO' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "twitter_1",
    "input": "How many tweets are on the topic intern | select count ( * ) from tweets where text like '%intern%' | which tweet has the newest creation date?",
    "label": "CONFIRM_SQL",
    "output": "select * from tweets order by createdate desc limit 1"
  },
  {
    "db_id": "twitter_1",
    "input": "what about the oldest tweet? | select * from tweets order by createdate asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "hr_1",
    "input": "Can you show me all the information for employees who have the letters D or S in their names? | Do you mean first names? | Everything, please. I can see it in the table there. It's correct. Can you order it by salary in descending order?",
    "label": "CLARIFY",
    "output": "Do you mean the employees who have the letters D or S in their first names?"
  },
  {
    "db_id": "hr_1",
    "input": "In their first name, yes. Sorry. I misunderstood. | select * from employees where first_name like '%D%' or first_name like '%S%' | Can you organize the list by salary in descending order?",
    "label": "CONFIRM_SQL",
    "output": "select * from employees where first_name like '%D%' or first_name like '%S%' order by salary desc"
  },
  {
    "db_id": "hr_1",
    "input": "Can you list the first and last names of employees who were hired after 1987? | select first_name , last_name from employees where hire_date > 1987 | What are their salaries? Please order the table in ascending order by salary,",
    "label": "CONFIRM_SQL",
    "output": "select salary from employees where hire_date > 1987 order by salary asc"
  },
  {
    "db_id": "hospital_1",
    "input": "Can you show me how many rooms are there in total? | select count ( * ) from room | How about the total number of block codes?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct blockcode ) from room"
  },
  {
    "db_id": "hospital_1",
    "input": "Can you list them by the number of rooms in decending order? | Do you mean roomnumber? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select blockcode from room order by roomnumber desc"
  },
  {
    "db_id": "inn_1",
    "input": "Did you mean the max occupancies of rooms with bed type Queen? | Yes | What are the bed type of room id RND?",
    "label": "CONFIRM_SQL",
    "output": "select bedtype from rooms where roomid = 'RND'"
  },
  {
    "db_id": "inn_1",
    "input": "What type of decor in room name Abscond or bolster? | select decor from rooms where roomname = 'Abscond or bolster' | Find the max occupancy of bed type Queen?",
    "label": "CONFIRM_SQL",
    "output": "select maxoccupancy from rooms where bedtype = 'Queen'"
  },
  {
    "db_id": "inn_1",
    "input": "Find the average and minimum price of the rooms in different decor. | select decor , avg ( baseprice ) , min ( baseprice ) from rooms group by decor | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "How many events are there?  | select count ( distinct event_id ) from participants_in_events | How many of them had participants whose details had substring \"Dr\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from participants join participants_in_events on participants.participant_id = participants_in_events.participant_id where participants.participant_details like '%Dr.%'"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "What is his name?  | select participant_details from participants join participants_in_events on participants.participant_id = participants_in_events.participant_id where participants.participant_details like '%Dr.%' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "dorm_1",
    "input": "Hello!  Can you list the dorm names of the various different dorms? | select dorm_name from dorm | Thanks!  Can you show me the average age of the students living in each of these dorms?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( student.age ) , dorm.dorm_name from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid group by dorm.dorm_name"
  },
  {
    "db_id": "dorm_1",
    "input": "Thanks!  Now can you add to that list the student capacity of each of those dormitories? | select avg ( student.age ) , dorm.dorm_name , dorm.student_capacity from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid group by dorm.dorm_name | Thanks!",
    "label": "REQUEST_MORE",
    "output": "no problem. anything else?"
  },
  {
    "db_id": "document_management",
    "input": "Hi there!  Can you show me a list of all of the different document names and the associated access count for each of them? | select document_name , access_count from documents | Wonderful!  Can you show me the associated structure code for each of those document names?",
    "label": "CONFIRM_SQL",
    "output": "select document_structure_code from documents"
  },
  {
    "db_id": "document_management",
    "input": "Can you filter that list to show the document name and document structure code with the fewest document structure code entries, or in other words, the least popular structure? | select document_name , document_structure_code from documents where document_structure_code = ( select min ( document_structure_code ) from documents ) | Very nice!  Finally, could you update this list to show the average access count for these two documents?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( access_count ) from documents where document_structure_code = ( select min ( document_structure_code ) from documents ) group by document_name"
  },
  {
    "db_id": "driving_school",
    "input": "What is the date average date of customers' becoming a customer? | Sorry, there is no average for the date. Could you please ask other questions? | What is the date the customer with first name Carole and last Name Bernhard become a customer?",
    "label": "CONFIRM_SQL",
    "output": "select date_became_customer from customers where first_name = 'Carole' and last_name = 'Bernhard'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the amount outstanding for this customer? | select amount_outstanding from customers where first_name = 'Carole' and last_name = 'Bernhard' | What is the customer status code for this customer?",
    "label": "CONFIRM_SQL",
    "output": "select customer_status_code from customers where first_name = 'Carole' and last_name = 'Bernhard'"
  },
  {
    "db_id": "driving_school",
    "input": "What is the date the customer with last name Bernhard become a customer? | select date_became_customer from customers where last_name = 'Bernhard' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "movie_1",
    "input": "Find the movie id of Gone with the Wind? | select mid from movie where title = 'Gone with the Wind' | Which year Star Wars movie is released?",
    "label": "CONFIRM_SQL",
    "output": "select year from movie where title = 'Star Wars'"
  },
  {
    "db_id": "movie_1",
    "input": "Who is directed by The Sound of Music? | select director from movie where title = 'The Sound of Music' | What is the name of the movie produced after 2000 and directed by James Cameron?",
    "label": "CONFIRM_SQL",
    "output": "select title from movie where director = 'James Cameron' and year > 2000"
  },
  {
    "db_id": "e_learning",
    "input": "How many login names are there?\n | Did you mean the login names for all students? | How many login names are there for the students?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct login_name ) from students"
  },
  {
    "db_id": "e_learning",
    "input": "What login name is shared by the students? | select login_name from students | What login name is the same for students and course authors?",
    "label": "CONFIRM_SQL",
    "output": "select login_name from course_authors_and_tutors intersect select login_name from students"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Hi, what are some tourist attractions that tourist visit? | do you want the name  of the tourist attractions  that tourist visit? | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Which tourist attractions did Vincent and Marcelle visit? | select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' intersect select tourist_attractions.name from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Marcelle' | When did they visit parking?",
    "label": "CONFIRM_SQL",
    "output": "select visits.visit_date from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' union select visits.visit_date from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Marcelle'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How did they get to parking? | select tourist_attractions.name , visits.visit_date , tourist_attractions.how_to_get_there from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Vincent' union select tourist_attractions.name , visits.visit_date , tourist_attractions.how_to_get_there from tourist_attractions join visitors join visits on tourist_attractions.tourist_attraction_id = visits.tourist_attraction_id and visitors.tourist_id = visits.tourist_id where visitors.tourist_details = 'Marcelle' | Thanks!\n",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "entrepreneur",
    "input": "Hello! Can you show me a list of all investor names? | select distinct investor from entrepreneur | Can you filter this list to include only the investors that were associated with more than one entrepreneur id?",
    "label": "CONFIRM_SQL",
    "output": "select investor from entrepreneur group by investor having count ( * ) > 1"
  },
  {
    "db_id": "entrepreneur",
    "input": "Can you filter this list to show only the rows associated with money requested that are not between 120000 and 140000? | select investor from entrepreneur where investor in ( select investor from entrepreneur where money_requested > 140000 intersect select investor from entrepreneur where money_requested < 120000 ) group by investor having count ( * ) > 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "music_1",
    "input": "how many artist_name in the song table | select count ( * ) from song | ok i want to highest rating in the song table",
    "label": "CONFIRM_SQL",
    "output": "select rating from song order by rating desc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "how many country in the song table | select count ( distinct country ) from song | how many song_name in the song table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from song"
  },
  {
    "db_id": "news_report",
    "input": "Show the journalists with more than 10 years of working.  | select * from journalist where years_working > 10 | Show the name of journalists with more than 10 years of working and less than 3 years of working. ",
    "label": "CONFIRM_SQL",
    "output": "select name from journalist where years_working > 10 and years_working < 3"
  },
  {
    "db_id": "news_report",
    "input": "List the nations that have journalists with more than 10 years of working and journalists with less than 3 years of working.  | select nationality from journalist where years_working > 10 intersect select nationality from journalist where years_working < 3 | What is the average years of working for journalists from England. ",
    "label": "CONFIRM_SQL",
    "output": "select avg ( years_working ) from journalist where nationality = 'England'"
  },
  {
    "db_id": "news_report",
    "input": "List the names of all journalists from England. | select name from journalist where nationality = 'England' | What is the average age for all journalists from England. ",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) from journalist where nationality = 'England'"
  },
  {
    "db_id": "product_catalog",
    "input": "What are the attribute data types that possessed more than 3 attribute definitions? | select attribute_data_type from attribute_definitions group by attribute_data_type having count ( * ) > 3 | What is bool's attribute name?",
    "label": "CLARIFY",
    "output": "Do you mean the attribute names for attributes whose attribute data type is bool?"
  },
  {
    "db_id": "product_catalog",
    "input": "Yes please | select attribute_name from attribute_definitions where attribute_data_type = 'Bool' | What is the attribute ID for attributes whose data type is bool?",
    "label": "CONFIRM_SQL",
    "output": "select attribute_id from attribute_definitions where attribute_data_type = 'Bool'"
  },
  {
    "db_id": "product_catalog",
    "input": "Is there any other attribute data types apart from bool? | select attribute_data_type from attribute_definitions except select attribute_data_type from attribute_definitions where attribute_data_type = 'Bool' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Did you want the numbers of those apartments? | Yes | Are there any apartments with the bookings status code \"Confirmed\"?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct apartments.apt_number from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What dates are these apartments booked for? | select apartments.apt_number , apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed' | How many of these apartments have 3 bedrooms?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartments where apt_number in ( select distinct apartments.apt_number from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed' ) and bedroom_count = 3"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many bathrooms are in each of these apartments? | select bathroom_count from apartments where apt_number in ( select distinct apartments.apt_number from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Confirmed' ) and bedroom_count = 3 | Can you show me a list of apartments with the booking status of \"Provisional\"?",
    "label": "CONFIRM_SQL",
    "output": "select distinct apartments.apt_number from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Provisional'"
  },
  {
    "db_id": "movie_1",
    "input": "Find the names of all directors whose movies are rated by Sarah Martinez | select distinct movie.director from rating join movie on rating.mid = movie.mid join reviewer on rating.rid = reviewer.rid where reviewer.name = 'Sarah Martinez' | list the other directors against the movies they directed.",
    "label": "CONFIRM_SQL",
    "output": "select director , title from movie where director != 'Victor Fleming'"
  },
  {
    "db_id": "movie_1",
    "input": "what is the general ratings for those movies? | select movie.director , movie.title , rating.stars from movie join rating on movie.mid = rating.mid where movie.mid in ( select mid from movie where director != 'Victor Fleming' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "small_bank_1",
    "input": "Can you show me the names and total checking and savings account balances? | select accounts.name , checking.balance + savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid | I want to know the average savings balance of all accounts.",
    "label": "CONFIRM_SQL",
    "output": "select avg ( balance ) from savings"
  },
  {
    "db_id": "small_bank_1",
    "input": "Hmm, can you list the names of customers whose savings account balances are higher than the average savings balance? | select accounts.name from accounts join savings on accounts.custid = savings.custid where savings.balance > ( select avg ( balance ) from savings ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "browser_web",
    "input": "what is the Id of the browser that is compatible with most web accelerators? | select browser.id from browser join accelerator_compatible_browser on browser.id = accelerator_compatible_browser.browser_id group by browser.id order by count ( * ) desc limit 1 | What is the name of browser with id 1?",
    "label": "CONFIRM_SQL",
    "output": "select name from browser where id = 1"
  },
  {
    "db_id": "browser_web",
    "input": "What is the name of the browser with the second largest market share? | select name from browser order by market_share asc limit 2 | Which browser name has the earliest compatible since year?",
    "label": "CONFIRM_SQL",
    "output": "select browser.name from browser join accelerator_compatible_browser on browser.id = accelerator_compatible_browser.browser_id order by compatible_since_year asc limit 1"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What  attraction type do most tourist attractions belong to? | Did  you want  to  know the attraction type that most tourist attractions belong to? code  or  description? | Yes, can you give me the codes please?\n",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.attraction_type_code from ref_attraction_types join tourist_attractions on ref_attraction_types.attraction_type_code = tourist_attractions.attraction_type_code group by tourist_attractions.attraction_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What is its description?\n | Did  you  also  want  to konw  the description the attraction type most tourist attractions belong to? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select ref_attraction_types.attraction_type_description from ref_attraction_types join tourist_attractions on ref_attraction_types.attraction_type_code = tourist_attractions.attraction_type_code group by tourist_attractions.attraction_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "List the names of the attractions which belong to gallery type\n | Did   you  mean  all  the names? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name from ref_attraction_types join tourist_attractions on ref_attraction_types.attraction_type_code = tourist_attractions.attraction_type_code where attraction_type_description = 'gallery'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How many gallery type attractions are there? | Can   you  give  more  info  about  this  ? | How many attractions belong to gallery type?\n",
    "label": "CONFIRM_SQL",
    "output": "SELECT count(*) FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code where Attraction_Type_Description = \"gallery\""
  },
  {
    "db_id": "cre_Theme_park",
    "input": "There are 5 attractions that belong to the attraction type gallery. | What are the opening hours of the haunted mansion? | select opening_hours from tourist_attractions where name = 'haunted mansion'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "hr_1",
    "input": "What are the first and last name for those employees who works either in department  70 or 90? | select first_name , last_name from employees where department_id = 70 or department_id = 90 | Please show me the list of the department ",
    "label": "CONFIRM_SQL",
    "output": "select distinct department_id from employees"
  },
  {
    "db_id": "hr_1",
    "input": "Who make  the highest  salary  on the department? | select first_name , last_name from employees order by salary desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye!"
  },
  {
    "db_id": "city_record",
    "input": "Find the cities which were once a host city after 2009? | select city.city from city join hosting_city on city.city_id = hosting_city.host_city where hosting_city.year > 2009 | How many cities in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct city ) from city"
  },
  {
    "db_id": "city_record",
    "input": "Find average GDP of this table? | select avg ( gdp ) from city | Most GDP in this table?",
    "label": "CLARIFY",
    "output": "Do  you  mean  the max  GDP"
  },
  {
    "db_id": "city_record",
    "input": "Yes. | select max ( gdp ) from city | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the names of the students who live in the city with code HKG? | Do  you  mean the full name | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where city_code = 'HKG'"
  },
  {
    "db_id": "dorm_1",
    "input": "Who are not living in that city with code HKG? | select fname , lname from student where city_code != 'HKG' | What is the average age of those who don't live in that city?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) from student where city_code != 'HKG'"
  },
  {
    "db_id": "solvency_ii",
    "input": "How many products in this table? | select count ( * ) from products | How many Product events in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from products_in_events"
  },
  {
    "db_id": "solvency_ii",
    "input": "Show the names of products that are in at least 3 events? | select products.product_name from products join products_in_events on products.product_id = products_in_events.product_id group by products.product_name having count ( * ) >= 3 | Find the top price?",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products order by product_price desc limit 1"
  },
  {
    "db_id": "solvency_ii",
    "input": "find average of the price? | select avg ( product_price ) from products | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "dorm_1",
    "input": "Please show me the information of all students who are under 25 years old | select * from student where age < 25 | and of those, please now just show the female students",
    "label": "CONFIRM_SQL",
    "output": "select * from student where sex = 'F' and age < 25"
  },
  {
    "db_id": "dorm_1",
    "input": "Please return a count of how many there are left | I don't understand. Do you mean the count of students not in the previous result? | Only those in the previous results",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where sex = 'F' and age < 25"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "What is the card type with the most number of cards? | select card_type_code from customers_cards group by card_type_code order by count ( * ) desc limit 1 | And the one with the least number of cards?",
    "label": "CONFIRM_SQL",
    "output": "select card_type_code from customers_cards group by card_type_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "How many cards are credit cards? | select count ( * ) from customers_cards where card_type_code = 'Credit' | How many customers have credit cards?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers_cards where card_type_code = 'Credit'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the staff ID of the staff with the first name Christop? | select staff_id from staff where staff_first_name = 'Christop' | How many problems have been reported under staff ID 10?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_id = '10'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Can you give me a list of the problem descriptions he reported? | select problems.problem_description from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_first_name = 'Christop' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "train_station",
    "input": "Find the total passengers of London Waterloo? | select total_passengers from station where name = 'London Waterloo' | How many Number of Platforms in station id 2?",
    "label": "CONFIRM_SQL",
    "output": "select number_of_platforms from station where station_id = 2"
  },
  {
    "db_id": "train_station",
    "input": "What are the Main Services of station id 3? | select main_services from station where station_id = 3 | Show all locations which don't have a train station with at least 15 platforms.",
    "label": "CONFIRM_SQL",
    "output": "select location from station except select location from station where number_of_platforms >= 15"
  },
  {
    "db_id": "dorm_1",
    "input": "Can you list the number of amenity ids associated with each distinct dorm id and display both of those results (dorm id and number of amenity ids)? | select dorm.dormid , count ( has_amenity.amenid ) from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid group by dorm.dormid | Wonderful, can you remove that information and instead display every student id that has a dorm id of 160?",
    "label": "CONFIRM_SQL",
    "output": "select student.stuid from student join lives_in on student.stuid = lives_in.stuid where lives_in.dormid = 160"
  },
  {
    "db_id": "dorm_1",
    "input": "Can you show only the first names? | select student.fname from student join lives_in on student.stuid = lives_in.stuid where lives_in.dormid = 160 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome! Bye."
  },
  {
    "db_id": "hr_1",
    "input": "What are the employees whose first name does not containing the letter M? | select first_name from employees where first_name not like '%M%' | Display the full name , hire date , salaer, and  department member of the above results.\n",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name , hire_date , salary , department_id from employees where first_name not like '%M%'"
  },
  {
    "db_id": "hr_1",
    "input": "Sort the results in ascending order by department. number. | select first_name , last_name , hire_date , salary , department_id from employees where first_name not like '%M%' order by department_id asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you. Good bye."
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are the lot details of lots associated with transactions whose share count is bigger than 100 and whose type code is \"PUR\"? | select lots.lot_details from lots join transactions_lots on lots.lot_id = transactions_lots.transaction_id join transactions on transactions_lots.transaction_id = transactions.transaction_id where transactions.share_count > 100 and transactions.transaction_type_code = 'PUR' | Which has the highest amount of transaction? ",
    "label": "CONFIRM_SQL",
    "output": "select lots.lot_details from lots join transactions_lots on lots.lot_id = transactions_lots.transaction_id join transactions on transactions_lots.transaction_id = transactions.transaction_id where transactions.share_count > 100 and transactions.transaction_type_code = 'PUR' order by transactions.amount_of_transaction desc limit 1"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what was the date of that transaction?\n | select transactions.date_of_transaction from lots join transactions_lots on lots.lot_id = transactions_lots.transaction_id join transactions on transactions_lots.transaction_id = transactions.transaction_id where transactions.share_count > 100 and transactions.transaction_type_code = 'PUR' order by transactions.amount_of_transaction desc limit 1 | what that a sale or purchase?",
    "label": "CLARIFY",
    "output": "Sorry, I do not understand."
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What  transaction type code did that have?\n | select transactions.transaction_type_code from lots join transactions_lots on lots.lot_id = transactions_lots.transaction_id join transactions on transactions_lots.transaction_id = transactions.transaction_id where transactions.share_count > 100 and transactions.transaction_type_code = 'PUR' order by transactions.amount_of_transaction desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "List out projects which did not hire staff for researcher role ?\n | select project_id from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher' ) | what is the role of the project id 5?",
    "label": "CONFIRM_SQL",
    "output": "select role_code from project_staff where project_id = 5"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you tell me the role of project id 1 ? | select role_code from project_staff where project_id = 1 | List out projects which has staff for researcher role ?",
    "label": "CONFIRM_SQL",
    "output": "select project_id from project_staff where role_code = 'researcher'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you tell me the organization id for the project id 1 ? | select organisation_id from projects where project_id = 1 | can you tell me the staff id of the project which did not have researcher role ?",
    "label": "CONFIRM_SQL",
    "output": "select project_staff.staff_id from project_staff join projects where project_staff.project_id not in ( select project_id from project_staff where role_code = 'researcher' )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "tell me project details about the project id 1 ? | select project_details from projects where project_id = 1 | List out total number of projects which has no staff for researcher role ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher' )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "List the project details of the projects which did not hire any staff for a researcher role ? | select project_details from projects where project_id not in ( select project_id from project_staff where role_code = 'researcher' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye!"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "How many services has each resident requested?\n | select residents.resident_id , count ( * ) from residents join residents_services on residents.resident_id = residents_services.resident_id group by residents.resident_id order by count ( * ) desc | Can you list them in descending order?",
    "label": "CONFIRM_SQL",
    "output": "select residents.resident_id , count ( * ) from residents join residents_services on residents.resident_id = residents_services.resident_id group by residents.resident_id order by count ( * ) desc"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Can you list the residents by the count of services in descending order by count of services?\n | Do you just want the resident ids?  | The resident_id and count of services\n",
    "label": "CONFIRM_SQL",
    "output": "select residents.resident_id , count ( * ) from residents join residents_services on residents.resident_id = residents_services.resident_id group by residents.resident_id order by count ( * ) desc"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "Can you add the resident other detail to the results?\n | select residents.resident_id , residents.other_details , count ( * ) from residents join residents_services on residents.resident_id = residents_services.resident_id group by residents.resident_id order by count ( * ) desc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "student_1",
    "input": "How many teachers in this table? | select count ( * ) from teachers | Find the grade of MAUDE?",
    "label": "REQUEST_MORE",
    "output": "Do you mean the students with the first name MAUDE"
  },
  {
    "db_id": "student_1",
    "input": "Yes. | select grade from list where firstname like '%MAUDE%' | Find the last name of Mr.STORMY",
    "label": "REQUEST_MORE",
    "output": "Is he a student or teacher?"
  },
  {
    "db_id": "student_1",
    "input": "Student. | select lastname from list where firstname like '%STORMY%' | How many students in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from list"
  },
  {
    "db_id": "election",
    "input": "how many zip codes in the county table | select count ( zip_code ) from county | thanks",
    "label": "REQUEST_MORE",
    "output": "Do  you  have  other  question"
  },
  {
    "db_id": "election",
    "input": "how many county id in the county table | select count ( county_id ) from county | thanks",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "network_2",
    "input": "How many students are there? | select count ( * ) from person where job = 'student' | How many persons are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person"
  },
  {
    "db_id": "network_2",
    "input": "How many friends are there? | select count ( distinct friend ) from personfriend | How many of them are friends with Bob?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "What is their name? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob' | Who is Bob's friend?",
    "label": "CONFIRM_SQL",
    "output": "select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "What person has Zach as a friend? | select person.name from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Zach' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "music_1",
    "input": "What is the longest duration? | select duration from files order by duration desc limit 1 | What is the shortest duration?",
    "label": "CONFIRM_SQL",
    "output": "select duration from files order by duration asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "How many songs have a short duration less than 4 minutes?\n | select count ( * ) from files where duration < 4 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, good bye. Do you have any more questions? "
  },
  {
    "db_id": "music_4",
    "input": "Did you mean the issue date of his first song? | Yes | Hi, can you tell me in what year did the artist Gorgoroth release his first song?",
    "label": "CONFIRM_SQL",
    "output": "select volume.issue_date from artist join volume on artist.artist_id = volume.artist_id where artist.artist = 'Gorgoroth' order by volume.issue_date asc limit 1"
  },
  {
    "db_id": "music_4",
    "input": "what is the name of the song? | select volume.song from artist join volume on artist.artist_id = volume.artist_id where artist.artist = 'Gorgoroth' order by volume.issue_date asc limit 1 | Great, what is the issue dates of all volumes of the artist \"Gorgoroth\"",
    "label": "CONFIRM_SQL",
    "output": "select volume.issue_date from artist join volume on artist.artist_id = volume.artist_id where artist.artist = 'Gorgoroth'"
  },
  {
    "db_id": "college_2",
    "input": "Hello!  Can you show me a list of all course IDs? | select course_id from takes | Wow that's a lot!  Can you update that list to show me the semester and year which have the fewest number of students taking any class?",
    "label": "CONFIRM_SQL",
    "output": "select semester , year from takes group by semester , year order by count ( * ) asc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "Excellent!  Can you update this list to show many total classes were taken in Fall of 2008? | Do you mean how many total classes were taken in Fall of 2008? | Yes!  That is what I meant!  Sorry!  How many total classes were taken in Fall of 2008?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from takes where semester = 'Fall' and year = '2008'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What is the name of the city the student by the name of Linda Smith is from? | Do you mean the code of the city? since we don't have the name of cities. | Yes, please",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student where fname = 'Linda' and lname = 'Smith'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What are the first and last names of all students with the sex \"F\"? | select fname , lname from student where sex = 'F' | What are their city codes?",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student where sex = 'F'"
  },
  {
    "db_id": "restaurant_1",
    "input": "What is the name of the oldest student? | select fname , lname from student order by age desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye."
  },
  {
    "db_id": "wine_1",
    "input": "Which wine uses Cabernet Franc grapes | select wine.name from grapes join wine on grapes.grape = wine.grape where grapes.grape = 'Cabernet Franc' | What are the wines that have prices higher than 50?",
    "label": "CONFIRM_SQL",
    "output": "select wine.* from grapes join wine on grapes.grape = wine.grape where wine.price > 50"
  },
  {
    "db_id": "wine_1",
    "input": "What grapes are red color? | select grape from grapes where color = 'Red' | Among the wines that have prices higher than 50, which ones use red color grapes?",
    "label": "CONFIRM_SQL",
    "output": "select wine.name from grapes join wine on grapes.grape = wine.grape where grapes.color = 'Red' and wine.price > 50"
  },
  {
    "db_id": "farm",
    "input": "Hello there!  Can you show me a list of all of the city names in the database? | Did you mean the official name of all the town and village in the database? | Sure!  On my end I'm seeing that the first table is labeled \"City\", but if these are towns and villages then I'd like to see what you are suggesting!  Thanks!",
    "label": "CONFIRM_SQL",
    "output": "select official_name from city"
  },
  {
    "db_id": "farm",
    "input": "Thank you for that!  Can you update this list to show me the totals for how many competitions each of these have hosted? | select city.official_name , count ( * ) as number_competition from city join farm_competition on city.city_id = farm_competition.host_city_id group by farm_competition.host_city_id order by count ( * ) asc | Perfect!  Can you filter the list to show only the entry with the largest number of competitions hosted?",
    "label": "CONFIRM_SQL",
    "output": "select city.official_name , count ( * ) as number_competition from city join farm_competition on city.city_id = farm_competition.host_city_id group by farm_competition.host_city_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "I'm looking for a patient.  | What feature do you want? | I want to know their room number. ",
    "label": "CONFIRM_SQL",
    "output": "select room from stay"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the patient's name in room 111? | select patient.name from stay join patient where stay.patient = patient.ssn and stay.room = 111 | Does John Smith have any allergies? He is taking any medications?",
    "label": "CONFIRM_SQL",
    "output": "select prescribes.patient , count ( * ) from stay join patient join prescribes where prescribes.patient = patient.ssn and patient.name = 'John Smith'"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the name and dose of the medication? | select distinct medication.name , prescribes.dose from stay join patient on stay.patient = patient.ssn join prescribes on prescribes.patient = patient.ssn join medication on prescribes.medication = medication.code where patient.name = 'John Smith' | When were they prescribed Procrastin-X ?",
    "label": "CONFIRM_SQL",
    "output": "select prescribes.date from prescribes join medication where medication.name = 'Procrastin-X' and medication.code = prescribes.medication"
  },
  {
    "db_id": "allergy_1",
    "input": "thanks! | goodbye! | how many female students presented on table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where sex = 'F'"
  },
  {
    "db_id": "allergy_1",
    "input": "what is the age of smith | Do you mean the age of the student whose last name is Smith? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select age from student where lname = 'Smith'"
  },
  {
    "db_id": "allergy_1",
    "input": "who is the highest advisor | Sorry. Do you mean which student has an advisor with largest id? And do you need that student's first name or last name? | yeah correct",
    "label": "CLARIFY",
    "output": "So do you need the first name or last name?"
  },
  {
    "db_id": "allergy_1",
    "input": "exactly | I mean which one do you want to know, first name or last name or both? | i want first name",
    "label": "CONFIRM_SQL",
    "output": "select fname from student order by advisor desc limit 1"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Can you provide a count of assessment notes by teacher id? | select assessment_notes.teacher_id , count ( * ) from assessment_notes join teachers on assessment_notes.teacher_id = teachers.teacher_id group by assessment_notes.teacher_id | For that table, can you sort by descending count?",
    "label": "CONFIRM_SQL",
    "output": "select assessment_notes.teacher_id , count ( * ) from assessment_notes join teachers on assessment_notes.teacher_id = teachers.teacher_id group by assessment_notes.teacher_id order by count ( * ) desc"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Can you left join the Assessment Notes table with the Teachers table on teacher_id?  | select * from assessment_notes join teachers on assessment_notes.teacher_id = teachers.teacher_id | For the earlier table with sorted counts, can you give me the first name associted with each teacher_id?",
    "label": "CONFIRM_SQL",
    "output": "select teachers.first_name , assessment_notes.teacher_id , count ( * ) from assessment_notes join teachers on assessment_notes.teacher_id = teachers.teacher_id group by assessment_notes.teacher_id order by count ( * ) desc"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Okay, give me the first three records from this table. | select assessment_notes.teacher_id , teachers.first_name , count ( * ) from assessment_notes join teachers on assessment_notes.teacher_id = teachers.teacher_id group by assessment_notes.teacher_id order by count ( * ) desc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "perpetrator",
    "input": "How many countries are there on the list? | select count ( country ) from perpetrator | Can you list the name of the countries that have perpetrators with injures more than 50?",
    "label": "CONFIRM_SQL",
    "output": "select country from perpetrator where injured > 50"
  },
  {
    "db_id": "perpetrator",
    "input": "Can you also include the name of the contries that have perpetrators with injures smaller than 20? | select country from perpetrator where injured < 20 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "perpetrator",
    "input": "What are the names of the perpetrators in the country China? | select people.name from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'China' | What are the names of the perpetrators in the country Japan?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'Japan'"
  },
  {
    "db_id": "perpetrator",
    "input": "What are the heights of all the perpetrators in Japan and China? | select people.height from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'China' or perpetrator.country = 'Japan' | What are the weights of all the perpetrators from South Korea?",
    "label": "CONFIRM_SQL",
    "output": "select people.weight from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'South Korea'"
  },
  {
    "db_id": "perpetrator",
    "input": "What are the home towns of all the perpetrators from the United States? | select people.'Home Town' from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'United States' | What are the home towns of all the perpetrators from the USA?",
    "label": "CONFIRM_SQL",
    "output": "select people.'Home Town' from people join perpetrator on people.people_id = perpetrator.people_id where perpetrator.country = 'USA'"
  },
  {
    "db_id": "wrestler",
    "input": "What are names of all the wrestlers? | select name from wrestler | And what about teams in elimination? ",
    "label": "CONFIRM_SQL",
    "output": "select team from elimination"
  },
  {
    "db_id": "wrestler",
    "input": "Can I see a list with wrestler names and teams in elimination in descending order based on days held? | select wrestler.name , elimination.team from elimination join wrestler on elimination.wrestler_id = wrestler.wrestler_id order by wrestler.days_held desc | Thanks!",
    "label": "WELCOME",
    "output": "Sure. Bye!"
  },
  {
    "db_id": "browser_web",
    "input": "Can you tell me the names of all compatible browsers and accelerators? | select browser.name , web_client_accelerator.name from accelerator_compatible_browser join browser on accelerator_compatible_browser.browser_id = browser.id join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id | Can you also show their compatible years?",
    "label": "CONFIRM_SQL",
    "output": "select browser.name , web_client_accelerator.name , accelerator_compatible_browser.compatible_since_year from accelerator_compatible_browser join browser on accelerator_compatible_browser.browser_id = browser.id join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id"
  },
  {
    "db_id": "browser_web",
    "input": "Hmm, can you list the names of all compatible browsers and accelerators in the descending order of compatible year? | select browser.name , web_client_accelerator.name from accelerator_compatible_browser join browser on accelerator_compatible_browser.browser_id = browser.id join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id order by accelerator_compatible_browser.compatible_since_year desc | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "department_store",
    "input": "Hello!  Can you provide me with a list of all Job Title Codes present on this list? | select job_title_code from staff_department_assignments | Great!  Can you please show me a list of Staff IDs for those who have the job_title_code of Department Manager?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_id from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Department Manager'"
  },
  {
    "db_id": "department_store",
    "input": "Great!  Now can you update this list to include the genders of all of these individuals? | select staff.staff_id , staff.staff_gender from staff join staff_department_assignments on staff.staff_id = staff_department_assignments.staff_id where staff_department_assignments.job_title_code = 'Department Manager' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "shop_membership",
    "input": "What are the names for the top three membership branches | select name from branch order by membership_amount desc limit 3 | How many memberships do these branches have?",
    "label": "CONFIRM_SQL",
    "output": "select membership_amount from branch order by membership_amount desc limit 3"
  },
  {
    "db_id": "shop_membership",
    "input": "What years did the branches open? | select open_year from branch order by membership_amount desc limit 3 | What are the addresses for these three branches?",
    "label": "CONFIRM_SQL",
    "output": "select address_road from branch order by membership_amount desc limit 3"
  },
  {
    "db_id": "shop_membership",
    "input": "Which address has the most memberships? | select address_road from branch order by membership_amount desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "architecture",
    "input": "Hi there!  Can you show me the name of the architect who built the most mills? | select architect.name from architect join mill on architect.id = mill.architect_id group by architect.id order by count ( * ) desc limit 1 | Awesome!  Can you update this list to also include the architect ID and nationality of this individual?",
    "label": "CONFIRM_SQL",
    "output": "select architect.id , architect.name , architect.nationality from architect join mill on architect.id = mill.architect_id group by architect.id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "architecture",
    "input": "Thank you!  Can you please show me a list of all of the mill names that were built by Frank Lloyd Wright? | select mill.name from architect join mill on architect.id = mill.architect_id where architect.name = 'Frank Lloyd Wright' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "club_1",
    "input": "What is the average age of students? | select avg ( age ) from student | And what is the average gender wise?",
    "label": "CLARIFY",
    "output": "sorry,i cant understand your question"
  },
  {
    "db_id": "club_1",
    "input": "What is the average age of students as per the \"Sex\" of the students? | select sex , avg ( age ) from student group by sex | How many Students are below the age of 17?",
    "label": "CONFIRM_SQL",
    "output": "select count ( stuid ) from student where age < 17"
  },
  {
    "db_id": "club_1",
    "input": "How many students have the same Fname?  | select count ( stuid ) from student where fname in ( select fname from student group by fname having count ( * ) > 1 ) | How many clubs are located in city code \"AKW\"",
    "label": "CONFIRM_SQL",
    "output": "select count ( clubid ) from club where clublocation = 'AKW'"
  },
  {
    "db_id": "club_1",
    "input": "and how many in city code \"HHH\" | select count ( clubid ) from club where clublocation = 'HHH' | Thanks",
    "label": "WELCOME",
    "output": "welcome，goodbye"
  },
  {
    "db_id": "ship_1",
    "input": "What are the ships that are steered by a captain with Midshipman rank? | select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Midshipman' | What are the ships that are steered by a captain with Lieutenant rank?",
    "label": "CONFIRM_SQL",
    "output": "select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Lieutenant'"
  },
  {
    "db_id": "ship_1",
    "input": "Are there any captains that are included in both lists? | Did you mean ships that are included in both lists? | Oh sorry, yes ships that are included in both lists",
    "label": "CONFIRM_SQL",
    "output": "select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Midshipman' intersect select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.rank = 'Lieutenant'"
  },
  {
    "db_id": "activity_1",
    "input": "Do you mean the FacID of First name 'Gerald'? | Yes | what is the average number of faculty members?",
    "label": "CLARIFY",
    "output": "Do you mean the average number of FacID?"
  },
  {
    "db_id": "activity_1",
    "input": "yes\n | select avg ( facid ) from faculty | Which rank has the highest number of faculty members?",
    "label": "CONFIRM_SQL",
    "output": "select rank from faculty group by rank order by count ( * ) desc limit 1"
  },
  {
    "db_id": "activity_1",
    "input": "How many ranks have professors | select count ( * ) from faculty where rank = 'Professor' | What is the FacID of Gerald",
    "label": "CONFIRM_SQL",
    "output": "select facid from faculty where fname like '%Gerald%'"
  },
  {
    "db_id": "gas_company",
    "input": "find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts. | select gas_station.location , gas_station.representative_name from station_company join company on station_company.company_id = company.company_id join gas_station on station_company.station_id = gas_station.station_id order by company.assets_billion desc limit 3 | What is the representative name of Newport Rd?",
    "label": "CONFIRM_SQL",
    "output": "select representative_name from gas_station where location = 'Newport Rd'"
  },
  {
    "db_id": "gas_company",
    "input": "If there are three representatives and we already named Clive Burr and Time Read, who is the third representative? | I cannot answer your question because there are too many representative names. Could you please clarify your question? | Find the location and Representative name of the gas stations owned by the companies with top 3 Asset amounts.",
    "label": "CONFIRM_SQL",
    "output": "select gas_station.location , gas_station.representative_name from station_company join company on station_company.company_id = company.company_id join gas_station on station_company.station_id = gas_station.station_id order by company.assets_billion desc limit 3"
  },
  {
    "db_id": "gas_company",
    "input": "What gas station is the oldest one based on open year | Which kind of information about this gas station do you want? | Which gas station location is the oldest based on its open year.",
    "label": "CONFIRM_SQL",
    "output": "select location from gas_station order by open_year asc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What are all the contract ids | select maintenance_contract_id from maintenance_contracts | Can I also get the numbers of assets for each of these contracts",
    "label": "CONFIRM_SQL",
    "output": "select maintenance_contracts.maintenance_contract_id , assets.asset_id from maintenance_contracts join assets on maintenance_contracts.maintenance_contract_id = assets.maintenance_contract_id"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What I meant was the asset counts for each of these contracts | select count ( * ) , maintenance_contracts.maintenance_contract_id from maintenance_contracts join assets on maintenance_contracts.maintenance_contract_id = assets.maintenance_contract_id group by maintenance_contracts.maintenance_contract_id | Thanks",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "railway",
    "input": "Can you find the name and age of the oldest manager? | select name , age from manager order by age desc limit 1 | What year did Todd Hamilton start working?",
    "label": "CONFIRM_SQL",
    "output": "select working_year_starts from manager where name = 'Todd Hamilton'"
  },
  {
    "db_id": "railway",
    "input": "What is the name and country of the second youngest manager? | select name , country , age from manager order by age asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "book_2",
    "input": "What are the prices of the 3 lowest publications? | select price from publication order by price asc limit 3 | And who are the publishers of the 3 lowest priced publications?",
    "label": "CONFIRM_SQL",
    "output": "select publisher from publication order by price asc limit 3"
  },
  {
    "db_id": "book_2",
    "input": "What are the publication dates of the 3 lowest priced publications? | select publication_date from publication order by price asc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "which order has high quantity | select order_id , from order_items group by order_id order by sum ( order_quantity ) desc limit 1 | how many types of products have rodrick heaney bought in total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct order_items.product_id ) from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id where customers.customer_name = 'Rodrick Heaney'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "why the order was cancelled | Sorry, this question can be answered from the table. Do you want to know something else?  | which person had order high amount of products",
    "label": "CLARIFY",
    "output": "What attributes do you want to know about the customer who ordered the highest amount of products? "
  },
  {
    "db_id": "customers_and_addresses",
    "input": "I want everything about it. | select customers.* from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on customer_orders.order_id = order_items.order_id group by customer_orders.customer_id order by sum ( order_items.order_quantity ) desc limit 1 | THANKS! GOODBYE",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "college_2",
    "input": "what is the budget for chandler? | select budget from department where building = 'Chandler' | how many departments are in table?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from department"
  },
  {
    "db_id": "college_2",
    "input": "how many buildings are available? | select count ( distinct building ) from department | which department is managed by taylor?",
    "label": "CONFIRM_SQL",
    "output": "select dept_name from department where building = 'Taylor'"
  },
  {
    "db_id": "college_2",
    "input": "how much budget is taking biology department? | select budget from department where dept_name = 'Biology' | how many buildings are managed by taylor?",
    "label": "SORRY",
    "output": "Sorry, this question can not be answered given the table information. (Taylor is the building name). "
  },
  {
    "db_id": "college_2",
    "input": "ok | Thank you, would you like to know more information?  | no",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Can you show me a list of all of the lots that belong to category 'i' within the 'lot details' column? | select * from lots where lot_details = 'i' | My apologies!  I mean ask for \"l\" or lower-case L...  Therefore, can you list the lots that belong to category \"l\" in the 'lot details' column?",
    "label": "CONFIRM_SQL",
    "output": "select * from lots where lot_details = 'l'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Oh sorry!  I am all mixed up!  Third time's a charm!  Can you provide me with the lot details for all lots that belong to investors which belong to the 'investor id' category of \"l\"? | select lots.lot_details from investors join lots on investors.investor_id = lots.investor_id where investors.investor_details = 'l' | Excellent! Can you list the investor IDs that correspond to each of these lot_details?",
    "label": "CONFIRM_SQL",
    "output": "select investors.investor_id , lots.lot_details from investors join lots on investors.investor_id = lots.investor_id where investors.investor_details = 'l'"
  },
  {
    "db_id": "school_finance",
    "input": "Do you mean the enrollment school with the mascot Lions? | Yes! | what is the location of School id 1",
    "label": "CONFIRM_SQL",
    "output": "select location from school where school_id = 1"
  },
  {
    "db_id": "school_finance",
    "input": "What is the amount for donator name Distrito Nacional? | select amount from endowment where donator_name = 'Distrito Nacional' | what is the Enrollment for Lions?",
    "label": "CONFIRM_SQL",
    "output": "select enrollment from school where mascot = 'Lions'"
  },
  {
    "db_id": "college_2",
    "input": "Tell me title name for all course ids.... | select course_id , title from course | Tell me the name of the instructor who getting high salary...And tell his department name too...",
    "label": "CLARIFY",
    "output": "How do you define a high salary? "
  },
  {
    "db_id": "college_2",
    "input": "Higher than 80000..... | select name from instructor where salary > 80000 | Find the name of the instructors who taught C programming course before..",
    "label": "CONFIRM_SQL",
    "output": "select instructor.name from instructor join teaches on instructor.id = teaches.id join course on teaches.course_id = course.course_id where course.title = 'C Programming'"
  },
  {
    "db_id": "party_host",
    "input": "whats the average age of the hosts? | select avg ( age ) from host | and what percentage of those are from the united states?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from host where nationality = 'United States'"
  },
  {
    "db_id": "party_host",
    "input": "and how many of those 8 hosts are younger than 40? | select count ( * ) from host where nationality = 'United States' and age < 40 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "roller_coaster",
    "input": "Hi! How are you?  Can you show me a list of all of the country names? | select name from country | Great!  Can you update this list to include the average roller coaster speed for each of these three countries?",
    "label": "CONFIRM_SQL",
    "output": "select country.name , avg ( roller_coaster.speed ) from country join roller_coaster on country.country_id = roller_coaster.country_id group by country.name"
  },
  {
    "db_id": "roller_coaster",
    "input": "Thank you for that!  Would you be able to show me the roller coaster names associated with just Sweden? | select roller_coaster.name from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Sweden' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,good_bye"
  },
  {
    "db_id": "inn_1",
    "input": "What are the names of the top 3 expensive rooms? | select roomname from rooms order by baseprice desc limit 3 | What are the bed types of those rooms?",
    "label": "CONFIRM_SQL",
    "output": "select bedtype from rooms order by baseprice desc limit 3"
  },
  {
    "db_id": "inn_1",
    "input": "What are the bed types of the three least expensive rooms? | select bedtype from rooms order by baseprice asc limit 3 | What are the ids of the top 3 expensive rooms?",
    "label": "CONFIRM_SQL",
    "output": "select roomid from rooms order by baseprice desc limit 3"
  },
  {
    "db_id": "inn_1",
    "input": "What are the ids of the three least expensive rooms? | select roomid from rooms order by baseprice asc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "Okay.  Sorry about that.  Can you please list all of the customer IDs for which the customer has more than one card? | select customer_id from customers_cards group by customer_id having count ( * ) > 1 | Can you please update that list to show the total number of cards that each of these customers has?",
    "label": "CONFIRM_SQL",
    "output": "select customer_id , count ( * ) from customers_cards group by customer_id having count ( * ) > 1"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "Is it correct to say that the customer with the most number of cards is actually these 4 customers? | select customer_id , count ( * ) from customers_cards group by customer_id desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Bye"
  },
  {
    "db_id": "swimming",
    "input": "What countries own stadiums? | select country from stadium group by country having count ( * ) >= 1 | how many cities have stadiums?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct city ) from stadium"
  },
  {
    "db_id": "swimming",
    "input": "What country has at max 3 stadiums? | select country from stadium group by country having count ( * ) <= 3 | Thanks",
    "label": "WELCOME",
    "output": "you are welcome! do you have anything else?"
  },
  {
    "db_id": "chinook_1",
    "input": "how many customers live in germany and have invoice | select count ( * ) from customer join invoice on customer.customerid = invoice.customerid where customer.country = 'Germany' | can you find the address of all these customers",
    "label": "INFORM_SQL",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "chinook_1",
    "input": "select customer.address from customer join invoice on customer.customerid = invoice.customerid where customer.country = 'Germany' | include the first and last name of customers of this address in the table | select customer.address , customer.firstname , customer.lastname from customer join invoice on customer.customerid = invoice.customerid where customer.country = 'Germany'",
    "label": "THANK_YOU",
    "output": "thanks"
  },
  {
    "db_id": "allergy_1",
    "input": "How many different types of allergies are there? | select count ( distinct allergy ) from has_allergy | What allergy is most prevalent among students?",
    "label": "CONFIRM_SQL",
    "output": "select allergy from student join has_allergy on student.stuid = has_allergy.stuid group by allergy order by count ( * ) desc limit 1"
  },
  {
    "db_id": "allergy_1",
    "input": "How many male students have a tree pollen allergy? | select count ( * ) from student join has_allergy on student.stuid = has_allergy.stuid where allergy = 'Tree Pollen' and student.sex = 'M' | How many students have a soy allergy?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where stuid in ( select stuid from has_allergy where allergy = 'Soy' )"
  },
  {
    "db_id": "allergy_1",
    "input": "How many students don't have a soy allergy? | select count ( * ) from student where stuid not in ( select stuid from has_allergy where allergy = 'Soy' ) | Can you list them for me with their names and majors?",
    "label": "CLARIFY",
    "output": "First name?"
  },
  {
    "db_id": "allergy_1",
    "input": "Yes please. First name and major. | select fname , major from student where stuid not in ( select stuid from has_allergy where allergy = 'Soy' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "entrepreneur",
    "input": "Hi!  Can you show me a list of all people and their people IDs? | select name , people_id from people | Nice!  Can you filter the list to show only the people who do not have an associated entrepreneur ID?",
    "label": "CONFIRM_SQL",
    "output": "select name , people_id from people where people_id not in ( select people_id from entrepreneur )"
  },
  {
    "db_id": "entrepreneur",
    "input": "Wonderful!  Can you tell me what is the total amount of money requested by the people who ARE entrepreneurs? | select sum ( money_requested ) from entrepreneur | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "game_1",
    "input": "Could you please show me all the student IDs with the number of sports? | select stuid , count ( * ) from sportsinfo group by stuid | Could you add the total number of games played to that table please?",
    "label": "CONFIRM_SQL",
    "output": "select stuid , count ( * ) , sum ( gamesplayed ) from sportsinfo group by stuid"
  },
  {
    "db_id": "game_1",
    "input": "How many students are on scholarships? | select count ( distinct stuid ) from sportsinfo where onscholarship = 'Y' | What is the most common sports name?",
    "label": "CONFIRM_SQL",
    "output": "select sportname from sportsinfo group by sportname order by count ( * ) desc limit 1"
  },
  {
    "db_id": "game_1",
    "input": "What is the name of the sport the student with the most hours per week played? | select sportname from sportsinfo order by hoursperweek desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customer_complaints",
    "input": "You are welcome. | Hello, which complaint id  has more than 3 records present on this list? | select complaint_id from complaints group by complaint_id having count ( * ) > 3",
    "label": "INFORM_SQL",
    "output": "Okay, I see.  Which complaint status code has more than 3 records on this list?"
  },
  {
    "db_id": "customer_complaints",
    "input": "select complaint_status_code from complaints group by complaint_status_code having count ( * ) > 3 | Alright!  Now can you update this list to show the associated complain type code for these two status codes? | select complaint_status_code , complaint_type_code from complaints group by complaint_status_code having count ( * ) > 3",
    "label": "INFORM_SQL",
    "output": "Finally, can you show me the complaint outcome code for each of these two entries?"
  },
  {
    "db_id": "school_bus",
    "input": "How many of the drivers are over 40? | select count ( * ) from driver where age > 40 | How many of these drivers are also from Hartford?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from driver where home_city = 'Hartford' and age > 40"
  },
  {
    "db_id": "school_bus",
    "input": "What is the party of these 4 drivers? | select party from driver where home_city = 'Hartford' and age > 40 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "program_share",
    "input": "show me the programmes | Do you mean all the program ids? | yes",
    "label": "CONFIRM_SQL",
    "output": "select program_id from program"
  },
  {
    "db_id": "program_share",
    "input": "list the name of programme  that broadcast frequently | Do you mean the name of the program that is broadcast most frequently? | yes",
    "label": "CONFIRM_SQL",
    "output": "select program.name from program join broadcast on program.program_id = broadcast.program_id group by broadcast.program_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "climbing",
    "input": "What are the names of the mountains with height more than 5000? | select name from mountain where height > 5000 | Which of those has a prominence greater than 1000?",
    "label": "CONFIRM_SQL",
    "output": "select name from mountain where height > 5000 and prominence > 1000"
  },
  {
    "db_id": "climbing",
    "input": "And in what range is each of those located? | select range from mountain where height > 5000 and prominence > 1000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "csu_1",
    "input": "Hello!  Can you show me a list of all of the years for which there is data? | select distinct year from degrees | Thank you!  Can you update this list to include how many degrees were conferred each year?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( degrees ) , year from degrees group by year"
  },
  {
    "db_id": "csu_1",
    "input": "Thanks!  Lastly, (I am about to run out of time) can you filter that list to show me which year had the most degrees conferred? | select year from degrees group by year order by sum ( degrees ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "how many project staff there | select count ( * ) from project_staff | what is the date from of staff id 779.0",
    "label": "CONFIRM_SQL",
    "output": "select date_from from project_staff where staff_id = 779.0"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "what is the role code of staff id 674810.0 | select role_code from project_staff where staff_id = 674810.0 | thanks",
    "label": "WELCOME",
    "output": "sure. bye!"
  },
  {
    "db_id": "soccer_2",
    "input": "find the name and college of students whose player position are goalie in the tryout | select player.pname , tryout.cname from player join tryout on player.pid = tryout.pid where tryout.ppos = 'goalie' | find the training hours for the player id 10001",
    "label": "CONFIRM_SQL",
    "output": "select hs from player where pid = '10001'"
  },
  {
    "db_id": "soccer_2",
    "input": "find the college name for the player id 10001 | select tryout.cname from player join tryout on player.pid = tryout.pid where tryout.pid = '10001' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "coffee_shop",
    "input": "Do you want the ids of the shops? | Yes | I'd like to know how many staff are in charge in June?\n",
    "label": "CONFIRM_SQL",
    "output": "select num_of_shaff_in_charge from happy_hour where month = 'June'"
  },
  {
    "db_id": "coffee_shop",
    "input": "How many places offer happy hour? | select count ( distinct shop_id ) from happy_hour | Which of those 5 distinct shops have the most happy hours?",
    "label": "CONFIRM_SQL",
    "output": "select shop_id from happy_hour group by shop_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "coffee_shop",
    "input": "Can you tell me which shop ID offers the least happy hours? | select shop_id from happy_hour group by shop_id order by count ( * ) asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "mountain_photos",
    "input": "Can you list the name of each camera lens and the number of photos taken by it? | select camera_lens.name , count ( * ) from camera_lens join photos on camera_lens.id = photos.camera_lens_id group by camera_lens.id | Can you order the table by the count of photos in ascending order?",
    "label": "CONFIRM_SQL",
    "output": "select camera_lens.name , count ( * ) from camera_lens join photos on camera_lens.id = photos.camera_lens_id group by camera_lens.id order by count ( * ) asc"
  },
  {
    "db_id": "mountain_photos",
    "input": "What are the names of all photos taken by Olympus brand cameras? | select photos.name from camera_lens join photos on camera_lens.id = photos.camera_lens_id where camera_lens.brand = 'Olympus' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Hello!  Can you please list all of the product names that have the color description of \"white\"? | select products.product_name from products join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'white' | Thank you for that! Can you update this list to show the typical selling price for each?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_name , products.typical_selling_price from products join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'white'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Thank you!  Can you tell me what the average typical selling price is of all of the product types? | do you mean the average typical selling price of all product category code? | Yes!  Can you provide me with the average typical selling price of all product category code?",
    "label": "CONFIRM_SQL",
    "output": "select product_category_code , avg ( typical_buying_price ) from products group by product_category_code"
  },
  {
    "db_id": "driving_school",
    "input": "Which last names are both used by customers and staff? | select last_name from customers intersect select last_name from staff | What is the most common first name of staff?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from staff group by first_name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "What's the most common last name of staff? | select last_name from staff group by first_name order by count ( * ) desc limit 1 | What about the least common?",
    "label": "CONFIRM_SQL",
    "output": "select last_name from staff group by first_name order by count ( * ) asc limit 1"
  },
  {
    "db_id": "driving_school",
    "input": "What are the first names of the customers with the last name Mertz? | select first_name from staff where last_name = 'Mertz' | What about the staff?",
    "label": "CONFIRM_SQL",
    "output": "select first_name from staff where last_name = 'Mertz'"
  },
  {
    "db_id": "formula_1",
    "input": "list the forename of all races | select name from races | what is the forename of the race that occurred most recently? ",
    "label": "CONFIRM_SQL",
    "output": "select name , date from races order by date desc limit 1"
  },
  {
    "db_id": "formula_1",
    "input": "what is its code? | Do you mean circuit id? | yes",
    "label": "CONFIRM_SQL",
    "output": "select name , circuitid from races order by date desc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "how artist are from India  | select count ( * ) from artist where country = 'India' | how many persons are from folk genre",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from artist where preferred_genre = 'folk'"
  },
  {
    "db_id": "music_1",
    "input": "how many artists are from Bangladesh | select count ( * ) from artist where country = 'Bangladesh' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "soccer_2",
    "input": "hello there!  Can you please provide me with a list of all college names? | select cname from college | Thank you for that!  Can you show me the names of all colleges with an enrollment value that is greater than the total enrollment of all of the colleges in the state of FL?",
    "label": "CONFIRM_SQL",
    "output": "select cname from college"
  },
  {
    "db_id": "roller_coaster",
    "input": "How fast are roller coasters in Austria? | select roller_coaster.speed from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' | When did the fastest roller coaster in Austria open?",
    "label": "CONFIRM_SQL",
    "output": "select roller_coaster.opened from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' order by roller_coaster.speed desc limit 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "What is the name of the fastest roller coaster in Austria? | select roller_coaster.name from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' order by roller_coaster.speed desc limit 1 | What park in Austria has the fastest roller coaster?",
    "label": "CONFIRM_SQL",
    "output": "select roller_coaster.park from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' order by roller_coaster.speed desc limit 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "What is the height of the fastest roller coaster in Austria? | select roller_coaster.height from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' order by roller_coaster.speed desc limit 1 | What is the length of the fastest roller coaster in Austria?",
    "label": "CONFIRM_SQL",
    "output": "select roller_coaster.length from country join roller_coaster on country.country_id = roller_coaster.country_id where country.name = 'Austria' order by roller_coaster.speed desc limit 1"
  },
  {
    "db_id": "flight_company",
    "input": "Hi, which companies have operated more than one flight?  | select * from operate_company join flight on operate_company.id = flight.company_id group by operate_company.id having count ( * ) > 1 | Great, can you show me the top 3 companies that have operated the most flights?",
    "label": "CONFIRM_SQL",
    "output": "select * from operate_company join flight on operate_company.id = flight.company_id group by operate_company.id order by count ( * ) asc limit 3"
  },
  {
    "db_id": "flight_company",
    "input": "Which type of principal activity, cargo airline or airline, operates the most flights? | select principal_activities from operate_company join flight on operate_company.id = flight.company_id group by principal_activities order by count ( * ) asc limit 1 | What are the top 3 companies operating the most cargo flights?",
    "label": "CONFIRM_SQL",
    "output": "select * from operate_company join flight on operate_company.id = flight.company_id where operate_company.principal_activities = 'Cargo' group by operate_company.name order by count ( * ) asc limit 3"
  },
  {
    "db_id": "soccer_2",
    "input": "How many states that have some college students playing in the mid position? | select count ( * ) from ( select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos = 'mid' ) | How many states that have some college students not playing in the goalie position?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select college.state from college join tryout on college.cname = tryout.cname where tryout.ppos != 'goalie' )"
  },
  {
    "db_id": "soccer_2",
    "input": "Find college names with students playing in the goalie position | select cname from tryout where ppos = 'goalie' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  bye"
  },
  {
    "db_id": "game_injury",
    "input": "What are the ids, scores, and dates of the games which caused at most two injury accidents? | select game.id , game.score , game.date from game join injury_accident on injury_accident.game_id = game.id group by game.id having count ( * ) <= 2 | How many number of matches in this table?",
    "label": "REJECT",
    "output": "Sorry, there is no info about matches."
  },
  {
    "db_id": "game_injury",
    "input": "How many competitions in this table? | Did you mean the number of different competitions? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct competition ) from game"
  },
  {
    "db_id": "game_injury",
    "input": "How many number of different home teams? | select count ( distinct home_team ) from game | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the names of the products with the color description \"red\"? | select product_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'red' | What are the names of the products that have the characteristic name \"fast\"?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id join ref_colors on products.color_code = ref_colors.color_code where characteristics.characteristic_name = 'fast'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the names of the products that have the characteristic name \"fast\" and the color description \"red\"? | select product_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'red' and characteristics.characteristic_name = 'fast' | What about products with the characteristic name \"slow\"?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id join ref_colors on products.color_code = ref_colors.color_code where characteristics.characteristic_name = 'slow'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the color descriptions of those? | select ref_colors.color_description from products join product_characteristics on products.product_id = product_characteristics.product_id join characteristics on product_characteristics.characteristic_id = characteristics.characteristic_id join ref_colors on products.color_code = ref_colors.color_code where characteristics.characteristic_name = 'slow' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "railway",
    "input": "Please show the countries that have both managers of age above 50, and managers of age below 46\n | select country from manager where age > 50 intersect select country from manager where age < 46 | Please show me the names of all those managers\n",
    "label": "CONFIRM_SQL",
    "output": "select name from manager"
  },
  {
    "db_id": "railway",
    "input": "Please show me the age of the youngest and oldest managers | select min ( age ) , max ( age ) from manager | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "company_employee",
    "input": "Did you want the names of those employees? | Yes | Please show me the names of employees that work for companies with sales bigger than 200",
    "label": "CONFIRM_SQL",
    "output": "select people.name from employment join people on employment.people_id = people.people_id join company on employment.company_id = company.company_id where company.sales_in_billion > 200"
  },
  {
    "db_id": "company_employee",
    "input": "please show me the average age of those employees\n | select avg ( people.age ) from employment join people on employment.people_id = people.people_id join company on employment.company_id = company.company_id where company.sales_in_billion > 200 | and now just of those employees whose nationality is United States",
    "label": "CONFIRM_SQL",
    "output": "select people.name from employment join people on employment.people_id = people.people_id join company on employment.company_id = company.company_id where company.sales_in_billion > 200 and people.nationality = 'United States'"
  },
  {
    "db_id": "csu_1",
    "input": "Find the campus fee of \"San Jose State University\" in year 2000. | select csu_fees.campusfee from csu_fees join campuses on csu_fees.campus = campuses.id where campuses.campus = 'San Jose State University' and csu_fees.year = 2000 | What is the campus id of San Jose State University?",
    "label": "CONFIRM_SQL",
    "output": "select id from campuses where campus = 'San Jose State University'"
  },
  {
    "db_id": "csu_1",
    "input": "What is the campus fee of that? | select csu_fees.campusfee from csu_fees join campuses on csu_fees.campus = campuses.id where campuses.campus = 'San Jose State University' | What year is that for?",
    "label": "CONFIRM_SQL",
    "output": "select csu_fees.year from csu_fees join campuses on csu_fees.campus = campuses.id where campuses.campus = 'San Jose State University'"
  },
  {
    "db_id": "csu_1",
    "input": "What county is San Jose State University in? | select county from campuses where campus = 'San Jose State University' | What is the location of that university?",
    "label": "CONFIRM_SQL",
    "output": "select location from campuses where campus = 'San Jose State University'"
  },
  {
    "db_id": "allergy_1",
    "input": "Which allergy has the most number of students affected? | select allergy from has_allergy group by allergy order by count ( * ) desc limit 1 | How many students has tree pollen affected?",
    "label": "CONFIRM_SQL",
    "output": "select count ( stuid ) from has_allergy where allergy = 'Tree Pollen'"
  },
  {
    "db_id": "allergy_1",
    "input": "Which allergy has the least number of students affected? | select allergy from has_allergy group by allergy order by count ( * ) asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "railway",
    "input": "Can you list the names of the locations that have two or more railways? | select location from railway group by location having count ( * ) >= 2 | When were those built?",
    "label": "CONFIRM_SQL",
    "output": "select built from railway group by location having count ( * ) >= 2"
  },
  {
    "db_id": "railway",
    "input": "What is the location of the most recently built railway? | select location from railway order by built desc limit 1 | Who is the builder of the railway built earliest?",
    "label": "CONFIRM_SQL",
    "output": "select builder from railway order by built asc limit 1"
  },
  {
    "db_id": "railway",
    "input": "When was that railway built? | select built from railway order by built asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "club_1",
    "input": "Ddi you mean first name Linda? | Yes | what is the club id of stud 1001",
    "label": "CONFIRM_SQL",
    "output": "select clubid from member_of_club where stuid = 1001"
  },
  {
    "db_id": "club_1",
    "input": "what is the club name of AKW | select clubname from club where clublocation = 'AKW' | what the age of linda",
    "label": "CONFIRM_SQL",
    "output": "select age from student where fname = 'Linda'"
  },
  {
    "db_id": "club_1",
    "input": "what is the position of club id 1 | What do you mean by the position of club id 1 | in the table member of club",
    "label": "CONFIRM_SQL",
    "output": "select position from member_of_club where clubid = 1"
  },
  {
    "db_id": "club_1",
    "input": "what is the club name of HHH | select clubname from club where clublocation = 'HHH' | thanks",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "manufactory_1",
    "input": "Did you want the price of the cheapest products whose name is Hard drive? | Yes | How much does the cheapest Hard drive go for?",
    "label": "CONFIRM_SQL",
    "output": "select price from products where name = 'Hard drive' order by price asc limit 1"
  },
  {
    "db_id": "manufactory_1",
    "input": "and what of the cheapest memory? | select price from products where name = 'Memory' order by price asc limit 1 | Who is the manufacturer of the zip drive?",
    "label": "CONFIRM_SQL",
    "output": "select manufacturer from products where name = 'ZIP drive'"
  },
  {
    "db_id": "manufactory_1",
    "input": "And who manufactures the Hard drive? | select manufacturer from products where name = 'Hard drive' | Thanks",
    "label": "WELCOME",
    "output": "you are welcome, goodbye!"
  },
  {
    "db_id": "gas_company",
    "input": "How many gas stations opened after 2000? | select count ( * ) from gas_station where open_year > 2000 | What's the name of the manager that opened the most gas stations after 2000?",
    "label": "CONFIRM_SQL",
    "output": "select manager_name from gas_station where open_year > 2000 group by manager_name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "gas_company",
    "input": "What are the locations of those? | select location from gas_station where manager_name = ( select manager_name from gas_station where open_year > 2000 group by manager_name order by count ( * ) desc limit 1 ) | What are the vice manager names of those locations?",
    "label": "CONFIRM_SQL",
    "output": "select location , vice_manager_name from gas_station where manager_name = ( select manager_name from gas_station where open_year > 2000 group by manager_name order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "gas_company",
    "input": "What years did those open? | select location , open_year from gas_station where manager_name = ( select manager_name from gas_station where open_year > 2000 group by manager_name order by count ( * ) desc limit 1 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "icfp_1",
    "input": "Please find all the papers published by \"Aaron Turon\"? | select papers.title from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid where authors.fname = 'Aaron' and authors.lname = 'Turon' | Please find all the papers published by \"Ralf Hinze\"?",
    "label": "CONFIRM_SQL",
    "output": "select papers.title from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid where authors.fname = 'Ralf' and authors.lname = 'Hinze'"
  },
  {
    "db_id": "icfp_1",
    "input": "Can you add the paper IDs of those to the table please? | select papers.title , papers.paperid from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid where authors.fname = 'Ralf' and authors.lname = 'Hinze' | What is the name of the author who wrote the most papers?",
    "label": "CLARIFY",
    "output": "Do you mean the fname or  lname?"
  },
  {
    "db_id": "icfp_1",
    "input": "Both please | select authors.lname , authors.fname from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid group by authors.authid order by count ( * ) desc limit 1 | What are the lname and fname of all authors that wrote exactly 1 paper?",
    "label": "CONFIRM_SQL",
    "output": "select authors.lname , authors.fname from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid group by authors.authid having count ( * ) = 1"
  },
  {
    "db_id": "formula_1",
    "input": "How many drivers have participated in 30 or fewer races? | select count ( * ) from ( select drivers.driverid from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid group by drivers.driverid having count ( * ) <= 30 ) | What are the ID's of those drivers?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.driverid from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid group by drivers.driverid having count ( * ) <= 30"
  },
  {
    "db_id": "formula_1",
    "input": "How many races did each of these drivers participate in? | select drivers.driverid , count ( * ) from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid group by drivers.driverid | How many of those drivers placed in the top 3 of any race?",
    "label": "CONFIRM_SQL",
    "output": "select drivers.driverid from drivers join results on drivers.driverid = results.driverid join races on results.raceid = races.raceid group by drivers.driverid having results.rank < 3"
  },
  {
    "db_id": "dorm_1",
    "input": "Could you give me the number of dorms for each gender? | select count ( * ) , gender from dorm group by gender | What is the total capacity for each of those dorms?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( student_capacity ) , gender from dorm group by gender"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the names of those dorms? | select dorm_name from dorm | What is the dorm name of the dorm with the smallest capacity?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_name from dorm order by student_capacity desc limit 1"
  },
  {
    "db_id": "dorm_1",
    "input": "What about the second largest capacity dorm? | select dorm_name from dorm order by student_capacity desc limit 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "show the minimum order quality of all invoices | select min ( order_quantity ) from invoices | show the maximum order quality of all invoices",
    "label": "CONFIRM_SQL",
    "output": "select max ( order_quantity ) from invoices"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "show the average order quantity of all invoices | select avg ( order_quantity ) from invoices | show the order id, product id with order quantity\t",
    "label": "CONFIRM_SQL",
    "output": "select order_id , product_id , order_quantity from invoices"
  },
  {
    "db_id": "hr_1",
    "input": "Hello! Can you tell me how many total employees are on this list? | select count ( distinct employee_id ) from employees | Very good!  Can display a list of all of the employees first names which contain a letter Z in their first name?",
    "label": "CONFIRM_SQL",
    "output": "select employees.first_name , employees.last_name , locations.city from employees join departments on employees.department_id = departments.department_id join locations on departments.location_id = locations.location_id where employees.first_name like '%z%'"
  },
  {
    "db_id": "hr_1",
    "input": "which colums to return? | Oh thanks! You went ahead and added the last name and city!  Could you also add to this list which country each of these people live in? | select employees.first_name , employees.last_name , locations.city , locations.country_id from employees join departments on employees.department_id = departments.department_id join locations on departments.location_id = locations.location_id where employees.first_name like '%z%'",
    "label": "INFORM_SQL",
    "output": "Thanks!  That City and Country ID for Elizabeth is unusual...  Can you please show her street address and state province?"
  },
  {
    "db_id": "hospital_1",
    "input": "I would like to know the names of all the physicians | select name from physician | wonderful, looks like nine total.  approximately how many patients do each of them take care of?\n",
    "label": "CLARIFY",
    "output": "Would you like to know average patients corresponding to each physician?"
  },
  {
    "db_id": "hospital_1",
    "input": "if you could please share the average total patient per physician the would be helpful. | select physician.name , count ( * ) from physician join patient on physician.employeeid = patient.pcp group by physician.employeeid | which of the physicians have zero patients?",
    "label": "CONFIRM_SQL",
    "output": "select name from physician where name not in ( select physician.name from physician join patient on physician.employeeid = patient.pcp )"
  },
  {
    "db_id": "hospital_1",
    "input": "great, are any of the physicians Staff Internist? | select name from physician where position = 'Staff Internist' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "wedding",
    "input": "What are all church names?  | select name from church | How about church names for weddings of people older than 30?",
    "label": "CONFIRM_SQL",
    "output": "select church.name from wedding join people on wedding.male_id = people.people_id join people on wedding.female_id = people.people_id join church on church.church_id = wedding.church_id where people.age > 30 or people.age > 30"
  },
  {
    "db_id": "wedding",
    "input": "What are their opening years?  | select church.name , church.open_date from wedding join people on wedding.male_id = people.people_id join people on wedding.female_id = people.people_id join church on church.church_id = wedding.church_id where people.age > 30 or people.age > 30 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Bye."
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Which enzyme names have the substring \"PBG\"? | select name from enzyme where name like '%PBG%' | What is the product name of ALA synthase?",
    "label": "CONFIRM_SQL",
    "output": "select product from enzyme where name = 'ALA synthase'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Find the porphyria ALA dehydratase? | By find, what information would you want me to find? | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "soccer_2",
    "input": "How many hours does a goalie need to play to meet the minimum? | select min ( player.hs ) from tryout join player on tryout.pid = player.pid and tryout.ppos = 'goalie' group by tryout.ppos | How many hours does a striker need to play to meet the minimum?\n",
    "label": "CONFIRM_SQL",
    "output": "select min ( player.hs ) from tryout join player on tryout.pid = player.pid and tryout.ppos = 'striker' group by tryout.ppos"
  },
  {
    "db_id": "soccer_2",
    "input": "Are there any other positions besides striker and goalie? | select distinct ( ppos ) from tryout where ppos != 'goalie' and ppos != 'striker' | How many hours does a mid need to play to meet the minimum?",
    "label": "CONFIRM_SQL",
    "output": "select min ( player.hs ) from tryout join player on tryout.pid = player.pid where tryout.ppos = 'mid' group by tryout.ppos"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "how many customers are there? | select count ( * ) from customers | show all their names.",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "please order them in alphabetical order. | select customer_name from customers order by customer_name asc | Great! Does any of them contains \"Alex\"?",
    "label": "THANK_YOU",
    "output": "Ok, thanks! "
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what is transactions type code? | Did you want all of the transactions type code? | yes ",
    "label": "CONFIRM_SQL",
    "output": "select distinct transaction_type_code from transactions"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what is the share count? | select distinct share_count from transactions | ok, i say leave in chat..thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "music_1",
    "input": "How about the total number of songs that was released? | How many artist are there? | select count ( artist_name ) from artist",
    "label": "CONFIRM_SQL",
    "output": "SELECT  count(*) from song"
  },
  {
    "db_id": "music_1",
    "input": "Can you list all songs that were released in March? | Do  you mean  the  songs  name? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select song.song_name from song where song.releasedate like '%Mar%'"
  },
  {
    "db_id": "music_1",
    "input": "Can you include the artist names and their genders too? | select artist.artist_name , artist.gender , song.song_name from artist join song on artist.artist_name = song.artist_name where song.releasedate like '%Mar%' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "college_1",
    "input": "What is the school code for the accounting department?\n | select school_code from department where dept_name = 'Accounting' | What is the accounting department's address?",
    "label": "CONFIRM_SQL",
    "output": "select dept_address from department where dept_name = 'Accounting'"
  },
  {
    "db_id": "college_1",
    "input": "Where is the professor of accounting's office? | select professor.prof_office from professor join department on department.dept_code = professor.dept_code where department.dept_name = 'Accounting' | What degree does the professor of account hold?\n",
    "label": "CONFIRM_SQL",
    "output": "select professor.prof_high_degree from professor join department on department.dept_code = professor.dept_code where department.dept_name = 'Accounting'"
  },
  {
    "db_id": "college_1",
    "input": "Are there any ACCT-211 courses that are held on Tuedays?\n | select count ( * ) from class join employee on class.prof_num = employee.emp_num join professor on employee.emp_num = professor.emp_num join department on department.dept_code = professor.dept_code where class.crs_code = 'ACCT-211' and class.class_time like '%T%' | Where is the classroom located?",
    "label": "CONFIRM_SQL",
    "output": "select class_room from class join employee on class.prof_num = employee.emp_num join professor on employee.emp_num = professor.emp_num join department on department.dept_code = professor.dept_code where class.crs_code = 'ACCT-211' and class.class_time like '%T%'"
  },
  {
    "db_id": "machine_repair",
    "input": "What is the starting year of the oldest technician? | select starting_year from technician order by age desc limit 1 | What is their name and team?",
    "label": "CLARIFY",
    "output": "what  do  you mean  their?could  you  give  more  info ?"
  },
  {
    "db_id": "machine_repair",
    "input": "What is the name of the oldest technician? | select name from technician order by age desc limit 1 | What is the name of the second youngest technician?",
    "label": "CONFIRM_SQL",
    "output": "select name from technician order by age asc limit 2"
  },
  {
    "db_id": "machine_repair",
    "input": "What is the starting year of the third youngest technician? | select starting_year from technician order by age asc limit 3 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "e_learning",
    "input": "What are the names of the course authors who teach the course with the name \"operating system\" or \"data structure\" please? | do you want to return their personal, middle, and family names? | All of those, please?",
    "label": "CONFIRM_SQL",
    "output": "select course_authors_and_tutors.personal_name , course_authors_and_tutors.middle_name , course_authors_and_tutors.family_name from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id where courses.course_name = 'operating system' or courses.course_name = 'data structure'"
  },
  {
    "db_id": "e_learning",
    "input": "What are their login names? | select course_authors_and_tutors.login_name from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id where courses.course_name = 'operating system' or courses.course_name = 'data structure' | What are the full names of the course authors who teach the course with the name \"advanced database\" please?",
    "label": "CONFIRM_SQL",
    "output": "select course_authors_and_tutors.personal_name , course_authors_and_tutors.middle_name , course_authors_and_tutors.family_name from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id where courses.course_name = 'advanced database'"
  },
  {
    "db_id": "wrestler",
    "input": "Show the times of elimination by \"Punk\" or \"Orton\". | select time from elimination where eliminated_by = 'Punk' or eliminated_by = 'Orton' | And by \"Benjamin\"?",
    "label": "AFFIRM",
    "output": "yes"
  },
  {
    "db_id": "wrestler",
    "input": "select time from elimination where eliminated_by = 'Benjamin' | What was the average elimination time of all teams? | select avg ( time ) from elimination",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "train_station",
    "input": "Which station has the greatest number of traims? | select station.* from train_station join station on train_station.station_id = station.station_id group by train_station.station_id order by count ( * ) desc limit 1 | Whats the total passengers london waterloo has?",
    "label": "CONFIRM_SQL",
    "output": "select total_passengers from station where name = 'London Waterloo'"
  },
  {
    "db_id": "train_station",
    "input": "Whats the number of platforms do london waterloo has ? | select number_of_platforms from station where name = 'London Waterloo' | Where is it located?",
    "label": "CONFIRM_SQL",
    "output": "select location from station where name = 'London Waterloo'"
  },
  {
    "db_id": "e_government",
    "input": "Tell me the party email of the party with id 1? | select party_email from parties where party_id = '1' | Tell me the party phone of the party id 2 ?",
    "label": "CONFIRM_SQL",
    "output": "select party_phone from parties where party_id = '2'"
  },
  {
    "db_id": "e_government",
    "input": "Tell me the service id of the customer id 10 ? | select service_id from party_services where customer_id = '10' | Which is the email of the party that has used the services the most number of times ?",
    "label": "CONFIRM_SQL",
    "output": "select parties.party_email from parties join party_services on parties.party_id = party_services.customer_id group by parties.party_email order by count ( * ) desc limit 1"
  },
  {
    "db_id": "movie_1",
    "input": "Can you give me the names of the movies that has the top 3 highest rating star? | select movie.title from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 3 | Can you show me the years of those movies as well?",
    "label": "CONFIRM_SQL",
    "output": "select movie.title , movie.year from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 3"
  },
  {
    "db_id": "movie_1",
    "input": "How about their directors? | select movie.title , movie.year , movie.director from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 3 | Can you add rating stars too?",
    "label": "CONFIRM_SQL",
    "output": "select movie.title , movie.year , movie.director , rating.stars from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 3"
  },
  {
    "db_id": "movie_1",
    "input": "Can you please tell me the average stars as well? | select avg ( stars ) from rating | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customer_deliveries",
    "input": "How many customers are there? | select count ( customer_id ) from customers | When did the last customer come?",
    "label": "CONFIRM_SQL",
    "output": "select date_became_customer from customers order by date_became_customer desc limit 1"
  },
  {
    "db_id": "customer_deliveries",
    "input": "How about the first? | select date_became_customer from customers order by date_became_customer asc limit 1 | Can you show me the names of the first five customers?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name from customers order by date_became_customer asc limit 5"
  },
  {
    "db_id": "inn_1",
    "input": "WHAT IS ROOM ID OF MODERN DECOR? | select roomid from rooms where decor = 'modern' | OK .HOW MANY ROOMS IN KING BED TYPE?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from rooms where bedtype = 'King'"
  },
  {
    "db_id": "inn_1",
    "input": "WHAT IS ROOM NAME  of rooms that have a king bed.? | select roomname from rooms where bedtype = 'King' | OK THANKS",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "insurance_fnol",
    "input": "What policies does Dayana Robel have?\n | Do you mean the policy types of the customer named \"Dayana Robel\"? | yes",
    "label": "CONFIRM_SQL",
    "output": "select distinct available_policies.policy_type_code from customers join customers_policies on customers.customer_id = customers_policies.customer_id join available_policies on customers_policies.policy_id = available_policies.policy_id where customers.customer_name = 'Dayana Robel'"
  },
  {
    "db_id": "insurance_fnol",
    "input": "What is it's phone number? | select distinct customer_phone from customers join customers_policies on customers.customer_id = customers_policies.customer_id join available_policies on customers_policies.policy_id = available_policies.policy_id where customers.customer_name = 'Dayana Robel' | And on which date was this policy opened? ",
    "label": "CONFIRM_SQL",
    "output": "select customers_policies.date_opened from customers join customers_policies on customers.customer_id = customers_policies.customer_id join available_policies on customers_policies.policy_id = available_policies.policy_id where customers.customer_name = 'Dayana Robel'"
  },
  {
    "db_id": "party_host",
    "input": "What are some parties with theme \"Spring\"? | select * from party where party_theme = 'Spring' | What are the first year and last year of the parties with theme \"Teqnology\"",
    "label": "CONFIRM_SQL",
    "output": "select first_year , last_year from party where party_theme = 'Teqnology'"
  },
  {
    "db_id": "party_host",
    "input": "OK, can you show me the first year and last year of parties with theme of both \" Spring\" and \"Teqnology\"? | select first_year , last_year from party where party_theme = 'Spring' or party_theme = 'Teqnology' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "wine_1",
    "input": "give me the name of the wineries | select winery from wine | how many wineries have at least 4 wines?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select winery from wine group by winery having count ( * ) >= 4 )"
  },
  {
    "db_id": "wine_1",
    "input": "can you tell me the names of those wineries? | select winery from wine group by winery having count ( * ) >= 4 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "store_1",
    "input": "What are the average invoice sizes of each country? | select billing_country , avg ( total ) from invoices group by billing_country | What was the country that had the highest invoice size?",
    "label": "CONFIRM_SQL",
    "output": "select billing_country from invoices order by total desc limit 1"
  },
  {
    "db_id": "store_1",
    "input": "What are the top 10 countries with the highest invoice size along with their amount? | select billing_country , total from invoices order by total desc limit 10 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome  and bye "
  },
  {
    "db_id": "college_2",
    "input": "Which building has a room with highest capacity? | select building from classroom order by capacity desc limit 1 | What courses are taught in this room?",
    "label": "CONFIRM_SQL",
    "output": "select course.title from classroom join section on classroom.building = section.building and classroom.room_number = section.room_number join course on section.course_id = course.course_id where classroom.capacity = ( select max ( capacity ) from classroom )"
  },
  {
    "db_id": "college_2",
    "input": "How many credits is \"Accounting\" worth? | select credits from course where title = 'Accounting' | And what is the capacity of the Whitman room?\n",
    "label": "CONFIRM_SQL",
    "output": "select capacity from classroom where building = 'Whitman'"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What is the overall average amount of transactions?  | select avg ( amount_of_transaction ) from transactions | How about average amount of transaction for different lots? ",
    "label": "CONFIRM_SQL",
    "output": "select transactions_lots.lot_id , avg ( amount_of_transaction ) from transactions join transactions_lots on transactions.transaction_id = transactions_lots.transaction_id group by transactions_lots.lot_id"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Which lot has the highest average transaction amount? | select transactions_lots.lot_id , avg ( amount_of_transaction ) from transactions join transactions_lots on transactions.transaction_id = transactions_lots.transaction_id group by transactions_lots.lot_id order by avg ( amount_of_transaction ) desc limit 1 | What about the lowest average? ",
    "label": "CONFIRM_SQL",
    "output": "select transactions_lots.lot_id , avg ( amount_of_transaction ) from transactions join transactions_lots on transactions.transaction_id = transactions_lots.transaction_id group by transactions_lots.lot_id order by avg ( amount_of_transaction ) asc limit 1"
  },
  {
    "db_id": "browser_web",
    "input": "What distinct accelerator names are compatible with Firefox. | select distinct web_client_accelerator.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where browser.name = 'Firefox' | What distinct accelerator names are compatible with the browsers that have a market share higher than 15.",
    "label": "CONFIRM_SQL",
    "output": "select distinct web_client_accelerator.name from web_client_accelerator join accelerator_compatible_browser on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on accelerator_compatible_browser.browser_id = browser.id where browser.market_share > 15"
  },
  {
    "db_id": "browser_web",
    "input": "What distinct accelerator names have been compatible since at least 1996. | select distinct web_client_accelerator.name from accelerator_compatible_browser join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id where compatible_since_year >= 1996 | Out of these accelerators which are compatible with browsers that have a market share higher than 25.",
    "label": "CONFIRM_SQL",
    "output": "select distinct web_client_accelerator.name from accelerator_compatible_browser join web_client_accelerator on accelerator_compatible_browser.accelerator_id = web_client_accelerator.id join browser on browser.id = accelerator_compatible_browser.browser_id where accelerator_compatible_browser.compatible_since_year >= 1996 and browser.market_share > 25"
  },
  {
    "db_id": "sports_competition",
    "input": "what are the name of the countries who have participated in both the friendly and tournament type competitions | select country from competition where competition_type = 'Friendly' intersect select country from competition where competition_type = 'Tournament' | what is the competition id of the country",
    "label": "CLARIFY",
    "output": "Can you clarify? The competition id is not unique to a country. "
  },
  {
    "db_id": "sports_competition",
    "input": "list all the competition id for russia | select competition_id from competition where country = 'Russia' | include the year in the table",
    "label": "CONFIRM_SQL",
    "output": "select competition_id , year from competition where country = 'Russia'"
  },
  {
    "db_id": "city_record",
    "input": "how many city there | select count ( distinct city ) from city | how many regional population in Hangzhou city",
    "label": "CONFIRM_SQL",
    "output": "select regional_population from city where city = 'Hangzhou ( Zhejiang )'"
  },
  {
    "db_id": "city_record",
    "input": "what is the city id of Nanjing | select city_id from city where city = 'Nanjing ( Jiangsu )' | thanks",
    "label": "WELCOME",
    "output": "You're welcome. Goodbye!"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "list all the sales details | select sales_details from sales | list the details of the purchases",
    "label": "CONFIRM_SQL",
    "output": "select purchase_details from purchases"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "prepare a table with both the sales and purchase details | select sales_details from sales union select purchase_details from purchases | include sales and purchase id in the list",
    "label": "CONFIRM_SQL",
    "output": "select sales_transaction_id , sales_details from sales union select purchase_transaction_id , purchase_details from purchases"
  },
  {
    "db_id": "dorm_1",
    "input": "Do you mean the first name and last name of the students from ATL? | Yes | What is the average age of all the male students (sex with M) from each city?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) , city_code from student where sex = 'M' group by city_code"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the average number of all the male students (sex with M) from each city? | select count ( * ) , city_code from student where sex = 'M' group by city_code | What are the names of the students from ATL?",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student where city_code = 'ATL'"
  },
  {
    "db_id": "dorm_1",
    "input": "What is his age? | select age from student where city_code = 'ATL' | What is the average age of all the female students (sex with F) from each city?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) , city_code from student where sex = 'F' group by city_code"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "How many teachers are there? | select count ( teacher_id ) from teachers | How many of them involve in detention?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct detention.teacher_id ) from teachers join detention on teachers.teacher_id = detention.teacher_id"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Can you show me a list of teachers that are not involve in detention? | select last_name from teachers except select teachers.last_name from teachers join detention on teachers.teacher_id = detention.teacher_id | Can you also include their id?",
    "label": "CONFIRM_SQL",
    "output": "select last_name , teacher_id from teachers except select teachers.last_name , teachers.teacher_id from teachers join detention on teachers.teacher_id = detention.teacher_id"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What are the IDs of problems that the staff member Dameon Frami reported? | select product_id from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_first_name = 'Dameon' and staff.staff_last_name = 'Frami' | What are the IDs of problems that the staff member Jolie Weber reported?",
    "label": "CONFIRM_SQL",
    "output": "select product_id from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_first_name = 'Jolie' and staff.staff_last_name = 'Weber'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the most common problem ID reported by all staff? | select problem_id from problems join staff on problems.reported_by_staff_id = staff.staff_id group by problem_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_3",
    "input": "how many students have not enrolled in any courses | select count ( * ) from student where stuid not in ( select stuid from enrolled_in ) | please check the table once more for the name of students not enrolled in any course",
    "label": "CLARIFY",
    "output": "Do you need those students' Fname or Lname?"
  },
  {
    "db_id": "college_3",
    "input": "i need the students first name | select fname from student where stuid not in ( select stuid from enrolled_in ) | list the first name and last name of students with grade A",
    "label": "CONFIRM_SQL",
    "output": "select student.fname , student.lname from student join enrolled_in on student.stuid = enrolled_in.stuid where enrolled_in.grade = 'A'"
  },
  {
    "db_id": "college_3",
    "input": "WHAT IS THE ID OF THESE STUDENTS | select stuid from enrolled_in where grade = 'A' | THANKS",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "network_2",
    "input": "What is the total number of people who has no friend living in the city of Austin? | select count ( distinct name ) from personfriend where friend not in ( select name from person where city = 'Austin' ) | What about in New York City?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct name ) from personfriend where friend not in ( select name from person where city = 'new york city' )"
  },
  {
    "db_id": "network_2",
    "input": "What about Salt Lake City? | select count ( distinct name ) from personfriend where friend not in ( select name from person where city = 'salt lake city' ) | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select distinct name from personfriend where friend not in ( select name from person where city = 'salt lake city' )"
  },
  {
    "db_id": "network_2",
    "input": "What are the names of the people with no friends in New York City? | select distinct name from personfriend where friend not in ( select name from person where city = 'new york city' ) | How many people in New York City have friends?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person join personfriend on person.name = personfriend.name where person.city = 'new york city'"
  },
  {
    "db_id": "phone_market",
    "input": "Could you give me the names of all phones? | select distinct ( name ) from phone | How about only the phones with more than 2000 units in stock?",
    "label": "CONFIRM_SQL",
    "output": "select phone.name from phone_market join phone on phone_market.phone_id = phone.phone_id group by phone.name having sum ( phone_market.num_of_stock ) > 2000"
  },
  {
    "db_id": "phone_market",
    "input": "Great! Can you put them in descending order of total number of stock? | select phone.name from phone_market join phone on phone_market.phone_id = phone.phone_id group by phone.name having sum ( phone_market.num_of_stock ) > 2000 order by sum ( phone_market.num_of_stock ) desc | Thanks!",
    "label": "WELCOME",
    "output": "you're welcome. Bye."
  },
  {
    "db_id": "train_station",
    "input": "What are the top three total number of passengers? | select total_passengers from station order by total_passengers desc limit 3 | What are the names and main services for train stations for these?",
    "label": "CONFIRM_SQL",
    "output": "select name , main_services from station order by total_passengers desc limit 3"
  },
  {
    "db_id": "train_station",
    "input": "What about the names and main services for the train stations with the least 3 number of passengers? | select name , main_services from station order by total_passengers asc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "what is the color code of product name \"chervil\"? | select products.color_code from products join ref_colors on products.color_code = ref_colors.color_code where products.product_name = 'chervil' | what is the color description of it?",
    "label": "CONFIRM_SQL",
    "output": "select ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where products.product_name = 'chervil'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What is the product id of it? | select products.product_id from products join ref_colors on products.color_code = ref_colors.color_code where products.product_name = 'chervil' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "college_2",
    "input": "What is the name of the instructor who advises of all the students in the History department? | Sorry, I don't know the name of the instructor who advises of all students from History department based on the table.  | Which department has the lowest number of total credits?",
    "label": "CONFIRM_SQL",
    "output": "select dept_name from ( select sum ( tot_cred ) as tot , dept_name from student group by dept_name ) order by tot asc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "Show me the instructor ID associated with the History department. | Do you mean the ids of the instructors who advises of all students from History department? | Yes, what is the answer to your question?",
    "label": "CONFIRM_SQL",
    "output": "select i_id from advisor join student on advisor.s_id = student.id where student.dept_name = 'History'"
  },
  {
    "db_id": "college_2",
    "input": "How many instructors advising of students from the history department? | select count ( i_id ) from advisor join student on advisor.s_id = student.id where student.dept_name = 'History' | Do the instructors have an adviser or department head?",
    "label": "REJECT",
    "output": "I can't answer the question based on the tables."
  },
  {
    "db_id": "inn_1",
    "input": "List all the room names.  | select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid | List all the room names with 2 beds.",
    "label": "CONFIRM_SQL",
    "output": "select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid where rooms.beds = 2"
  },
  {
    "db_id": "inn_1",
    "input": "List all the room names booked with 1 adult.  | select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid where reservations.adults = 1 | List all the room names booked with 1 adult and their check in date. ",
    "label": "CONFIRM_SQL",
    "output": "select rooms.roomname , reservations.checkin from reservations join rooms on reservations.room = rooms.roomid where reservations.adults = 1"
  },
  {
    "db_id": "inn_1",
    "input": "List all the room names booked with 1 adult and a check in date in October.  | select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid where reservations.adults = 1 and reservations.checkin like '%OCT%' | List the names of rooms booked by a customer whose first name is Roy. ",
    "label": "CONFIRM_SQL",
    "output": "select rooms.roomname from reservations join rooms on reservations.room = rooms.roomid where reservations.firstname = 'ROY'"
  },
  {
    "db_id": "activity_1",
    "input": "Hello there!  Thank you for taking the time to work with me!  Can you provide me with a list of all of the different activity names? | select activity_name from activity | Can you filter that list to show the activity with the most student participants?",
    "label": "CONFIRM_SQL",
    "output": "select activity.activity_name from activity join participates_in on activity.actid = participates_in.actid group by activity.actid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "activity_1",
    "input": "Great!  Can you tell me how many students in total participated in football? | select count ( distinct participates_in.stuid ) from activity join participates_in on activity.actid = participates_in.actid where activity.activity_name = 'Soccer' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,good_bye"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "How many hotels have a price of over 10000? | select count ( * ) from hotels where price_range > 10000 | What are the maximum number of stars a hotel with price above 10000 can get?",
    "label": "CONFIRM_SQL",
    "output": "select max ( star_rating_code ) from hotels where price_range > 10000"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "What are the star rating descriptions of these hotels? | You mean the hotels with price above 10000? | Yes. The ones we've been talking about.",
    "label": "CONFIRM_SQL",
    "output": "select ref_hotel_star_ratings.star_rating_description from hotels join ref_hotel_star_ratings on hotels.star_rating_code = ref_hotel_star_ratings.star_rating_code where hotels.price_range > 10000"
  },
  {
    "db_id": "allergy_1",
    "input": "I want to know advisor with the most number of students | select advisor from student group by advisor order by count ( * ) desc limit 1 | What about the advisor with the least number of students",
    "label": "CONFIRM_SQL",
    "output": "select advisor from student group by advisor order by count ( * ) asc limit 1"
  },
  {
    "db_id": "allergy_1",
    "input": "Could you tell me the names of both advisors with the most and the least number of students? | select advisor from student where advisor = ( select advisor from student group by advisor order by count ( * ) asc limit 1 ) or advisor = ( select advisor from student group by advisor order by count ( * ) desc limit 1 ) group by advisor | Thanks",
    "label": "WELCOME",
    "output": "you are welcome，goodbye"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Show the names of the three most recent festivals.\n | select festival_name from festival_detail order by year desc limit 3 | Where were these festivals held?",
    "label": "CONFIRM_SQL",
    "output": "select festival_name , location from festival_detail order by year desc limit 3"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Which festival had the most audience members?\n | select festival_name from festival_detail order by num_of_audience desc limit 1 | When was the most recent festival held?",
    "label": "CONFIRM_SQL",
    "output": "select year from festival_detail order by year desc limit 1"
  },
  {
    "db_id": "entertainment_awards",
    "input": "Who was the chair of the LA Awards? | select chair_name from festival_detail where festival_name = 'LA Awards' | How many people attended the LA Awards in 2010?",
    "label": "CONFIRM_SQL",
    "output": "select num_of_audience from festival_detail where festival_name = 'LA Awards' and year = 2010"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the names of the products with the category \"Herbs\" please? | select products.product_name from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs' | What are their color descriptions?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_name , ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are their product descriptions? | select products.product_name , ref_colors.color_description , products.product_description from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs' | What are their typical selling prices?",
    "label": "CONFIRM_SQL",
    "output": "select products.typical_selling_price from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What is the average typical buying price? | select avg ( typical_buying_price ) from products join ref_colors on products.color_code = ref_colors.color_code where product_category_code = 'Herbs' | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Show me the medicine name which can interact as 'inhibitor'? | select medicine.name from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id where interaction_type = 'inhibitor' | Show me the medicine name which can interact as 'activitor' with enzymes?",
    "label": "CONFIRM_SQL",
    "output": "select medicine.name from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id where interaction_type = 'activitor'"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Show me the name of the medicines that are present in both the tables? | select medicine.name from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id where interaction_type = 'inhibitor' intersect select medicine.name from medicine join medicine_enzyme_interaction on medicine_enzyme_interaction.medicine_id = medicine.id where interaction_type = 'activitor' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "customer_deliveries",
    "input": "Hi there!  Can you show me a list of all customer IDs for customers not located in the state of California? | select customer_id from customers except select customers.customer_id from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id where addresses.state_province_county = 'California' | Thanks!  Can you update this list to show both the city name and state associated with each of these customers?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_id , addresses.city , addresses.state_province_county from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id where addresses.state_province_county != 'California'"
  },
  {
    "db_id": "customer_deliveries",
    "input": "This is excellent!  Can you filter this list to show data for the top 3 customers who have been members the longest? | select customers.customer_id , addresses.city , addresses.state_province_county from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id where addresses.state_province_county != 'California' order by customers.date_became_customer asc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "solvency_ii",
    "input": "Hello there!  Can you show me a list of all of the different product type codes? | select product_type_code from products | Nice!  Can you filter this list to show the Product Type Codes for the entries which have either a product price higher than 4500 or a product price lower than 3000?",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code from products where product_price > 4500 intersect select product_type_code from products where product_price < 3000"
  },
  {
    "db_id": "solvency_ii",
    "input": "Awesome!  What product price is associated with the Product Type Code of \"food\"? | select product_price from products where product_type_code = 'Food' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem. Bye"
  },
  {
    "db_id": "entrepreneur",
    "input": "Who are the entrepreneurs requesting money | What attributes would you like to know about the entrepreneurs raising money?  | What are the entrepreneur's weights",
    "label": "CONFIRM_SQL",
    "output": "select people.weight from entrepreneur join people on entrepreneur.people_id = people.people_id"
  },
  {
    "db_id": "entrepreneur",
    "input": "What are the entrepreneurs names associated with those weights?  Thanks.\n | select people.name , people.weight from entrepreneur join people on entrepreneur.people_id = people.people_id | What company is each entrepreneur associated with?",
    "label": "CONFIRM_SQL",
    "output": "select entrepreneur.company from entrepreneur join people on entrepreneur.people_id = people.people_id"
  },
  {
    "db_id": "entrepreneur",
    "input": "Which entrepreneur has the highest weight?  Thanks! | What attribute would you like to know about the entrepreneur with the highest weight?  | I would like to know the name of the entrepreneur with the highest weight.",
    "label": "CONFIRM_SQL",
    "output": "select people.name from entrepreneur join people on entrepreneur.people_id = people.people_id order by people.weight desc limit 1"
  },
  {
    "db_id": "entrepreneur",
    "input": "Thanks! | Thank you, would you like to anything else?  | No, that is all.  Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye. "
  },
  {
    "db_id": "insurance_fnol",
    "input": "Hello there!  Can you provide me with a list of all of the service names? | select service_name from services | Thank you very much for that!  Could you please filter this list to show only the Service Names which occur more than once on the First Notification of Loss table?",
    "label": "CONFIRM_SQL",
    "output": "select services.service_name from first_notification_of_loss join services on first_notification_of_loss.service_id = services.service_id group by first_notification_of_loss.service_id having count ( * ) > 1"
  },
  {
    "db_id": "insurance_fnol",
    "input": "My apologies!  I meant to ask for the list to be filtered to show only the Service Names which occur more than 2 times on the First_Notification_of_Loss table? | select services.service_name from first_notification_of_loss join services on first_notification_of_loss.service_id = services.service_id group by first_notification_of_loss.service_id having count ( * ) > 2 | Awesome!  Can you show me how many times New policy application has been used?",
    "label": "CONFIRM_SQL",
    "output": "select services.service_name , count ( * ) from first_notification_of_loss join services on first_notification_of_loss.service_id = services.service_id group by first_notification_of_loss.service_id having service_name = 'New policy application'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Show me the location ID of the Tourist Attraction ID 2113? | select location_id from tourist_attractions where tourist_attraction_id = '2113' | Show the transportation method least people choose to get to tourist attractions.",
    "label": "CONFIRM_SQL",
    "output": "select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) asc limit 1"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Show the transportation method most people choose to get to tourist attractions? | select how_to_get_there from tourist_attractions group by how_to_get_there order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "shop_membership",
    "input": "Show the city and the number of branches opened before 2010 for each city | select city , count ( * ) from branch where open_year < 2010 group by city | Which year were those branches opened?",
    "label": "CONFIRM_SQL",
    "output": "select open_year from branch where open_year < 2010"
  },
  {
    "db_id": "shop_membership",
    "input": "Give me the membership amount for those cities | Which cities? | Cities that were opened before 2010",
    "label": "CLARIFY",
    "output": "Ah, I cannot understand. Do you mean cities that have branches opened before 2010?"
  },
  {
    "db_id": "shop_membership",
    "input": "Give me names of branches opened before 2010 | select name from branch where open_year < 2010 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "products_for_hire",
    "input": "Hello, what is the total number of bookings? | select count ( * ) from bookings | Perfect, and how many different customers were there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct customer_id ) from bookings"
  },
  {
    "db_id": "products_for_hire",
    "input": "Awesome! And finally, can you list the customer id, first name, and total bookings of each customer? | select customers.customer_id , customers.first_name , count ( * ) from customers join bookings on customers.customer_id = bookings.customer_id group by customers.customer_id | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "What is the average price of all products? | select avg ( product_price ) from products | What are the product names that have a price higher than the average?",
    "label": "CONFIRM_SQL",
    "output": "select product_name from products where product_price > ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "How many products have a price higher than the average? | select count ( * ) from products where product_price > ( select avg ( product_price ) from products ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "storm_record",
    "input": "how many storms caused damage to any regions? | select count ( * ) from storm | how many of the storms caused damage to at least two regions?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select storm.name from storm join affected_region on storm.storm_id = affected_region.storm_id group by storm.storm_id having count ( * ) >= 2 )"
  },
  {
    "db_id": "storm_record",
    "input": "Did either of those two also affect at least 10 cities? | select storm.name from storm join affected_region on storm.storm_id = affected_region.storm_id group by storm.storm_id having count ( * ) >= 2 intersect select storm.name from storm join affected_region on storm.storm_id = affected_region.storm_id group by storm.storm_id having sum ( affected_region.number_city_affected ) >= 10 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye!"
  },
  {
    "db_id": "network_2",
    "input": "is there any person who has no student friends | select * from person except select person.* from person join personfriend on person.name = personfriend.friend where person.job = 'student' | is there any person friend for this persons",
    "label": "CONFIRM_SQL",
    "output": "select name from person except select personfriend.name from person join personfriend on person.name = personfriend.friend where person.job = 'student' intersect select personfriend.name from person join personfriend on person.name = personfriend.friend"
  },
  {
    "db_id": "network_2",
    "input": "ok, list the name of the person who has no student friend in ascending order | select name from person except select personfriend.name from person join personfriend on person.name = personfriend.friend order by name desc | thanks",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "game_1",
    "input": "what is the lname of linda | select lname from student where fname = 'Linda' | what is the age of linda",
    "label": "CONFIRM_SQL",
    "output": "select age from student where fname = 'Linda'"
  },
  {
    "db_id": "game_1",
    "input": "what is the age of kim | select age from student where lname = 'Kim' | what is the sex of age 18",
    "label": "CONFIRM_SQL",
    "output": "select distinct sex from student where age = 18"
  },
  {
    "db_id": "phone_market",
    "input": "Can you show me the carriers that have phones with memories smaller than 32? | select carrier from phone where memory_in_g < 32 | Can you show me the carriers that have phones with memories bigger than 64?",
    "label": "CONFIRM_SQL",
    "output": "select carrier from phone where memory_in_g > 64"
  },
  {
    "db_id": "phone_market",
    "input": "Can you show me the carriers that have phones with memories smaller than 32 and bigger than 64? | select carrier from phone where memory_in_g < 32 intersect select carrier from phone where memory_in_g > 64 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "epinions_1",
    "input": "what are the items with highest average rating | Do you mean the the title of the item with the highest average rating? | yes, title of the item with highest average rating",
    "label": "CONFIRM_SQL",
    "output": "select item.title from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rating ) desc limit 1"
  },
  {
    "db_id": "epinions_1",
    "input": "what is the id of cup | select i_id from item where title = 'cup' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_1",
    "input": "how many employees there | select count ( * ) from employee | how many English professors there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where dept_code = 'ENG'"
  },
  {
    "db_id": "college_1",
    "input": "what is the prof high degree of department HIST | select prof_high_degree from professor where dept_code = 'HIST' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "product_catalog",
    "input": "Can you tell me which product has the greatest height? | Which attribute of product do you want? | Can you please show me the catalog entry name?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_entry_name from catalog_contents order by height desc limit 1"
  },
  {
    "db_id": "product_catalog",
    "input": "What is the catalog entry id and product stock number for Cola? | select catalog_entry_id , product_stock_number from catalog_contents where catalog_entry_name = 'Cola' | Is Cola more expensive than Cream Soda?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_entry_name , price_in_dollars from catalog_contents where catalog_entry_name = 'Cola' or catalog_entry_name = 'Cream Soda'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "How many drama workshop groups are in Feliciaberg City? | select count ( * ) from addresses join drama_workshop_groups on addresses.address_id = drama_workshop_groups.address_id where addresses.city_town = 'Feliciaberg' | What is the group's name?",
    "label": "CONFIRM_SQL",
    "output": "select drama_workshop_groups.store_name from addresses join drama_workshop_groups on addresses.address_id = drama_workshop_groups.address_id where addresses.city_town = 'Feliciaberg'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "In what state is it located?  | select addresses.state_county from addresses join drama_workshop_groups on addresses.address_id = drama_workshop_groups.address_id where addresses.city_town = 'Feliciaberg' | What is the exact address? ",
    "label": "CLARIFY",
    "output": "Do you mean line 1 of address?"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "yes\n | select addresses.line_1 from addresses join drama_workshop_groups on addresses.address_id = drama_workshop_groups.address_id where addresses.city_town = 'Feliciaberg' | Are there other work shop groups in Florida?",
    "label": "CONFIRM_SQL",
    "output": "select addresses.* from addresses join drama_workshop_groups on addresses.address_id = drama_workshop_groups.address_id where addresses.state_county = 'Florida'"
  },
  {
    "db_id": "college_2",
    "input": "Find the names of all instructors in the Art department who have taught some course and the course id. | select instructor.name , teaches.course_id from instructor join teaches on instructor.id = teaches.id where instructor.dept_name = 'Art' | Find the names of all instructors in the Art department",
    "label": "CONFIRM_SQL",
    "output": "select name from instructor where dept_name = 'Art'"
  },
  {
    "db_id": "college_2",
    "input": "Find the instructor id of all instructors in the Statistics department | select id from instructor where dept_name = 'Statistics' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  bye"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "How many student are involved in any kind of accident?  | select count ( * ) from students where student_id in ( select student_id from behavior_incident ) | How about student not involved in any kind of incident? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from students where student_id not in ( select student_id from behavior_incident )"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "And what are their names? | select first_name , middle_name , last_name from students where student_id not in ( select student_id from behavior_incident ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "store_1",
    "input": "Do you want customers' first and last names? | Yes | how many orders are there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from invoices"
  },
  {
    "db_id": "store_1",
    "input": "find the ten customers with the most total orders\n | select customers.* from customers join invoices on invoices.customer_id = customers.id group by customers.id order by count ( * ) desc limit 10 | how many orders do each of them have?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers join invoices on invoices.customer_id = customers.id group by customers.id order by count ( * ) desc limit 10"
  },
  {
    "db_id": "store_1",
    "input": "List the customers not in the top ten by number of orders | Could you ask other questions? I cannot answer this one. | how many customers are there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers"
  },
  {
    "db_id": "store_1",
    "input": "how many customers have 7 or more orders | select count ( * ) from ( select * from customers join invoices on invoices.customer_id = customers.id group by customers.id having count ( * ) >= 7 ) | List all customers with 7 or more orders and number of orders",
    "label": "CONFIRM_SQL",
    "output": "select first_name , last_name , cnt from ( select customers.first_name , customers.last_name , count ( * ) as cnt from customers join invoices on invoices.customer_id = customers.id group by customers.id order by count ( * ) desc ) where cnt >= 7"
  },
  {
    "db_id": "film_rank",
    "input": "how many country participate in the market? | select count ( distinct country ) from market | how many directors of the films never presented in china?",
    "label": "CONFIRM_SQL",
    "output": "select count ( director ) from film where film_id not in ( select film_id from film_market_estimation join market on film_market_estimation.market_id = market.market_id where country = 'China' )"
  },
  {
    "db_id": "film_rank",
    "input": "how many titles were never presented in china? | select count ( title ) from film where film_id not in ( select film_id from film_market_estimation join market on film_market_estimation.market_id = market.market_id where country = 'China' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "customer_complaints",
    "input": "WHAT IS LAST NAME OF THE STAFF WHO HAS HANDLED THE FIRST EVER COMPLAINT?\n | select staff.last_name from staff join complaints on staff.staff_id = complaints.staff_id order by complaints.date_complaint_raised asc limit 1 | THE FIRST NAME OF THE STAFF WHO HAS HANDLED THE LAST COMPLAINT",
    "label": "CONFIRM_SQL",
    "output": "select staff.first_name from staff join complaints on staff.staff_id = complaints.staff_id order by complaints.date_complaint_raised desc limit 1"
  },
  {
    "db_id": "customer_complaints",
    "input": "THANKS!\n | Do  you  have  more  question  ? | NO",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "music_1",
    "input": "What is the lowest duration of songs that have mp3 format and resolution below 800? | select min ( files.duration ) from files join song on files.f_id = song.f_id where files.formats = 'mp3' and song.resolution < 800 | What is the highest duration of songs that have mp3 format and resolution below 800?",
    "label": "CONFIRM_SQL",
    "output": "select max ( files.duration ) from files join song on files.f_id = song.f_id where files.formats = 'mp3' and song.resolution < 800"
  },
  {
    "db_id": "music_1",
    "input": "What is the average duration of songs that have mp3 format and resolution below 800? | select avg ( files.duration ) from files join song on files.f_id = song.f_id where files.formats = 'mp3' and song.resolution < 800 | Thanks!",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "chinook_1",
    "input": "Which artist has the most albums?\n  | select artist.name from album join artist on album.artistid = artist.artistid group by artist.name order by count ( * ) desc limit 1 | Which artist has the lowest albums?",
    "label": "CLARIFY",
    "output": "Did you mean which artist has the least number of albums?"
  },
  {
    "db_id": "chinook_1",
    "input": "Yes, I mean it.\nwhich artist has the least number of albums? | select artist.name from album join artist on album.artistid = artist.artistid group by artist.name order by count ( * ) asc limit 1 | Can you tell me the artist ID number of the Iron Maiden?",
    "label": "CONFIRM_SQL",
    "output": "select album.artistid from album join artist on album.artistid = artist.artistid group by artist.name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "chinook_1",
    "input": "Can you tell me the artist ID number of the Aaron Copland & London Symphony Orchestra. | select album.artistid from album join artist on album.artistid = artist.artistid group by artist.name order by count ( * ) asc limit 1 | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "activity_1",
    "input": "I want to know the names of advisors available | select fname , lname from faculty | Could you tell me the names of advisors for female students?",
    "label": "CONFIRM_SQL",
    "output": "select faculty.fname , faculty.lname from student join faculty on faculty.facid = student.advisor where student.sex = 'F'"
  },
  {
    "db_id": "activity_1",
    "input": "What about the name of the advisor for the student named Linda Smith? | select faculty.fname , faculty.lname from student join faculty on faculty.facid = student.advisor where student.fname = 'Linda' and student.lname = 'Smith' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks! Goodbye"
  },
  {
    "db_id": "inn_1",
    "input": "How many rooms are there? | select count ( * ) from rooms | What are their prices?",
    "label": "CONFIRM_SQL",
    "output": "select baseprice from rooms"
  },
  {
    "db_id": "inn_1",
    "input": "What is the id of the room with a base price of 250? | select roomid from rooms where baseprice = 250 | What is the name of that room?",
    "label": "CONFIRM_SQL",
    "output": "select roomname from rooms where baseprice = 250"
  },
  {
    "db_id": "news_report",
    "input": "How many events are there? | select count ( * ) from event | Can you list the ids of them by the numer of people attended?",
    "label": "CLARIFY",
    "output": "Do you want to list them in ascending order or descending order?"
  },
  {
    "db_id": "news_report",
    "input": "Descending please | select event_id from event order by event_attendance desc | Can you please also include their names and the number of peole attended?",
    "label": "CONFIRM_SQL",
    "output": "select event_id , event_attendance , name from event order by event_attendance desc"
  },
  {
    "db_id": "school_finance",
    "input": "how many school are presented on the table | select count ( * ) from school | list out the school name",
    "label": "CONFIRM_SQL",
    "output": "select school_name from school"
  },
  {
    "db_id": "school_finance",
    "input": "what is the location of bremen | select location from school where school_name = 'Bremen' | thanks",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "college_3",
    "input": "How many male faculties live in NEB? | select count ( * ) from faculty where sex = 'M' and building = 'NEB' | What is the rank of \tMark Giuliano?",
    "label": "CONFIRM_SQL",
    "output": "select rank from faculty where fname = 'Mark' and lname = 'Giuliano'"
  },
  {
    "db_id": "college_3",
    "input": "How many of the faculties are the rank of professors? | select count ( * ) from faculty where rank = 'Professor' | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "e_learning",
    "input": "List the author ids listed more than once in the courses | select author_id from courses group by author_id having count ( author_id ) > 1 | Find the addresses and author IDs of the course authors that teach at least two courses.",
    "label": "CONFIRM_SQL",
    "output": "select course_authors_and_tutors.address_line_1 , courses.author_id from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id group by courses.author_id having count ( * ) >= 2"
  },
  {
    "db_id": "e_learning",
    "input": "How about those who teaches at least one course? | select course_authors_and_tutors.address_line_1 , courses.author_id from course_authors_and_tutors join courses on course_authors_and_tutors.author_id = courses.author_id group by courses.author_id having count ( * ) >= 1 | Thanks",
    "label": "GOOD_BYE",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "Could you please list the first and last names of all the customers that have at least two cards? | select customers.customer_first_name , customers.customer_last_name from customers_cards join customers on customers_cards.customer_id = customers.customer_id group by customers_cards.customer_id having count ( * ) >= 2 | Please add their IDs into the table?",
    "label": "CONFIRM_SQL",
    "output": "select customers_cards.customer_id , customers.customer_first_name , customers.customer_last_name from customers_cards join customers on customers_cards.customer_id = customers.customer_id group by customers_cards.customer_id having count ( * ) >= 2"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "What are the addresses of all the customers with credit cards? | select customers.customer_address from customers_cards join customers on customers_cards.customer_id = customers.customer_id where customers_cards.card_type_code = 'Credit' | What is the email of the customer that has the credit card with the earliest date valid from?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_email from customers_cards join customers on customers_cards.customer_id = customers.customer_id where customers_cards.date_valid_from = ( select min ( date_valid_from ) from customers_cards )"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "I want to know the payment methods available | select distinct payment_method from customers | Do you have the count of each payment method?",
    "label": "CONFIRM_SQL",
    "output": "select payment_method , count ( * ) from customers group by payment_method"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "How many customers use credit credit card as a means of payment? | select count ( * ) from customers where payment_method = 'Credit Card' | What about Cash?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers where payment_method = 'Cash'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "And Cheque? | select count ( * ) from customers where payment_method = 'Cheque' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "store_1",
    "input": "Please show me a list of the top 5 countries by number of invoices. List country name. | select billing_country from invoices group by billing_country order by count ( * ) desc limit 5 | OK! Can you also show me the number of invoices for these 5 countries.",
    "label": "CONFIRM_SQL",
    "output": "select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) desc limit 5"
  },
  {
    "db_id": "store_1",
    "input": "May I also see the names of bottom 5 countries by number of invoices. Please show me country names and number of invoices. | select billing_country , count ( * ) from invoices group by billing_country order by count ( * ) asc limit 5 | Can you show me the postal codes for these countries.",
    "label": "CONFIRM_SQL",
    "output": "select billing_country , billing_postal_code from invoices group by billing_country order by count ( * ) asc limit 5"
  },
  {
    "db_id": "sakila_1",
    "input": "What is the genre name of the film HUNGER ROOF, please? | select category.name from category join film_category on category.category_id = film_category.category_id join film on film_category.film_id = film.film_id where film.title = 'HUNGER ROOF' | How many other films have that same genre name?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from category join film_category on category.category_id = film_category.category_id join film on film_category.film_id = film.film_id where category.name = 'Foreign'"
  },
  {
    "db_id": "sakila_1",
    "input": "Of those films, which ones have the special features Deleted Scenes? | select count ( * ) from category join film_category on category.category_id = film_category.category_id join film on film_category.film_id = film.film_id where category.name = 'Foreign' and film.special_features = 'Deleted Scenes' | What about the special features Trailers?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from category join film_category on category.category_id = film_category.category_id join film on film_category.film_id = film.film_id where category.name = 'Foreign' and film.special_features = 'Trailers'"
  },
  {
    "db_id": "sakila_1",
    "input": "What about films of the genre Action? | select count ( * ) from category join film_category on category.category_id = film_category.category_id join film on film_category.film_id = film.film_id where category.name = 'Foreign' and film.special_features = 'Action' | SELECT count(*) FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T1.name  =  \"Action\"",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "soccer_2",
    "input": "Hello, can you please tell me the average training hours of all the players? | Sorry the information is not available in the table. | What about the average training hours of all the players whose names contain the letter 'a'?",
    "label": "SORRY",
    "output": "Sorry the training hour information is not available from the table."
  },
  {
    "db_id": "soccer_2",
    "input": "Can you tell me the player id of each player with the letter 'a' in their name? | select pid from player where pname like '%a%' | How many of those players have a yes card?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from player where pname like '%a%' and ycard = 'yes'"
  },
  {
    "db_id": "chinook_1",
    "input": "Do you mean the first names? | Yes | Can you show me the customer names that have an invoice?",
    "label": "CONFIRM_SQL",
    "output": "select firstname , lastname from customer where customerid in ( select customerid from customer intersect select customerid from invoice )"
  },
  {
    "db_id": "chinook_1",
    "input": "Hmm, I want to know all the customer names that live in Brazil and have an invoice. | select distinct customer.firstname from customer join invoice on customer.customerid = invoice.customerid where customer.country = 'Brazil' | Can you also list their customer ids?",
    "label": "CONFIRM_SQL",
    "output": "select distinct customer.firstname , customer.customerid from customer join invoice on customer.customerid = invoice.customerid where customer.country = 'Brazil'"
  },
  {
    "db_id": "dorm_1",
    "input": "Find the name of the amenities that Smith Hall dorm has.  | select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm.dorm_name = 'Smith Hall' | Order that by amenity name please?",
    "label": "CONFIRM_SQL",
    "output": "select dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm.dorm_name = 'Smith Hall' order by dorm_amenity.amenity_name asc"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the amenity id of those? | select has_amenity.amenid from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm.dorm_name = 'Smith Hall' order by dorm_amenity.amenity_name asc | What dorm id have the amenity id 901?",
    "label": "CONFIRM_SQL",
    "output": "select has_amenity.dormid from has_amenity where has_amenity.amenid = 901"
  },
  {
    "db_id": "dorm_1",
    "input": "What dorm id have the amenity id 904? | select has_amenity.dormid from has_amenity where has_amenity.amenid = 904 | What dorm id have the amenity id 922?",
    "label": "CONFIRM_SQL",
    "output": "select has_amenity.dormid from has_amenity where has_amenity.amenid = 922"
  },
  {
    "db_id": "workshop_paper",
    "input": "How many author are in the workshop altogether | select count ( distinct author ) from submission | Give me the names of all the authors.",
    "label": "CONFIRM_SQL",
    "output": "select distinct author from submission"
  },
  {
    "db_id": "workshop_paper",
    "input": "How many workshops did each author submitted to | select submission.author , count ( distinct acceptance.workshop_id ) from acceptance join submission on acceptance.submission_id = submission.submission_id group by submission.author | Thanks",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "What is the average transaction amount? | select avg ( transaction_amount ) from financial_transactions | What is the total transaction amount?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( transaction_amount ) from financial_transactions"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "What is the average payment amount? | select avg ( transaction_amount ) from financial_transactions where transaction_type = 'Payment' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "product_catalog",
    "input": "how many Catalog Contents there | select count ( * ) from catalog_contents | what is the parent entry id of cola",
    "label": "CONFIRM_SQL",
    "output": "select parent_entry_id from catalog_contents where catalog_entry_name = 'Cola'"
  },
  {
    "db_id": "product_catalog",
    "input": "what is the product stock number of Cream Soda | select product_stock_number from catalog_contents where catalog_entry_name = 'Cream Soda' | thanks",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Do you mean the typical buying price of all products with the color description red? | Yes. | What is the color description of the product with the name \"catnip\"?",
    "label": "CONFIRM_SQL",
    "output": "select ref_colors.color_description from products join ref_colors on products.color_code = ref_colors.color_code where products.product_name = 'catnip'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the product names of all products with the color description red? | select products.product_name from products join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'red' | Could you add in the typical buying price of each of those please?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_name , products.typical_buying_price from products join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'red'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "What are the product descriptions of all products with the color description green? | select products.product_description from products join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'green' | Can you add into the table their product names, please?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_name , products.product_description from products join ref_colors on products.color_code = ref_colors.color_code where ref_colors.color_description = 'green'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Show me the names of the workshop groups that have bookings with status code \"stop\"? | select drama_workshop_groups.store_name from bookings join drama_workshop_groups on bookings.workshop_group_id = drama_workshop_groups.workshop_group_id where bookings.status_code = 'stop' | Show me IDs of  workshop groups that have bookings with status code \"stop\"",
    "label": "CONFIRM_SQL",
    "output": "select drama_workshop_groups.workshop_group_id from bookings join drama_workshop_groups on bookings.workshop_group_id = drama_workshop_groups.workshop_group_id where bookings.status_code = 'stop'"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Show me Address IDs  of workshop groups that have bookings with status code \"stop\" | select drama_workshop_groups.address_id from bookings join drama_workshop_groups on bookings.workshop_group_id = drama_workshop_groups.workshop_group_id where bookings.status_code = 'stop' | Thanks!",
    "label": "WELCOME",
    "output": "Okay. Bye!"
  },
  {
    "db_id": "assets_maintenance",
    "input": "what is the date of the earliest contract?\n | select maintenance_contracts.contract_start_date from third_party_companies join maintenance_contracts on third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id order by maintenance_contracts.contract_start_date asc limit 1 | and which contract id is associated with that contract",
    "label": "CONFIRM_SQL",
    "output": "select maintenance_contracts.maintenance_contract_id from third_party_companies join maintenance_contracts on third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id order by maintenance_contracts.contract_start_date asc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "and what is the company name associated with ID 9? | select third_party_companies.company_name from third_party_companies join maintenance_contracts on third_party_companies.company_id = maintenance_contracts.maintenance_contract_company_id where maintenance_contracts.maintenance_contract_id = 9 | thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "assets_maintenance",
    "input": "Which assets have 2 parts and have less than 2 fault logs? List the asset id and detail. | select assets.asset_id , assets.asset_details from assets join asset_parts on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) = 2 intersect select assets.asset_id , assets.asset_details from assets join fault_log on assets.asset_id = fault_log.asset_id group by assets.asset_id having count ( * ) < 2 | What is the asset make and asset model for asset id 2?",
    "label": "CONFIRM_SQL",
    "output": "select asset_make , asset_model from assets where asset_id = 2"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What are the asset acquired date and asset disposed date for asset id 2? | select asset_acquired_date , asset_disposed_date from assets where asset_id = 2 | How many other asset details are there labeled in Bad condition?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from assets where other_asset_details = 'Bad condition'"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What is the maintenance contract id and supplier company id for asset id 2? | select maintenance_contract_id , supplier_company_id from assets where asset_id = 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "musical",
    "input": "which musical ids showed up at least three times in the actor table? | select musical.musical_id from actor join musical on actor.musical_id = musical.musical_id group by actor.musical_id having count ( * ) >= 3 | What year is that musical with id 6?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( musical.year ) from actor join musical on actor.musical_id = musical.musical_id where musical.musical_id = 6"
  },
  {
    "db_id": "musical",
    "input": "And what's the name for that musical with ID 6? | select distinct ( musical.name ) from actor join musical on actor.musical_id = musical.musical_id where musical.musical_id = 6 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "phone_market",
    "input": "Can you show me the total number of phones? | select count ( * ) from phone | how about the total number of different carriers?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct carrier ) from phone"
  },
  {
    "db_id": "phone_market",
    "input": "Can you list the phones with carrier either Sprint or TMobile? | select phone_id from phone where carrier = 'Sprint' or carrier = 'TMobile' | Can you please include their names?",
    "label": "CONFIRM_SQL",
    "output": "select phone_id , name from phone where carrier = 'Sprint' or carrier = 'TMobile'"
  },
  {
    "db_id": "party_host",
    "input": "which locations of parties have hosts older than 50? | select party.location from party_host join host on party_host.host_id = host.host_id join party on party_host.party_id = party.party_id where host.age > 50 | How many hosts does party theme spring have?",
    "label": "CONFIRM_SQL",
    "output": "select number_of_hosts from party where party_theme = 'Spring'"
  },
  {
    "db_id": "party_host",
    "input": "Which party does Lloyd Daniels host? | Did you want the location of the party hosted by the host named Lloyd Daniels? | yes",
    "label": "INFORM_SQL",
    "output": "How many parties are hosted in Hemkade 48 Zaandam?"
  },
  {
    "db_id": "party_host",
    "input": "select count ( * ) from party where location = 'Hemkade 48 Zaandam' | How many hosts have the nationality united states? | select count ( * ) from host where nationality = 'United States'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "hr_1",
    "input": "Display the employee ID and salary of all employees who report to payam (First name) | select employee_id , salary from employees where manager_id = ( select employee_id from employees where first_name = 'Payam' ) | What is the highest salary? who did earn it",
    "label": "CONFIRM_SQL",
    "output": "select * from employees order by salary desc limit 1"
  },
  {
    "db_id": "hr_1",
    "input": "What is the lowest salary? who did earn it | select * from employees order by salary asc limit 1 | What is the name of the following phone number 515.123.4569? Tell me Employer ID",
    "label": "CONFIRM_SQL",
    "output": "select employee_id , first_name , last_name from employees where phone_number = '515.123.4569'"
  },
  {
    "db_id": "hr_1",
    "input": "Who is the senior employee and tell me first name? Tell me the hire date | What do you mean by senior employee?  | What is the lowest hire date? tell me the first name.",
    "label": "CONFIRM_SQL",
    "output": "select first_name , hire_date from employees order by hire_date asc limit 1"
  },
  {
    "db_id": "performance_attendance",
    "input": "list all dates available  | select date from performance | on what date of the performance with the highest number of attendees? ",
    "label": "CONFIRM_SQL",
    "output": "select date from performance order by attendance desc limit 1"
  },
  {
    "db_id": "performance_attendance",
    "input": "what are their performance id?  | Whose performance ids do you want? | of the highest number of attendees",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the performance id of the performance with the highest number of attendees?"
  },
  {
    "db_id": "performance_attendance",
    "input": "yes | select performance_id from performance order by attendance desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye."
  },
  {
    "db_id": "college_2",
    "input": "Can you show me how many departments there are? | Did you mean the number of distinct department names? | Yes, please",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct dept_name ) from student"
  },
  {
    "db_id": "college_2",
    "input": "Can you also show me the total number of instructers? | what  did  you  mean by instructers?  can  you  give  more  info? | Sorry, I meant instructors",
    "label": "CONFIRM_SQL",
    "output": "select count ( i_id ) from advisor"
  },
  {
    "db_id": "college_2",
    "input": "Can you show me the id of the instructor who is from the History department? | select i_id from advisor join student on advisor.s_id = student.id where student.dept_name = 'History' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome  and  goodbye "
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "How many bookings are there? | select count ( * ) from bookings | How many different statuses are used on those bookings?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct status_code ) from bookings"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "Which of those statuses is used most commonly? | select status_code from bookings group by status_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "election",
    "input": "Return all the committees that have delegates from Democratic Party. | select election.committee from election join party on election.party = party.party_id where party.party = 'Democratic' | Hmm. Please return all the committees that have delegates from Liberal party.",
    "label": "CONFIRM_SQL",
    "output": "select election.committee from election join party on election.party = party.party_id where party.party = 'Liberal'"
  },
  {
    "db_id": "election",
    "input": "Please give me all the delegates's names from Liberal party in Appropriations committee | select election.delegate from election join party on election.party = party.party_id where party.party = 'Liberal' and election.committee = 'Appropriations' | Can you also give me all the delegate's name from Liberal party in Economic Matters committee.",
    "label": "CONFIRM_SQL",
    "output": "select election.delegate from election join party on election.party = party.party_id where party.party = 'Liberal' and election.committee = 'Economic Matters'"
  },
  {
    "db_id": "election",
    "input": "Can you please give the delegates name from Democratic Party in economic matters committee? | select election.delegate from election join party on election.party = party.party_id where party.party = 'Democratic' and election.committee = 'Economic Matters' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "sakila_1",
    "input": "Did you want the title of all films? | Yes | Show me all the films which listed in the table?",
    "label": "CONFIRM_SQL",
    "output": "select title from film"
  },
  {
    "db_id": "sakila_1",
    "input": "Show me all films longer than 100 minutes?\n | select title from film where length > 100 | Show me all the films not longer than 100 minutes?",
    "label": "CONFIRM_SQL",
    "output": "select title from film where length <= 100"
  },
  {
    "db_id": "sakila_1",
    "input": "Find all the films rated PG, except those who cost more than 200 for replacement? | select title from film where rating = 'PG' except select title from film where replacement_cost > 200 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "perpetrator",
    "input": "show the date of the tallest perpetrator.\n | select perpetrator.date from people join perpetrator on people.people_id = perpetrator.people_id order by people.height desc limit 1 | show me the location of the tallest perpetrator.",
    "label": "CONFIRM_SQL",
    "output": "select perpetrator.location from people join perpetrator on people.people_id = perpetrator.people_id order by people.height desc limit 1"
  },
  {
    "db_id": "perpetrator",
    "input": "what country is Kaio from? | select country from perpetrator where location = 'Kaio' | how many people were killed in Japan?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( killed ) from perpetrator where country = 'Japan'"
  },
  {
    "db_id": "perpetrator",
    "input": "how many got injured in japan? | select sum ( injured ) from perpetrator where country = 'Japan' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "shop_membership",
    "input": "Which cities have a branch?\n | select distinct city from branch | How many branches does London have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( branch_id ) from branch where city = 'London'"
  },
  {
    "db_id": "shop_membership",
    "input": "Do any of them have more than 100 memberships? | select branch_id from branch where membership_amount > 100 and city = 'London' | How many branches does Oxford have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( branch_id ) from branch where city = 'Oxford'"
  },
  {
    "db_id": "shop_membership",
    "input": "Do any of them have more than 100 memberships?\n | select count ( branch_id ) from branch where city = 'Oxford' and membership_amount > 100 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "customer_complaints",
    "input": "Hello, how many complaints have we had? | select count ( * ) from complaints | How about customers?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers"
  },
  {
    "db_id": "customer_complaints",
    "input": "How many customers have filed complaints? | select count ( * ) from customers where customer_id in ( select customer_id from complaints ) | And how many have not filed complaints?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers where customer_id not in ( select customer_id from complaints )"
  },
  {
    "db_id": "customer_complaints",
    "input": "What is that customer's phone number? | select phone_number from customers where customer_id not in ( select customer_id from complaints ) | what about that customer's email?",
    "label": "CONFIRM_SQL",
    "output": "select email_address from customers where customer_id not in ( select customer_id from complaints )"
  },
  {
    "db_id": "baseball_1",
    "input": "how many postseason on the table | select count ( * ) from postseason | which postseason are highest wins",
    "label": "CLARIFY",
    "output": "Would you like all information for the entry in postseason with the highest value for wins?"
  },
  {
    "db_id": "baseball_1",
    "input": "exactly | select * from postseason order by wins desc limit 1 | what is the second postseason year on the table",
    "label": "CONFIRM_SQL",
    "output": "select year from postseason order by year desc limit 2"
  },
  {
    "db_id": "epinions_1",
    "input": "What is the name of the item with the highest average rating? | select item.title from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rating ) desc limit 1 | What is its id?",
    "label": "CONFIRM_SQL",
    "output": "select item.i_id from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rating ) desc limit 1"
  },
  {
    "db_id": "epinions_1",
    "input": "What is the name of the item with the lowest average rating? | select item.title from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rating ) asc limit 1 | What is its item id?",
    "label": "CONFIRM_SQL",
    "output": "select item.i_id from item join review on item.i_id = review.i_id group by review.i_id order by avg ( review.rating ) asc limit 1"
  },
  {
    "db_id": "epinions_1",
    "input": "What item names have a rating of 5? | select item.title from item join review on item.i_id = review.i_id where rating = 5 | Thanks!",
    "label": "CONFIRM_SQL",
    "output": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id where rating = 5"
  },
  {
    "db_id": "club_1",
    "input": "what is last name of the members in club? | select student.lname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid | what is the first name of the student with last name smith?",
    "label": "CONFIRM_SQL",
    "output": "select fname from student where lname = 'Smith'"
  },
  {
    "db_id": "club_1",
    "input": "what is type of position? | I  have  no  infor  about   position | thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "e_learning",
    "input": "What is the date of enrollment of the course named \"Spanish\"? | select student_course_enrolment.date_of_enrolment from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id where courses.course_name = 'Spanish' | What is the date of enrollment in the course named \"database\"?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_enrolment.date_of_enrolment from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id where courses.course_name = 'database'"
  },
  {
    "db_id": "e_learning",
    "input": "What is the date of enrollment in the course named \"advanced database\"? | select student_course_enrolment.date_of_enrolment from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id where courses.course_name = 'advanced database' | What is the date of enrollment in the course named \"operating system\"?",
    "label": "CONFIRM_SQL",
    "output": "select student_course_enrolment.date_of_enrolment from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id where courses.course_name = 'operating system'"
  },
  {
    "db_id": "e_learning",
    "input": "What is the date of completion in the course named \"advanced database?\" | select student_course_enrolment.date_of_completion from courses join student_course_enrolment on courses.course_id = student_course_enrolment.course_id where courses.course_name = 'advanced database' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the enrollments of all colleges in the state of FL? | select sum ( enr ) from college where state = 'FL' | What are the names of all colleges that have an enrollment greater than at least one of the colleges in FL?",
    "label": "CONFIRM_SQL",
    "output": "select distinct cname from college where enr > ( select min ( enr ) from college where state = 'FL' )"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the names of all colleges that have an enrollment greater than at least one of the colleges in OK? | select distinct cname from college where enr > ( select min ( enr ) from college where state = 'OK' ) | How about the names of all colleges that have an enrollment less than at least one of the colleges in OK?",
    "label": "CONFIRM_SQL",
    "output": "select distinct cname from college where enr < ( select max ( enr ) from college where state = 'OK' )"
  },
  {
    "db_id": "soccer_2",
    "input": "What are the names of all colleges that have an enrollment less than at least one of the colleges in FL? | select distinct cname from college where enr < ( select max ( enr ) from college where state = 'FL' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "hospital_1",
    "input": "Hello!  How are you!  Can you provide me with a list of all patient names? | select name from patient | Thank you so much!  Can you filter this list to show only the patients who had more than one appointment?",
    "label": "CONFIRM_SQL",
    "output": "select name from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) > 1"
  },
  {
    "db_id": "hospital_1",
    "input": "Great! Can you update this list to include the phone number of each of these patients? | select name , phone from appointment join patient on appointment.patient = patient.ssn group by appointment.patient having count ( * ) > 1 | Thanks!",
    "label": "THANK_YOU",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Hello!  Can you provide me with a list of all of the settlement IDs and the corresponding settlement amounts? | select settlement_id , settlement_amount from settlements | Great! Can you calculate for me the sum total of all Settlement Amounts and also the average Settlement Amount for all settlements?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( settlement_amount ) , avg ( settlement_amount ) from settlements"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Wonderful!  Can you show me what the oldest settlement effective date is? | select effective_date from settlements order by effective_date asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Can you list the names of all customers who don't have any address information, please? | select customer_name from customers where customer_id not in ( select customer_id from customer_address_history ) | Can you find their addresses and add them to the chart?",
    "label": "CONFIRM_SQL",
    "output": "select customer_name , customer_address from customers where customer_id not in ( select customer_id from customer_address_history )"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "Can you list the customer names for all the customers that don't have anything listed under the customer_address column? | select customer_name from customers where customer_id not in ( select customer_id from customer_address_history ) | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Show me all the policy types available? | Do  you mean \tpolicy  type  code? | yes",
    "label": "CLARIFY",
    "output": "\nDo you want to remove duplication?"
  },
  {
    "db_id": "insurance_fnol",
    "input": "yes | select distinct policy_type_code from available_policies | Show me the policy type code with policy id 257?",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from available_policies where policy_id = 257"
  },
  {
    "db_id": "insurance_fnol",
    "input": "Show me the policy id of the policy type code Life insurance? | select policy_id from available_policies where policy_type_code = 'Life Insurance' | Show which policy type has the most records in the database?",
    "label": "CONFIRM_SQL",
    "output": "select policy_type_code from available_policies group by policy_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "bike_1",
    "input": "How many stations have an average bike availability above 10? | select count ( * ) from ( select * from station join status on station.id = status.station_id group by status.station_id having avg ( bikes_available ) > 10 ) | How many of those are not in San Jose City?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select station.name from station join status on station.id = status.station_id group by status.station_id having avg ( bikes_available ) > 10 except select name from station where city = 'San Jose' )"
  },
  {
    "db_id": "bike_1",
    "input": "What are the names of those stations? | select station.name from station join status on station.id = status.station_id group by status.station_id having avg ( bikes_available ) > 10 except select name from station where city = 'San Jose' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you. Bye"
  },
  {
    "db_id": "device",
    "input": "Hello!  Can you show me a list of all of the shop names? | select shop_name from shop | Beautiful!  Can you update this list to include the stock quantity for all of these shops?",
    "label": "CONFIRM_SQL",
    "output": "select shop.shop_name , stock.quantity from stock join shop on stock.shop_id = shop.shop_id"
  },
  {
    "db_id": "device",
    "input": "Can you filter this list to show the name of the shop that has the largest quantity of stock, and please also display the quantity of stock? | select shop.shop_name , stock.quantity from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id order by sum ( stock.quantity ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "assets_maintenance",
    "input": "how many skills are presented on the table | select count ( * ) from skills | show all the skill descriptions.",
    "label": "CONFIRM_SQL",
    "output": "select skill_description from skills"
  },
  {
    "db_id": "assets_maintenance",
    "input": "list out the fault short names | select fault_short_name from part_faults | what is the skill code of Mechanical",
    "label": "CONFIRM_SQL",
    "output": "select skill_code from skills where skill_description = 'Mechanical'"
  },
  {
    "db_id": "college_1",
    "input": "How many professors are there in total? | select count ( * ) from professor | What are the names of the departments they teach classes for?",
    "label": "CONFIRM_SQL",
    "output": "select distinct department.dept_name from class join employee on class.prof_num = employee.emp_num join professor on employee.emp_num = professor.emp_num join department on department.dept_code = professor.dept_code"
  },
  {
    "db_id": "college_1",
    "input": "How many of the 22 professors are part of the Accounting department? | select count ( * ) from professor where dept_code = 'ACCT' | How many of those 3 are currently teaching courses?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct professor.emp_num ) from class join employee on class.prof_num = employee.emp_num join professor on employee.emp_num = professor.emp_num join department on department.dept_code = professor.dept_code where professor.dept_code = 'ACCT'"
  },
  {
    "db_id": "college_1",
    "input": "Could you tell me the number of them that are teaching in a physical class room instead of through online classes? | select count ( distinct professor.emp_num ) from class join employee on class.prof_num = employee.emp_num join professor on employee.emp_num = professor.emp_num join department on department.dept_code = professor.dept_code where professor.dept_code = 'ACCT' | What are their first names and the class rooms where they teach?",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname , class.class_room from class join employee on class.prof_num = employee.emp_num join professor on employee.emp_num = professor.emp_num join department on department.dept_code = professor.dept_code where department.dept_name = 'Accounting'"
  },
  {
    "db_id": "music_1",
    "input": "can you how me a list of artists? | select artist_name from artist | can you show me their ratings?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name , rating from song"
  },
  {
    "db_id": "music_1",
    "input": "can you show me song's language? | select song_name , languages from song | thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome, bye."
  },
  {
    "db_id": "student_assessment",
    "input": "Which students didn't attend courses?  | select * from student_course_registrations where student_id not in ( select student_id from student_course_attendance ) | How about student that did attend courses?",
    "label": "CONFIRM_SQL",
    "output": "select * from student_course_registrations where student_id in ( select student_id from student_course_attendance )"
  },
  {
    "db_id": "student_assessment",
    "input": "On what date did the courses start?  | Do you mean the registration date of students or the date of attendance of students? | Registration date",
    "label": "CONFIRM_SQL",
    "output": "select registration_date from student_course_registrations"
  },
  {
    "db_id": "student_assessment",
    "input": "Which course had the least attendance rate? | Sorry the question cannot be answered from the table. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "aircraft",
    "input": "Number of international passengers per airport? | Did you want the names of airports and their number of international passengers? | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select airport_name , international_passengers from airport"
  },
  {
    "db_id": "aircraft",
    "input": "Which of these has the largest number of intentional passengers? | select airport_name from airport order by international_passengers desc limit 1 | Ok. Can you show all the information for London Heathrow airport?",
    "label": "CONFIRM_SQL",
    "output": "select * from airport where airport_name = 'London Heathrow'"
  },
  {
    "db_id": "aircraft",
    "input": "Ok. What of the second largest? | Did you mean the information for the airport with the second largest number of international passengers? | yes please.",
    "label": "CONFIRM_SQL",
    "output": "select * from ( select * from airport order by international_passengers desc limit 2 ) where airport_name != ( select airport_name from airport order by international_passengers desc limit 1 )"
  },
  {
    "db_id": "musical",
    "input": "list the names of the musicals with more than three actors | select musical.name from actor join musical on actor.musical_id = musical.musical_id group by actor.musical_id having count ( * ) > 3 | Are there any musicals with at least three actors?",
    "label": "CONFIRM_SQL",
    "output": "select musical.name from actor join musical on actor.musical_id = musical.musical_id group by actor.musical_id having count ( * ) >= 3"
  },
  {
    "db_id": "musical",
    "input": "Is it possible for you to show me the name of the musicals with nothing less than three actors | select musical.name from actor join musical on actor.musical_id = musical.musical_id group by actor.musical_id having count ( * ) >= 3 | Thanks",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_1",
    "input": "Who is the professor in the office DRE 102? | Do you want their first name, last name, or initial? | last name and hire date please.",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_lname , employee.emp_hiredate from employee join professor on employee.emp_num = professor.emp_num where professor.prof_office = 'DRE 102'"
  },
  {
    "db_id": "college_2",
    "input": "what is the name of dept of statistics | Do you mean the name of instructors from the statistics department? | yes",
    "label": "CONFIRM_SQL",
    "output": "select name from instructor where dept_name = 'Statistics'"
  },
  {
    "db_id": "college_2",
    "input": "show the total no. of ID | select count ( id ) from instructor | what is the salary of the the ID 78699",
    "label": "CONFIRM_SQL",
    "output": "select salary from instructor where id = 78699"
  },
  {
    "db_id": "college_2",
    "input": "what is the dept. name of the \tMcKinnon | select dept_name from instructor where name = 'McKinnon' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! What else can I help?"
  },
  {
    "db_id": "college_2",
    "input": "What is the name of the student who has the highest total credits in the History department? | select name from student where dept_name = 'History' order by tot_cred desc limit 1 | how many students are in the history department?",
    "label": "CONFIRM_SQL",
    "output": "select count ( name ) from student where dept_name = 'History'"
  },
  {
    "db_id": "college_2",
    "input": "what is the average total credits in the history department? | select avg ( tot_cred ) from student where dept_name = 'History' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many rooms are in the apartment number suite 645? | select count ( * ) from apartments where apt_number = 'Suite 645' | SELECT sum(room_count) FROM Apartments WHERE apt_number = \"Suite 645\"",
    "label": "INFORM_SQL",
    "output": "There are many bedrooms in all the apartments?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "select min ( bathroom_count ) from apartments | What is the building id of apartment Apt 585? | select building_id from apartments where apt_number = 'Apt. 585'",
    "label": "INFORM_SQL",
    "output": "What is the minimum and maximum number of bathrooms of all the departments?"
  },
  {
    "db_id": "body_builder",
    "input": "show me the body builders name. | select people.name from body_builder join people on body_builder.people_id = people.people_id | What is the height of Jack Campbell?",
    "label": "CONFIRM_SQL",
    "output": "select height from people where name = 'Jack Campbell'"
  },
  {
    "db_id": "body_builder",
    "input": "Who was born after 1990.  | select name , birth_date from people | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "Find the name of the department which has the highest average salary of professors | select dept_name from instructor group by dept_name order by avg ( salary ) desc limit 1 | what is the average salary of a physics professor?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( salary ) from instructor where dept_name = 'Physics'"
  },
  {
    "db_id": "college_2",
    "input": "find the department name which has the lowest average salary of professors | select dept_name from instructor group by dept_name order by avg ( salary ) asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "icfp_1",
    "input": "retrieve the country that has published the least papers? | select inst.country from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.country order by count ( * ) asc limit 1 | retrieve the country that has published the most papers?",
    "label": "CONFIRM_SQL",
    "output": "select inst.country from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid group by inst.country order by count ( * ) desc limit 1"
  },
  {
    "db_id": "icfp_1",
    "input": "What is count of most papers which is USA has published? | select inst.country , count ( * ) from inst join authorship on inst.instid = authorship.instid join papers on authorship.paperid = papers.paperid where country = 'USA' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "What are the interaction type of ALA synthase? | select medicine_enzyme_interaction.interaction_type from enzyme join medicine_enzyme_interaction on enzyme.id = medicine_enzyme_interaction.enzyme_id where name = 'ALA synthase' | Find the product of enzyme id 1?",
    "label": "CONFIRM_SQL",
    "output": "select product from enzyme where id = 1"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Where is the location for medicine id 3? | Sorry, medicine does not have a location. | What is the id and name of the enzyme with most number of medicines that can interact as 'activator'?",
    "label": "CONFIRM_SQL",
    "output": "select enzyme.id , enzyme.name from enzyme join medicine_enzyme_interaction on enzyme.id = medicine_enzyme_interaction.enzyme_id where medicine_enzyme_interaction.interaction_type = 'activitor' group by enzyme.id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "party_people",
    "input": "Hi how are you!?  Can you provide me with a list of all of the different member names? | select distinct member_name from member | Excellent!  Thanks for that!  Can you add to this list the event name associated with each member name?",
    "label": "CONFIRM_SQL",
    "output": "select distinct member_name , party_events.event_name from member join party_events on member.member_id = party_events.member_in_charge_id"
  },
  {
    "db_id": "party_people",
    "input": "Perfect!  Are there any member names that are not associated with any events? | select member_name from member except select member.member_name from member join party_events on member.member_id = party_events.member_in_charge_id | Alright!  Can you please show me a list of all member names who are not associated with any event?",
    "label": "CONFIRM_SQL",
    "output": "select member_name from member except select member.member_name from member join party_events on member.member_id = party_events.member_in_charge_id"
  },
  {
    "db_id": "college_1",
    "input": "how many professors there | select count ( * ) from professor | how many English professors there\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where dept_code = 'ENG'"
  },
  {
    "db_id": "college_1",
    "input": "what is the department code of 103 | Do you mean the department code of professor with emp number 103? | yes sir",
    "label": "CONFIRM_SQL",
    "output": "select dept_code from professor where emp_num = 103"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what are the details of the lots which are not used in any transactions? | select lot_details from lots except select lots.lot_details from lots join transactions_lots on lots.lot_id = transactions_lots.lot_id | what is the transaction id of lot id 11",
    "label": "CONFIRM_SQL",
    "output": "select transaction_id from transactions_lots where lot_id = 11"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "what is the investor id of  transaction id 3? | select lots.investor_id from lots join transactions_lots on lots.lot_id = transactions_lots.lot_id where transactions_lots.transaction_id = 3 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "shop_membership",
    "input": "Who are the members whose hometown address includes Kentucky | Did you want the names of the members whose hometown address includes the word Kentucky? | Yes please give their names.\n",
    "label": "CONFIRM_SQL",
    "output": "select name from member where hometown like '%Kentucky%'"
  },
  {
    "db_id": "shop_membership",
    "input": "Kindly list the card numbers of all the members.\n | select card_number from member | How many members are they in total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from member"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Do you mean the last name of staff with first name \"Lacey\"? | Yes | Do you mean the first name of Staff with last name \"Medhurst\"?",
    "label": "AFFIRM",
    "output": "Yes"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What are the product ids for the problems reported by Christop Berge with closure authorised by Ashley Medhurst? | select product_id from problems join staff on problems.reported_by_staff_id = staff.staff_id where staff.staff_first_name = 'Christop' and staff.staff_last_name = 'Berge' intersect select product_id from problems join staff on problems.closure_authorised_by_staff_id = staff.staff_id where staff.staff_first_name = 'Ashley' and staff.staff_last_name = 'Medhurst' | How many staffs are on the list?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from staff"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "What is the Last name of staff \"Lacey\" of the list? | select staff_last_name from staff where staff_first_name = 'Lacey' | What is the first name of Staff \"Medhurst\" of the list?",
    "label": "CONFIRM_SQL",
    "output": "select staff_first_name from staff where staff_last_name = 'Medhurst'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are the response received dates for the documents described as 'Regular'? | select documents.response_received_date from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where document_types.document_description = 'Regular' | What are the response received dates for the documents with a grant amount more than 100?",
    "label": "CONFIRM_SQL",
    "output": "select documents.response_received_date from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where grants.grant_amount > 100"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "How many documents have the document description \"Initial Application\"? | select count ( * ) from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where document_types.document_description = 'Initial Application' | Can you list all of the grant start dates of those documents please?",
    "label": "CONFIRM_SQL",
    "output": "select grants.grant_start_date from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where document_types.document_description = 'Initial Application'"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What are the grant amounts of those? | select grants.grant_amount from documents join document_types on documents.document_type_code = document_types.document_type_code join grants on documents.grant_id = grants.grant_id where document_types.document_description = 'Initial Application' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "how many course are presented on the table | Did you mean to ask for the number of entries in the table course? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from course"
  },
  {
    "db_id": "college_2",
    "input": "what are all the title are on the table | Did you mean to ask for the titles in the table course? | yeah correct",
    "label": "CONFIRM_SQL",
    "output": "select title from course"
  },
  {
    "db_id": "college_2",
    "input": "what is the credits of C Programming | select credits from course where title = 'C Programming' | list out the student name",
    "label": "CONFIRM_SQL",
    "output": "select name from student"
  },
  {
    "db_id": "college_2",
    "input": "thanks | You are welcome. Good bye! | bye",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "party_people",
    "input": "How many parties are there? | select count ( * ) from party | Can you show me the names of the five parties?",
    "label": "CONFIRM_SQL",
    "output": "select party_name from party"
  },
  {
    "db_id": "party_people",
    "input": "Can you tell me how many events are at each party? | select count ( * ) from party_events join party on party_events.party_id = party.party_id group by party_events.party_id | Thanks",
    "label": "REQUEST_MORE",
    "output": "You're welcome. Would you like to know the number of events with the name of the party?"
  },
  {
    "db_id": "party_people",
    "input": "Yes. | select party.party_name , count ( * ) from party_events join party on party_events.party_id = party.party_id group by party_events.party_id | Do the other 2 parties have 0 events?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from party_events join party on party_events.party_id = party.party_id group by party_events.party_id"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "can you show me a list of transaction type code? | select transaction_type_code from transactions | what is the average of amount of transaction?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( amount_of_transaction ) from transactions"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "can you show me a list of share count? | select share_count from transactions | show the transaction type code that occurs the fewest times.",
    "label": "CONFIRM_SQL",
    "output": "select transaction_type_code from transactions group by transaction_type_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "loan_1",
    "input": "Please show me the greatest total amount of loans to customers for each bank branch. | Sorry, I cannot understand what you ask. Could you ask the question in another way? | I want to know what is the greatest amount of loan to customers that each bank branch has made.",
    "label": "CONFIRM_SQL",
    "output": "select bank.bname , max ( loan.amount ) from loan join bank on loan.branch_id = bank.branch_id join customer on loan.cust_id = customer.cust_id group by bank.bname"
  },
  {
    "db_id": "loan_1",
    "input": "Can you show me the credit score of the customer receiving the greatest amount of loan?  | select customer.credit_score from loan join customer on loan.cust_id = customer.cust_id order by loan.amount desc limit 1 | Can you show me the name of the bank branch providing the greatest total amount of loans to customers?",
    "label": "CONFIRM_SQL",
    "output": "select bank.bname from loan join bank on loan.branch_id = bank.branch_id join customer on loan.cust_id = customer.cust_id group by bank.bname order by sum ( loan.amount ) desc limit 1"
  },
  {
    "db_id": "student_assessment",
    "input": "Did you mean the date of attendance of the student whose id is 121? | Yes. | what is the course id of English course?",
    "label": "CONFIRM_SQL",
    "output": "select course_id from courses where course_name = 'English'"
  },
  {
    "db_id": "student_assessment",
    "input": "name the student ids who attend the statastic course?in order of attendance date | select student_course_attendance.student_id from courses join student_course_attendance on courses.course_id = student_course_attendance.course_id where courses.course_name = 'statistics' order by student_course_attendance.date_of_attendance asc | what is the date of attendance of the student is 121? ",
    "label": "CONFIRM_SQL",
    "output": "select date_of_attendance from student_course_attendance where student_id = 121"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "Show card types with at least 5 cards?\n | select card_type_code from customers_cards group by card_type_code having count ( * ) >= 5 | What are their ids?",
    "label": "CLARIFY",
    "output": "Do you mean card ids for all cards?"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "yes | select card_id from customers_cards | What card type did customer number 14 use?\n",
    "label": "CONFIRM_SQL",
    "output": "select card_type_code from customers_cards where customer_id = 14"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "How about customer number 6? | select card_type_code from customers_cards where customer_id = 6 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Can you list the share counts for all transactions? | select share_count from transactions | Can you add to the table the amount of transaction associated with each share count?",
    "label": "CONFIRM_SQL",
    "output": "select share_count , amount_of_transaction from transactions"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "Can you filter the table to only include transactions with share counts that are at least 100, or with amounts bigger than 100? | select share_count , amount_of_transaction from transactions where share_count >= 100 or amount_of_transaction >= 100 | Can you add to the table the dates of those transactions?",
    "label": "CONFIRM_SQL",
    "output": "select date_of_transaction , share_count , amount_of_transaction from transactions where share_count >= 100 or amount_of_transaction >= 100"
  },
  {
    "db_id": "chinook_1",
    "input": "How many composers do you have recorded in the system ? | select count ( distinct composer ) from track | Have many MPEG media audio files are in the system ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from mediatype join track on mediatype.mediatypeid = track.mediatypeid where mediatype.name = 'MPEG audio file'"
  },
  {
    "db_id": "chinook_1",
    "input": "What is the highest recorded millisecond for a single track ? | select max ( milliseconds ) from track | What is the title name for the highest recorded single track ?",
    "label": "CONFIRM_SQL",
    "output": "select name from track order by milliseconds desc limit 1"
  },
  {
    "db_id": "chinook_1",
    "input": "What is the Album Id for Occupation / Precipice ? | select albumid from track where name = 'Occupation / Precipice' | Thank You! ",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "e_learning",
    "input": "what are the subjects available?  | select subject_name from subjects | list the author ids",
    "label": "CONFIRM_SQL",
    "output": "select author_id from courses"
  },
  {
    "db_id": "e_learning",
    "input": "list the course ids available  | select course_id from courses | Thanks! ",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "can you show me a list of where i can go on bus? | do you want the id of location or tourist attraction or the name? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attraction_id , location_id , name from tourist_attractions where how_to_get_there = 'bus'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "can you show me a list of location id? | select location_id from tourist_attractions | i want to learn attraction type code?",
    "label": "CONFIRM_SQL",
    "output": "select location_id , attraction_type_code from tourist_attractions"
  },
  {
    "db_id": "movie_1",
    "input": "How many directors are there? | select count ( distinct director ) from movie | How many of them only made one movie?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select director from movie group by director having count ( * ) = 1 )"
  },
  {
    "db_id": "movie_1",
    "input": "What are the names of those directors? | select director from movie group by director having count ( * ) = 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "twitter_1",
    "input": "Find the email of the user whose name contains the word \"Swift\" | select email from user_profiles where name like '%Swift%' | What is his name?",
    "label": "CONFIRM_SQL",
    "output": "select name from user_profiles where name like '%Swift%'"
  },
  {
    "db_id": "tracking_orders",
    "input": "how many products there | select count ( * ) from products | how many orders there",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from orders"
  },
  {
    "db_id": "tracking_orders",
    "input": "what is the name of product id 1 | select product_name from products where product_id = 1 | how match total orders",
    "label": "SORRY",
    "output": "Sorry I don't understand the question."
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "How many orders are priced higher than 1000? | select count ( * ) from customer_orders join order_items on customer_orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id where products.product_price > 1000 | What are the order dates of orders with a price higher than 1000?\n",
    "label": "CONFIRM_SQL",
    "output": "select customer_orders.order_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id where products.product_price > 1000"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "What are their planned delivery dates?\n | select customer_orders.planned_delivery_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id where products.product_price > 1000 | And what were the actual delivery dates?",
    "label": "CONFIRM_SQL",
    "output": "select customer_orders.actual_delivery_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id join products on order_items.product_id = products.product_id where products.product_price > 1000"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What payment method did Dr. Julia Wuckert MD use?\n | select payment_method from customers where customer_name = 'Dr. Julia Wuckert MD' | How many customers used credit cards?\n?",
    "label": "CONFIRM_SQL",
    "output": "select count ( customer_id ) from customers where payment_method = 'Credit Card'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "From when did Rodrick Heaney became a customer? | select customer_contact_channels.active_from_date from customer_contact_channels join customers on customer_contact_channels.customer_id = customers.customer_id where customers.customer_name = 'Rodrick Heaney' | thanks!",
    "label": "GOOD_BYE",
    "output": "no problem, bye"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "How many enzymes do not have any interactions? | select count ( * ) from enzyme where id not in ( select enzyme_id from medicine_enzyme_interaction ) | List enzyme names in alphabetical order",
    "label": "CONFIRM_SQL",
    "output": "select name from enzyme order by name asc"
  },
  {
    "db_id": "medicine_enzyme_interaction",
    "input": "Give me enzymes with interaction type \"inhibitor\" | select distinct name from enzyme join medicine_enzyme_interaction on medicine_enzyme_interaction.enzyme_id = enzyme.id where interaction_type = 'inhibitor' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "election",
    "input": "Tell me the Lieutenant Governor name for the year 1998 ? | select lieutenant_governor from party where year = '1998.0' | Who is the Delegate for the election id 1 ?",
    "label": "CONFIRM_SQL",
    "output": "select delegate from election where election_id = '1'"
  },
  {
    "db_id": "election",
    "input": "is party id 2 democratic or liberal ? | select party from party where party_id = '2' | Show the name of the party that has the most delegates ?",
    "label": "CONFIRM_SQL",
    "output": "select party.party from election join party on election.party = party.party_id group by election.party order by count ( * ) desc limit 1"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Hello. What are the IDs of guests with gender code Female?\n | select guest_id from guests where gender_code = 'Female' | Show me the start dates of apartment bookings by these IDs please.",
    "label": "CONFIRM_SQL",
    "output": "select apartment_bookings.booking_start_date from apartment_bookings join guests on apartment_bookings.guest_id = guests.guest_id where guests.gender_code = 'Female'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Show me the start dates and end dates of apartment bookings by these IDs please. | select apartment_bookings.booking_start_date , apartment_bookings.booking_end_date from apartment_bookings join guests on apartment_bookings.guest_id = guests.guest_id where guests.gender_code = 'Female' | Can you give me the apartment ids for the same list?",
    "label": "CONFIRM_SQL",
    "output": "select apartment_bookings.apt_id from apartment_bookings join guests on apartment_bookings.guest_id = guests.guest_id where guests.gender_code = 'Female'"
  },
  {
    "db_id": "baseball_1",
    "input": "list the year id in which the least people enter hall of fame | select yearid from hall_of_fame group by yearid order by count ( * ) asc limit 1 | what is the catogery of the particular year id",
    "label": "CLARIFY",
    "output": "Do  you mean of the year id 1944?"
  },
  {
    "db_id": "baseball_1",
    "input": "yes, what is the category mentioned for the year id 1944 | select category from hall_of_fame where yearid = 1944 | list the number of votes for this category\n",
    "label": "CONFIRM_SQL",
    "output": "select sum ( votes ) from hall_of_fame where category = 'Pioneer/Executive'"
  },
  {
    "db_id": "student_1",
    "input": "Did you mean the grades of the students that the teacher who teaches the largest number of students teaches? | Yes. | Find the name of the teacher who teaches the largest number of students.",
    "label": "CONFIRM_SQL",
    "output": "select teachers.firstname , teachers.lastname from list join teachers on list.classroom = teachers.classroom group by teachers.firstname , teachers.lastname order by count ( * ) desc limit 1"
  },
  {
    "db_id": "student_1",
    "input": "What grade do they teach? | select grade from list where classroom = ( select list.classroom from list join teachers on list.classroom = teachers.classroom group by teachers.firstname , teachers.lastname order by count ( * ) desc limit 1 ) | What is their class room?",
    "label": "CONFIRM_SQL",
    "output": "select list.classroom from list join teachers on list.classroom = teachers.classroom group by teachers.firstname , teachers.lastname order by count ( * ) desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "What was the start date of the most recent appointment? | select start from appointment order by start asc limit 1 | What is the patient associated with the appointment on 2008-04-24 10:00?",
    "label": "CONFIRM_SQL",
    "output": "select patient from appointment where start = '2008-04-24 10:00'"
  },
  {
    "db_id": "hospital_1",
    "input": "Are there any appointments that happened later than 2008-04-24? I need the appointment that happened closest to today's date. | select appointmentid , start from appointment where start > '2008-04-24 10:00' | Can you list the patient IDs associated with appointment IDs 93216548 and 86213939?",
    "label": "CONFIRM_SQL",
    "output": "select patient from appointment where appointmentid = 93216548 or appointmentid = 86213939"
  },
  {
    "db_id": "hospital_1",
    "input": "Can you list the names associated with those patient ID 100000004 and 100000002? | select distinct ( patient.name ) from patient join appointment on patient.ssn = appointment.patient where appointment.patient = 100000004 or appointment.patient = 100000002 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "epinions_1",
    "input": "What is the user id of Helen\n | select u_id from useracct where name = 'Helen' | What is Helen rating?\n",
    "label": "CONFIRM_SQL",
    "output": "select review.rating from useracct join review on useracct.u_id = review.u_id where useracct.name = 'Helen'"
  },
  {
    "db_id": "epinions_1",
    "input": "And what is helen rank | select review.rank from useracct join review on useracct.u_id = review.u_id where useracct.name = 'Helen' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "epinions_1",
    "input": "What is helen item id | select review.i_id from useracct join review on useracct.u_id = review.u_id where useracct.name = 'Helen' | How about her a id\n",
    "label": "CONFIRM_SQL",
    "output": "select review.a_id from useracct join review on useracct.u_id = review.u_id where useracct.name = 'Helen'"
  },
  {
    "db_id": "epinions_1",
    "input": "Thanks! | You are welcome. | Who gave the most reviews",
    "label": "CONFIRM_SQL",
    "output": "select useracct.name from useracct join review on useracct.u_id = review.u_id group by review.u_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "epinions_1",
    "input": "How many review did he have | select count ( * ) from useracct join review on useracct.u_id = review.u_id group by review.u_id order by count ( * ) desc limit 1 | Whats is rank on the table",
    "label": "CLARIFY",
    "output": "Did you mean the rank of Mark?"
  },
  {
    "db_id": "epinions_1",
    "input": "Yes what is mark rank? | select review.rank from useracct join review on useracct.u_id = review.u_id where useracct.name = 'Mark' | What is matk user id",
    "label": "CONFIRM_SQL",
    "output": "select u_id from useracct where name = 'Mark'"
  },
  {
    "db_id": "epinions_1",
    "input": "What is his a id | select review.a_id from useracct join review on useracct.u_id = review.u_id where useracct.name = 'Mark' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "What are courses provided by Statistics deparment? | select title from course where dept_name = 'Statistics' | What are courses provided by Psychology department?",
    "label": "CONFIRM_SQL",
    "output": "select title from course where dept_name = 'Psychology'"
  },
  {
    "db_id": "college_2",
    "input": "Which Statistics courses are not provided by Psychology department? | select title from course where dept_name = 'Statistics' except select title from course where dept_name = 'Psychology' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "college_2",
    "input": "Hello!  Can you show me a list of all courses that were offered in the Chandler building? | Do you want just their titles, or all the course information?  | I would like both please!",
    "label": "CONFIRM_SQL",
    "output": "select * from course join section on course.course_id = section.course_id where building = 'Chandler'"
  },
  {
    "db_id": "college_2",
    "input": "Thank you for that!  Can you filter that list to show only the rows that correspond to Fall of 2010? | select * from course join section on course.course_id = section.course_id where building = 'Chandler' and semester = 'Fall' and year = 2010 | Can you please tell me how many credits that course was worth?",
    "label": "CONFIRM_SQL",
    "output": "select credits from course join section on course.course_id = section.course_id where building = 'Chandler' and semester = 'Fall' and year = 2010"
  },
  {
    "db_id": "csu_1",
    "input": "ID 1 is for which Campus? | select campus from campuses where id = '1' | which campus has the fewest faculties in year 2003?",
    "label": "CONFIRM_SQL",
    "output": "select campuses.campus from campuses join faculty on campuses.id = faculty.campus where faculty.year = 2003 order by faculty.faculty asc limit 1"
  },
  {
    "db_id": "csu_1",
    "input": "which campus  has the most faculties in year 2003? | select campuses.campus from campuses join faculty on campuses.id = faculty.campus where faculty.year = 2003 order by faculty.faculty desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "department_store",
    "input": "What are the IDs of all the products supplied by supplier 2? | select product_suppliers.product_id from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 2 | What is the average price of these products?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( products.product_price ) from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 2"
  },
  {
    "db_id": "department_store",
    "input": "Show me the ID's from the products from supplier number 2 that are more expensive than this average, please.  | select product_suppliers.product_id from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 2 and products.product_price > ( select avg ( products.product_price ) from product_suppliers join products on product_suppliers.product_id = products.product_id where product_suppliers.supplier_id = 2 ) | Thanks!!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "bike_1",
    "input": "Hello there!  How are you?  Could you please provide me with a list of all trip IDs for the zip code 94002? | select id from trip where zip_code = 94002 | Great! Can you tell me which bike id has the most trips within the area with the zipcode 94002?",
    "label": "CONFIRM_SQL",
    "output": "select bike_id from trip where zip_code = 94002 group by bike_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "bike_1",
    "input": "Excellent!  Can you tell me what the total number of trips is, within zip code 94002, for bike 252? | select count ( * ) from trip where zip_code = 94002 and bike_id = '252' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "twitter_1",
    "input": "Can you show all user ids that have more than 1 tweet? | select user_profiles.uid from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1 | Thanks, can you show the names associated with those user ids?",
    "label": "CONFIRM_SQL",
    "output": "select user_profiles.name from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1"
  },
  {
    "db_id": "twitter_1",
    "input": "Can you list the names in alphabetical order from top to bottom? | select user_profiles.name from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1 order by user_profiles.name asc | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! Goodbye."
  },
  {
    "db_id": "company_office",
    "input": "List all company offices | did you mean the info of all the buildings? | no",
    "label": "REJECT",
    "output": "Sorry, i cannot answer this question. Other than that, there is no info about company offices."
  },
  {
    "db_id": "company_office",
    "input": "Count the number of building IDs | select count ( id ) from buildings | List the company IDs for each building id",
    "label": "REJECT",
    "output": "Sorry, I cannot answer this question. Instead, I can tell you the number of companies for each building id. Do you want to show that?"
  },
  {
    "db_id": "company_office",
    "input": "yes | select count ( * ) , office_locations.building_id from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id group by office_locations.building_id | add a column for company id",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) , office_locations.company_id , office_locations.building_id from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id group by office_locations.building_id"
  },
  {
    "db_id": "company_office",
    "input": "list the number of unique building ids for each company id | select office_locations.company_id , count ( distinct office_locations.building_id ) from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id group by office_locations.company_id | add a column for company name",
    "label": "CONFIRM_SQL",
    "output": "select office_locations.company_id , companies.name , count ( distinct office_locations.building_id ) from office_locations join buildings on office_locations.building_id = buildings.id join companies on office_locations.company_id = companies.id group by office_locations.company_id"
  },
  {
    "db_id": "network_2",
    "input": "Hi there!  Can you provide me with a list of all of the names of people on this list? | select name from person | Thank you for that!  Can you update the list with the job of each person as well?",
    "label": "CLARIFY",
    "output": "Would you like me to show you the names of all persons and also their corresponding job?"
  },
  {
    "db_id": "network_2",
    "input": "Yes please! | select name , job from person | Can you filter this list to show only the students?",
    "label": "CLARIFY",
    "output": "Would you like me to show you a list of names and corresponding jobs for people whose job is student?"
  },
  {
    "db_id": "network_2",
    "input": "Yes please! | select name , job from person where job = 'student' | Alright!  Can you filter that list to show only the individual who is the oldest?",
    "label": "CONFIRM_SQL",
    "output": "select name , job from person where job = 'student' order by age desc limit 1"
  },
  {
    "db_id": "store_1",
    "input": "How many tracks are in the Rock genre? | select count ( tracks.id ) from genres join tracks on genres.id = tracks.genre_id where genres.name = 'Rock' | Show me the name of tracks in the Rock genre.\n",
    "label": "CONFIRM_SQL",
    "output": "select tracks.name from genres join tracks on genres.id = tracks.genre_id where genres.name = 'Rock'"
  },
  {
    "db_id": "store_1",
    "input": "What is the average unit price for tracks in the Rock genre? | select avg ( tracks.unit_price ) from genres join tracks on genres.id = tracks.genre_id where genres.name = 'Rock' | How many tracks are in the Jazz genre?",
    "label": "CONFIRM_SQL",
    "output": "select count ( tracks.name ) from genres join tracks on genres.id = tracks.genre_id where genres.name = 'Jazz'"
  },
  {
    "db_id": "store_1",
    "input": "How many milliseconds is the Rock genre track Balls to the Wall? | select tracks.milliseconds from genres join tracks on genres.id = tracks.genre_id where genres.name = 'Rock' and tracks.name = 'Balls to the Wall' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "activity_1",
    "input": "What is the phone of Jerry Prince?  | select phone from faculty where fname = 'Jerry' and lname = 'Prince' | What is his room number?",
    "label": "CONFIRM_SQL",
    "output": "select room from faculty where fname = 'Jerry' and lname = 'Prince'"
  },
  {
    "db_id": "activity_1",
    "input": "And what is building name? | select building from faculty where fname = 'Jerry' and lname = 'Prince' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "ship_1",
    "input": "What rank is Captain Conway?\n | select rank from captain where name like '%Conway%' | What is the average age of the midshipmans\n",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) from captain where rank = 'Midshipman'"
  },
  {
    "db_id": "ship_1",
    "input": "What class of captain named Lieutenant Hugh Bolitho? | select class from captain where name = 'Lieutenant Hugh Bolitho' | thanks",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "icfp_1",
    "input": "What is the number of papers published by Tokohu University | select count ( distinct papers.title ) from papers join authorship on papers.paperid = authorship.paperid join inst on authorship.instid = inst.instid where inst.name = 'Tokohu University' | What about the numbers of papers published by University of Oxford?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct papers.title ) from papers join authorship on papers.paperid = authorship.paperid join inst on authorship.instid = inst.instid where inst.name = 'University of Oxford'"
  },
  {
    "db_id": "icfp_1",
    "input": "Do you have a comparison of how many papers were published by each institution? | select inst.name , count ( distinct papers.title ) from papers join authorship on papers.paperid = authorship.paperid join inst on authorship.instid = inst.instid group by inst.name | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "book_2",
    "input": "how many publishers are there? | select count ( distinct publisher ) from publication | How many of them have publications with price higher than 10000000?",
    "label": "CONFIRM_SQL",
    "output": "select count ( publisher ) from publication where price > 10000000"
  },
  {
    "db_id": "book_2",
    "input": "Can you please list its name along with the price? | select publisher , price from publication where price > 10000000 | Can you also include the publishers with price lower than 5000000?  ",
    "label": "AMBIGUOUS",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "book_2",
    "input": "Do you mean the publishers of the result table that also have publications with prices lower than 5000000 or any publisher that has a publication with a price lower than 5000000 | Yes please | Which one? Do you mean the publishers of the result table that also have publications with prices lower than 5000000 or any publisher that has a publication with a price lower than 5000000?",
    "label": "INFORM_SQL",
    "output": "in  the table that you just created, add the names of the publishers with price lower than 5000000, and include their price  in the table too."
  },
  {
    "db_id": "swimming",
    "input": "hi. what is the average capacity of the stadiums? | select avg ( capacity ) from stadium | and how many stadiums are there whose capacity is smaller than the average capacity?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from stadium where capacity < ( select avg ( capacity ) from stadium )"
  },
  {
    "db_id": "swimming",
    "input": "what are their names? | select name from stadium where capacity < ( select avg ( capacity ) from stadium ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Hi - can you please tell me the average room count of all Provisional bookings? | select avg ( room_count ) from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_status_code = 'Provisional' | Great - can you list all apartments with more than one bathroom and more than three bedrooms?",
    "label": "CONFIRM_SQL",
    "output": "select * from apartments where bathroom_count > 1 and bedroom_count > 3"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Which apartment has the most bedrooms? | select * from apartments order by bedroom_count desc limit 1 | OK - what was the total number of bookings in 2016?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from apartment_bookings where booking_start_date like '%2016%'"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many of those bookings were studio apartments? | select count ( * ) from apartment_bookings join apartments on apartment_bookings.apt_id = apartments.apt_id where apartment_bookings.booking_start_date like '%2016%' and apartments.apt_type_code = 'Studio' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "thank you, would you like to know anything else? "
  },
  {
    "db_id": "small_bank_1",
    "input": "Could you please tell me the names on all accounts in the bank? | select name from accounts | What are the checking and savings balances on those accounts? Could you please sort them by their total balances in descending order?",
    "label": "CONFIRM_SQL",
    "output": "select checking.balance , savings.balance from accounts join checking on accounts.custid = checking.custid join savings on accounts.custid = savings.custid order by checking.balance + savings.balance desc"
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the average of all savings accounts? | select avg ( balance ) from savings | Thanks! Have a great night!",
    "label": "WELCOME",
    "output": "You are welcome. Good night."
  },
  {
    "db_id": "product_catalog",
    "input": "What are the entry names of catalog with the attribute processed by most entries? | select catalog_contents.catalog_entry_name from catalog_contents join catalog_contents_additional_attributes on catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id where catalog_contents_additional_attributes.attribute_value = ( select attribute_value from catalog_contents_additional_attributes group by attribute_value order by count ( * ) desc limit 1 ) | What are the product stock numbers with the attribute processed by most entries?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_contents.product_stock_number from catalog_contents join catalog_contents_additional_attributes on catalog_contents.catalog_entry_id = catalog_contents_additional_attributes.catalog_entry_id where catalog_contents_additional_attributes.attribute_value = ( select attribute_value from catalog_contents_additional_attributes group by attribute_value order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "product_catalog",
    "input": "What are entry IDs of catalog with the attribute processed by most entries? | Do you mean the catalog entry IDs of catalogs with the attribute processed by most entries? | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Did you want the details of the product? | Can you give me a list of all products? | select * from products",
    "label": "AMBIGUOUS",
    "output": "Could you order them by order quantity?"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "From small to large? | large to small | select products.* from order_items join products on order_items.product_id = products.product_id group by order_items.product_id order by sum ( order_quantity ) desc",
    "label": "INFORM_SQL",
    "output": "Good! Which product has been ordered the most number of times?"
  },
  {
    "db_id": "college_3",
    "input": "How many students are not enrolled in the course? | select count ( * ) from student where stuid not in ( select stuid from enrolled_in ) | What are names of all the students enrolled in the course?\n",
    "label": "CLARIFY",
    "output": "Do you mean the first name and last name of all the students enrolled in the course?"
  },
  {
    "db_id": "college_3",
    "input": "Just the first names  | select fname from student where stuid in ( select stuid from enrolled_in ) | Are there more female or male students overall?",
    "label": "CONFIRM_SQL",
    "output": "select sex , count ( * ) from student group by sex"
  },
  {
    "db_id": "inn_1",
    "input": "which rooms have reservations ?\n | select distinct room from reservations | show me the average number of beds of the rooms with reservations.",
    "label": "CONFIRM_SQL",
    "output": "select avg ( beds ) from rooms where roomid in ( select distinct room from reservations )"
  },
  {
    "db_id": "inn_1",
    "input": "how about the rooms that do not have any reservations ? | select avg ( beds ) from rooms where roomid not in ( select distinct room from reservations ) | what are the number of rooms that do not have any reservations ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from rooms where roomid not in ( select distinct room from reservations )"
  },
  {
    "db_id": "restaurant_1",
    "input": "What is the age of the student named Linda Smith? | select age from student where fname = 'Linda' and lname = 'Smith' | What is the name of the oldest student?",
    "label": "CLARIFY",
    "output": "DO you mean the first name or the last name of that student?"
  },
  {
    "db_id": "restaurant_1",
    "input": "Yes, please. | First OR last OR both? | Both, please. Sorry!",
    "label": "CONFIRM_SQL",
    "output": "select fname , lname from student order by age desc limit 1"
  },
  {
    "db_id": "restaurant_1",
    "input": "Who is the advisor of the youngest student? | select advisor from student order by age asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye!"
  },
  {
    "db_id": "baseball_1",
    "input": "what is the number of wins the team Boston Red Stockings got in the postseasons each year in history? | select count ( * ) , postseason.year from postseason join team on postseason.team_id_winner = team.team_id_br where team.name = 'Boston Red Stockings' group by postseason.year | ok, list out the all team id winner",
    "label": "CONFIRM_SQL",
    "output": "select team_id_winner from postseason"
  },
  {
    "db_id": "baseball_1",
    "input": "ok,list out the all team id loser | select team_id_loser from postseason | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "customer_complaints",
    "input": "What is the phone number of the customer who has filed the most recent complaint? | select customers.phone_number from customers join complaints on customers.customer_id = complaints.customer_id order by complaints.date_complaint_raised desc limit 1 | The customer who filed the latest complaint uses which phone number?",
    "label": "CONFIRM_SQL",
    "output": "select customers.phone_number from customers join complaints on customers.customer_id = complaints.customer_id order by complaints.date_complaint_raised desc limit 1"
  },
  {
    "db_id": "customer_complaints",
    "input": "What is the address of the customer who filed the most recent complaint? | select customers.address_line_1 , customers.address_line_2 from customers join complaints on customers.customer_id = complaints.customer_id order by complaints.date_complaint_raised desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "hospital_1",
    "input": "When was the most recent appointment? | do you want the most recent start or end of appointment | Start",
    "label": "CONFIRM_SQL",
    "output": "select appointmentid from appointment order by start desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the patient id of that appointment? | select patient from appointment order by start desc limit 1 | What is their name?",
    "label": "CONFIRM_SQL",
    "output": "select patient.name from patient join appointment on patient.ssn = appointment.patient order by appointment.start desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What projects are detailed as 'omnis'?\n | select projects.* from tasks join projects on tasks.project_id = projects.project_id where projects.project_details = 'omnis' | How many of these have more than 2 outcomes?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select projects.project_id from tasks join projects on tasks.project_id = projects.project_id where projects.project_details = 'omnis' intersect select projects.project_id from tasks join projects on tasks.project_id = projects.project_id join project_outcomes on projects.project_id = project_outcomes.project_id group by projects.project_id having count ( * ) > 2 )"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "How many projects (not labeled omnis) have two or more outcomes? | select count ( projects.project_id ) from tasks join projects on tasks.project_id = projects.project_id join project_outcomes on projects.project_id = project_outcomes.project_id group by projects.project_id having count ( * ) > 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "What is the description of the type of service that is performed the most often? | select ref_service_types.service_type_description from ref_service_types join services on ref_service_types.service_type_code = services.service_type_code group by ref_service_types.service_type_code order by count ( * ) desc limit 1 | What is the code of the type of service that is performed the most often?",
    "label": "CONFIRM_SQL",
    "output": "select ref_service_types.service_type_code from ref_service_types join services on ref_service_types.service_type_code = services.service_type_code group by ref_service_types.service_type_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "What is its parent service type code? | select ref_service_types.parent_service_type_code from ref_service_types join services on ref_service_types.service_type_code = services.service_type_code group by ref_service_types.service_type_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome."
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you show me the top 3 highest room counts? | select room_count from apartments order by room_count desc limit 3 | For each apartment, can you tell me the average of the bedroom count, bathroom count, and room count?",
    "label": "CLARIFY",
    "output": "Do you mean for each apartment type, find the average of the bedroom count, bathroom count, and room count?"
  },
  {
    "db_id": "apartment_rentals",
    "input": "yes | select apt_type_code , avg ( bathroom_count ) , avg ( bedroom_count ) , avg ( room_count ) from apartments group by apt_type_code | Can you tell me the average number of rooms for each apartment type code?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code , avg ( room_count ) from apartments group by apt_type_code"
  },
  {
    "db_id": "apartment_rentals",
    "input": "Can you sort them in descending order? | select apt_type_code , avg ( room_count ) from apartments group by apt_type_code order by avg ( room_count ) desc | Can you show me just the apartment type codes of the top 3?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code from apartments group by apt_type_code order by avg ( room_count ) desc"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "What is the customer ID of the customer with the most number of accounts? | select accounts.customer_id from accounts join customers on accounts.customer_id = customers.customer_id group by accounts.customer_id order by count ( * ) desc limit 1 | What is their first name?",
    "label": "CLARIFY",
    "output": "Do  you mean  their  ?can  you  give more  info?"
  },
  {
    "db_id": "customers_and_invoices",
    "input": "What is the customer first name of the customer with the most number of accounts? | select customers.customer_first_name from accounts join customers on accounts.customer_id = customers.customer_id group by accounts.customer_id order by count ( * ) desc limit 1 | What is the customer last name of the customer with the most number of accounts?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_last_name from accounts join customers on accounts.customer_id = customers.customer_id group by accounts.customer_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "soccer_2",
    "input": "what are the college names of the students whose tryout decision is yes | select cname from tryout where decision = 'yes' | what is the average and maximum hours for these students",
    "label": "CONFIRM_SQL",
    "output": "select avg ( player.hs ) , max ( player.hs ) from player join tryout on player.pid = tryout.pid where tryout.decision = 'yes'"
  },
  {
    "db_id": "soccer_2",
    "input": "add the player id and college names in the same list | select avg ( player.hs ) , max ( player.hs ) , player.pid , tryout.cname from player join tryout on player.pid = tryout.pid where tryout.decision = 'yes' | thanks",
    "label": "GOOD_BYE",
    "output": "You are welcome, bye"
  },
  {
    "db_id": "swimming",
    "input": "what is the name of the stadium with the  maximum capacity | select name from stadium order by capacity desc limit 1 | in what city is Nou Mestalla",
    "label": "CONFIRM_SQL",
    "output": "select city from stadium where name = 'Nou Mestalla'"
  },
  {
    "db_id": "swimming",
    "input": "what country is Nou Mestalla in? | select country from stadium where name = 'Nou Mestalla' | Thanks! ",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "tracking_orders",
    "input": "how many orders there | select count ( * ) from orders | what is the date order placed of order id 2",
    "label": "CONFIRM_SQL",
    "output": "select date_order_placed from orders where order_id = 2"
  },
  {
    "db_id": "manufacturer",
    "input": "Do you want the name of that furniture? | Yes | how many furnitures on the table",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from furniture"
  },
  {
    "db_id": "manufacturer",
    "input": "which furnitures are highest market rate | select name from furniture order by market_rate desc limit 1 | what about the highest price of furniture",
    "label": "CONFIRM_SQL",
    "output": "select furniture.name from furniture join furniture_manufacte on furniture.furniture_id = furniture_manufacte.furniture_id order by furniture_manufacte.price_in_dollar desc limit 1"
  },
  {
    "db_id": "manufacturer",
    "input": "what is highest num of component? | select num_of_component from furniture order by num_of_component desc limit 1 | thanks",
    "label": "THANK_YOU",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "music_1",
    "input": "Return the names of songs for which the format is mp3 and resolution is below 1000. | select song.song_name from files join song on files.f_id = song.f_id where files.formats = 'mp3' intersect select song_name from song where resolution < 1000 | Please also show me names of songs for which the format is mp3 and resolution is above 1000.",
    "label": "CLARIFY",
    "output": "Do you mean the names of songs for which the format is mp3?"
  },
  {
    "db_id": "music_1",
    "input": "Yes | select song.song_name from files join song on files.f_id = song.f_id where files.formats = 'mp3' | What is the resolution for song name \"Just beat it\"?",
    "label": "CONFIRM_SQL",
    "output": "select resolution from song where song_name = 'Just beat it'"
  },
  {
    "db_id": "music_1",
    "input": "Please show me the names of songs for which the format is mp4 and resolution is below 1000. | select song.song_name from files join song on files.f_id = song.f_id where files.formats = 'mp4' intersect select song_name from song where resolution < 1000 | Can you show me the resolution for song name \"Aj ei Akash\"?",
    "label": "CONFIRM_SQL",
    "output": "select resolution from song where song_name = 'Aj ei akash'"
  },
  {
    "db_id": "music_1",
    "input": "Can you please show me the song name with highest resolution? | select song_name from song order by resolution desc limit 1 | And what was the resolution for this song name?",
    "label": "CONFIRM_SQL",
    "output": "select resolution from song where song_name = 'Tumi robe nirobe'"
  },
  {
    "db_id": "movie_1",
    "input": "Show the names of all reviewers.  | select reviewer.name from rating join reviewer on rating.rid = reviewer.rid group by reviewer.name | What is the average rating of each reviewer.",
    "label": "CONFIRM_SQL",
    "output": "select reviewer.name , avg ( rating.stars ) from rating join reviewer on rating.rid = reviewer.rid group by reviewer.name"
  },
  {
    "db_id": "movie_1",
    "input": "List the names of all reviewers based on their average rating in ascending order.  | select reviewer.name from rating join reviewer on rating.rid = reviewer.rid group by reviewer.name order by avg ( rating.stars ) asc | List all movie id associated with Brittany Harris. ",
    "label": "CONFIRM_SQL",
    "output": "select rating.mid from rating join reviewer on rating.rid = reviewer.rid where reviewer.name = 'Brittany Harris'"
  },
  {
    "db_id": "movie_1",
    "input": "List all movie id associated with Brittany Harris and their rating date. \n | select rating.mid , rating.ratingdate from rating join reviewer on rating.rid = reviewer.rid where reviewer.name = 'Brittany Harris' | What is the average rating of all movies reviewed by Brittany Harris. ",
    "label": "CONFIRM_SQL",
    "output": "select avg ( rating.stars ) from rating join reviewer on rating.rid = reviewer.rid where reviewer.name = 'Brittany Harris'"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the Open Year of the Riverside Park? | select home_game.year from home_game join park on home_game.park_id = park.park_id where park.park_name = 'Riverside Park' | What is a park in Anaheim?",
    "label": "CONFIRM_SQL",
    "output": "select park.park_name from park where park.city = 'Anaheim'"
  },
  {
    "db_id": "baseball_1",
    "input": "How many people attendance for Columbia Park? | Did you mean the sum of the attendance for the Columbia Park for all the years? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select sum ( home_game.attendance ) from home_game join park on home_game.park_id = park.park_id where park.park_name = 'Columbia Park'"
  },
  {
    "db_id": "baseball_1",
    "input": "Which park had most attendances in 2008? | select park.park_name from home_game join park on home_game.park_id = park.park_id where home_game.year = 2008 order by home_game.attendance desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "university_basketball",
    "input": "Which school has the largest enrollment? | select school from university order by enrollment desc limit 1 | When was the school founded?",
    "label": "CONFIRM_SQL",
    "output": "select founded from university order by enrollment desc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "Where is it located? | select location from university order by enrollment desc limit 1 | How many are enrolled?\n",
    "label": "CONFIRM_SQL",
    "output": "select enrollment from university order by enrollment desc limit 1"
  },
  {
    "db_id": "university_basketball",
    "input": "What is the school's nickname? | select nickname from university order by enrollment desc limit 1 | Thanks!",
    "label": "GREETING",
    "output": "Thank you. good bye!"
  },
  {
    "db_id": "mountain_photos",
    "input": "How many camera lenses are not used in taking any photos?\n | select count ( * ) from camera_lens where id not in ( select camera_lens_id from photos ) | What lenses are those?",
    "label": "CLARIFY",
    "output": "Which kind of information do you want about those lenses?"
  },
  {
    "db_id": "mountain_photos",
    "input": "What is the name of the lenses not used for taking photos? | select name from camera_lens where id not in ( select camera_lens_id from photos ) | What is the max aperture for the Olympus M.Zuiko Digital ED 45mm f/1.8?",
    "label": "CONFIRM_SQL",
    "output": "select max_aperture from camera_lens where name = 'Olympus M.Zuiko Digital ED 45mm f/1.8'"
  },
  {
    "db_id": "mountain_photos",
    "input": "How does this compare to the Olympus 15mm f/8.0 Body Cap?\n | select max_aperture from camera_lens where name = 'Olympus 15mm f/8.0 Body Cap' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "voter_2",
    "input": "Number of students in each major? | select major , count ( * ) from student group by major | List of majors?",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( major ) from student"
  },
  {
    "db_id": "voter_2",
    "input": "Names of students in each major? | LName or FName? | LName.",
    "label": "CONFIRM_SQL",
    "output": "select major , lname from student"
  },
  {
    "db_id": "voter_2",
    "input": "What about FName? | select major , fname from student | Which major has the most number of students?",
    "label": "CONFIRM_SQL",
    "output": "select major from student group by major order by count ( * ) desc limit 1"
  },
  {
    "db_id": "voter_2",
    "input": "Which major has the least? | select major from student group by major order by count ( * ) asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "music_1",
    "input": "What is the ID of the longest song, please? | select f_id from files order by duration desc limit 1 | What is the artist name of that song?",
    "label": "CONFIRM_SQL",
    "output": "select artist_name from files order by duration desc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "What is the duration of that song? | select duration from files order by duration desc limit 1 | What about the shortest song?",
    "label": "CONFIRM_SQL",
    "output": "select duration from files order by duration asc limit 1"
  },
  {
    "db_id": "music_1",
    "input": "What is the average duration of all songs? | select avg ( duration ) from files | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "candidate_poll",
    "input": "What are the top 3 highest support rates? | select support_rate from candidate order by support_rate desc limit 3 | What are the poll sources of those support rates?",
    "label": "CONFIRM_SQL",
    "output": "select poll_source from candidate order by support_rate desc limit 3"
  },
  {
    "db_id": "candidate_poll",
    "input": "What are the dates for those support rates? | select date from candidate order by support_rate desc limit 3 | What's the unsure rate of those?",
    "label": "CONFIRM_SQL",
    "output": "select unsure_rate from candidate order by support_rate desc limit 3"
  },
  {
    "db_id": "candidate_poll",
    "input": "What are the consider rates of those? | select consider_rate from candidate order by support_rate desc limit 3 | What are the oppose rates of those?",
    "label": "CONFIRM_SQL",
    "output": "select oppose_rate from candidate order by support_rate desc limit 3"
  },
  {
    "db_id": "insurance_policies",
    "input": "Hello! Can you show me a list of all the claim IDs and their associated claim amount? | select claim_id , amount_claimed from claims | Thank you for that!  Can you filter this list to show the rows and associated Claim IDs and amounts for the claims with a higher than average amount?",
    "label": "CONFIRM_SQL",
    "output": "SELECT claim_id, amount_claimed FROM Claims WHERE Amount_Claimed > ( SELECT avg(Amount_Claimed) FROM Claims "
  },
  {
    "db_id": "insurance_policies",
    "input": "Hi sorry, can you ask this question again.   | Sorry!  I'll ask it a different way...  Can you please list all claim ids which have a higher than average claim amount? | select claim_id from claims where amount_claimed > ( select avg ( amount_claimed ) from claims )",
    "label": "INFORM_SQL",
    "output": "Great!  Can you tell me which ClaimID is associated with the largest claim amount?"
  },
  {
    "db_id": "insurance_policies",
    "input": "select claim_id from claims order by amount_claimed desc limit 1 | Thanks! | thank you, do you want to know any other information?  ",
    "label": "THANK_YOU",
    "output": "I believe that's all for now!  Thanks!"
  },
  {
    "db_id": "roller_coaster",
    "input": "what is the highest length of coaster | select max ( length ) from roller_coaster | which roller coaster are top speed",
    "label": "CONFIRM_SQL",
    "output": "select * from roller_coaster order by speed desc limit 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "what is the height of Boardwalk Bullet | select height from roller_coaster where name = 'Boardwalk Bullet' | thanks",
    "label": "WELCOME",
    "output": "Sure. Bye."
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "HI there!  How many events have more than one participant? | select events.event_id from events join participants_in_events on events.event_id = participants_in_events.event_id group by events.event_id having count ( * ) > 1 | Excellent!  Can you show me a list of the event IDs and event details for each of those five events which have more than one participant?",
    "label": "CONFIRM_SQL",
    "output": "select events.event_id , events.event_details from events join participants_in_events on events.event_id = participants_in_events.event_id group by events.event_id having count ( * ) > 1"
  },
  {
    "db_id": "local_govt_in_alabama",
    "input": "I appreciate you doing that for me!  Can you update this list to include a column with the total number of participants for each event? | select events.event_id , participants_in_events.participant_id from events join participants_in_events on events.event_id = participants_in_events.event_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome! Bye!"
  },
  {
    "db_id": "movie_1",
    "input": "What are the ratingDate of mID 101? | select ratingdate from rating where mid = 101 | Find The releasing year of The Sound of Music.",
    "label": "CONFIRM_SQL",
    "output": "select year from movie where title = 'The Sound of Music'"
  },
  {
    "db_id": "movie_1",
    "input": "Who is directed by Star Wars? | Did you mean to ask for the name of the director who directed Star Wars? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select director from movie where title = 'Star Wars'"
  },
  {
    "db_id": "movie_1",
    "input": "What is the average rating stars and title for the oldest movie? | select avg ( rating.stars ) , movie.title from rating join movie on rating.mid = movie.mid where movie.year = ( select min ( year ) from movie ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "election",
    "input": "Which county has the biggest population? | Do you mean the name of the county that has the biggest population? | Yes, what's the name of the county with the biggest population?",
    "label": "CONFIRM_SQL",
    "output": "select county_name from county order by population desc limit 1"
  },
  {
    "db_id": "election",
    "input": "And the name with the smallest population? | select county_name from county order by population asc limit 1 | What is the population of Baltimore County?",
    "label": "CONFIRM_SQL",
    "output": "select population from county where county_name = 'Baltimore County'"
  },
  {
    "db_id": "election",
    "input": "What is its zip code? | select zip_code from county where county_name = 'Baltimore County' | Great! I appreciate your help. Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you for your help! Bye"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "Did you mean the customer id of the customer card with number 4560596484842? | Yes | how many on the customers cards table",
    "label": "CLARIFY",
    "output": "Do  you  mean  the amount of customer cards?"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "yes exactly | select count ( * ) from customers_cards | what is the 4560596484842 of customer id",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from customers_cards where card_number = 4560596484842"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "what is the customer id with most number of cards, and how many does he have? | select customer_id , count ( * ) from customers_cards group by customer_id order by count ( * ) desc limit 1 | thanks",
    "label": "WELCOME",
    "output": "you are welcome and goodbye"
  },
  {
    "db_id": "e_learning",
    "input": "How many failed the exam?  | select count ( * ) from student_tests_taken where test_result = 'Fail' | And what about passed? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student_tests_taken where test_result = 'Pass'"
  },
  {
    "db_id": "e_learning",
    "input": "Can you list each test result and it's count in descending order based on count?  | select test_result , count ( * ) from student_tests_taken group by test_result order by count ( * ) desc | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure. Anything else?"
  },
  {
    "db_id": "e_learning",
    "input": "Yes, what are ids of all passed exams? | select registration_id from student_tests_taken where test_result = 'Pass' | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "school_finance",
    "input": "yes, i want to know about the mascots for schools. | What about the mascot for schools do you want to know? | I want to know that what are the mascots for schools with enrollments above the average?",
    "label": "CONFIRM_SQL",
    "output": "select mascot from school where enrollment > ( select avg ( enrollment ) from school )"
  },
  {
    "db_id": "school_finance",
    "input": "anymore mascots did you find? | select mascot from school where mascot not in ( select mascot from school where enrollment > ( select avg ( enrollment ) from school ) ) | but i want above average list only.",
    "label": "CONFIRM_SQL",
    "output": "select mascot from school where enrollment > ( select avg ( enrollment ) from school )"
  },
  {
    "db_id": "products_for_hire",
    "input": "Could you show me the maximum booked count for the booked products? | select max ( booked_count ) from products_booked | Could you also add the minimum number of booked products?",
    "label": "CONFIRM_SQL",
    "output": "select max ( booked_count ) , min ( booked_count ) from products_booked"
  },
  {
    "db_id": "products_for_hire",
    "input": "Finally, could you add the average booked count for the products? | select max ( booked_count ) , min ( booked_count ) , avg ( booked_count ) from products_booked | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "behavior_monitoring",
    "input": "Find the start date of behavior incidents of students with the last name \"Fahey\"? | select behavior_incident.date_incident_start from behavior_incident join students on behavior_incident.student_id = students.student_id where students.last_name = 'Fahey' | Find the incident type code of behavior incidents of students with the last name \"Fahey\"?",
    "label": "CONFIRM_SQL",
    "output": "select behavior_incident.incident_type_code from behavior_incident join students on behavior_incident.student_id = students.student_id where students.last_name = 'Fahey'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What is the date left university of the student with the last name \"Fahey\"? | select students.date_left_university from behavior_incident join students on behavior_incident.student_id = students.student_id where students.last_name = 'Fahey' | How many students have the incident type code \"VIOLENCE\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from behavior_incident where incident_type_code = 'VIOLENCE'"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "What are the names of the students that have the incident type code \"VIOLENCE\"? | Do  you  mean  last name or  first name? | Both, please.",
    "label": "CONFIRM_SQL",
    "output": "select students.first_name , students.last_name from behavior_incident join students on behavior_incident.student_id = students.student_id where behavior_incident.incident_type_code = 'VIOLENCE'"
  },
  {
    "db_id": "ship_mission",
    "input": "Show the most common type of ships | select type from ship group by type order by count ( * ) desc limit 1 | what's the second most common",
    "label": "CONFIRM_SQL",
    "output": "select type from ship group by type order by count ( * ) desc limit 2"
  },
  {
    "db_id": "ship_mission",
    "input": "which is bigger the battle ship or the cargo ship | select type , tonnage from ( select * from ship group by type order by count ( * ) desc limit 2 ) | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! bye."
  },
  {
    "db_id": "dorm_1",
    "input": "How many students are there? | select count ( * ) from student | How about the total number of dorms?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from dorm"
  },
  {
    "db_id": "dorm_1",
    "input": "Can you list their names? | select dorm_name from dorm | How many students live in Smith Hall?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid where dorm.dorm_name = 'Smith Hall'"
  },
  {
    "db_id": "dorm_1",
    "input": "How many of them are females? | select count ( * ) from student join lives_in on student.stuid = lives_in.stuid join dorm on dorm.dormid = lives_in.dormid where dorm.dorm_name = 'Smith Hall' and student.sex = 'F' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "You are welcome! Anything else I can do?"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "what are the names of the payment method of customers who have both mailshot in 'Order' outcome and mailshot in 'No response' outcome. | select customers.customer_name , customers.payment_method from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id where mailshot_customers.outcome_code = 'Order' intersect select customers.customer_name , customers.payment_method from mailshot_customers join customers on mailshot_customers.customer_id = customers.customer_id where mailshot_customers.outcome_code = 'No Response' | How many customers pay by Credit card?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from customers where payment_method = 'Credit Card'"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "which customers pay with debit card? | select * from customers where payment_method = 'Direct Debit' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "sports_competition",
    "input": "What countries have not participated in any competition with Friendly type? | select country from competition except select country from competition where competition_type = 'Friendly' | Can you find any other countries?",
    "label": "CONFIRM_SQL",
    "output": "select ( * ) from ( select country from competition except select country from competition where competition_type = 'Friendly' ) where country != 'Slovenia'"
  },
  {
    "db_id": "sports_competition",
    "input": "How many countries have not participated in competitions with friendly types? | select count ( * ) from ( select country from competition except select country from competition where competition_type = 'Friendly' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "how many customers are presented on the table | select count ( * ) from customers | list out the customers first name\n",
    "label": "CONFIRM_SQL",
    "output": "select customer_first_name from customers"
  },
  {
    "db_id": "customers_card_transactions",
    "input": "what is the card number of Aniyah | Do you mean the customer with first name Aniyah | exactly",
    "label": "CONFIRM_SQL",
    "output": "select customers_cards.card_number from customers join customers_cards on customers.customer_id = customers_cards.customer_id where customer_first_name = 'Aniyah'"
  },
  {
    "db_id": "aircraft",
    "input": "What are the maximum number of transit passengers of all airports? | select max ( transit_passengers ) from airport | What are the minimum number of transit passengers of all airports?",
    "label": "CONFIRM_SQL",
    "output": "select min ( transit_passengers ) from airport"
  },
  {
    "db_id": "aircraft",
    "input": "What is the average of all domestic passengers? | select avg ( domestic_passengers ) from airport | What airport name has the highest amount of international passengers?",
    "label": "CONFIRM_SQL",
    "output": "select airport_name from airport order by international_passengers desc limit 1"
  },
  {
    "db_id": "aircraft",
    "input": "What is the name of the airport with the second lowest amount of total passengers? | select airport_name from airport order by total_passengers asc limit 2 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "student_1",
    "input": "How many students does KAWA GORDON teaches? | select count ( * ) from list join teachers on list.classroom = teachers.classroom where teachers.firstname = 'KAWA' and teachers.lastname = 'GORDON' | How many students does MIN MACROSTIE teaches?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from list join teachers on list.classroom = teachers.classroom where teachers.firstname like '%MIN%' and teachers.lastname like '%MACROSTIE%'"
  },
  {
    "db_id": "student_1",
    "input": "What teachers does STORMY CHRISTENSEN have? | Do you want the first name and last name of the teachers?  | What are the first and last names of the teachers that teach STORMY CHRISTENSEN?",
    "label": "CONFIRM_SQL",
    "output": "select teachers.firstname , teachers.lastname from list join teachers on list.classroom = teachers.classroom where list.firstname like '%STORMY%' and list.lastname like '%CHRISTENSEN%'"
  },
  {
    "db_id": "store_1",
    "input": "How many released albums are there? | select count ( * ) from albums | How many artists released the total number of albums?",
    "label": "REJECT",
    "output": "I don't understand the question. please rephrase."
  },
  {
    "db_id": "store_1",
    "input": "How many artists have released albums?\n | select count ( * ) from artists where id in ( select artist_id from albums ) | how many albums are released by artist with 'Led' in their name?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from artists join albums on artists.id = albums.artist_id where artists.name like '%Led%'"
  },
  {
    "db_id": "store_1",
    "input": "Show me the names of those albums | select albums.title from artists join albums on artists.id = albums.artist_id where artists.name like '%Led%' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "journal_committee",
    "input": "Hello. What is the name of the youngest editor? | select name from editor order by age asc limit 1 | What is the age of the youngest editor?",
    "label": "CONFIRM_SQL",
    "output": "select age from editor order by age asc limit 1"
  },
  {
    "db_id": "journal_committee",
    "input": "What is the name of that editor? | select name from editor order by age asc limit 1 | Can you tell me the name of the oldest editor as well?",
    "label": "CONFIRM_SQL",
    "output": "select name from editor order by age desc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "how many white in the city table | Which city would you like the percentage of white people for? | what the highest population in the county public safety table",
    "label": "CONFIRM_SQL",
    "output": "select max ( population ) from county_public_safety"
  },
  {
    "db_id": "county_public_safety",
    "input": "how many locations in the county public safety table | select count ( location ) from county_public_safety | what are the highest crime rate in the county public safety table",
    "label": "CONFIRM_SQL",
    "output": "select crime_rate from county_public_safety order by crime_rate desc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "thanks | Do you have any more questions? | thanks",
    "label": "GOOD_BYE",
    "output": "Goodbye!"
  },
  {
    "db_id": "network_2",
    "input": "Hi, who are Dan friends? | select friend from personfriend where name = 'Dan' | Okay, is Zach a friend of Dan?",
    "label": "CONFIRM_SQL",
    "output": "select friend from personfriend where name = 'Dan'"
  },
  {
    "db_id": "network_2",
    "input": "What is Alice friend name? | select friend from personfriend where name = 'Alice' | Does Alice and Bob live in the same city?",
    "label": "CONFIRM_SQL",
    "output": "select city from person where name = 'Alice' or name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "How old is Alice friend? | select age from person where name = ( select friend from personfriend where name = 'Alice' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "device",
    "input": "WHICH SHOP HAS THE LARGEST QUANTITY OF DEVICES IN STOCK | select shop.shop_name from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id order by sum ( stock.quantity ) desc limit 1 | WHAT IS THE LOCATION OF THIS SHOP",
    "label": "CONFIRM_SQL",
    "output": "select shop.location from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id order by sum ( stock.quantity ) desc limit 1"
  },
  {
    "db_id": "device",
    "input": "WHAT IS THE SHOP ID | Do you mean the shop id for the shop that has the largest quantity of devices in stock? | YES",
    "label": "CONFIRM_SQL",
    "output": "select shop.shop_id from stock join shop on stock.shop_id = shop.shop_id group by stock.shop_id order by sum ( stock.quantity ) desc limit 1"
  },
  {
    "db_id": "gymnast",
    "input": "What is the tallest height? | select max ( height ) from people | What is that person's name?",
    "label": "CONFIRM_SQL",
    "output": "select name from people order by height desc limit 1"
  },
  {
    "db_id": "gymnast",
    "input": "How old is he? | select age from people order by height desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "school_finance",
    "input": "Can you show me the average enrollment of all schools? | select avg ( enrollment ) from school | Can you show me the maximum enrollment of all schools?",
    "label": "CONFIRM_SQL",
    "output": "select max ( enrollment ) from school"
  },
  {
    "db_id": "school_finance",
    "input": "Can you show me the minimum enrollment of all schools? | select min ( enrollment ) from school | What is the name of the school with the maximum enrollment?",
    "label": "CONFIRM_SQL",
    "output": "select school_name from school order by enrollment desc limit 1"
  },
  {
    "db_id": "school_finance",
    "input": "What is the name of the school with the minimum enrollment? | select school_name from school order by enrollment asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "train_station",
    "input": "Could you show me all the locations that have train stations with at least 15 platforms? | select distinct location from station where number_of_platforms >= 15 | Could you show me all the locations that have train stations with more than 25 total passengers?",
    "label": "CONFIRM_SQL",
    "output": "select distinct location from station where total_passengers > 25"
  },
  {
    "db_id": "train_station",
    "input": "Could you show me all the locations that have train stations with exactly 19 platforms? | select distinct location from station where number_of_platforms = 19 | Could you give me the names of those locations, please?",
    "label": "CONFIRM_SQL",
    "output": "select name from station where number_of_platforms = 19"
  },
  {
    "db_id": "train_station",
    "input": "What are the total passengers of those? | select name , total_passengers from station where number_of_platforms = 19 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "hr_1",
    "input": "hi. show me the names of all of the departments | select department_name from departments | and are there employees in all of the departments?",
    "label": "CONFIRM_SQL",
    "output": "select department_name from departments where department_name not in ( select distinct departments.department_name from departments join employees on departments.department_id = employees.department_id )"
  },
  {
    "db_id": "hr_1",
    "input": "can you please display only the department names with the number of employees in each one? | select department_name , count ( * ) from employees join departments on employees.department_id = departments.department_id group by department_name | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! bye"
  },
  {
    "db_id": "college_1",
    "input": "Hi!  Do most professors have a higher education degree? | sorry ,  i  don't  have  the answer to  your  question | I'd like to know how many professors have a Ph.D. or MA?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where prof_high_degree = 'Ph.D.' or prof_high_degree = 'MA'"
  },
  {
    "db_id": "college_1",
    "input": "Are there more Ph.D. or more MA degrees? | select prof_high_degree , count ( * ) from professor group by prof_high_degree having prof_high_degree = 'Ph.D.' or prof_high_degree = 'MA' | How many of them are Ph.D. degrees?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where prof_high_degree = 'Ph.D.'"
  },
  {
    "db_id": "hospital_1",
    "input": "Show me the names of all the physicians? | select name from physician | Show me the ssn of the physician named John Dorian?",
    "label": "CONFIRM_SQL",
    "output": "select ssn from physician where name = 'John Dorian'"
  },
  {
    "db_id": "hospital_1",
    "input": "Show me the name of the physician with employee id 2? | select name from physician where employeeid = 2 | Show me the names of the physician who prescribed the highest dose?",
    "label": "CONFIRM_SQL",
    "output": "select physician.name from physician join prescribes on physician.employeeid = prescribes.physician order by prescribes.dose desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "how many customer orders there | select count ( * ) from customer_orders | what is the customer id of  order id 2",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from customer_orders where order_id = 2"
  },
  {
    "db_id": "department_store",
    "input": "what is the  order date of order id 1 | select order_date from customer_orders where order_id = 1 | Thanks!",
    "label": "WELCOME",
    "output": "Welcome. Bye."
  },
  {
    "db_id": "network_2",
    "input": "What city does Alice live in? | select city from person where name = 'Alice' | What gender is Alice?",
    "label": "CONFIRM_SQL",
    "output": "select gender from person where name = 'Alice'"
  },
  {
    "db_id": "network_2",
    "input": "What job does Bob do? | select job from person where name = 'Bob' | How old is Bob?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Bob'"
  },
  {
    "db_id": "network_2",
    "input": "Where does he live? | select city from person where name = 'Bob' | How many males are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person where gender = 'male'"
  },
  {
    "db_id": "network_2",
    "input": "and females? | select count ( * ) from person where gender = 'female' | Who lives in Austin?",
    "label": "CLARIFY",
    "output": "Would you like a list of the names of all the people who live in Austin?"
  },
  {
    "db_id": "network_2",
    "input": "How about Salt Lake City? | Would you like a list of the names of all the people who live in Salt Lake City? | Who is the oldest person?",
    "label": "CONFIRM_SQL",
    "output": "select name from person order by age desc limit 1"
  },
  {
    "db_id": "network_2",
    "input": "and the youngest? | select name from person order by age asc limit 1 | How old is the doctor named Zach?",
    "label": "CONFIRM_SQL",
    "output": "select age from person where name = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "What is the name of the female student? | Would you like a list of all the female students' names? | What is her city?",
    "label": "CLARIFY",
    "output": "Who's city?"
  },
  {
    "db_id": "network_2",
    "input": "How many male engineers are there? | select count ( * ) from person where gender = 'male' and job = 'engineer' | and male doctors?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person where ( gender = 'male' and job = 'doctor' )"
  },
  {
    "db_id": "network_2",
    "input": "and female students? | select count ( * ) from person where gender = 'female' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome. Bye!"
  },
  {
    "db_id": "small_bank_1",
    "input": "Do you mean saving balance? | Yes | Find the name of the top 3 accounts with the highest saving balance sorted by savings balance in descending order.",
    "label": "CONFIRM_SQL",
    "output": "select accounts.name from accounts join savings on accounts.custid = savings.custid order by savings.balance desc limit 3"
  },
  {
    "db_id": "small_bank_1",
    "input": "Can you add in their customer IDs to the table please? | select accounts.name , savings.custid from accounts join savings on accounts.custid = savings.custid order by savings.balance desc limit 3 | What is the average balance of all accounts?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( savings.balance ) from accounts join savings on accounts.custid = savings.custid"
  },
  {
    "db_id": "small_bank_1",
    "input": "What is the name on the account with the lowest balance? | select accounts.name from accounts join savings on accounts.custid = savings.custid order by savings.balance asc limit 1 | What is the name on the account with the third highest saving balance?",
    "label": "CONFIRM_SQL",
    "output": "select accounts.name from accounts join savings on accounts.custid = savings.custid order by savings.balance desc limit 3"
  },
  {
    "db_id": "hospital_1",
    "input": "How many physicians are there in total? | select count ( * ) from physician | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select name from physician"
  },
  {
    "db_id": "hospital_1",
    "input": "Which of their position titles contain the word senior in it? | select position from physician where position like '%senior%' | What is the name of that physician who has the Senior Attending Physician title?",
    "label": "CONFIRM_SQL",
    "output": "select name from physician where position like '%senior%'"
  },
  {
    "db_id": "music_4",
    "input": "Hello, can you please tell me the most weeks spent on top?\n | select max ( weeks_on_top ) from volume | And how many volumes spent 3.0 weeks on top?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from volume where weeks_on_top = 3.0"
  },
  {
    "db_id": "music_4",
    "input": "What are the names of the two volumes that spend 3.0 weeks on top? | What do you mean by names? | I am sorry - what are the songs of the two volumes that spent 3.0 weeks on top?",
    "label": "CONFIRM_SQL",
    "output": "select song from volume where weeks_on_top = 3.0"
  },
  {
    "db_id": "music_4",
    "input": "What was the minimum time spent on top? | select min ( weeks_on_top ) from volume | And how many volumes spent 1.0 weeks on top?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from volume where weeks_on_top = 1.0"
  },
  {
    "db_id": "music_4",
    "input": "Did any artist have more than one volume that spent time on top? | What do you mean? | Did any artist ID appear more than once in the weeks spent on top?",
    "label": "CLARIFY",
    "output": "Do you mean the artists id which has more than one volume?"
  },
  {
    "db_id": "music_4",
    "input": "Yes please. | select artist_id from volume group by artist_id having count ( * ) >= 2 | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome. Bye."
  },
  {
    "db_id": "university_basketball",
    "input": "What is the total number of students who were in enrolled in all colleges? | Do you mean the total number of enrollments for all colleges? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select sum ( enrollment ) from university"
  },
  {
    "db_id": "university_basketball",
    "input": "How about the total number of enrollments for just colleges that were founded after the year 1850? | select sum ( enrollment ) from university where founded > 1850 | How about the total number of enrollments for just colleges that were founded after the year 1850 for each type of affiliation?",
    "label": "CONFIRM_SQL",
    "output": "select affiliation , sum ( enrollment ) from university where founded > 1850 group by affiliation"
  },
  {
    "db_id": "flight_4",
    "input": "hi. How many routes are there?\n | select count ( * ) from routes join airports as airports | how many routes pass through Italy?",
    "label": "REJECT",
    "output": "I cannot answer this question because I did not have information about routes pass through Italy."
  },
  {
    "db_id": "flight_4",
    "input": "how many have destination airports in Italy? | select count ( * ) from routes join airports on routes.dst_apid = airports.apid where airports.country = 'Italy' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "dorm_1",
    "input": "What are the names of all the dorms? | select dorm_name from dorm | Which of those dorms have a TV Lounge?",
    "label": "CONFIRM_SQL",
    "output": "select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge'"
  },
  {
    "db_id": "dorm_1",
    "input": "What dorms have no Study Room as an amenity? | Do you mean among those with a TV Lounge? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' except select dorm.dorm_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'Study Room'"
  },
  {
    "db_id": "dorm_1",
    "input": "And the gender that is housed? | select dorm.dorm_name , dorm.gender from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'TV Lounge' except select dorm.dorm_name , dorm.gender from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm_amenity.amenity_name = 'Study Room' | Are there any other amenities that the dorm features?",
    "label": "CLARIFY",
    "output": "For this dorm? Or for all dorms?"
  },
  {
    "db_id": "dorm_1",
    "input": "For this dorm. | select dorm.dorm_name , dorm_amenity.amenity_name from dorm join has_amenity on dorm.dormid = has_amenity.dormid join dorm_amenity on has_amenity.amenid = dorm_amenity.amenid where dorm.dorm_name = 'Fawlty Towers' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "college_2",
    "input": "What is the prerequisite for Mobile computing?\n | select title from course where course_id in ( select prereq.prereq_id from prereq join course on prereq.course_id = course.course_id where course.title = 'Mobile Computing' ) | What is the department name for these courses?\n",
    "label": "CONFIRM_SQL",
    "output": "select dept_name from course where course_id in ( select prereq.prereq_id from prereq join course on prereq.course_id = course.course_id where course.title = 'Mobile Computing' )"
  },
  {
    "db_id": "college_2",
    "input": "How many courses are there in the History Department? | select count ( * ) from course where dept_name = 'History' | Thanks!! ",
    "label": "THANK_YOU",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "hospital_1",
    "input": "What procedures is John Wen trained in? | Do you mean the name of the procedure that John Wen is trained in? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select procedures.name from physician join trained_in on physician.employeeid = trained_in.physician join procedures on procedures.code = trained_in.treatment where physician.name = 'John Wen'"
  },
  {
    "db_id": "phone_1",
    "input": "Tell me the chip model which has screen mode greater than 2.0 ? And also tell me the company name of that... | select chip_model , company_name from phone where screen_mode > 2 | Tell me the Approved (awarded 15.11.12) of the company LG-P760...",
    "label": "CLARIFY",
    "output": "what did you mean by  the Approved (awarded 15.11.12) of the company LG-P760"
  },
  {
    "db_id": "phone_1",
    "input": "Sorry, I typed the question wrongly...\nWhat is the hardware model name of Lumia 620 ? | sorry,i can' understand your question, Lumia 620 is the  not hardware model name | Find the accreditation level that more than 3 phones use.",
    "label": "CONFIRM_SQL",
    "output": "select accreditation_level from phone group by accreditation_level having count ( * ) > 3"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the apartment type codes? | select apt_type_code from apartments | What are the Maximum rooms for each Apartment type code?",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code , max ( room_count ) from apartments group by apt_type_code"
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the Minimum rooms for each Apartment type code? | select apt_type_code , min ( room_count ) from apartments group by apt_type_code | What is the Apartment type code of building id 808? ",
    "label": "CONFIRM_SQL",
    "output": "select apt_type_code from apartments where building_id = 808"
  },
  {
    "db_id": "party_host",
    "input": "what is the average age | select avg ( age ) from host | who is the youngest",
    "label": "CONFIRM_SQL",
    "output": "select name from host order by age asc limit 1"
  },
  {
    "db_id": "party_host",
    "input": "show the most common nationality of hosts | select nationality from host group by nationality order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "products_for_hire",
    "input": "how many product booked on the table | Sorry, I cannot understand the question. Can you rephrase it? | actually i mean how many product are on the table",
    "label": "CLARIFY",
    "output": "Did you mean to ask for the distinct number of product ids in the table Products_Booked?"
  },
  {
    "db_id": "products_for_hire",
    "input": "exactly | select count ( distinct product_id ) from products_booked | what is the highest booked amount",
    "label": "CONFIRM_SQL",
    "output": "select max ( booked_amount ) from products_booked"
  },
  {
    "db_id": "products_for_hire",
    "input": "what is the least booked count | select min ( booked_count ) from products_booked | what is the id of the product that is booked for 5 times?",
    "label": "CONFIRM_SQL",
    "output": "select product_id from products_booked where booked_count = 5"
  },
  {
    "db_id": "insurance_policies",
    "input": "Which claims caused more than 2 settlements? Please list the date the claim was made and the claim id? | select claims.date_claim_made , claims.claim_id from claims join settlements on claims.claim_id = settlements.claim_id group by claims.claim_id having count ( * ) > 2 | Which claims had the maximum claim value? Please list the date the claim was made and the claim id?",
    "label": "SORRY",
    "output": "Sorry there is no maximum claim value"
  },
  {
    "db_id": "insurance_policies",
    "input": "Which claim had the highest claim value? Please list the date the claim was made and the claim id. | select claims.date_claim_made , claims.claim_id from claims join settlements on claims.claim_id = settlements.claim_id order by claims.amount_claimed desc limit 1 | What date was that claim made?",
    "label": "CONFIRM_SQL",
    "output": "select claims.date_claim_made from claims join settlements on claims.claim_id = settlements.claim_id order by claims.amount_claimed desc limit 1"
  },
  {
    "db_id": "insurance_policies",
    "input": "What date was that claim settled? | select claims.date_claim_settled from claims join settlements on claims.claim_id = settlements.claim_id order by claims.amount_claimed desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "icfp_1",
    "input": "Hello! Can you provide me with a list of the First and Last names of all authors with the last name of \"Ohori\"? | select fname , lname from authors where lname = 'Ohori' | Thank you so much!  Can you please provide me with Atsushi Ohori's author ID?",
    "label": "CONFIRM_SQL",
    "output": "select authid from authors where lname = 'Ohori' and fname = 'Atsushi'"
  },
  {
    "db_id": "icfp_1",
    "input": "Can you please provide me with a list of all paper IDs that are associated with author ID 57? | select paperid from authorship where authid = 57 | Thank you!  Can you provide me with the paper title of PaperID 204?",
    "label": "CONFIRM_SQL",
    "output": "select title from papers where paperid = 204"
  },
  {
    "db_id": "icfp_1",
    "input": "Thank you!  Can you confirm that the author of 'Making Standard ML a Practical Database Programming Language' is Atsushi Ohori whose institution is located in Japan? | select authors.lname , authors.fname , inst.country from authors join authorship on authors.authid = authorship.authid join papers on authorship.paperid = papers.paperid join inst on authorship.instid = inst.instid where papers.title = 'Making Standard ML a Practical Database Programming Language' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "theme_gallery",
    "input": "Can you list the ages of all the artists from United States? | select age from artist where country = 'United States' | What is the average age of all the artists from United States?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( age ) from artist where country = 'United States'"
  },
  {
    "db_id": "theme_gallery",
    "input": "Hmm, I also want to know the minimum age of all the artists from United States please. | select min ( age ) from artist where country = 'United States' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "formula_1",
    "input": "Hello, how many drivers are there in total? | select count ( * ) from drivers | Perfect, how many drivers had 11 pit stops and participated in more than 5 total races?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select drivers.surname , drivers.driverid from drivers join pitstops on drivers.driverid = results.driverid group by drivers.driverid having count ( * ) = 11 intersect select drivers.surname , drivers.driverid from drivers join results on drivers.driverid = results.driverid group by drivers.driverid having count ( * ) > 5 )"
  },
  {
    "db_id": "formula_1",
    "input": "Okay, which driver had the most amount of pit stops? | select drivers.driverid from drivers join pitstops on drivers.driverid = pitstops.driverid group by drivers.driverid order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye."
  },
  {
    "db_id": "department_store",
    "input": "I want to know the store chains with the largest department stores | select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit 1 | What about the ID of the department store chain that has the second largest number of department stores?",
    "label": "CONFIRM_SQL",
    "output": "select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit 2 except select dept_store_chain_id from department_stores group by dept_store_chain_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "department_store",
    "input": "OK, do you have the names of the above stores? | select store_name from department_stores group by dept_store_chain_id order by count ( * ) desc limit 2 | What about their store address?",
    "label": "CONFIRM_SQL",
    "output": "select store_address from department_stores group by dept_store_chain_id order by count ( * ) desc limit 2"
  },
  {
    "db_id": "department_store",
    "input": "Kindly let me know the store emails of the above stores | select store_email from department_stores group by dept_store_chain_id order by count ( * ) desc limit 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What are the ids of documents with the letter 's' in the name with any expense budgets? | select documents.document_id from documents join documents_with_expenses on documents.document_id = documents_with_expenses.document_id where documents.document_name like '%s%' | What are the document type codes of documents with the letter 's' in the name with any expense budgets?",
    "label": "CONFIRM_SQL",
    "output": "select documents.document_type_code from documents join documents_with_expenses on documents.document_id = documents_with_expenses.document_id where documents.document_name like '%s%'"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What are the project id of documents with the letter 's' in the name with any expense budgets? | select documents.project_id from documents join documents_with_expenses on documents.document_id = documents_with_expenses.document_id where documents.document_name like '%s%' | What are the ids of documents with the letter 'a' in the name with any expense budgets?",
    "label": "CONFIRM_SQL",
    "output": "select documents.document_id from documents join documents_with_expenses on documents.document_id = documents_with_expenses.document_id where documents.document_name like '%a%'"
  },
  {
    "db_id": "college_3",
    "input": "What department is the Introduction to Computer Science course in? | select department.dname , department.room from course join department on course.dno = department.dno where course.cname = 'INTRODUCTION TO COMPUTER SCIENCE' | Ok, the class will be in Room 224. Do you know who the instructor will be?  ",
    "label": "CONFIRM_SQL",
    "output": "select instructor from course join department on course.dno = department.dno where course.cname = 'INTRODUCTION TO COMPUTER SCIENCE'"
  },
  {
    "db_id": "college_3",
    "input": "What day is class?  | select days from course join department on course.dno = department.dno where course.cname = 'INTRODUCTION TO COMPUTER SCIENCE' | How long is the class? ",
    "label": "CONFIRM_SQL",
    "output": "select hours from course join department on course.dno = department.dno where course.cname = 'INTRODUCTION TO COMPUTER SCIENCE'"
  },
  {
    "db_id": "college_3",
    "input": "Oh ok, how many credit hours is this course worth?\n | select credits from course join department on course.dno = department.dno where course.cname = 'INTRODUCTION TO COMPUTER SCIENCE' | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "perpetrator",
    "input": "HOW MANY PEOPLE HAS KILLED AT SOUTH KOREA ? | select killed from perpetrator where country = 'South Korea' | WHAT IS THE NAME OF THE PERPETRATOR WITH THE BIGGEST WEIGHT ?",
    "label": "CONFIRM_SQL",
    "output": "select people.name from people join perpetrator on people.people_id = perpetrator.people_id order by people.weight desc limit 1"
  },
  {
    "db_id": "perpetrator",
    "input": "WHERE IS THE LOCATION OF EVENTS IN JAPAN ? | select location from perpetrator where country = 'Japan' | THANKS!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "architecture",
    "input": "How many mills are built by American architects? | select count ( * ) from mill join architect on mill.architect_id = architect.id where architect.nationality = 'American' | Hmm, I also want to know how many mills are built by Canadian architects.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from mill join architect on mill.architect_id = architect.id where architect.nationality = 'Canadian'"
  },
  {
    "db_id": "architecture",
    "input": "What are the distinct type of mills that are built by American or Canadian architects? | select distinct mill.type from mill join architect on mill.architect_id = architect.id where architect.nationality = 'American' or architect.nationality = 'Canadian' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "club_1",
    "input": "What is the average age of all of the members of the club called \"Bootup Baltimore\"? | select avg ( student.age ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore' | How many people with sex \"M\" and sex \"F\" are in that club?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore'"
  },
  {
    "db_id": "club_1",
    "input": "Who is the president of that club? | select student.fname , student.lname from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where club.clubname = 'Bootup Baltimore' and member_of_club.position = 'President' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "aircraft",
    "input": "The column \"winning_pilot \" in Table: \"MATCH\" refers to column \"pilot_id\" in Table: \" pilot\" | Did  you  mean  that  you  want  to  get Pilot Id? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select distinct pilot.pilot_id from pilot join match on pilot.pilot_id = match.winning_pilot"
  },
  {
    "db_id": "aircraft",
    "input": "find the name and age of the pilot who has won the most number of times among the pilot who are younger than 30 | select pilot.name , pilot.age from pilot join match on pilot.pilot_id = match.winning_pilot where pilot.age < 30 group by match.winning_pilot order by count ( * ) desc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "welcome and bye"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Can you list the names of all the customers who never placed a single order? | select customer_name from customers except select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id | What date did they each become customers?",
    "label": "CONFIRM_SQL",
    "output": "select date_became_customer from customers where customer_name in ( select customer_name from customers except select customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id )"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What are the names of the customers who cancelled their orders? | select distinct customers.customer_name from customers join customer_orders on customers.customer_id = customer_orders.customer_id where customer_orders.order_status = 'Cancelled' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "allergy_1",
    "input": "Did you mean the student with last name Smith? | Yes | Can you give me the allergies that the student with the first name Lisa has",
    "label": "CONFIRM_SQL",
    "output": "select allergy_type.allergy from allergy_type join has_allergy on allergy_type.allergy = has_allergy.allergy join student on student.stuid = has_allergy.stuid where student.fname = 'Lisa'"
  },
  {
    "db_id": "allergy_1",
    "input": "Are there any other names that have allergies | Do you want the first name or the last name of students other than Lisa who have allergies? | Can i have the list of foods that Lisa is allergic to",
    "label": "CONFIRM_SQL",
    "output": "select allergy_type.allergy from allergy_type join has_allergy on allergy_type.allergy = has_allergy.allergy join student on student.stuid = has_allergy.stuid where student.fname = 'Lisa' and allergy_type.allergytype = 'food'"
  },
  {
    "db_id": "allergy_1",
    "input": "Is smith also allergic to egg | select allergy_type.allergy from allergy_type join has_allergy on allergy_type.allergy = has_allergy.allergy join student on student.stuid = has_allergy.stuid where student.lname = 'Smith' | Thanks",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "shop_membership",
    "input": "What is the total pounds of purchases in the year 2018 for all branches in London?\n | select sum ( total_pounds ) from purchase join branch on purchase.branch_id = branch.branch_id where branch.city = 'London' and purchase.year = 2018 | How many branches are there in London?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from branch where city = 'London'"
  },
  {
    "db_id": "shop_membership",
    "input": "What branch made the most sales in 2018? | Sorry, we don't have information about sales. Do you want to ask something else? | Thanks!\n",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "music_1",
    "input": "how many file ids? | select count ( distinct f_id ) from files | what is country for Shrikanta?",
    "label": "CONFIRM_SQL",
    "output": "select song.country from files join song on files.f_id = song.f_id where files.artist_name = 'Shrikanta'"
  },
  {
    "db_id": "music_1",
    "input": "who is highest rating? | select artist_name from song order by rating desc limit 1 | what is languages for Prity and genre?",
    "label": "CLARIFY",
    "output": "Do you mean the song with the artist name Prity?"
  },
  {
    "db_id": "music_1",
    "input": "yes | select languages , genre_is from song where artist_name = 'Prity' | find the file size for Farida?",
    "label": "CONFIRM_SQL",
    "output": "select file_size from files where artist_name = 'Farida'"
  },
  {
    "db_id": "flight_1",
    "input": "How many different aircrafts are there? | Do  you mean  different \tnames of  aircrafts? | Yes, how many different names.",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct name ) from aircraft"
  },
  {
    "db_id": "flight_1",
    "input": "Show me the name of the aircraft with the fewest people who have its certificate\n | select aircraft.name from certificate join aircraft on aircraft.aid = certificate.aid group by certificate.aid order by count ( * ) asc limit 1 | and the 747-400?",
    "label": "CLARIFY",
    "output": "can  you  offer  more  info  about  this ?"
  },
  {
    "db_id": "flight_1",
    "input": "How many people have the 747-400 certificate?\n | Do you  mean \tthe  name  of  Boeing 747-400 in the \tBoeing 747-400 table ? | yes",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from certificate join aircraft on aircraft.aid = certificate.aid where aircraft.name = 'Boeing 747-400'"
  },
  {
    "db_id": "flight_1",
    "input": "how far is its distance?\n | Did   you  mean  the  distance of \tBoeing 747-400? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select distance from aircraft where name = 'Boeing 747-400'"
  },
  {
    "db_id": "flight_1",
    "input": "and the Boeing 737-800?\n | And  what  do  you  want  to  know  about the  Boeing 737-800? | What is the distance of the Boeing 737-800?",
    "label": "CONFIRM_SQL",
    "output": "select distance from aircraft where name = 'Boeing 737-800'"
  },
  {
    "db_id": "college_2",
    "input": "Hello there!  Can you show me a list of all of the departments and the budgets? | select dept_name , budget from department | Thank you!  Can you filter that list to show only the department with the lowest budget?",
    "label": "CONFIRM_SQL",
    "output": "select dept_name , budget from department order by budget asc limit 1"
  },
  {
    "db_id": "college_2",
    "input": "Awesome!  Can you add the building of the Comp Sci department to that list as well? | select dept_name , building , budget from department order by budget asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "ship_1",
    "input": "how many ship there | select count ( * ) from ship | what is the name of ship id 2",
    "label": "CONFIRM_SQL",
    "output": "select name from ship where ship_id = 2"
  },
  {
    "db_id": "ship_1",
    "input": "what is the built year of the ship id 3 | select built_year from ship where ship_id = 3 | what is the class of the ship id 1",
    "label": "CONFIRM_SQL",
    "output": "select class from ship where ship_id = 1"
  },
  {
    "db_id": "ship_1",
    "input": "what is the flag of the ship id 1 | select flag from ship where ship_id = 1 | thanks",
    "label": "REQUEST_MORE",
    "output": "you're welcome. anything else?"
  },
  {
    "db_id": "county_public_safety",
    "input": "Could you please get me the name of the county with the largest population? | select name from county_public_safety order by population desc limit 1 | How many police officers are there in that county?",
    "label": "CONFIRM_SQL",
    "output": "select police_officers from county_public_safety order by population desc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "What counties have more police officers than that? | do you want to return their names? | Yes, please.",
    "label": "CONFIRM_SQL",
    "output": "select name from county_public_safety where police_officers > ( select police_officers from county_public_safety order by population desc limit 1 )"
  },
  {
    "db_id": "county_public_safety",
    "input": "Which county has the lowest amount of police officers? | select name from county_public_safety order by population asc limit 1 | How many police officers are in that county?",
    "label": "CONFIRM_SQL",
    "output": "select police_officers from county_public_safety order by police_officers asc limit 1"
  },
  {
    "db_id": "student_1",
    "input": "Can you tell me how many teachers teach fifth grade? | select count ( distinct teachers.lastname ) from list join teachers on list.classroom = teachers.classroom where grade = 5 | What is that teacher's last name?",
    "label": "CONFIRM_SQL",
    "output": "select distinct teachers.lastname from list join teachers on list.classroom = teachers.classroom where grade = 5"
  },
  {
    "db_id": "student_1",
    "input": "What classroom does this teacher teach in? | select distinct teachers.classroom from list join teachers on list.classroom = teachers.classroom where grade = 5 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "device",
    "input": "Show me the open year of all shops in numerical order. | select open_year from shop order by open_year asc | Show the locations shared by shops.",
    "label": "CONFIRM_SQL",
    "output": "select location from shop group by location having count ( * ) > 1"
  },
  {
    "db_id": "device",
    "input": "Show the shops located at Blaenllechau, Dinas, and Penygraig. | select shop_name , location from shop where location = 'Blaenllechau' or location = 'Dinas' or location = 'Penygraig' | Show the shops with open year later than 2012 and open year before 2008.",
    "label": "CONFIRM_SQL",
    "output": "select shop_name from shop where open_year > 2012 or open_year < 2008"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Can you list the details of all the customers please? | select customer_details from customers | Can you list the names of all the customers who have the letter \"B\" in their name, please?",
    "label": "CONFIRM_SQL",
    "output": "select customer_details from customers where customer_details like '%B%'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Can you list the details and IDs of all the staff in a table, please? | select staff_id , staff_details from staff | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "flight_4",
    "input": "What are the names of the airlines ? | select name from airlines | How many routes are there in the United States ?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from routes join airlines on airlines.alid = routes.alid where airlines.country = 'United States'"
  },
  {
    "db_id": "flight_4",
    "input": "Can you give me a number of routes per country and airline name  ? | select airlines.country , airlines.name , count ( * ) from airlines join routes on airlines.alid = routes.alid group by airlines.country , airlines.name | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "can you show me a list of location name? | select location_name from ref_locations | can you show me a list of date in location to?",
    "label": "CLARIFY",
    "output": "Do you mean list of \"date in location to\" from the document locations table?"
  },
  {
    "db_id": "cre_Doc_Tracking_DB",
    "input": "yes | select date_in_locaton_to from document_locations | show the location name and code with the least documents.",
    "label": "CONFIRM_SQL",
    "output": "select ref_locations.location_name , document_locations.location_code from document_locations join ref_locations on document_locations.location_code = ref_locations.location_code group by document_locations.location_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "school_player",
    "input": "what is the high enrollment of school | Are you asking the highest enrollment number for all schools? | exactly\n",
    "label": "CONFIRM_SQL",
    "output": "select max ( enrollment ) from school"
  },
  {
    "db_id": "school_player",
    "input": "what is the school color of barker college\n | select school_colors from school where school = 'Barker College' | what is the enrollment of cranbrook school",
    "label": "CONFIRM_SQL",
    "output": "select enrollment from school where school = 'Cranbrook School'"
  },
  {
    "db_id": "school_player",
    "input": "what is the location of St Aloysius' College | select location from school where school = 'St Aloysius' college ' | which school is hightest founded",
    "label": "CLARIFY",
    "output": "Do you mean the school that is founded earliest?"
  },
  {
    "db_id": "school_player",
    "input": "exactly | select school from school order by founded asc limit 1 | thanks",
    "label": "GOOD_BYE",
    "output": "thanks. bye."
  },
  {
    "db_id": "baseball_1",
    "input": "How many games were played at Columbia Park? | select count ( * ) from home_game join park on home_game.park_id = park.park_id where park.park_name = 'Columbia Park' | How many games were played in 1907?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from home_game join park on home_game.park_id = park.park_id where home_game.year = 1907"
  },
  {
    "db_id": "baseball_1",
    "input": "Out of those games, how many of them were played in Columbia Park? | Did  you  mean  how many games were played in park \"Columbia Park\" in 1907 | Yes please.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from home_game join park on home_game.park_id = park.park_id where home_game.year = 1907 and park.park_name = 'Columbia Park'"
  },
  {
    "db_id": "baseball_1",
    "input": "Thanks! | Do  you  have  more  question? | No.",
    "label": "WELCOME",
    "output": "welcome  and bye "
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "How many things are there with status \"close\"? | select count ( * ) as num from timed_status_of_things where status_of_thing_code = 'Close' | What is their distinct id and type?",
    "label": "CONFIRM_SQL",
    "output": "select distinct things.thing_id , things.type_of_thing_code from timed_status_of_things join things on timed_status_of_things.thing_id = things.thing_id where timed_status_of_things.status_of_thing_code = 'Close'"
  },
  {
    "db_id": "store_1",
    "input": "Can you please list the names of all tracks in the playlists of Movies? | select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id join playlists on playlists.id = playlist_tracks.playlist_id where playlists.name = 'Movies' | What is the ID of Movies?",
    "label": "CONFIRM_SQL",
    "output": "select id from playlists where name = 'Movies'"
  },
  {
    "db_id": "store_1",
    "input": "What are the track names associated with those IDs? | select tracks.name from tracks join playlist_tracks on tracks.id = playlist_tracks.track_id where playlist_tracks.playlist_id = 2 or playlist_tracks.playlist_id = 7 | Thanks!",
    "label": "WELCOME",
    "output": "welcome,goodbye"
  },
  {
    "db_id": "hospital_1",
    "input": "What is the id of the appointment with the most recent start date? | select appointmentid from appointment order by start desc limit 1 | What was the end time of that appointment?",
    "label": "CONFIRM_SQL",
    "output": "select end from appointment order by start desc limit 1"
  },
  {
    "db_id": "hospital_1",
    "input": "Who was the prep nurse of that appointment? | select prepnurse from appointment order by start desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "company_office",
    "input": "Show the names of the buildings | select name from buildings | Now show the names of building whose status is on-hold",
    "label": "CONFIRM_SQL",
    "output": "select name from buildings where status = 'on-hold'"
  },
  {
    "db_id": "company_office",
    "input": "names of buildings whose status is on-hold in ascending order | In what ascending order? | In ascending order of stories",
    "label": "CONFIRM_SQL",
    "output": "select name from buildings where status = 'on-hold' order by stories asc"
  },
  {
    "db_id": "products_for_hire",
    "input": "Hello\n | Hello | Is there a product booked with an amount of 102.76?\n",
    "label": "CONFIRM_SQL",
    "output": "select * from products_booked where booked_amount = 102.76"
  },
  {
    "db_id": "products_for_hire",
    "input": "What is the product ID for the booked amount 102.76?\n | select product_id from products_booked where booked_amount = 102.76 | What is the product description that matches that product ID?",
    "label": "CONFIRM_SQL",
    "output": "select products_for_hire.product_description from products_booked join products_for_hire on products_booked.product_id = products_for_hire.product_id where products_booked.booked_amount = 102.76"
  },
  {
    "db_id": "chinook_1",
    "input": "Filter the track table to show only those records with unit price bigger than 1 | select * from track where unitprice > 1 | Count the number of records in the previous table.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from track"
  },
  {
    "db_id": "chinook_1",
    "input": "Calculate average price for all tracks | select avg ( unitprice ) from track | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_1",
    "input": "How many students number in this table? | select count ( * ) from student | How many class rooms in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( class_room ) from class"
  },
  {
    "db_id": "college_1",
    "input": "Find the average gpa of the students? | select avg ( stu_gpa ) from student | What is last name of William?",
    "label": "CONFIRM_SQL",
    "output": "select stu_lname from student where stu_fname = 'William'"
  },
  {
    "db_id": "loan_1",
    "input": "FIND THE NAME OF CUSTOMER WHO HAS THE LOWEST CREDIT SCORE | select cust_name from customer order by credit_score asc limit 1 | FIND THE NAME OF CUSTOMER WHO HAS THE HIGHEST CREDIT SCORE",
    "label": "CONFIRM_SQL",
    "output": "select cust_name from customer order by credit_score desc limit 1"
  },
  {
    "db_id": "loan_1",
    "input": "FIND THE NAME OF CUSTOMER WHO HAS HIGH ACCOUNT BALANCE | Did you mean the highest account balance? | YES",
    "label": "CONFIRM_SQL",
    "output": "select cust_name from customer order by acc_bal desc limit 1"
  },
  {
    "db_id": "loan_1",
    "input": "THANKS! | welcome goodybye | GOODBYE\n",
    "label": "GOOD_BYE",
    "output": "GOODBYE "
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Hello!  Can you provide me with a list of all of the staff members first and last names? | select staff_first_name , staff_last_name from staff | Can you filter this list to show just the staff members who reported problems with the product named \"rem\"?",
    "label": "CONFIRM_SQL",
    "output": "select staff.staff_first_name , staff.staff_last_name from problems join product join staff on problems.product_id = product.product_id and problems.reported_by_staff_id = staff.staff_id where product.product_name = 'rem'"
  },
  {
    "db_id": "tracking_software_problems",
    "input": "Interesting...  Okay, I can only see the first three entries on that table, so I assumed \"rem\" and \"auf\" were lower down and I simply couldn't see them.  Can you show me a list of all of the different product names on the \"Product\" table? | select product_name from product | Can you show me which three products received the three highest total number of reported problems?",
    "label": "CONFIRM_SQL",
    "output": "select product.product_name from product join problems on product.product_id = problems.product_id group by problems.product_id order by count ( * ) desc limit 3"
  },
  {
    "db_id": "cinema",
    "input": "How many movie theatres have a capacity of at least 300 people? | select count ( * ) from cinema where capacity >= 300 | What are their names?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from cinema where capacity >= 300"
  },
  {
    "db_id": "cinema",
    "input": "What are their specific locations? | select location from cinema where capacity >= 300 | Which theatre has the largest capacity?",
    "label": "CONFIRM_SQL",
    "output": "select * from cinema order by capacity desc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "Which year was Codling open? | select openning_year from cinema where name = 'Codling' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "What was the product id for the customer that ordered the most product quantity?\n | select customers.customer_id from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on order_items.order_id = customer_orders.order_id group by customers.customer_id order by sum ( order_items.order_quantity ) desc limit 1 | What are the name and phone of the customer with the most ordered product quantity?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_name , customers.customer_phone from customers join customer_orders on customers.customer_id = customer_orders.customer_id join order_items on order_items.order_id = customer_orders.order_id group by customers.customer_id order by sum ( order_items.order_quantity ) desc limit 1"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "What is the address for the customer Cleo? | select customer_address from customers where customer_name = 'Cleo' | What is the email for Customer name of Cleo with phone number 1-202-928-5395?",
    "label": "CONFIRM_SQL",
    "output": "select customer_email from customers where customer_name = 'Cleo' and customer_phone = '1-202-928-5395'"
  },
  {
    "db_id": "customers_and_products_contacts",
    "input": "What is the customer number for customer name Cleo?\n | select customer_number from customers where customer_name = 'Cleo' | Thanks!",
    "label": "GOOD_BYE",
    "output": "You are welcome! BYE BYE"
  },
  {
    "db_id": "flight_1",
    "input": "What is the distance of the name Boeing 747-400? | did you mean the distance of the aircraft with the name Boeing 747-400? | yes\n",
    "label": "CONFIRM_SQL",
    "output": "select distance from aircraft where name = 'Boeing 747-400'"
  },
  {
    "db_id": "flight_1",
    "input": "What is the distance of the aircraft with the name Boeing 737-800? | select distance from aircraft where name = 'Boeing 737-800' | What is the name of the aircraft with distance 7120?",
    "label": "CONFIRM_SQL",
    "output": "select name from aircraft where distance = 7120"
  },
  {
    "db_id": "flight_1",
    "input": "what is the id of the aircraft named Airbus-300? | select aid from aircraft where name = 'Airbus-300' | What is the id of the aircraft with the maximum distance?",
    "label": "CONFIRM_SQL",
    "output": "select aid from aircraft order by distance desc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "Which is the aircraft that have the maximum distance? | Did you mean the name of the aircraft? | yes",
    "label": "CONFIRM_SQL",
    "output": "select name from aircraft order by distance desc limit 1"
  },
  {
    "db_id": "roller_coaster",
    "input": "what is the country name? | what  did  you  want  to  konw  the country name ?give  more  info about this  question | what are the country names which has both roller coasters with speed higher than 60 and roller coasters with speed lower than 55?",
    "label": "CONFIRM_SQL",
    "output": "select country.name from country join roller_coaster on country.country_id = roller_coaster.country_id where roller_coaster.speed > 60 intersect select country.name from country join roller_coaster on country.country_id = roller_coaster.country_id where roller_coaster.speed < 55"
  },
  {
    "db_id": "roller_coaster",
    "input": "what are the country id ? | Did  you  mean country id which has both roller coasters with speed higher than 60 and roller coasters with speed lower than 55? | Yes!",
    "label": "CONFIRM_SQL",
    "output": "select country.country_id from country join roller_coaster on country.country_id = roller_coaster.country_id where roller_coaster.speed > 60 intersect select country.country_id from country join roller_coaster on country.country_id = roller_coaster.country_id where roller_coaster.speed < 55"
  },
  {
    "db_id": "roller_coaster",
    "input": "how about is the status operate in country? | sorry  ，i have no  answer  to  this question | Thanks!",
    "label": "GOOD_BYE",
    "output": "bye"
  },
  {
    "db_id": "restaurant_1",
    "input": "great, goodbye. | How much time was spent at Subway? | select sum ( visits_restaurant.spent ) from visits_restaurant join restaurant on visits_restaurant.resid = restaurant.resid where restaurant.resname = 'Subway'",
    "label": "INFORM_SQL",
    "output": "How much time was spent at Honeygrow?"
  },
  {
    "db_id": "restaurant_1",
    "input": "select sum ( visits_restaurant.spent ) from visits_restaurant join restaurant on visits_restaurant.resid = restaurant.resid where restaurant.resname = 'Honeygrow' | Show me how much time was spent at each restaurant. | select restaurant.resname , sum ( visits_restaurant.spent ) from visits_restaurant join restaurant on visits_restaurant.resid = restaurant.resid group by restaurant.resid",
    "label": "INFORM_SQL",
    "output": "Which restaurant had the least amount of time spent?"
  },
  {
    "db_id": "hospital_1",
    "input": "Find the patient order by the date they underwent treatment. Recent first. | select patient from undergoes order by dateundergoes desc | Only show the first result.",
    "label": "CONFIRM_SQL",
    "output": "select patient from undergoes order by dateundergoes desc limit 1"
  },
  {
    "db_id": "flight_1",
    "input": "What is the average price for flights from Los Angeles to Honolulu | select avg ( price ) from flight where origin = 'Los Angeles' and destination = 'Honolulu' | What is the average price for flights from Los Angeles to Chicago",
    "label": "CONFIRM_SQL",
    "output": "select avg ( price ) from flight where origin = 'Los Angeles' and destination = 'Chicago'"
  },
  {
    "db_id": "flight_1",
    "input": "What is the average price for flights from Los Angeles to Washington D.C. | select avg ( price ) from flight where origin = 'Los Angeles' and destination = 'Washington D.C.' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "No problem. Do you want to know more?"
  },
  {
    "db_id": "twitter_1",
    "input": "What is his tweeter account? | can you give more details? who is \"he\" | The user who tweeted more than once",
    "label": "CONFIRM_SQL",
    "output": "select * from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1"
  },
  {
    "db_id": "twitter_1",
    "input": "What are his tweets? | do you mean the text of tweets | Yes",
    "label": "CONFIRM_SQL",
    "output": "select user_profiles.name , tweets.text from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1"
  },
  {
    "db_id": "twitter_1",
    "input": "How many tweets did Iron man tweet? | select count ( * ) from user_profiles join tweets on user_profiles.uid = tweets.uid and user_profiles.name = 'Iron Man' | What about Celine?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from user_profiles join tweets on user_profiles.uid = tweets.uid and user_profiles.name = 'Celine Dion'"
  },
  {
    "db_id": "coffee_shop",
    "input": "Which address has members younger than 30? | select address from member where age < 30 | Which address has members older than 40?",
    "label": "CONFIRM_SQL",
    "output": "select address from member where age > 40"
  },
  {
    "db_id": "coffee_shop",
    "input": "Which address has members younger than 30 and older than 40? | select address from member where age < 30 intersect select address from member where age > 40 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "party_host",
    "input": "list the locations available?  | select location from party | what locations of the party have the most hosts?",
    "label": "CONFIRM_SQL",
    "output": "select location from party order by number_of_hosts desc limit 1"
  },
  {
    "db_id": "party_host",
    "input": "list the party themes available  | select party_theme from party | Thanks! ",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "twitter_1",
    "input": "Show me all the users. | select name from user_profiles | Which of these users have more than one tweet?",
    "label": "CONFIRM_SQL",
    "output": "select user_profiles.name from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1"
  },
  {
    "db_id": "twitter_1",
    "input": "Show me the number of tweets for each of these users. | select user_profiles.name , count ( * ) from user_profiles join tweets on user_profiles.uid = tweets.uid group by tweets.uid having count ( * ) > 1 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_2",
    "input": "How many teachers are there? | select count ( name ) from instructor where id in ( select id from teaches ) | How many taught over multiple years?",
    "label": "REJECT",
    "output": "Sorry, I cannot answer this question. Could you ask something else?"
  },
  {
    "db_id": "college_2",
    "input": "How many teachers didn't teach at all? | select count ( name ) from instructor where id not in ( select id from teaches ) | WHAT ARE THEIR NAMES?",
    "label": "CONFIRM_SQL",
    "output": "select name from instructor where id not in ( select id from teaches )"
  },
  {
    "db_id": "sakila_1",
    "input": "What is the largest payment amount? | select amount from payment order by amount desc limit 1 | And what is the second largest payment amount?",
    "label": "CONFIRM_SQL",
    "output": "select amount from payment order by amount desc limit 2"
  },
  {
    "db_id": "sakila_1",
    "input": "Hmm, are all of the payment amounts over 10.00? | select amount from payment where amount <= 10 | So what is the median amount of all those payments?",
    "label": "REQUEST_MORE",
    "output": "Sorry, I cannot answer the median number but I can answer the average number."
  },
  {
    "db_id": "sakila_1",
    "input": "OK, what is the average of all payment amounts? | select avg ( amount ) from payment | One last question: what percentage of all payments are above the average of 4.20066?",
    "label": "SORRY",
    "output": "Sorry, I cannot answer that."
  },
  {
    "db_id": "twitter_1",
    "input": "Did you mean Tyler Swift? | Yes! | Can you please tell me how many users there are?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from user_profiles"
  },
  {
    "db_id": "twitter_1",
    "input": "Which user has the most followers?  | select name from user_profiles order by followers desc limit 1 | And how many followers does Tyler have?",
    "label": "CONFIRM_SQL",
    "output": "select followers from user_profiles where name = 'Tyler Swift'"
  },
  {
    "db_id": "twitter_1",
    "input": "That's 99999998 followers out of how many total followers for all users?  | select sum ( followers ) from user_profiles | Can you please also provide the number of followers for the remaining users? ",
    "label": "CONFIRM_SQL",
    "output": "select followers from user_profiles where name != 'Tyler Swift'"
  },
  {
    "db_id": "college_1",
    "input": "what instructors teach courses? | Do you mean the first names of instructors who teach courses? | Yes, the first names of all instructors who teach courses,",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname from class join employee on class.prof_num = employee.emp_num join course on class.crs_code = course.crs_code join professor on employee.emp_num = professor.emp_num"
  },
  {
    "db_id": "college_1",
    "input": "Great. I need to know which first name of the instructor goes with each class and class description. | select employee.emp_fname , course.crs_description from class join employee on class.prof_num = employee.emp_num join course on class.crs_code = course.crs_code join professor on employee.emp_num = professor.emp_num | great, I also need to know the first name of each instructor with the course name, and where their office is located.",
    "label": "CONFIRM_SQL",
    "output": "select employee.emp_fname , professor.prof_office , course.crs_description from class join employee on class.prof_num = employee.emp_num join course on class.crs_code = course.crs_code join professor on employee.emp_num = professor.emp_num"
  },
  {
    "db_id": "flight_4",
    "input": "Can you show me the total number of airports? | select count ( apid ) from airports | How about the total number of cities?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct city ) from airports"
  },
  {
    "db_id": "flight_4",
    "input": "How many of them have more than 2 airports? | select city from airports group by city having count ( * ) > 2 | Can you sort them by the number of airports?",
    "label": "CONFIRM_SQL",
    "output": "select city from airports group by city having count ( * ) > 2 order by count ( * ) asc"
  },
  {
    "db_id": "store_1",
    "input": "How many employees are IT Staff?\n | select count ( * ) from employees where title = 'IT Staff' | How many are in Calgary?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from employees where title = 'IT Staff' and city = 'Calgary'"
  },
  {
    "db_id": "store_1",
    "input": "how about in Edmonton? | select count ( * ) from employees where title = 'IT Staff' and city = 'Edmonton' | What city are the 2 employees in?",
    "label": "CLARIFY",
    "output": "You mean the 2 employees with title \"IT Staff\"?"
  },
  {
    "db_id": "store_1",
    "input": "yes, the two employees with the title of IT Staff. | select distinct city from employees where title = 'IT Staff' | Oh great! ",
    "label": "REQUEST_MORE",
    "output": "What do you wanna ask else?"
  },
  {
    "db_id": "csu_1",
    "input": "Please tell me the number of undergraduates from each campus in the year 2004 | select campuses.campus , sum ( discipline_enrollments.graduate ) from discipline_enrollments join campuses on discipline_enrollments.campus = campuses.id where discipline_enrollments.year = 2004 group by campuses.campus | please show the undergrads total from each campus",
    "label": "CONFIRM_SQL",
    "output": "select campuses.campus , sum ( discipline_enrollments.undergraduate ) from discipline_enrollments join campuses on discipline_enrollments.campus = campuses.id group by campuses.campus"
  },
  {
    "db_id": "csu_1",
    "input": "now please show just the total of graduates from San Francisco State University in 2004 | select sum ( discipline_enrollments.graduate ) from discipline_enrollments join campuses on discipline_enrollments.campus = campuses.id where discipline_enrollments.year = 2004 and campuses.campus = 'San Francisco State University' | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "college_1",
    "input": "How many schools are there? | select count ( school_code ) from department | How many professors are there in total?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor"
  },
  {
    "db_id": "college_1",
    "input": "Which school has the most professors? | select department.school_code from department join professor on department.dept_code = professor.dept_code group by department.school_code order by count ( * ) desc limit 1 | How about the school with the least amount of professors?",
    "label": "CONFIRM_SQL",
    "output": "select department.school_code from department join professor on department.dept_code = professor.dept_code group by department.school_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "What departments does this school have? | select dept_name from department where school_code in ( select department.school_code from department join professor on department.dept_code = professor.dept_code group by department.school_code order by count ( * ) asc limit 1 ) | Thanks!",
    "label": "REQUEST_MORE",
    "output": "My pleasure. Anything else?"
  },
  {
    "db_id": "company_employee",
    "input": "what is the name of the company with more than 200 sales?  | select name from company where sales_in_billion > 200 | where is the headquarters for  BP",
    "label": "CONFIRM_SQL",
    "output": "select headquarters from company where name = 'BP'"
  },
  {
    "db_id": "company_employee",
    "input": "in what industry is BP | select industry from company where name = 'BP' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome. Bye!"
  },
  {
    "db_id": "cinema",
    "input": "what is the total number of showtimes at each cinema?\n | select cinema.name , sum ( schedule.show_times_per_day ) from schedule join cinema on schedule.cinema_id = cinema.cinema_id group by schedule.cinema_id | what cinema has the most showings in one day?\n",
    "label": "CONFIRM_SQL",
    "output": "select cinema.name from schedule join cinema on schedule.cinema_id = cinema.cinema_id group by schedule.cinema_id order by sum ( schedule.show_times_per_day ) desc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "What cinema has the highest capacity? | select name from cinema order by capacity desc limit 1 | what cinema is in Cork county?\n",
    "label": "CONFIRM_SQL",
    "output": "select name from cinema where location = 'County Cork'"
  },
  {
    "db_id": "activity_1",
    "input": "Show the faculty id of each faculty member, along with the number of students he or she advises. | select faculty.facid , count ( * ) from faculty join student on faculty.facid = student.advisor group by faculty.facid | How may faculties in this survey?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty"
  },
  {
    "db_id": "activity_1",
    "input": "How many males in this table? | Do you mean the table \"Faculty\"? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty where sex = 'M'"
  },
  {
    "db_id": "school_finance",
    "input": "list the amount for the largest donation | select amount from endowment order by amount desc limit 1 | list the name for the largest amount of donation",
    "label": "CONFIRM_SQL",
    "output": "select donator_name from endowment order by amount desc limit 1"
  },
  {
    "db_id": "school_finance",
    "input": "what is the name for the smallest amount of donation | select donator_name from endowment order by amount asc limit 1 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "You are welcome. Anything you'd like to know more?"
  },
  {
    "db_id": "scientist_1",
    "input": "List all project code name and hours worked by Scientists ssn | Do you mean list their ssn's? | yes, list the project codes, names, and hours worked by scientists by ssn",
    "label": "CONFIRM_SQL",
    "output": "select projects.name , projects.code , projects.hours from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by scientists.ssn asc"
  },
  {
    "db_id": "scientist_1",
    "input": "list scientists names by ssn\n | select name from scientists order by ssn asc | list Project codes, names, and hours worked by scientist by ssn and name",
    "label": "CONFIRM_SQL",
    "output": "select projects.code , projects.name , projects.hours from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by scientists.ssn asc"
  },
  {
    "db_id": "scientist_1",
    "input": "list results by scientists name | select projects.code , projects.name , projects.hours from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by scientists.name asc | list results by project by scientists names",
    "label": "CLARIFY",
    "output": "Do you mean list the project names by scientists names?"
  },
  {
    "db_id": "scientist_1",
    "input": "yes\n | select projects.name from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by scientists.name asc | list project names in ascending order",
    "label": "CONFIRM_SQL",
    "output": "select projects.name from scientists join assignedto on scientists.ssn = assignedto.scientist join projects on assignedto.project = projects.code order by scientists.name asc"
  },
  {
    "db_id": "decoration_competition",
    "input": "Please show the names of all members who go to Saskatchewan School | select member.name from college join member on college.college_id = member.college_id where college.name = 'Saskatchewan School' | Now please show the names of all members, and the locations of the colleges they go to\n",
    "label": "CONFIRM_SQL",
    "output": "select member.name , college.college_location from college join member on college.college_id = member.college_id"
  },
  {
    "db_id": "decoration_competition",
    "input": "now can you show the those same results, but ordered in ascending order of member names | select member.name , college.college_location from college join member on college.college_id = member.college_id order by member.name asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you! Goodbye."
  },
  {
    "db_id": "train_station",
    "input": "Can you please list all of the locations with only one station? | select location from station group by location having count ( * ) = 1 | What is the name of the station in Glasgow?",
    "label": "CONFIRM_SQL",
    "output": "select name from station where location = 'Glasgow'"
  },
  {
    "db_id": "train_station",
    "input": "How many platforms does Glasgow Central have? | select number_of_platforms from station where name = 'Glasgow Central' | Which location had more total passengers, Glasgow or Birmingham?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( total_passengers ) , location from station group by location"
  },
  {
    "db_id": "company_office",
    "input": "what is the highest profits of companies | select max ( profits_billion ) from companies | what is the market value of JPMorgan Chase\n",
    "label": "CONFIRM_SQL",
    "output": "select market_value_billion from companies where name = 'JPMorgan Chase'"
  },
  {
    "db_id": "company_office",
    "input": "what is name of headquarters on General Electric | select headquarters from companies where name = 'General Electric' | which company is highest assets value",
    "label": "CONFIRM_SQL",
    "output": "select name from companies order by assets_billion desc limit 1"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Can you show me all the addresses with cities? | Did  you  mean  the address content? | Yes, and also the cities.",
    "label": "CONFIRM_SQL",
    "output": "select address_content , city from addresses"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Hmm, I want to know the cities with customers living in. | select city from addresses where city in ( select distinct addresses.city from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id ) | Hmm, please list the cities that no customer is living in.",
    "label": "CONFIRM_SQL",
    "output": "select city from addresses where city not in ( select distinct addresses.city from customers join customer_addresses on customers.customer_id = customer_addresses.customer_id join addresses on customer_addresses.address_id = addresses.address_id )"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Show the statement id and the statement detail for the statement with most number of accounts? | select accounts.statement_id , statements.statement_details from accounts join statements on accounts.statement_id = statements.statement_id group by accounts.statement_id order by count ( * ) desc limit 1 | How many account ids are on the table?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( account_id ) from accounts"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is the statement detail of statement id 57? | select statement_details from statements where statement_id = '57' | What is the account details of account id 61?\n",
    "label": "CONFIRM_SQL",
    "output": "select account_details from accounts where account_id = 61"
  },
  {
    "db_id": "activity_1",
    "input": "Can you please list all the ranks and the number of male faculty members for those ranks? | select rank , sex , count ( * ) from faculty where sex = 'M' group by rank , sex | Can you add the number of female faculty members for each of the ranks to the table please?",
    "label": "CONFIRM_SQL",
    "output": "select rank , sex , count ( * ) from faculty group by rank , sex"
  },
  {
    "db_id": "activity_1",
    "input": "Are there more male faculty members or female faculty members? | select count ( * ) from faculty where sex = 'M' union select count ( * ) from faculty where sex = 'F' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "What are all the names of the customers? | Did you mean customer details in the table? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select customer_details from customers"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Show the ID of the customers without policies | select customer_id from customers except select customers.customer_details from policies join customers on policies.customer_id = customers.customer_id | What are the customer details with those customers",
    "label": "CONFIRM_SQL",
    "output": "select customer_details from customers except select customers.customer_details from policies join customers on policies.customer_id = customers.customer_id"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Do these customers have policies? | select customer_details from customers except select customers.customer_details from policies join customers on policies.customer_id = customers.customer_id | Thanks!",
    "label": "GOOD_BYE",
    "output": "Goodbye!"
  },
  {
    "db_id": "store_1",
    "input": "What are the addresses of the employees? | Do you mean all of the employees? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select address from employees"
  },
  {
    "db_id": "store_1",
    "input": "Which  cities are they from? | select city from employees | What are their emails?",
    "label": "CONFIRM_SQL",
    "output": "select email from employees"
  },
  {
    "db_id": "wine_1",
    "input": "What is the name of the grape whose wine products had the highest average price? | select grapes.grape from grapes join wine on grapes.grape = wine.grape group by wine.grape order by avg ( price ) desc limit 1 | What is the color of that grape?",
    "label": "CONFIRM_SQL",
    "output": "select grapes.color from grapes join wine on grapes.grape = wine.grape group by wine.grape order by avg ( price ) desc limit 1"
  },
  {
    "db_id": "wine_1",
    "input": "What is the color of the grape whose wine products had the lowest average price? | select grapes.color from grapes join wine on grapes.grape = wine.grape group by wine.grape order by avg ( price ) asc limit 1 | Thank you!",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "college_1",
    "input": "How many professors are there? | select count ( * ) from professor | How many have a Ph.D. degree?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from professor where prof_high_degree = 'Ph.D.'"
  },
  {
    "db_id": "college_1",
    "input": "Which department has the most of those professors? | Do you want the name of that department? | Yes\n",
    "label": "CONFIRM_SQL",
    "output": "select department.dept_name from professor join department on professor.dept_code = department.dept_code where professor.prof_high_degree = 'Ph.D.' group by professor.dept_code order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "What is the ID of the oldest customer? | select customer_id from orders order by date_order_placed asc limit 1 | what about the newest customer?",
    "label": "CONFIRM_SQL",
    "output": "select customer_id from orders order by date_order_placed desc limit 1"
  },
  {
    "db_id": "tracking_orders",
    "input": "What is the order status of the order for customer with ID 11 | select order_status from orders where customer_id = 11 | What date did customer with ID 11 place an order?",
    "label": "CONFIRM_SQL",
    "output": "select date_order_placed from orders where customer_id = 11"
  },
  {
    "db_id": "culture_company",
    "input": "What is the average for all movies? | average what? | Sorry, the average budget for all movies?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( budget_million ) from movie"
  },
  {
    "db_id": "culture_company",
    "input": "Okay. What is the average budget for all movies before 2000? | select avg ( budget_million ) from movie where year < 2000 | Finally, what is the average budget, the maximum budget, and the minimum budget for all movies before 2000?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) from movie where year < 2000"
  },
  {
    "db_id": "riding_club",
    "input": "Which coach has been at the school longer? | Sorry the question cannot be answered from the table. | Which coach started in 2010?\n",
    "label": "CONFIRM_SQL",
    "output": "select coach_id from player_coach where starting_year = 2010"
  },
  {
    "db_id": "riding_club",
    "input": "What are the names of the coaches that started in 2010?\n | select coach_name from coach join player_coach on coach.coach_id = player_coach.coach_id where starting_year = 2010 | What are the names of the players who were coached by Jameson Tomas?",
    "label": "CONFIRM_SQL",
    "output": "select player.player_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id where coach.coach_name = 'Jameson Tomas'"
  },
  {
    "db_id": "riding_club",
    "input": "What are the names of the players who were coached by Smith Brown? | select player.player_name from player_coach join coach on player_coach.coach_id = coach.coach_id join player on player_coach.player_id = player.player_id where coach.coach_name = 'Smith Brown' | What is the name of the coach who started in 2011?",
    "label": "CONFIRM_SQL",
    "output": "select coach.coach_name from coach join player_coach on coach.coach_id = player_coach.coach_id where player_coach.starting_year = 2011"
  },
  {
    "db_id": "insurance_policies",
    "input": "What days were the claims made?\n | select date_claim_made from claims | When was the earliest claim made?",
    "label": "CONFIRM_SQL",
    "output": "select date_claim_made from claims order by date_claim_made asc limit 1"
  },
  {
    "db_id": "insurance_policies",
    "input": "What day of the week was that claim made? | Sorry, I cannot find info about this. | What was the claim ID for the earliest claim?",
    "label": "CONFIRM_SQL",
    "output": "select claim_id from claims order by date_claim_made asc limit 1"
  },
  {
    "db_id": "chinook_1",
    "input": "what is the average of the milliseconds? | select avg ( milliseconds ) from track | what is the average of the bytes?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( bytes ) from track"
  },
  {
    "db_id": "chinook_1",
    "input": "what is the highest unit price?\n | select max ( unitprice ) from track | thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "college_1",
    "input": "Did you mean the first and last names? | Yes | What is the first name of the oldest employee?",
    "label": "CONFIRM_SQL",
    "output": "select emp_fname from employee order by emp_dob asc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "What is his last name? | select emp_lname from employee order by emp_dob asc limit 1 | What was his employee hire date?",
    "label": "CONFIRM_SQL",
    "output": "select emp_hiredate from employee order by emp_dob asc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "What was his date of birth? | select emp_dob from employee order by emp_dob asc limit 1 | What is the name of the youngest employee?",
    "label": "CONFIRM_SQL",
    "output": "select emp_lname , emp_fname from employee order by emp_dob desc limit 1"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Hello!  Can you please show me a list of all of the product names and their associated product IDs? | select products.product_id , products.product_name from products join ref_product_categories on products.product_category_code = ref_product_categories.product_category_code | Thank you very much!  Can you filter this list to show only the item with the product id of 11, and show me the associated product category code?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_id , products.product_name , products.product_category_code from products join ref_product_categories on products.product_category_code = ref_product_categories.product_category_code where products.product_id = 11"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "Thank you very much!  Can you update this to display the product category code, product category description, and unit of measure? | select ref_product_categories.product_category_code , ref_product_categories.product_category_description , ref_product_categories.unit_of_measure from products join ref_product_categories on products.product_category_code = ref_product_categories.product_category_code where products.product_id = 11 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the average height of all players? | select avg ( height ) from player | What is the average height of all players from the college \"Yale University\"?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( player.height ) from player join player_college on player.player_id = player_college.player_id join college on college.college_id = player_college.college_id where college.name_full = 'Yale University'"
  },
  {
    "db_id": "baseball_1",
    "input": "What is the average weight of all players? | select avg ( weight ) from player | What is the player id of the heaviest player?",
    "label": "CONFIRM_SQL",
    "output": "select player_id from player order by weight desc limit 1"
  },
  {
    "db_id": "culture_company",
    "input": "HOW MANY DIRECTORE IN MOVIE TABLE ? List them. | select distinct director from movie group by director | WHAT IS THE BUDGET OF THE BOONDOCK SAINTS?",
    "label": "CONFIRM_SQL",
    "output": "select budget_million from movie where title = 'The Boondock Saints'"
  },
  {
    "db_id": "culture_company",
    "input": "WHAT IS THE BIGGEST BUDGET OF MOVIE TABLE? | select budget_million from movie order by budget_million desc limit 1 | THANKS",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "store_1",
    "input": "What county does Roberto Almeida live in? | select country from customers where first_name = 'Roberto' and last_name = 'Almeida' | What state does he live in?",
    "label": "CONFIRM_SQL",
    "output": "select state from customers where first_name = 'Roberto' and last_name = 'Almeida'"
  },
  {
    "db_id": "store_1",
    "input": "What is his address, please? | select address from customers where first_name = 'Roberto' and last_name = 'Almeida' | What company does he work for?",
    "label": "CONFIRM_SQL",
    "output": "select company from customers where first_name = 'Roberto' and last_name = 'Almeida'"
  },
  {
    "db_id": "store_1",
    "input": "What are the names of the other people who work for that company? | select first_name , last_name from customers where company = 'Riotur' and first_name != 'Roberto' and last_name != 'Almeida' | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "loan_1",
    "input": "Hello there!  Can you show me a list of all of the customer names? | select cust_name from customer | Can you filter the list to show only the customers who have a loan amount of more than 3000?",
    "label": "CONFIRM_SQL",
    "output": "select customer.cust_name from customer join loan on customer.cust_id = loan.cust_id where amount > 3000"
  },
  {
    "db_id": "loan_1",
    "input": "Thanks!  I'm a bit short on time, so can you provide me with Owens loan amount? | select loan.amount from loan join customer on customer.cust_id = loan.cust_id where customer.cust_name = 'Owen' | Thanks!",
    "label": "WELCOME",
    "output": "You're welcome, if no more questions, good bye!"
  },
  {
    "db_id": "game_injury",
    "input": "After season 2010 how many different kinds of injuries were there? | select count ( distinct injury_accident.injury ) from injury_accident join game on injury_accident.game_id = game.id where game.season > 2010 | What player received the injury? ",
    "label": "CLARIFY",
    "output": "You mean all the players having injuries?"
  },
  {
    "db_id": "bike_1",
    "input": "Where do the trips end? | select distinct station.city from trip join station on trip.end_station_id = station.id | How many trips are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from trip join station on trip.end_station_id = station.id"
  },
  {
    "db_id": "bike_1",
    "input": "How many of these end in San Francisco? | select count ( * ) from trip join station on trip.end_station_id = station.id where station.city = 'San Francisco' | How many end somewhere else?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from trip join station on trip.end_station_id = station.id where station.city != 'San Francisco'"
  },
  {
    "db_id": "manufactory_1",
    "input": "where is the Headquarter of Sony? | select headquarter from manufacturers where name = 'Sony' | how much is Creative Labs revenue?",
    "label": "CONFIRM_SQL",
    "output": "select revenue from manufacturers where name = 'Creative Labs'"
  },
  {
    "db_id": "manufactory_1",
    "input": "Could  you  please  ask  other  type  question? | what is the name of the manufacturer whose headquarter is in Los Angeles? | select name from manufacturers where headquarter = 'Los Angeles'",
    "label": "THANK_YOU",
    "output": "Thanks"
  },
  {
    "db_id": "manufactory_1",
    "input": "could  you  ask more  question ? | which manufacturer has the least revenue?  | Did   you mean  to get  the name  of manufacturer has the least revenue",
    "label": "INFORM_SQL",
    "output": "name the  manufacturer with the least revenue"
  },
  {
    "db_id": "storm_record",
    "input": "What are the names of all storms? | select name from storm | How many regions were affected by the first storm?",
    "label": "CONFIRM_SQL",
    "output": "select storm.name , count ( * ) from storm join affected_region on storm.storm_id = affected_region.storm_id group by storm.storm_id limit 1"
  },
  {
    "db_id": "storm_record",
    "input": "What is the number of affected regions for each storm? | select storm.name , count ( * ) from storm join affected_region on storm.storm_id = affected_region.storm_id group by storm.storm_id | Thanks",
    "label": "WELCOME",
    "output": "You are welcome! Good bye."
  },
  {
    "db_id": "college_2",
    "input": "Can you show all rooms with a capacity larger than 50? | select * from classroom where capacity > 50 | Can you display only the number of rooms currently in the table?",
    "label": "CONFIRM_SQL",
    "output": "select room_number from classroom where capacity > 50"
  },
  {
    "db_id": "college_2",
    "input": "How many unique room numbers are currently in the table? | select count ( distinct room_number ) from classroom where capacity > 50 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "city_record",
    "input": "Which cities are host cities? | select city.city from city join hosting_city on city.city_id = hosting_city.host_city | Okay, which cities have not hosted? \n ",
    "label": "CONFIRM_SQL",
    "output": "select city from city where city_id not  in ( select host_city from hosting_city )"
  },
  {
    "db_id": "city_record",
    "input": "Great! Out of those cities, which ones have temperatures lower in March compared to their December temperature?  | select city.city from city join temperature on city.city_id = temperature.city_id where temperature.mar < temperature.dec except select city.city from city join hosting_city on city.city_id = hosting_city.host_city | Fantastic! Between Hangzhou and Nantong, which city has the cooler weather? ",
    "label": "CLARIFY",
    "output": "Did  you  mean what  time  to compare the  weather ?"
  },
  {
    "db_id": "city_record",
    "input": "Oh, sorry! Yes, which city has the lowest temperature in March?  | select temperature.mar , city.city from city join temperature on city.city_id = temperature.city_id where city.city = 'Hangzhou ( Zhejiang )' or city.city = 'Nantong ( Jiangsu )' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  bye"
  },
  {
    "db_id": "network_2",
    "input": "Can you tell  me the numbers of friend that Dan have | select count ( personfriend.friend ) from person join personfriend on person.name = personfriend.name where person.name = 'Dan' | In which city do Dan friends reside",
    "label": "CONFIRM_SQL",
    "output": "select person.city from person join personfriend on person.name = personfriend.name where person.name = 'Dan'"
  },
  {
    "db_id": "network_2",
    "input": "Give me the full details of Zach | select * from person where name = 'Zach' | Thanks",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "college_1",
    "input": "What is the first name and last name of the youngest student whose GPA is above 3? | select stu_fname , stu_lname from student where stu_gpa > 3 order by stu_dob desc limit 1 | What is her GPA?",
    "label": "CONFIRM_SQL",
    "output": "select stu_gpa from student where stu_gpa > 3 order by stu_dob desc limit 1"
  },
  {
    "db_id": "college_1",
    "input": "What are the full name and GPA of the oldest student whose GPA is below 3? | select stu_fname , stu_lname , stu_gpa from student where stu_gpa < 3 order by stu_dob asc limit 1 | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure! Anything else?"
  },
  {
    "db_id": "movie_1",
    "input": "list out the movies on the table | select * from movie | what is the director name of Star Wars",
    "label": "CONFIRM_SQL",
    "output": "select director from movie where title = 'Star Wars'"
  },
  {
    "db_id": "movie_1",
    "input": "what is the highest rating on this table | first column | I cannot answer this question using SQL.  Please specify the name of a column.",
    "label": "AMBIGUOUS",
    "output": "actually i mean which movie rating is high"
  },
  {
    "db_id": "movie_1",
    "input": "Would you like the movie with the greatest number of rating stars? | exactly | select * from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 1",
    "label": "INFORM_SQL",
    "output": "what is the year of Gone with the Wind"
  },
  {
    "db_id": "shop_membership",
    "input": "how many purchases did each member make? | select purchase.member_id , count ( * ) from purchase join member on purchase.member_id = member.member_id group by purchase.member_id | how many purchases did members with level 5 make?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from purchase join member on purchase.member_id = member.member_id where member.level = 5"
  },
  {
    "db_id": "shop_membership",
    "input": "now how many purchases did members with level 6 make? | select count ( * ) from purchase join member on purchase.member_id = member.member_id where member.level = 6 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye."
  },
  {
    "db_id": "apartment_rentals",
    "input": "What are the facility codes of all the apartments that have more than 4 bedrooms? | select apartment_facilities.facility_code from apartment_facilities join apartments on apartment_facilities.apt_id = apartments.apt_id where apartments.bedroom_count > 4 | What are the apartment numbers of those?",
    "label": "CONFIRM_SQL",
    "output": "select apartments.apt_number from apartment_facilities join apartments on apartment_facilities.apt_id = apartments.apt_id where apartments.bedroom_count > 4"
  },
  {
    "db_id": "apartment_rentals",
    "input": "How many bathrooms do each of those have? | select apartments.bathroom_count from apartment_facilities join apartments on apartment_facilities.apt_id = apartments.apt_id where apartments.bedroom_count > 4 | Thanks!",
    "label": "GOOD_BYE",
    "output": "BYE!"
  },
  {
    "db_id": "candidate_poll",
    "input": "Hello. How many people have a weight that is higher than 85?\n | select count ( * ) from people where weight > 85 | Out of those 6 people, how many of them are female?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from people where weight > 85 and sex = 'F'"
  },
  {
    "db_id": "candidate_poll",
    "input": "How many of them are male? | select count ( * ) from people where weight > 85 and sex = 'M' | Thanks!\n",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What about the order ids and product details? | Please tell me the product names and ids. | Did you mean all the product details and ids?",
    "label": "AFFIRM",
    "output": "Yes please."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "select product_details , product_id from products | Hmm, I want to know the product names and the order quantities. | Did  you  mean  the \tproduct details as product names?",
    "label": "AFFIRM",
    "output": "Yes."
  },
  {
    "db_id": "customers_and_addresses",
    "input": "select products.product_details , order_items.order_quantity from products join order_items on products.product_id = order_items.product_id | SELECT  \tT2.order_id,T1.product_details from  Products as T1 join Order_Items as T2 on T1.product_id=T2.product_id | Can you tell which product has been ordered the most number of times?",
    "label": "CONFIRM_SQL",
    "output": "select products.product_details from order_items join products on order_items.product_id = products.product_id group by order_items.product_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "coffee_shop",
    "input": "What are the average score and average staff number of all shops? | select avg ( num_of_staff ) , avg ( score ) from shop | Which shop has the highest score?",
    "label": "CONFIRM_SQL",
    "output": "select * from shop order by score desc limit 1"
  },
  {
    "db_id": "coffee_shop",
    "input": "And the lowest? | select * from shop order by score asc limit 1 | What is the nearest competing shop?",
    "label": "CLARIFY",
    "output": "What do you mean by the nearest competing shop? "
  },
  {
    "db_id": "coffee_shop",
    "input": "Which address is nearest to shop 10? | Sorry, we can not tell the the nearest address from the table information. Please ask something else.  | How many shops have more staff than shop 10?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from shop where num_of_staff > ( select num_of_staff from shop where shop_id = 10 )"
  },
  {
    "db_id": "coffee_shop",
    "input": "And are there any other shops on the same street? | What street are you referring to?  | The street shop 10 is on.",
    "label": "CONFIRM_SQL",
    "output": "select * from shop where address = ( select address from shop where shop_id = 10 ) and shop_id != 10"
  },
  {
    "db_id": "assets_maintenance",
    "input": "How many people are in the staff? | select count ( * ) from staff | Great, what is the most common name?",
    "label": "CONFIRM_SQL",
    "output": "select staff_name from staff group by staff_name order by count ( * ) desc limit 1"
  },
  {
    "db_id": "assets_maintenance",
    "input": "What about gender?\n | select gender from staff group by gender order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. Good bye!"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "how many residents does each property have?list property id  | select properties.property_id , count ( * ) from properties join residents on properties.property_id = residents.property_id group by properties.property_id | find the property type code and address for the property id 24",
    "label": "CONFIRM_SQL",
    "output": "select property_type_code , property_address from properties where property_id = 24"
  },
  {
    "db_id": "local_govt_and_lot",
    "input": "find the date moved in for the resident id 6 | select date_moved_in from residents where resident_id = 6 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Goodbye, Thanks"
  },
  {
    "db_id": "flight_1",
    "input": "what was the destination of flight 99 ?\n | select destination from flight where flno = 99 | How far did flight 99 fly ?",
    "label": "CONFIRM_SQL",
    "output": "select distance from flight where flno = 99"
  },
  {
    "db_id": "flight_1",
    "input": "What was the name of the airplane from flight 99 ? | select aircraft.name from flight join aircraft on flight.aid = aircraft.aid where flight.flno = 99 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome  and  bye "
  },
  {
    "db_id": "game_1",
    "input": "Does Athletics on scholarship?\n | select onscholarship from sportsinfo where sportname = 'Athletics' | Does Football on scholarship?\n",
    "label": "CONFIRM_SQL",
    "output": "select onscholarship from sportsinfo where sportname = 'Football'"
  },
  {
    "db_id": "game_1",
    "input": "How many SportName on scholarship?\n | select count ( distinct sportname ) from sportsinfo where onscholarship = 'Y' | What are these 7 different sports that have student on scholarship?\n",
    "label": "CONFIRM_SQL",
    "output": "select distinct sportname from sportsinfo where onscholarship = 'Y'"
  },
  {
    "db_id": "game_1",
    "input": "which sport has most number of students on scholarship? | select sportname from sportsinfo where onscholarship = 'Y' group by sportname order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "what are the different type of payement method? | select distinct payment_method from customers | what are the different address type?",
    "label": "CONFIRM_SQL",
    "output": "select distinct address_type from customer_addresses"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "which city in Dr. Julia Wuckert MD? | What you mean? | how many customer id?",
    "label": "CONFIRM_SQL",
    "output": "select count ( customer_id ) from customers"
  },
  {
    "db_id": "flight_4",
    "input": "which country has the airport with the highest altitude?  | select country from airports order by elevation desc limit 1 | in what city is it located?",
    "label": "CONFIRM_SQL",
    "output": "select city from airports order by elevation desc limit 1"
  },
  {
    "db_id": "flight_4",
    "input": "what is its elevation?  | select elevation from airports order by elevation desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "network_2",
    "input": "How many females are under age 40? | select count ( * ) from person where gender = 'female' and age < 40 | How many males do we have data for?\n",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from person where gender = 'male'"
  },
  {
    "db_id": "network_2",
    "input": "And how many of them are under age 40? | select count ( * ) from person where age < 40 and gender = 'male' | Thanks!\n",
    "label": "WELCOME",
    "output": "welcome goodbye"
  },
  {
    "db_id": "movie_1",
    "input": "ids of reviewers who did not give 4 star? | select rid from rating except select rid from rating where stars = 4 | Stars for rID 201?",
    "label": "CONFIRM_SQL",
    "output": "select stars from rating where rid = 201"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Show the document name and the document date for all documents on project with details 'Graph Database project' | select document_name , document_date from documents join projects on documents.project_id = projects.project_id where projects.project_details = 'Graph Database project' | Which of those documents is the oldest?",
    "label": "CLARIFY",
    "output": "which kind of information the oldest documents do you want me to give you?"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "Give me the document name from those documents that has the earliest document date. | select document_name from documents join projects on documents.project_id = projects.project_id where projects.project_details = 'Graph Database project' order by document_date asc limit 1 | What is its document date?",
    "label": "CONFIRM_SQL",
    "output": "select document_date from documents join projects on documents.project_id = projects.project_id where projects.project_details = 'Graph Database project' order by document_date asc limit 1"
  },
  {
    "db_id": "activity_1",
    "input": "Do you mean the names of all activities? | Yes | Hi can you tell me what activities are listed?",
    "label": "CONFIRM_SQL",
    "output": "select activity_name from activity"
  },
  {
    "db_id": "activity_1",
    "input": "Can you tell me how many faculty are involved in each activity?\n | select activity.activity_name , count ( * ) from activity join faculty_participates_in on activity.actid = faculty_participates_in.actid group by activity.actid | What is the most popular activity?",
    "label": "CONFIRM_SQL",
    "output": "select activity.activity_name from activity join faculty_participates_in on activity.actid = faculty_participates_in.actid group by activity.actid order by count ( * ) desc limit 1"
  },
  {
    "db_id": "activity_1",
    "input": "What outside activity is most popular? | Sorry the question cannot be answered from the table. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "bike_1",
    "input": "Tell me the start date and start station id for id 900504? | select start_date , start_station_name from trip where id = 900504 | Tell me the zip code for bike id 454 and 574 ?",
    "label": "CONFIRM_SQL",
    "output": "select distinct zip_code , bike_id from trip where bike_id = 454 or bike_id = 574"
  },
  {
    "db_id": "bike_1",
    "input": "What is the id of the trip that has the shortest duration ? | select id from trip order by duration asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What is the budget type code with the largest number of documents? | select budget_type_code from documents_with_expenses group by budget_type_code order by count ( * ) desc limit 1 | What is the most common document detail?",
    "label": "CONFIRM_SQL",
    "output": "select document_details from documents_with_expenses group by document_details order by count ( * ) desc limit 1"
  },
  {
    "db_id": "cre_Docs_and_Epenses",
    "input": "What about the most common budget type code? | select budget_type_code from documents_with_expenses group by budget_type_code order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "epinions_1",
    "input": "Which id has the least rating on the table? | Which id do you need, a id, u id, or i id? | i id\n",
    "label": "CONFIRM_SQL",
    "output": "select i_id from review order by rating asc limit 1"
  },
  {
    "db_id": "epinions_1",
    "input": "For each user, find their name and the number of reviews written by them. | select useracct.name , count ( * ) from useracct join review on useracct.u_id = review.u_id group by review.u_id | Which u id has the least rank on the list?",
    "label": "CONFIRM_SQL",
    "output": "select u_id from review order by rank asc limit 1"
  },
  {
    "db_id": "epinions_1",
    "input": "State the name of u id 2 on the list? | select name from useracct where u_id = 2 | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye!"
  },
  {
    "db_id": "department_store",
    "input": "What is the average price of all products? | select avg ( product_price ) from products | Find the product type whose average price is higher than the average price of all products.",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code from products group by product_type_code having avg ( product_price ) > ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "department_store",
    "input": "What is the product name of that? | select product_name from products where product_type_code = ( select product_type_code from products group by product_type_code having avg ( product_price ) > ( select avg ( product_price ) from products ) ) | Find the product type whose average price is lower than the average price of all products.",
    "label": "CONFIRM_SQL",
    "output": "select product_type_code from products group by product_type_code having avg ( product_price ) < ( select avg ( product_price ) from products )"
  },
  {
    "db_id": "department_store",
    "input": "What are the product names? | select product_name from products where product_type_code = ( select product_type_code from products group by product_type_code having avg ( product_price ) < ( select avg ( product_price ) from products ) ) | What are the prices of them?",
    "label": "CONFIRM_SQL",
    "output": "select product_price from products where product_type_code = ( select product_type_code from products group by product_type_code having avg ( product_price ) < ( select avg ( product_price ) from products ) )"
  },
  {
    "db_id": "music_2",
    "input": "Can you list all the instruments used in the song Le Pop? | select distinct instrument from instruments join songs on instruments.songid = songs.songid where title = 'Le Pop' | Okay, how many instruments are used in the song \"Baby\"?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct instrument ) from instruments join songs on instruments.songid = songs.songid where title = 'Baby'"
  },
  {
    "db_id": "music_2",
    "input": "Who is the artist of the song \"Le Pop\"? | Sorry, we don't have this information. The structure of this database just has songs and instruments. | Thanks!",
    "label": "WELCOME",
    "output": "Thanks for your understanding! Goodbye."
  },
  {
    "db_id": "hr_1",
    "input": "Display the employee number and job id for all employees whose salary is smaller than any salary of those employees whose job title is MK_MAN | select employee_id , job_id from employees where salary < ( select min ( salary ) from employees where job_id = 'MK_MAN' ) | Show me salaries for those employees",
    "label": "CONFIRM_SQL",
    "output": "select salary from employees where salary < ( select min ( salary ) from employees where job_id = 'MK_MAN' )"
  },
  {
    "db_id": "hr_1",
    "input": "Give me names for those employees | Do you want their first name, last name, or both? | Thanks!",
    "label": "GOOD_BYE",
    "output": "No problem, bye"
  },
  {
    "db_id": "aircraft",
    "input": "plese list me about airports\n | Do you mean the airport ids of all the airports? | Yes, I just needs the name of aircrafts in airports",
    "label": "CONFIRM_SQL",
    "output": "select aircraft from aircraft"
  },
  {
    "db_id": "aircraft",
    "input": "Show me the name of aircraft assosciated with london heathrow and london gatwick airport\n | select aircraft.aircraft from aircraft join airport_aircraft on aircraft.aircraft_id = airport_aircraft.aircraft_id join airport on airport_aircraft.airport_id = airport.airport_id where airport.airport_name = 'London Heathrow' intersect select aircraft.aircraft from aircraft join airport_aircraft on aircraft.aircraft_id = airport_aircraft.aircraft_id join airport on airport_aircraft.airport_id = airport.airport_id where airport.airport_name = 'London Gatwick' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "driving_school",
    "input": "Can you list the address id of all customers who lived in Lockmanfurt? | select addresses.address_id from customers join addresses on customers.customer_address_id = addresses.address_id where addresses.city = 'Lockmanfurt' | Can you list the first and last name associated with that address id?",
    "label": "CONFIRM_SQL",
    "output": "select customers.first_name , customers.last_name from customers join addresses on customers.customer_address_id = addresses.address_id where addresses.city = 'Lockmanfurt'"
  },
  {
    "db_id": "driving_school",
    "input": "Can you list all other related information for Sigrid Schmeler? | select * from customers where first_name = 'Sigrid' and last_name = 'Schmeler' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! Goodbye."
  },
  {
    "db_id": "wine_1",
    "input": "List the grape of the wines whose score is higher than 93 ordered by Name. | select grape , appelation , name from wine where score > 93 order by name asc | Show me the winery they are from",
    "label": "CONFIRM_SQL",
    "output": "select distinct appelation from wine where score > 93"
  },
  {
    "db_id": "wine_1",
    "input": "Which states are they from? | select distinct state from wine where score > 93 | Thanks!",
    "label": "WELCOME",
    "output": "welcome,good_bye"
  },
  {
    "db_id": "ship_1",
    "input": "Who are the captains?\n | Do you mean you want the name of captain? | Yes, what are the captains names",
    "label": "CONFIRM_SQL",
    "output": "select captain.name from captain as captain"
  },
  {
    "db_id": "ship_1",
    "input": "Who is the youngest captain?\n | select captain.name from captain order by captain.age asc limit 1 | What ship does Captain Henry steer?",
    "label": "CLARIFY",
    "output": "Do you mean the name of ships of Captain Henry?"
  },
  {
    "db_id": "ship_1",
    "input": "Yes the name of the ship of Captain Henry | select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.name like '%Henry%' | Which is the ship of Captain Henry Dumaresq?",
    "label": "CONFIRM_SQL",
    "output": "select ship.name from ship join captain on ship.ship_id = captain.ship_id where captain.name like '%Henry Dumaresq%'"
  },
  {
    "db_id": "soccer_2",
    "input": "Do you want the college name? | Yes | What is the average enrollment?",
    "label": "CONFIRM_SQL",
    "output": "select avg ( enr ) from college"
  },
  {
    "db_id": "soccer_2",
    "input": "Now please list all colleges that have enrollment higher than the average. | select distinct cname from college where enr > ( select avg ( enr ) from college ) | Please list the states where LSU, OU, and FSU are located.",
    "label": "CONFIRM_SQL",
    "output": "select distinct state from college where enr > ( select avg ( enr ) from college )"
  },
  {
    "db_id": "soccer_2",
    "input": "How many total states are in the table? | select count ( distinct state ) from college where enr > ( select avg ( enr ) from college ) | Thanks!",
    "label": "WELCOME",
    "output": "Welcome! Goodbye"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Which contact codes were used for less than 5 minutes? | select channel_code from customer_contact_channels group by channel_code having count ( customer_id ) < 5 | What are their contact numbers?",
    "label": "CONFIRM_SQL",
    "output": "select channel_code , contact_number from customer_contact_channels group by channel_code having count ( customer_id ) < 5"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "What was their activation dates? | do you want the active_from_date or active_to_date or both of them? | Both of them",
    "label": "CONFIRM_SQL",
    "output": "select channel_code , active_from_date , active_to_date from customer_contact_channels group by channel_code having count ( customer_id ) < 5"
  },
  {
    "db_id": "music_1",
    "input": "what is the duration of the longest song grouped by genre? | select max ( files.duration ) , song.genre_is from files join song on files.f_id = song.f_id group by song.genre_is | How about the shortest?",
    "label": "CONFIRM_SQL",
    "output": "select min ( files.duration ) , song.genre_is from files join song on files.f_id = song.f_id group by song.genre_is"
  },
  {
    "db_id": "music_1",
    "input": "Can you order them by genre? | select min ( files.duration ) , song.genre_is from files join song on files.f_id = song.f_id group by song.genre_is order by song.genre_is asc | Can you also show me the lowest rating of songs for each genre?",
    "label": "CLARIFY",
    "output": "do you want to order them by genre as well?"
  },
  {
    "db_id": "music_1",
    "input": "Yes please | select min ( files.duration ) , min ( song.rating ) , song.genre_is from files join song on files.f_id = song.f_id group by song.genre_is order by song.genre_is asc | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "Show the shipping charge and customer id for customer orders with order status \"Cancelled\" | select order_shipping_charges , customer_id from customer_orders where order_status_code = 'Cancelled' | Show the shipping charge and customer id for customer orders with order status \"Paid\"",
    "label": "CONFIRM_SQL",
    "output": "select order_shipping_charges , customer_id from customer_orders where order_status_code = 'Paid'"
  },
  {
    "db_id": "customers_campaigns_ecommerce",
    "input": "Show the shipping method code for customer orders with order status \"Paid\" | select shipping_method_code from customer_orders where order_status_code = 'Paid' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "club_1",
    "input": "How many clubs does the student Eric Tai belong to? | select count ( distinct club.clubname ) from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid where student.fname = 'Eric' and student.lname = 'Tai' | How many other students belong in 0 clubs?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from student where stuid not in ( select student.stuid from club join member_of_club on club.clubid = member_of_club.clubid join student on member_of_club.stuid = student.stuid )"
  },
  {
    "db_id": "club_1",
    "input": "How many students belong to 1 club? | select count ( * ) from ( select stuid from member_of_club group by stuid having count ( * ) = 1 ) | What are their names?",
    "label": "CONFIRM_SQL",
    "output": "select lname , fname from student where stuid in ( select stuid from member_of_club group by stuid having count ( * ) = 1 )"
  },
  {
    "db_id": "club_1",
    "input": "What are the club names of the clubs they belong to, please? | select clubname from club where clubid in ( select distinct clubid from member_of_club group by stuid having count ( * ) = 1 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "climbing",
    "input": "How many mountains in this table? | select count ( * ) from mountain | How many countries in this table?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct country ) from mountain"
  },
  {
    "db_id": "climbing",
    "input": "what is the name of smallest mountain? | select name from mountain order by height asc limit 1 | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "store_1",
    "input": "How many invoices in this table? | select count ( * ) from invoices | List total amount of invoice from Germany?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( total ) from invoices where billing_country = 'Germany'"
  },
  {
    "db_id": "store_1",
    "input": "List total amount of invoices from Norway? | select sum ( total ) from invoices where billing_country = 'Norway' | How many billing countries in this invoice?",
    "label": "CLARIFY",
    "output": "Do  you  mean  the types  of  billing countries in this invoice"
  },
  {
    "db_id": "store_1",
    "input": "Yes. | select count ( distinct billing_country ) from invoices | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome and  goodbye"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "Find the state of all cities with post code starting with 4. | select state_province_county from addresses where zip_postcode like '4%' | Find the country of all cities with post code starting with 4.",
    "label": "CONFIRM_SQL",
    "output": "select country from addresses where zip_postcode like '4%'"
  },
  {
    "db_id": "customers_and_addresses",
    "input": "List all the post codes starting with 4. | select zip_postcode from addresses where zip_postcode like '4%' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome"
  },
  {
    "db_id": "store_1",
    "input": "Do you mean the billing cities of the invoices from the state in the USA with the most invoices? | Yes | Hello. Can you give me the state in the US with most invoices?",
    "label": "CONFIRM_SQL",
    "output": "select billing_state from invoices where billing_country = 'USA' group by billing_state order by count ( * ) desc limit 1"
  },
  {
    "db_id": "store_1",
    "input": "Can you give me the billing cities for these invoices? | select distinct billing_city from invoices where billing_state = ( select billing_state from invoices where billing_country = 'USA' group by billing_state order by count ( * ) desc limit 1 ) | How about postal codes for these invoices?",
    "label": "CONFIRM_SQL",
    "output": "select distinct billing_postal_code from invoices where billing_state = ( select billing_state from invoices where billing_country = 'USA' group by billing_state order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "store_1",
    "input": "Can you give me the billing dates as well? | do you mean the date of invoice? | Yes, date of invoice please",
    "label": "CONFIRM_SQL",
    "output": "select distinct invoice_date from invoices where billing_state = ( select billing_state from invoices where billing_country = 'USA' group by billing_state order by count ( * ) desc limit 1 )"
  },
  {
    "db_id": "manufacturer",
    "input": "how can find total market rate of the furniture | select sum ( market_rate ) from furniture | what do you meant by number of component",
    "label": "REJECT",
    "output": "i  can 't  answer  this question"
  },
  {
    "db_id": "manufacturer",
    "input": "what is the quality of furniture | There is no  infor  about   quality of furniture | Thanks!",
    "label": "REQUEST_MORE",
    "output": "Do  you  have  more  question?"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "How many projects are there? | select count ( project_id ) from project_staff | How many staff are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( staff_id ) from project_staff"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "What project has the most staff? | select project_id from project_staff group by project_id order by count ( staff_id ) desc limit 1 | Which staff started the earliest?",
    "label": "CONFIRM_SQL",
    "output": "select staff_id from project_staff order by date_from asc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "When did they first start working on the projects? | Do you mean the date when the staff with id 56.0 started the project? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select date_from from project_staff where staff_id = 56.0"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Can you show me the date of when every project's first staff started working? | Sorry, I can't answer this question in SQL. | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Goodbye."
  },
  {
    "db_id": "activity_1",
    "input": "how many faculties? | select count ( * ) from faculty | How many female faculties? ",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from faculty where sex = 'F'"
  },
  {
    "db_id": "activity_1",
    "input": "How many professors? | select count ( * ) from faculty where rank = 'Professor' | thanks!",
    "label": "REQUEST_MORE",
    "output": "Sure. Anything else?"
  },
  {
    "db_id": "college_3",
    "input": "What is the building name of division AS? | Do  you  mean \tDName? | Nope building name ",
    "label": "CONFIRM_SQL",
    "output": "select building from department where division = 'AS'"
  },
  {
    "db_id": "college_3",
    "input": "What is the room number of Chemistry? | select room from department where dname = 'Chemistry' | What is the DPhone of Biology?",
    "label": "CONFIRM_SQL",
    "output": "select dphone from department where dname = 'Biology'"
  },
  {
    "db_id": "college_3",
    "input": "What is the room number of Biology? | select room from department where dname = 'Biology' | Thanks!",
    "label": "WELCOME",
    "output": "welcome  and  goodbye"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Show the role description of the project staff involved in the most number of project outcomes | select staff_roles.role_description from staff_roles join project_staff on staff_roles.role_code = project_staff.role_code join project_outcomes on project_staff.project_id = project_outcomes.project_id group by project_staff.staff_id order by count ( * ) desc limit 1 | Show the role code of the project staff involved in the most number of project outcomes",
    "label": "CONFIRM_SQL",
    "output": "select staff_roles.role_code from staff_roles join project_staff on staff_roles.role_code = project_staff.role_code join project_outcomes on project_staff.project_id = project_outcomes.project_id group by project_staff.staff_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "Show me other details of the project staff involved in the most number of project outcomes | select project_staff.other_details from staff_roles join project_staff on staff_roles.role_code = project_staff.role_code join project_outcomes on project_staff.project_id = project_outcomes.project_id group by project_staff.staff_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "department_management",
    "input": "Can you list the states where the secretaries of the Treasury department were born? | select head.born_state from department join management on department.department_id = management.department_id join head on management.head_id = head.head_id where department.name = 'Treasury' | Can you list the states where the secretaries of the Homeland Security department were born?",
    "label": "CONFIRM_SQL",
    "output": "select head.born_state from department join management on department.department_id = management.department_id join head on management.head_id = head.head_id where department.name = 'Homeland Security'"
  },
  {
    "db_id": "department_management",
    "input": "Are there any states where both the secretaries of the Treasury department and the secretaries of the Homeland Security department were born? | select head.born_state from department join management on department.department_id = management.department_id join head on management.head_id = head.head_id where department.name = 'Treasury' intersect select head.born_state from department join management on department.department_id = management.department_id join head on management.head_id = head.head_id where department.name = 'Homeland Security' | What departments employ more than 100,000 employees?",
    "label": "CONFIRM_SQL",
    "output": "select * from department where num_employees > 100000"
  },
  {
    "db_id": "cinema",
    "input": "what is the capacity of Codling Cinema | select capacity from cinema where name = 'Codling' | what year was it opened?",
    "label": "CONFIRM_SQL",
    "output": "select openning_year from cinema where name = 'Codling'"
  },
  {
    "db_id": "cinema",
    "input": "where is it located? | select location from cinema where name = 'Codling' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "what is the name of the policy types used by more than 2 customers?  | select policy_type_code from policies group by policy_type_code having count ( * ) > 2 | what is the start date of Jurisdiction? ",
    "label": "CONFIRM_SQL",
    "output": "select start_date from policies where policy_type_code = 'Jurisdiction'"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "what is the end date of Deputy? | select end_date from policies where policy_type_code = 'Deputy' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "bike_1",
    "input": "What are the station ids for San Francisco? | Do you mean the city San Francisco? | Yes.",
    "label": "CONFIRM_SQL",
    "output": "select id from station where city = 'San Francisco'"
  },
  {
    "db_id": "bike_1",
    "input": "Which of these have bikes? | select id from station where city = 'San Francisco' intersect select station_id from status where bikes_available > 0 | Which of these have an average bike availability above 10?",
    "label": "CONFIRM_SQL",
    "output": "select id from station where city = 'San Francisco' intersect select station_id from status group by station_id having avg ( bikes_available ) > 10"
  },
  {
    "db_id": "county_public_safety",
    "input": "how many customer list ? | Do you want the number of documents in the list? | No, and what is the location shared by the least counties?",
    "label": "CONFIRM_SQL",
    "output": "select location from county_public_safety group by location order by count ( * ) asc limit 1"
  },
  {
    "db_id": "county_public_safety",
    "input": "Find the crime rate of the county named \"Burnaby\"? | select crime_rate from county_public_safety where name = 'Burnaby' | Find the location of the campbell river?",
    "label": "CONFIRM_SQL",
    "output": "select location from county_public_safety where name = 'Campbell River'"
  },
  {
    "db_id": "county_public_safety",
    "input": "which police force assigned the country id 2? | select police_officers from county_public_safety where county_id = '2' | Thank you",
    "label": "WELCOME",
    "output": "You are welcome!"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "hi. can you tell me which product made the highest number of outcomes? | What attributes of the product that made the highest number of outcomes would you like to know?  | I would like to know the most number of outcomes for all outcome codes",
    "label": "CONFIRM_SQL",
    "output": "select count ( outcome_code ) from project_outcomes group by outcome_code order by count ( outcome_code ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "can you give me the project ID? | Sorry, what would you like the project id for? | the project that had the highest number of outcomes",
    "label": "CONFIRM_SQL",
    "output": "select projects.project_id from projects join project_outcomes on projects.project_id = project_outcomes.project_id group by projects.project_id order by count ( * ) desc limit 1"
  },
  {
    "db_id": "tracking_grants_for_research",
    "input": "and can you please also give me the project details? | select projects.project_details , projects.project_id from projects join project_outcomes on projects.project_id = project_outcomes.project_id group by projects.project_id order by count ( * ) desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye. "
  },
  {
    "db_id": "e_learning",
    "input": "Can you please provide the names of all courses?\n | select course_name from courses | Can you please provide the author id for the author that teaches the Advanced Database course? ",
    "label": "CONFIRM_SQL",
    "output": "select author_id from courses where course_name = 'advanced database'"
  },
  {
    "db_id": "e_learning",
    "input": "And what is the full name of the teacher with author id 6? | select personal_name , middle_name , family_name from course_authors_and_tutors where author_id = 6 | And the login name for Adolf Keira Rohan? ",
    "label": "CONFIRM_SQL",
    "output": "select login_name from course_authors_and_tutors where personal_name like '%Adolf%' and middle_name like '%Keira%' and family_name like '%Rohan%'"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "how many ref colors are on the table | select count ( distinct color_description ) from ref_colors | what is the product name of red",
    "label": "REJECT",
    "output": "Sorry, I cannot understand your question. Can you rephrase it?"
  },
  {
    "db_id": "products_gen_characteristics",
    "input": "list out the product names | select product_name from products | what is typical selling price of cumin",
    "label": "CONFIRM_SQL",
    "output": "select typical_selling_price from products where product_name = 'cumin'"
  },
  {
    "db_id": "chinook_1",
    "input": "What is the least common media type in all tracks\n | select mediatype.name from mediatype join track on mediatype.mediatypeid = track.mediatypeid group by track.mediatypeid order by count ( * ) asc limit 1 | How many different kinds of media types are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select track.mediatypeid from mediatype join track on mediatype.mediatypeid = track.mediatypeid group by track.mediatypeid )"
  },
  {
    "db_id": "chinook_1",
    "input": "What is the most common media type? | select mediatype.name from mediatype join track on mediatype.mediatypeid = track.mediatypeid group by track.mediatypeid order by count ( * ) desc limit 1 | How many tracks are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from track"
  },
  {
    "db_id": "formula_1",
    "input": "Can you list driver iDs for all drivers that had first position in laptime at least twice? | select drivers.driverid from drivers join laptimes on drivers.driverid = laptimes.driverid where position = '1' group by drivers.driverid having count ( * ) >= 2 | Can you list all driver IDs?",
    "label": "CONFIRM_SQL",
    "output": "select driverid from drivers"
  },
  {
    "db_id": "formula_1",
    "input": "Can you add to the table the forenames and surnames associated with each driver id? | select driverid , forename , surname from drivers | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "game_injury",
    "input": "How many injury accidents are there in total? | select count ( * ) from injury_accident | Can you list them with the date  of the game and the name of the player who got injured?",
    "label": "CONFIRM_SQL",
    "output": "select game.date , injury_accident.player from game join injury_accident on game.id = injury_accident.game_id"
  },
  {
    "db_id": "game_injury",
    "input": "Can you please also sort thw result by decending order of game seasons? | select game.date , injury_accident.player from game join injury_accident on game.id = injury_accident.game_id order by game.season desc | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "movie_1",
    "input": "Please show me the names and years of the movies that has the top 3 highest rating stars | select movie.title , movie.year from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 3 | Can you show me the director names together with the name and years?",
    "label": "CLARIFY",
    "output": "Did you mean the directors of the movies that have the top 3 highest rating stars?"
  },
  {
    "db_id": "movie_1",
    "input": "Yes, director names, movie names and years please. | select movie.title , movie.year , movie.director from rating join movie on rating.mid = movie.mid order by rating.stars desc limit 3 | Please give me the same information for the movies that have the 3 lowest rating stars.",
    "label": "CONFIRM_SQL",
    "output": "select movie.title , movie.year , movie.director from rating join movie on rating.mid = movie.mid order by rating.stars asc limit 3"
  },
  {
    "db_id": "inn_1",
    "input": "how rooms are presented on the table | Did you mean to ask how many entries are in the table rooms? | exactly",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from rooms"
  },
  {
    "db_id": "inn_1",
    "input": "list out the room names | select roomname from rooms | what is the base price of Recluse and defiance",
    "label": "CONFIRM_SQL",
    "output": "select baseprice from rooms where roomname = 'Recluse and defiance'"
  },
  {
    "db_id": "riding_club",
    "input": "Show the residences that have both a player of gender \"M\" and a player \"F\". | select residence from player where gender = 'M' intersect select residence from player where gender = 'F' | who is the sponsor of jean luc bouche?",
    "label": "CONFIRM_SQL",
    "output": "select sponsor_name from player where player_name = 'Jean Luc Bouché'"
  },
  {
    "db_id": "riding_club",
    "input": "Final question is how many votes for Niki Ashton? | select votes from player where player_name = 'Niki Ashton' | Thanks",
    "label": "GOOD_BYE",
    "output": "Good bye!"
  },
  {
    "db_id": "behavior_monitoring",
    "input": "how many state province counties are there? | how many students are living in each state province county? | select count ( * ) , state_province_county from addresses join students on addresses.address_id = students.address_id group by state_province_county",
    "label": "INFORM_SQL",
    "output": "show me the first and last names of students in Wisconsin."
  },
  {
    "db_id": "epinions_1",
    "input": "which item has the highest rating?\n | select item.title from item join review on item.i_id = review.i_id order by rating desc limit 1 | what is the average rating?\n",
    "label": "CONFIRM_SQL",
    "output": "select avg ( rating ) from review"
  },
  {
    "db_id": "epinions_1",
    "input": "what items have higher rating than 7? | select item.title from item join review on item.i_id = review.i_id where review.rating > 7 | what is item id of cup?",
    "label": "CONFIRM_SQL",
    "output": "select i_id from item where title = 'cup'"
  },
  {
    "db_id": "epinions_1",
    "input": "what is item id 4?\n | select title from item where i_id = 4 | please list all items",
    "label": "CONFIRM_SQL",
    "output": "select * from item"
  },
  {
    "db_id": "epinions_1",
    "input": "please list each item and rating from highest to lowest rating | select item.title , review.rating from item join review on item.i_id = review.i_id order by review.rating asc | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome, goodbye"
  },
  {
    "db_id": "sakila_1",
    "input": "what film has rental fee of 0.99? | select title from film where rental_rate = 0.99 | Which of the film has the highest rent fee?",
    "label": "CONFIRM_SQL",
    "output": "select title from film order by rental_rate desc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "list the films with less than three in inventory | select title from film intersect select film.title from film join inventory on film.film_id = inventory.film_id group by film.film_id having count ( * ) < 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "ship_mission",
    "input": "show names of ships involved in a mission launched after 1928. | select ship.name from mission join ship on mission.ship_id = ship.ship_id where mission.launched_year > 1928 | which ships were lost?",
    "label": "CONFIRM_SQL",
    "output": "select ship.* from mission join ship on mission.ship_id = ship.ship_id where mission.fate like '%Lost%'"
  },
  {
    "db_id": "ship_mission",
    "input": "which among them was the biggest? | select ship.* from mission join ship on mission.ship_id = ship.ship_id where mission.fate like '%Lost%' order by ship.tonnage desc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "music_4",
    "input": "What is the maximum weeks on top in the table? | select weeks_on_top from volume order by weeks_on_top desc limit 1 | Which volume id has the maximum weeks on top? ",
    "label": "CONFIRM_SQL",
    "output": "select distinct ( volume_id ) from volume where weeks_on_top = ( select weeks_on_top from volume order by weeks_on_top desc limit 1 )"
  },
  {
    "db_id": "music_4",
    "input": "Hmm, I want to know what is the song in the volume with the maximum weeks on top please.  | select distinct ( song ) from volume where weeks_on_top = ( select weeks_on_top from volume order by weeks_on_top desc limit 1 ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Bye!"
  },
  {
    "db_id": "network_2",
    "input": "Find the name and age of the person who is a friend of both Dan and Alice. | select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Dan' intersect select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Alice' | Find the name and age of the person who is a friend of both Dan and Zach",
    "label": "CONFIRM_SQL",
    "output": "select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Dan' intersect select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Zach'"
  },
  {
    "db_id": "network_2",
    "input": "Find the name and age of the person who is a friend of both Dan and Bob. | select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Dan' intersect select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob' | Find the name and age of the person who is a friend of both Bob and Zach.",
    "label": "CONFIRM_SQL",
    "output": "select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Zach' intersect select person.name , person.age from person join personfriend on person.name = personfriend.name where personfriend.friend = 'Bob'"
  },
  {
    "db_id": "product_catalog",
    "input": "What is the height of Cola? | select height from catalog_contents where catalog_entry_name = 'Cola' | Which product has a height smaller than 5?",
    "label": "CLARIFY",
    "output": "Do  you  want  to  know  the names of the products with heights smaller than 5"
  },
  {
    "db_id": "product_catalog",
    "input": "Yes | select catalog_entry_name from catalog_contents where length < 5 | What about their length?",
    "label": "CONFIRM_SQL",
    "output": "select catalog_entry_name , length from catalog_contents where length < 5"
  },
  {
    "db_id": "product_catalog",
    "input": "What is the height of Fenta orange? | select height from catalog_contents where catalog_entry_name = 'Fenta Orange' | Thanks",
    "label": "WELCOME",
    "output": "You are welcome and goodbye"
  },
  {
    "db_id": "chinook_1",
    "input": "what are the durations of the longest tracts? | select max ( milliseconds ) from track | what are the shortest tracks?",
    "label": "CONFIRM_SQL",
    "output": "select min ( milliseconds ) from track"
  },
  {
    "db_id": "chinook_1",
    "input": "How many composer are there? | * I have left the chat * | select count ( composer ) from track",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "What are the delivery dates of orders with 1 quantity? | select customer_orders.actual_delivery_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id where order_items.order_quantity = 1 | do you mean the actual delivery dates ?",
    "label": "AFFIRM",
    "output": "Yes"
  },
  {
    "db_id": "cre_Drama_Workshop_Groups",
    "input": "select customer_orders.actual_delivery_date from customer_orders join order_items on customer_orders.order_id = order_items.order_id where order_items.order_quantity = 1 | What are the product id of orders with quantity 1? | select product_id from order_items where order_quantity = 1",
    "label": "INFORM_SQL",
    "output": "Ok ,, what are the cuatomers id that have order of quantity 1?"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are the dates of transactions with amount smaller than 3000? | select transactions.date_of_transaction from sales join transactions on sales.sales_transaction_id = transactions.transaction_id where transactions.amount_of_transaction < 3000 | What are the sale details of those?",
    "label": "CONFIRM_SQL",
    "output": "select sales.sales_details from sales join transactions on sales.sales_transaction_id = transactions.transaction_id where transactions.amount_of_transaction < 3000"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are the transaction ids of those? | select transactions.transaction_id from sales join transactions on sales.sales_transaction_id = transactions.transaction_id where transactions.amount_of_transaction < 3000 | What are the transaction type codes of those?",
    "label": "CONFIRM_SQL",
    "output": "select transactions.transaction_type_code from sales join transactions on sales.sales_transaction_id = transactions.transaction_id where transactions.amount_of_transaction < 3000"
  },
  {
    "db_id": "tracking_share_transactions",
    "input": "What are the dates of those transactions? | select distinct transactions.date_of_transaction from sales join transactions on sales.sales_transaction_id = transactions.transaction_id where transactions.amount_of_transaction < 3000 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye!"
  },
  {
    "db_id": "phone_1",
    "input": "What is the hardware model name for the phones that were produced by \"Nokia Corporation\" but whose screen mode type is not Text? | select distinct phone.hardware_model_name from screen_mode join phone on screen_mode.graphics_mode = phone.screen_mode where phone.company_name = 'Nokia Corporation' and screen_mode.type != 'Text' | What are the pixels of those?",
    "label": "CONFIRM_SQL",
    "output": "select distinct screen_mode.pixels from screen_mode join phone on screen_mode.graphics_mode = phone.screen_mode where phone.company_name = 'Nokia Corporation' and screen_mode.type != 'Text'"
  },
  {
    "db_id": "phone_1",
    "input": "What are the char cells of those? | select distinct screen_mode.char_cells from screen_mode join phone on screen_mode.graphics_mode = phone.screen_mode where phone.company_name = 'Nokia Corporation' and screen_mode.type != 'Text' | What are the used kb of those?",
    "label": "CONFIRM_SQL",
    "output": "select distinct screen_mode.used_kb from screen_mode join phone on screen_mode.graphics_mode = phone.screen_mode where phone.company_name = 'Nokia Corporation' and screen_mode.type != 'Text'"
  },
  {
    "db_id": "voter_2",
    "input": "How many students have a major of 600? | select count ( * ) from student where major = 600 | What is the age of the oldest of those students?",
    "label": "CONFIRM_SQL",
    "output": "select max ( age ) from student where major = 600"
  },
  {
    "db_id": "voter_2",
    "input": "What about the youngest? | select min ( age ) from student where major = 600 | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Good bye!"
  },
  {
    "db_id": "restaurant_1",
    "input": "Hello! Can you provide me with the time spent in all restaurants by Linda Smith? | select sum ( spent ) from student join visits_restaurant on student.stuid = visits_restaurant.stuid where student.fname = 'Linda' and student.lname = 'Smith' | Are there any other students with the same city code as Linda Smith?",
    "label": "CONFIRM_SQL",
    "output": "select * from student where city_code = ( select city_code from student where fname = 'Linda' and lname = 'Smith' ) and fname != 'Linda' and lname != 'Smith'"
  },
  {
    "db_id": "restaurant_1",
    "input": "Of those three students, can you tell me which of them have more time spent in restaurants than Linda Smith? | select student.stuid , sum ( visits_restaurant.spent ) from student join visits_restaurant where city_code = ( select city_code from student where fname = 'Linda' and lname = 'Smith' ) and fname != 'Linda' and lname != 'Smith' group by student.stuid having sum ( visits_restaurant.spent ) > ( select sum ( spent ) from student join visits_restaurant on student.stuid = visits_restaurant.stuid where student.fname = 'Linda' and student.lname = 'Smith' ) | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, goodbye"
  },
  {
    "db_id": "party_host",
    "input": "What is the location of the Id no-1?\n | select location from party where party_id = 1 | how  many party theme in the united states?",
    "label": "CANNOT_UNDERSTAND",
    "output": "* I have left the chat *"
  },
  {
    "db_id": "party_host",
    "input": "Sorry, I can not answer this question in sql. | how many host in the id no_3? | select number_of_hosts from party where party_id = 3",
    "label": "INFORM_SQL",
    "output": "what is the age of the host id 3?"
  },
  {
    "db_id": "party_host",
    "input": "select age from host where host_id = 3 | which nationality of host id no-3? | select nationality from host where host_id = 3",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "shop_membership",
    "input": "What are the names for the top three branches with most number of membership? | select name from branch order by membership_amount desc limit 3 | What year did they open?",
    "label": "CONFIRM_SQL",
    "output": "select name , open_year from branch order by membership_amount desc limit 3"
  },
  {
    "db_id": "shop_membership",
    "input": "What are their cities? | select name , city from branch order by membership_amount desc limit 3 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "allergy_1",
    "input": "Can you get me the first names of students that have a milk allergy? | select distinct student.fname from student join has_allergy on student.stuid = has_allergy.stuid where has_allergy.allergy = 'Milk' | Can you list the cities of these students?",
    "label": "CLARIFY",
    "output": "Do you want both the cities and the first names of the students?"
  },
  {
    "db_id": "allergy_1",
    "input": "Yes. Can you please provide both simultaneously? | select distinct student.city_code , student.fname from student join has_allergy on student.stuid = has_allergy.stuid where has_allergy.allergy = 'Milk' | Can you add the first names of the students with a cat allergy, as well?",
    "label": "CONFIRM_SQL",
    "output": "select distinct student.city_code , student.fname from student join has_allergy on student.stuid = has_allergy.stuid where has_allergy.allergy = 'Milk' or has_allergy.allergy = 'Cat'"
  },
  {
    "db_id": "manufactory_1",
    "input": "Can you show the Name of the Products of Code 1? | select name from products where code = 1 | Can you show the Price of the Product Code 1?",
    "label": "CONFIRM_SQL",
    "output": "select price from products where code = 1"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Hello!  Can you provide me with a list of all customer ids and their associated policy type codes? | select customers.customer_id , policies.policy_type_code from policies join customers on policies.customer_id = customers.customer_id | Great!  Can you update this list to include the customer details values for each customer_ID?",
    "label": "CONFIRM_SQL",
    "output": "select customers.customer_id , policies.policy_type_code , customers.customer_details from policies join customers on policies.customer_id = customers.customer_id"
  },
  {
    "db_id": "insurance_and_eClaims",
    "input": "Awesome! Can you filter this list to show only the customer IDs  and customer names associated with either a deputy policy or an uninformed policy? | select customers.customer_id , customers.customer_details from policies join customers on policies.customer_id = customers.customer_id where policies.policy_type_code = 'Deputy' or policies.policy_type_code = 'Uniform' | Thanks!",
    "label": "WELCOME",
    "output": "you are welcome goodbye"
  },
  {
    "db_id": "csu_1",
    "input": "For each Orange county campus, report the number of degrees granted after 2000.\n | select campuses.campus , sum ( degrees.degrees ) from campuses join degrees on campuses.id = degrees.campus where campuses.county = 'Orange' and degrees.year >= 2000 group by campuses.campus | which year has the highest number of degrees?\n",
    "label": "CONFIRM_SQL",
    "output": "select year from degrees order by degrees desc limit 1"
  },
  {
    "db_id": "csu_1",
    "input": "which location in 2004? | do you mean campus? | which campus has the highest number of degrees?",
    "label": "CONFIRM_SQL",
    "output": "select campuses.campus from campuses join degrees on campuses.id = degrees.campus where degrees.degrees = ( select max ( degrees ) from degrees )"
  },
  {
    "db_id": "driving_school",
    "input": "How many lessons taken by customer with first name as Ryan and last name as Goodwin were completed? | select count ( * ) from lessons join customers on lessons.customer_id = customers.customer_id where customers.first_name = 'Rylan' and customers.last_name = 'Goodwin' and lessons.lesson_status_code = 'Completed' | What customer status code does Ryan Goodwin have?",
    "label": "CONFIRM_SQL",
    "output": "select customer_status_code from customers where first_name = 'Rylan' and last_name = 'Goodwin'"
  },
  {
    "db_id": "driving_school",
    "input": "What is Ryan Goodwin's date of birth? | select date_of_birth from customers where first_name = 'Rylan' and last_name = 'Goodwin' | Thanks!",
    "label": "WELCOME",
    "output": "Welcome and goodbye"
  },
  {
    "db_id": "game_injury",
    "input": "What game id did the player Walter Samuel get injured during, please? | select game_id from injury_accident where player = 'Walter Samuel' | What season was that game in?",
    "label": "CONFIRM_SQL",
    "output": "select season from game where game.id = ( select game_id from injury_accident where player = 'Walter Samuel' )"
  },
  {
    "db_id": "game_injury",
    "input": "What was the date of that game? | select date from game where game.id = ( select game_id from injury_accident where player = 'Walter Samuel' ) | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome. Goodbye."
  },
  {
    "db_id": "voter_2",
    "input": "What is the city code of the city that the most students live in? | select city_code from student group by city_code order by count ( * ) desc limit 1 | What is the city code of the city that the least students live in?",
    "label": "CONFIRM_SQL",
    "output": "select city_code from student group by city_code order by count ( * ) asc limit 1"
  },
  {
    "db_id": "voter_2",
    "input": "What is the average age of all the students? | select avg ( age ) from student | Are there more students that have the sex \"F\" or more students that have the sex \"M\"?",
    "label": "CONFIRM_SQL",
    "output": "select sex , count ( * ) from student group by sex"
  },
  {
    "db_id": "voter_2",
    "input": "What are the majors of all the students with sex F? | select major from student where sex = 'F' | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Hello! Can you provide me with a list of the tourist attractions that are walking distance? | do you want to just return their names？ | Ah yes!  For now could you please return both the tourist attraction id and the name?",
    "label": "CONFIRM_SQL",
    "output": "select name , tourist_attraction_id from tourist_attractions where how_to_get_there = 'walk'"
  },
  {
    "db_id": "cre_Theme_park",
    "input": "Thank you could you also add to this list any tourist attractions located at 660 Shea Crescent? | select tourist_attractions.name , tourist_attractions.tourist_attraction_id from locations join tourist_attractions on locations.location_id = tourist_attractions.location_id where locations.address = '660 Shea Crescent' or tourist_attractions.how_to_get_there = 'walk' | Thank you very much!  Could you add the Opening Hours to that list for each of the tourist attractions?",
    "label": "CONFIRM_SQL",
    "output": "select tourist_attractions.name , tourist_attractions.tourist_attraction_id , tourist_attractions.opening_hours from locations join tourist_attractions on locations.location_id = tourist_attractions.location_id where locations.address = '660 Shea Crescent' or tourist_attractions.how_to_get_there = 'walk'"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the all student's names from the college named 'Yale University' | Do you mean the given names of all the students from the college named 'Yale University'? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select player.name_given from player join player_college on player.player_id = player_college.player_id join college on college.college_id = player_college.college_id where college.name_full = 'Yale University'"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the height list of the student players from this university | Do you mean the height of the players from the college named 'Yale University'? | yes",
    "label": "CONFIRM_SQL",
    "output": "select player.height from player join player_college on player.player_id = player_college.player_id join college on college.college_id = player_college.college_id where college.name_full = 'Yale University'"
  },
  {
    "db_id": "baseball_1",
    "input": "Show me the average height of the student players from the college named 'Yale University' | select avg ( player.height ) from player join player_college on player.player_id = player_college.player_id join college on college.college_id = player_college.college_id where college.name_full = 'Yale University' | Thanks!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "sakila_1",
    "input": "How many customers are there? | select count ( * ) from customer | How many are there that has made at least one payment?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from ( select * from customer join payment on customer.customer_id = payment.customer_id group by customer.customer_id )"
  },
  {
    "db_id": "sakila_1",
    "input": "Out of those customers, who has spent the least amount of money? | Do you want the first and last names and id of the customer who has spent the least amount of money? | Yes please",
    "label": "CONFIRM_SQL",
    "output": "select customer.first_name , customer.last_name , customer.customer_id from customer join payment on customer.customer_id = payment.customer_id group by customer.customer_id order by sum ( amount ) asc limit 1"
  },
  {
    "db_id": "sakila_1",
    "input": "How much money did that customer spend? | select sum ( amount ) from customer join payment on customer.customer_id = payment.customer_id group by customer.customer_id order by sum ( amount ) asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "Thanks. bye."
  },
  {
    "db_id": "scientist_1",
    "input": "What are assigned project names?  | select projects.name from projects join assignedto on projects.code = assignedto.project | How about names of not assigned projects?",
    "label": "CONFIRM_SQL",
    "output": "select name from projects where code not in ( select project from assignedto )"
  },
  {
    "db_id": "scientist_1",
    "input": "what is the name of not assigned project with the least hours? | select name from projects where code not in ( select project from assignedto ) order by hours asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye."
  },
  {
    "db_id": "department_store",
    "input": "Hi there!  Can you provide me with a list of all Staff Department Assignments \"date assigned to\" values? | select date_assigned_to from staff_department_assignments | Thank you!  Now I realize that I should probably be asking for the date assigned from values... Therefore, can you provide me with a list of all staff IDs and their corresponding \"date assigned from\" values?",
    "label": "CONFIRM_SQL",
    "output": "select staff_id , date_assigned_from from staff_department_assignments"
  },
  {
    "db_id": "department_store",
    "input": "Thank you for that!  Can you please filter this list to show only the row of the staff member who has the most recent date_assigned_from value? | select staff_id , date_assigned_from from staff_department_assignments order by date_assigned_from desc limit 1 | Thank you!  Could you please display the name and job title of this staff person?",
    "label": "CONFIRM_SQL",
    "output": "select staff_name , job_title_code from staff_department_assignments join staff on staff_department_assignments.staff_id = staff.staff_id where staff_department_assignments.staff_id = '1'"
  },
  {
    "db_id": "scientist_1",
    "input": "What project has the longest time? List the name. | select name from projects order by hours desc limit 1 | What are the names of the projects?",
    "label": "CONFIRM_SQL",
    "output": "select name from projects"
  },
  {
    "db_id": "scientist_1",
    "input": "How many hours does A Magnetic Primer Designer have? | select hours from projects where name = 'A Magnetic Primer Designer' | What is the code for A Magnetic Primer Designer?",
    "label": "CONFIRM_SQL",
    "output": "select code from projects where name = 'A Magnetic Primer Designer'"
  },
  {
    "db_id": "scientist_1",
    "input": "What Project has the Shortest time? | select name from projects order by hours asc limit 1 | Thanks!",
    "label": "GOOD_BYE",
    "output": "goodbye"
  },
  {
    "db_id": "college_1",
    "input": "Hello. What is the last name of the professor from the history department please?\n | * I have left the chat * | select employee.emp_lname from employee join professor on employee.emp_num = professor.emp_num join department on professor.dept_code = department.dept_code where department.dept_name = 'History'",
    "label": "INFORM_SQL",
    "output": "Thank you. What are the office extensions numbers of professor Donelly and Blalock please?\n"
  },
  {
    "db_id": "college_1",
    "input": "select department.dept_extension from employee join professor on employee.emp_num = professor.emp_num join department on professor.dept_code = department.dept_code where emp_lname = 'Donelly' or emp_lname = 'Blalock' | Thank you! Can you please confirm the school code of the History Department? | select department.school_code from employee join professor on employee.emp_num = professor.emp_num join department on professor.dept_code = department.dept_code where department.dept_name = 'History'",
    "label": "THANK_YOU",
    "output": "Thanks!"
  },
  {
    "db_id": "college_3",
    "input": "How many departments are there? | select count ( * ) from department | Which department is the smallest?",
    "label": "CLARIFY",
    "output": "Do you mean the department that has the fewest members?"
  },
  {
    "db_id": "college_3",
    "input": "Yes, which department has the fewest members? | select department.dname from department join member_of on department.dno = member_of.dno group by member_of.dno order by count ( * ) asc limit 1 | How many members does it have?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from department join member_of on department.dno = member_of.dno group by member_of.dno order by count ( * ) asc limit 1"
  },
  {
    "db_id": "cinema",
    "input": "Hello, I'm looking for information about the directors | Hello, sorry I cannot answer your question. Can you ask something more specific? | How many directors have multiple show times?",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct film.directed_by ) from schedule join film on schedule.film_id = film.film_id where schedule.show_times_per_day > 1"
  },
  {
    "db_id": "cinema",
    "input": "What are the names of the two directors who have multiple show times? | select distinct film.directed_by from schedule join film on schedule.film_id = film.film_id where schedule.show_times_per_day > 1 | Does Schreiner have more shows than Trevino?",
    "label": "REJECT",
    "output": "Sorry the system cannot answer comparison question in one time. Please either break it down to ask them separately and then compare or change a question. Thanks."
  },
  {
    "db_id": "cinema",
    "input": "How many show times does BIll Schreiner have | select sum ( schedule.show_times_per_day ) from schedule join film on schedule.film_id = film.film_id where film.directed_by = 'Bill Schreiner' group by film.directed_by | How many show times does Jesus Salvador Trevino have?",
    "label": "CONFIRM_SQL",
    "output": "select sum ( schedule.show_times_per_day ) from schedule join film on schedule.film_id = film.film_id where film.directed_by = 'Jesus Salvador Treviño' group by film.directed_by"
  },
  {
    "db_id": "store_1",
    "input": "List all tracks bought by customer Daan Peeters | select tracks.name from tracks join invoice_lines on tracks.id = invoice_lines.track_id join invoices on invoices.id = invoice_lines.invoice_id join customers on customers.id = invoices.customer_id where customers.first_name = 'Daan' and customers.last_name = 'Peeters' | How many milliseconds does each of those tracks have?",
    "label": "CONFIRM_SQL",
    "output": "select id , milliseconds from tracks group by id"
  },
  {
    "db_id": "store_1",
    "input": "Show me the price for each of those tracks | Do  you mean  unit price? | Yes",
    "label": "CONFIRM_SQL",
    "output": "select unit_price from tracks"
  },
  {
    "db_id": "loan_1",
    "input": "what is the average of account balance? | select avg ( acc_bal ) from customer | can you show me a list of account type?",
    "label": "CONFIRM_SQL",
    "output": "select distinct acc_type from customer"
  },
  {
    "db_id": "loan_1",
    "input": "what is the average of credit score? | select avg ( credit_score ) from customer | thanks!",
    "label": "REQUEST_MORE",
    "output": "Thank you, would you like to know anything else. "
  },
  {
    "db_id": "loan_1",
    "input": "find the total account balance of each customer from Utah or Texas | select sum ( acc_bal ) from customer where state = 'Utah' or state = 'Texas' | thanks!",
    "label": "GOOD_BYE",
    "output": "Thank you, good bye. "
  },
  {
    "db_id": "flight_1",
    "input": "How many origin are there?  | select count ( distinct origin ) from flight | How many flights are there?",
    "label": "CONFIRM_SQL",
    "output": "select count ( * ) from flight"
  },
  {
    "db_id": "flight_1",
    "input": "Which origin has least number of flights? | select origin from flight group by origin order by count ( * ) asc limit 1 | \"Thanks!\"",
    "label": "GOOD_BYE",
    "output": "Bye"
  },
  {
    "db_id": "school_finance",
    "input": "WHAT ARE THE MASCOTS FOR THE SCHOOLS ENROLLMENTS ABOVE THE AVERAGE | select mascot from school where enrollment > ( select avg ( enrollment ) from school ) | WHO IS THEIR LEADER \n",
    "label": "SORRY",
    "output": "Sorry this question cannot be answered by information from the table."
  },
  {
    "db_id": "school_finance",
    "input": "TELL ME THE LOCATION OF GLENN | Do you mean the location of the school named \"Glenn\"? | YES",
    "label": "CONFIRM_SQL",
    "output": "select location from school where school_name = 'Glenn'"
  },
  {
    "db_id": "school_finance",
    "input": "TELL ME THE ENROLLMENT OF CULVER COMMUNITY | select enrollment from school where school_name = 'Culver Community' | THANKS!",
    "label": "WELCOME",
    "output": "You are welcome."
  },
  {
    "db_id": "store_1",
    "input": "how many album id  | select count ( distinct album_id ) from tracks | how many genre id",
    "label": "CONFIRM_SQL",
    "output": "select count ( distinct genre_id ) from tracks"
  },
  {
    "db_id": "store_1",
    "input": "ok,let show me the average unit price of all genre id | select genre_id , avg ( unit_price ) from tracks group by genre_id | show the genre name",
    "label": "CONFIRM_SQL",
    "output": "select genres.name from genres join tracks on genres.id = tracks.genre_id group by genres.name"
  }
]